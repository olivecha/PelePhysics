#ifndef MECHANISM_H
#define MECHANISM_H

#include <AMReX_Gpu.H>
#include <AMReX_REAL.H>

/* Elements
0  C
1  H
2  O
3  N
4  Ar
5  He
*/

// Species
#define OHD_ID 0
#define HCN_ID 1
#define HNCO_ID 2
#define NO_ID 3
#define N2O_ID 4
#define CO_ID 5
#define CO2_ID 6
#define HNC_ID 7
#define O2_ID 8
#define H2_ID 9
#define AR_ID 10
#define H_ID 11
#define O_ID 12
#define OH_ID 13
#define HO2_ID 14
#define H2O_ID 15
#define H2O2_ID 16
#define HCO_ID 17
#define CH2O_ID 18
#define NO2_ID 19
#define NH3_ID 20
#define HNO_ID 21
#define HON_ID 22
#define HONO_ID 23
#define H2NO_ID 24
#define N_ID 25
#define NNH_ID 26
#define NH2_ID 27
#define NH_ID 28
#define CN_ID 29
#define NCO_ID 30
#define NCCN_ID 31
#define HOCN_ID 32
#define HCNO_ID 33
#define NCN_ID 34
#define HE_ID 35
#define HNO2_ID 36
#define N2O4_ID 37
#define N2O3_ID 38
#define CH_ID 39
#define H2CN_ID 40
#define HCNH_ID 41
#define HNOH_ID 42
#define NO3_ID 43
#define HONO2_ID 44
#define N2_ID 45
#define CH4_ID 46
#define C2H6_ID 47
#define N2H4_ID 48
#define N2H3_ID 49
#define N2H2_ID 50
#define H2NN_ID 51

#define NUM_ELEMENTS 6
#define NUM_SPECIES 52
#define NUM_IONS 0
#define NUM_REACTIONS 272

#define NUM_FIT 4

//  ALWAYS on CPU stuff -- can have different def depending on if we are CPU or GPU based. Defined in mechanism.cpp 
void atomicWeight(amrex::Real *  awt);
//  MISC 
void CKAWT(amrex::Real *  awt);
void CKNCF(int * ncf);
void CKSYME_STR(amrex::Vector<std::string>& ename);
void CKSYMS_STR(amrex::Vector<std::string>& kname);
void GET_RMAP(int * _rmap);
void CKINU(int * i, int * nspec, int * ki, int * nu);
void CKKFKR(amrex::Real *  P, amrex::Real *  T,amrex::Real *  x, amrex::Real *  q_f, amrex::Real *  q_r);
void progressRateFR(amrex::Real *  q_f, amrex::Real *  q_r,amrex::Real *  sc, amrex::Real T);
//  SPARSE INFORMATION 
void SPARSITY_INFO(int * nJdata, const int * consP, int NCELLS);
void SPARSITY_INFO_SYST(int * nJdata, const int * consP, int NCELLS);
void SPARSITY_INFO_SYST_SIMPLIFIED(int * nJdata, const int * consP);
void SPARSITY_PREPROC_CSC(int * rowVals, int * colPtrs, const int * consP, int NCELLS);
void SPARSITY_PREPROC_CSR(int * colVals, int * rowPtrs, const int * consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_CSR(int * colVals, int * rowPtrs, const int * consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSC(int * rowVals, int * colPtrs, int * indx, const int * consP);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSR(int * colVals, int * rowPtr, const int * consP, int base);


// A few mechanism parameters
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKINDX(int * mm, int * kk, int * ii, int * nfit)
{
*mm = 6;
*kk = 52;
*ii = 272;
*nfit = -1; // Why do you need this anyway ? 
}

//  inverse molecular weights 
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void get_imw(amrex::Real *imw_new){
imw_new[0] = 1.0/17.007000;// OH*
imw_new[1] = 1.0/27.026000;// HCN
imw_new[2] = 1.0/43.025000;// HNCO
imw_new[3] = 1.0/30.006000;// NO
imw_new[4] = 1.0/44.013000;// N2O
imw_new[5] = 1.0/28.010000;// CO
imw_new[6] = 1.0/44.009000;// CO2
imw_new[7] = 1.0/27.026000;// HNC
imw_new[8] = 1.0/31.998000;// O2
imw_new[9] = 1.0/2.016000;// H2
imw_new[10] = 1.0/39.950000;// AR
imw_new[11] = 1.0/1.008000;// H
imw_new[12] = 1.0/15.999000;// O
imw_new[13] = 1.0/17.007000;// OH
imw_new[14] = 1.0/33.006000;// HO2
imw_new[15] = 1.0/18.015000;// H2O
imw_new[16] = 1.0/34.014000;// H2O2
imw_new[17] = 1.0/29.018000;// HCO
imw_new[18] = 1.0/30.026000;// CH2O
imw_new[19] = 1.0/46.005000;// NO2
imw_new[20] = 1.0/17.031000;// NH3
imw_new[21] = 1.0/31.014000;// HNO
imw_new[22] = 1.0/31.014000;// HON
imw_new[23] = 1.0/47.013000;// HONO
imw_new[24] = 1.0/32.022000;// H2NO
imw_new[25] = 1.0/14.007000;// N
imw_new[26] = 1.0/29.022000;// NNH
imw_new[27] = 1.0/16.023000;// NH2
imw_new[28] = 1.0/15.015000;// NH
imw_new[29] = 1.0/26.018000;// CN
imw_new[30] = 1.0/42.017000;// NCO
imw_new[31] = 1.0/52.036000;// NCCN
imw_new[32] = 1.0/43.025000;// HOCN
imw_new[33] = 1.0/43.025000;// HCNO
imw_new[34] = 1.0/40.025000;// NCN
imw_new[35] = 1.0/4.002602;// HE
imw_new[36] = 1.0/47.013000;// HNO2
imw_new[37] = 1.0/92.010000;// N2O4
imw_new[38] = 1.0/76.011000;// N2O3
imw_new[39] = 1.0/13.019000;// CH
imw_new[40] = 1.0/28.034000;// H2CN
imw_new[41] = 1.0/28.034000;// HCNH
imw_new[42] = 1.0/32.022000;// HNOH
imw_new[43] = 1.0/62.004000;// NO3
imw_new[44] = 1.0/63.012000;// HONO2
imw_new[45] = 1.0/28.014000;// N2
imw_new[46] = 1.0/16.043000;// CH4
imw_new[47] = 1.0/30.070000;// C2H6
imw_new[48] = 1.0/32.046000;// N2H4
imw_new[49] = 1.0/31.038000;// N2H3
imw_new[50] = 1.0/30.030000;// N2H2
imw_new[51] = 1.0/30.030000;// H2NN
}

//  molecular weights 
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void get_mw(amrex::Real *mw_new){
mw_new[0] = 17.007000;// OH*
mw_new[1] = 27.026000;// HCN
mw_new[2] = 43.025000;// HNCO
mw_new[3] = 30.006000;// NO
mw_new[4] = 44.013000;// N2O
mw_new[5] = 28.010000;// CO
mw_new[6] = 44.009000;// CO2
mw_new[7] = 27.026000;// HNC
mw_new[8] = 31.998000;// O2
mw_new[9] = 2.016000;// H2
mw_new[10] = 39.950000;// AR
mw_new[11] = 1.008000;// H
mw_new[12] = 15.999000;// O
mw_new[13] = 17.007000;// OH
mw_new[14] = 33.006000;// HO2
mw_new[15] = 18.015000;// H2O
mw_new[16] = 34.014000;// H2O2
mw_new[17] = 29.018000;// HCO
mw_new[18] = 30.026000;// CH2O
mw_new[19] = 46.005000;// NO2
mw_new[20] = 17.031000;// NH3
mw_new[21] = 31.014000;// HNO
mw_new[22] = 31.014000;// HON
mw_new[23] = 47.013000;// HONO
mw_new[24] = 32.022000;// H2NO
mw_new[25] = 14.007000;// N
mw_new[26] = 29.022000;// NNH
mw_new[27] = 16.023000;// NH2
mw_new[28] = 15.015000;// NH
mw_new[29] = 26.018000;// CN
mw_new[30] = 42.017000;// NCO
mw_new[31] = 52.036000;// NCCN
mw_new[32] = 43.025000;// HOCN
mw_new[33] = 43.025000;// HCNO
mw_new[34] = 40.025000;// NCN
mw_new[35] = 4.002602;// HE
mw_new[36] = 47.013000;// HNO2
mw_new[37] = 92.010000;// N2O4
mw_new[38] = 76.011000;// N2O3
mw_new[39] = 13.019000;// CH
mw_new[40] = 28.034000;// H2CN
mw_new[41] = 28.034000;// HCNH
mw_new[42] = 32.022000;// HNOH
mw_new[43] = 62.004000;// NO3
mw_new[44] = 63.012000;// HONO2
mw_new[45] = 28.014000;// N2
mw_new[46] = 16.043000;// CH4
mw_new[47] = 30.070000;// C2H6
mw_new[48] = 32.046000;// N2H4
mw_new[49] = 31.038000;// N2H3
mw_new[50] = 30.030000;// N2H2
mw_new[51] = 30.030000;// H2NN
}

//  Returns R, Rc, Patm
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKRP(amrex::Real *  ru, amrex::Real *  ruc, amrex::Real *  pa)
{
 *ru  = 8.31446261815324e+07; 
 *ruc = 1.98721558317399615845; 
 *pa  = 1.01325e+06; 
}

// compute Cv/R at the given temperature
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void cv_R(amrex::Real * species, const amrex::Real *  tc)
{

// temperature
const amrex::Real T = tc[1];

// species with midpoint at T=1000 kelvin
if (T < 1000) {
// species 0: OH*
species[0] =
+2.63726600e+00
+1.85091000e-04 * tc[1]
-1.67616460e-06 * tc[2]
+2.38720200e-09 * tc[3]
-8.43144200e-13 * tc[4];
// species 1: HCN
species[1] =
+1.41778700e+00
+9.03185600e-03 * tc[1]
-1.10772700e-05 * tc[2]
+7.98014100e-09 * tc[3]
-2.31114100e-12 * tc[4];
// species 2: HNCO
species[2] =
+2.49918800e+00
+6.26365800e-03 * tc[1]
+3.12576800e-06 * tc[2]
-8.62520000e-09 * tc[3]
+3.91337200e-12 * tc[4];
// species 3: NO
species[3] =
+2.37654200e+00
+1.25306300e-03 * tc[1]
-3.30275100e-06 * tc[2]
+5.21781000e-09 * tc[3]
-2.44626300e-12 * tc[4];
// species 4: N2O
species[4] =
+1.54305800e+00
+9.49219300e-03 * tc[1]
-9.79277500e-06 * tc[2]
+6.26384500e-09 * tc[3]
-1.90182600e-12 * tc[4];
// species 5: CO
species[5] =
+2.57953350e+00
-6.10353690e-04 * tc[1]
+1.01681430e-06 * tc[2]
+9.07005860e-10 * tc[3]
-9.04424490e-13 * tc[4];
// species 6: CO2
species[6] =
+1.35681300e+00
+8.98412990e-03 * tc[1]
-7.12206320e-06 * tc[2]
+2.45730080e-09 * tc[3]
-1.42885480e-13 * tc[4];
// species 8: O2
species[8] =
+2.78245636e+00
-2.99673416e-03 * tc[1]
+9.84730201e-06 * tc[2]
-9.68129509e-09 * tc[3]
+3.24372837e-12 * tc[4];
// species 9: H2
species[9] =
+1.34433112e+00
+7.98052075e-03 * tc[1]
-1.94781510e-05 * tc[2]
+2.01572094e-08 * tc[3]
-7.37611761e-12 * tc[4];
// species 10: AR
species[10] =
+1.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4];
// species 11: H
species[11] =
+1.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4];
// species 12: O
species[12] =
+2.16826710e+00
-3.27931884e-03 * tc[1]
+6.64306396e-06 * tc[2]
-6.12806624e-09 * tc[3]
+2.11265971e-12 * tc[4];
// species 13: OH
species[13] =
+2.99198424e+00
-2.40106655e-03 * tc[1]
+4.61664033e-06 * tc[2]
-3.87916306e-09 * tc[3]
+1.36319502e-12 * tc[4];
// species 14: HO2
species[14] =
+3.30179807e+00
-4.74912097e-03 * tc[1]
+2.11582905e-05 * tc[2]
-2.42763914e-08 * tc[3]
+9.29225225e-12 * tc[4];
// species 15: H2O
species[15] =
+3.19863520e+00
-2.03640170e-03 * tc[1]
+6.52034160e-06 * tc[2]
-5.48792690e-09 * tc[3]
+1.77196800e-12 * tc[4];
// species 16: H2O2
species[16] =
+3.31515149e+00
-8.47390622e-04 * tc[1]
+1.76404323e-05 * tc[2]
-2.26762944e-08 * tc[3]
+9.08950158e-12 * tc[4];
// species 17: HCO
species[17] =
+3.23754610e+00
-3.32075257e-03 * tc[1]
+1.40030264e-05 * tc[2]
-1.34239995e-08 * tc[3]
+4.37416208e-12 * tc[4];
// species 18: CH2O
species[18] =
+3.79372312e+00
-9.90833322e-03 * tc[1]
+3.73219990e-05 * tc[2]
-3.79285237e-08 * tc[3]
+1.31772641e-11 * tc[4];
// species 19: NO2
species[19] =
+1.67060000e+00
+7.83850100e-03 * tc[1]
-8.06386500e-06 * tc[2]
+6.16171500e-09 * tc[3]
-2.32015000e-12 * tc[4];
// species 20: NH3
species[20] =
+1.20435200e+00
+1.01147600e-02 * tc[1]
-1.46526500e-05 * tc[2]
+1.44723500e-08 * tc[3]
-5.32850900e-12 * tc[4];
// species 21: HNO
species[21] =
+1.78440300e+00
+6.60964600e-03 * tc[1]
-9.30022300e-06 * tc[2]
+9.43798000e-09 * tc[3]
-3.75314600e-12 * tc[4];
// species 23: HONO
species[23] =
+1.29041300e+00
+1.40992200e-02 * tc[1]
-1.36787200e-05 * tc[2]
+7.49878000e-09 * tc[3]
-1.87690500e-12 * tc[4];
// species 25: N
species[25] =
+1.50307100e+00
-2.18001800e-05 * tc[1]
+5.42052900e-08 * tc[2]
-5.64756000e-11 * tc[3]
+2.09990400e-14 * tc[4];
// species 26: NNH
species[26] =
+2.50134400e+00
+2.05358700e-03 * tc[1]
+7.17041000e-07 * tc[2]
+4.92134800e-10 * tc[3]
-9.67117000e-13 * tc[4];
// species 27: NH2
species[27] =
+2.43249300e+00
+3.29954000e-03 * tc[1]
-6.61360000e-06 * tc[2]
+8.59094700e-09 * tc[3]
-3.57204700e-12 * tc[4];
// species 28: NH
species[28] =
+2.49290840e+00
+3.11791970e-04 * tc[1]
-1.48904840e-06 * tc[2]
+2.48164420e-09 * tc[3]
-1.03569670e-12 * tc[4];
// species 29: CN
species[29] =
+2.61256066e+00
-9.53015376e-04 * tc[1]
+2.13757148e-06 * tc[2]
-3.05000108e-10 * tc[3]
-4.70518899e-13 * tc[4];
// species 30: NCO
species[30] =
+3.51241900e+00
-3.29807700e-03 * tc[1]
+2.19631900e-05 * tc[2]
-2.66561400e-08 * tc[3]
+1.02691900e-11 * tc[4];
// species 31: NCCN
species[31] =
+3.26546000e+00
+1.19225700e-02 * tc[1]
-1.34201400e-05 * tc[2]
+9.19230000e-09 * tc[3]
-2.77894000e-12 * tc[4];
// species 32: HOCN
species[32] =
+3.71619800e+00
-1.22497600e-03 * tc[1]
+1.57690700e-05 * tc[2]
-1.84474400e-08 * tc[3]
+6.84069000e-12 * tc[4];
// species 33: HCNO
species[33] =
+1.48256400e+00
+1.48135600e-02 * tc[1]
-1.36879800e-05 * tc[2]
+6.04690500e-09 * tc[3]
-8.77059100e-13 * tc[4];
// species 35: HE
species[35] =
+1.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4];
// species 37: N2O4
species[37] =
+2.62459300e+00
+2.47470800e-02 * tc[1]
-2.17287500e-05 * tc[2]
+9.92710400e-09 * tc[3]
-2.22281700e-12 * tc[4];
// species 38: N2O3
species[38] =
+4.81083964e+00
+1.43330962e-02 * tc[1]
-1.96208597e-05 * tc[2]
+1.73060735e-08 * tc[3]
-6.46553954e-12 * tc[4];
// species 39: CH
species[39] =
+2.48975830e+00
+3.24321600e-04 * tc[1]
-1.68997510e-06 * tc[2]
+3.16284200e-09 * tc[3]
-1.40618030e-12 * tc[4];
// species 40: H2CN
species[40] =
+1.85166100e+00
+5.69523300e-03 * tc[1]
+1.07114000e-06 * tc[2]
-1.62261200e-09 * tc[3]
-2.35110800e-13 * tc[4];
// species 41: HCNH
species[41] =
+1.75945600e+00
+6.10338700e-03 * tc[1]
+7.71314900e-07 * tc[2]
-2.06309400e-09 * tc[3]
+1.93192000e-13 * tc[4];
// species 43: NO3
species[43] =
+2.21076000e-01
+1.87879700e-02 * tc[1]
-1.34432100e-05 * tc[2]
+1.27460100e-09 * tc[3]
+1.35406000e-12 * tc[4];
// species 45: N2
species[45] =
+2.53100528e+00
-1.23660988e-04 * tc[1]
-5.02999433e-07 * tc[2]
+2.43530612e-09 * tc[3]
-1.40881235e-12 * tc[4];
// species 46: CH4
species[46] =
+4.14911468e+00
-1.36622009e-02 * tc[1]
+4.91453921e-05 * tc[2]
-4.84246767e-08 * tc[3]
+1.66603441e-11 * tc[4];
// species 47: C2H6
species[47] =
+3.29142572e+00
-5.50154901e-03 * tc[1]
+5.99438458e-05 * tc[2]
-7.08466469e-08 * tc[3]
+2.68685836e-11 * tc[4];
// species 48: N2H4
species[48] =
-9.35573940e-01
+2.74973000e-02 * tc[1]
-2.89945100e-05 * tc[2]
+1.74524000e-08 * tc[3]
-4.42228200e-12 * tc[4];
// species 49: N2H3
species[49] =
+2.17420400e+00
+4.71590700e-03 * tc[1]
+1.33486700e-05 * tc[2]
-1.91968500e-08 * tc[3]
+7.48756400e-12 * tc[4];
// species 50: N2H2
species[50] =
+6.17999000e-01
+1.30631200e-02 * tc[1]
-1.71571200e-05 * tc[2]
+1.60560800e-08 * tc[3]
-6.09363900e-12 * tc[4];
} else {
// species 0: OH*
species[0] =
+1.88273000e+00
+1.01397430e-03 * tc[1]
-2.27687700e-07 * tc[2]
+2.17468300e-11 * tc[3]
-5.12630500e-16 * tc[4];
// species 1: HCN
species[1] =
+2.42645700e+00
+3.92419000e-03 * tc[1]
-1.60113800e-06 * tc[2]
+3.16196600e-10 * tc[3]
-2.43285000e-14 * tc[4];
// species 2: HNCO
species[2] =
+4.32884400e+00
+4.21433700e-03 * tc[1]
-1.64739300e-06 * tc[2]
+3.01842200e-10 * tc[3]
-2.08448000e-14 * tc[4];
// species 3: NO
species[3] =
+2.24543500e+00
+1.26913800e-03 * tc[1]
-5.01589000e-07 * tc[2]
+9.16928300e-11 * tc[3]
-6.27541900e-15 * tc[4];
// species 4: N2O
species[4] =
+3.71897700e+00
+2.87371400e-03 * tc[1]
-1.19749600e-06 * tc[2]
+2.25055200e-10 * tc[3]
-1.57533700e-14 * tc[4];
// species 5: CO
species[5] =
+2.04848590e+00
+1.35172810e-03 * tc[1]
-4.85794050e-07 * tc[2]
+7.88536440e-11 * tc[3]
-4.69807460e-15 * tc[4];
// species 6: CO2
species[6] =
+3.63651110e+00
+2.74145690e-03 * tc[1]
-9.95897590e-07 * tc[2]
+1.60386660e-10 * tc[3]
-9.16198570e-15 * tc[4];
// species 8: O2
species[8] =
+2.66096065e+00
+6.56365811e-04 * tc[1]
-1.41149627e-07 * tc[2]
+2.05797935e-11 * tc[3]
-1.29913436e-15 * tc[4];
// species 9: H2
species[9] =
+1.93286575e+00
+8.26608026e-04 * tc[1]
-1.46402364e-07 * tc[2]
+1.54100414e-11 * tc[3]
-6.88804800e-16 * tc[4];
// species 10: AR
species[10] =
+1.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4];
// species 11: H
species[11] =
+1.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4];
// species 12: O
species[12] =
+1.54363697e+00
-2.73162486e-05 * tc[1]
-4.19029520e-09 * tc[2]
+4.95481845e-12 * tc[3]
-4.79553694e-16 * tc[4];
// species 13: OH
species[13] =
+1.83853033e+00
+1.10741289e-03 * tc[1]
-2.94000209e-07 * tc[2]
+4.20698729e-11 * tc[3]
-2.42289890e-15 * tc[4];
// species 14: HO2
species[14] =
+3.17228741e+00
+1.88117627e-03 * tc[1]
-3.46277286e-07 * tc[2]
+1.94657549e-11 * tc[3]
+1.76256905e-16 * tc[4];
// species 15: H2O
species[15] =
+1.67703890e+00
+2.97318160e-03 * tc[1]
-7.73768890e-07 * tc[2]
+9.44335140e-11 * tc[3]
-4.26899910e-15 * tc[4];
// species 16: H2O2
species[16] =
+3.57977305e+00
+4.05326003e-03 * tc[1]
-1.29844730e-06 * tc[2]
+1.98211400e-10 * tc[3]
-1.13968792e-14 * tc[4];
// species 17: HCO
species[17] =
+2.92001542e+00
+2.52279324e-03 * tc[1]
-6.71004164e-07 * tc[2]
+1.05615948e-10 * tc[3]
-7.43798261e-15 * tc[4];
// species 18: CH2O
species[18] =
+2.16952665e+00
+6.19320560e-03 * tc[1]
-2.25056366e-06 * tc[2]
+3.65975660e-10 * tc[3]
-2.20149458e-14 * tc[4];
// species 19: NO2
species[19] =
+3.68285900e+00
+2.46242900e-03 * tc[1]
-1.04225900e-06 * tc[2]
+1.97690200e-10 * tc[3]
-1.39171700e-14 * tc[4];
// species 20: NH3
species[20] =
+1.46190400e+00
+6.05916600e-03 * tc[1]
-2.00497700e-06 * tc[2]
+3.13600300e-10 * tc[3]
-1.93831700e-14 * tc[4];
// species 21: HNO
species[21] =
+2.61514400e+00
+3.21248600e-03 * tc[1]
-1.26033700e-06 * tc[2]
+2.26729800e-10 * tc[3]
-1.53623600e-14 * tc[4];
// species 23: HONO
species[23] =
+4.48689300e+00
+4.21806500e-03 * tc[1]
-1.64914300e-06 * tc[2]
+2.97187700e-10 * tc[3]
-2.02114800e-14 * tc[4];
// species 25: N
species[25] =
+1.45026800e+00
+1.06614600e-04 * tc[1]
-7.46533700e-08 * tc[2]
+1.87965200e-11 * tc[3]
-1.02598400e-15 * tc[4];
// species 26: NNH
species[26] =
+3.41534200e+00
+1.61438800e-03 * tc[1]
-1.63289400e-07 * tc[2]
-8.55984600e-11 * tc[3]
+1.61479100e-14 * tc[4];
// species 27: NH2
species[27] =
+1.96131100e+00
+2.93269900e-03 * tc[1]
-9.06360000e-07 * tc[2]
+1.61725700e-10 * tc[3]
-1.20420000e-14 * tc[4];
// species 28: NH
species[28] =
+1.78369290e+00
+1.32984290e-03 * tc[1]
-4.24780470e-07 * tc[2]
+7.83485040e-11 * tc[3]
-5.50444700e-15 * tc[4];
// species 29: CN
species[29] =
+2.39912871e+00
+7.46548271e-04 * tc[1]
-1.41493637e-07 * tc[2]
+1.86747261e-11 * tc[3]
-1.26032174e-15 * tc[4];
// species 30: NCO
species[30] =
+4.15117400e+00
+2.53796600e-03 * tc[1]
-1.09480800e-06 * tc[2]
+2.11298700e-10 * tc[3]
-1.50561700e-14 * tc[4];
// species 31: NCCN
species[31] =
+5.54800000e+00
+3.98471000e-03 * tc[1]
-1.63422000e-06 * tc[2]
+3.03860000e-10 * tc[3]
-2.11100000e-14 * tc[4];
// species 32: HOCN
species[32] =
+3.80747500e+00
+4.19183700e-03 * tc[1]
-1.61992400e-06 * tc[2]
+2.94362200e-10 * tc[3]
-2.02141900e-14 * tc[4];
// species 33: HCNO
species[33] =
+5.03562000e+00
+4.05933300e-03 * tc[1]
-1.58877700e-06 * tc[2]
+2.92048100e-10 * tc[3]
-2.02305700e-14 * tc[4];
// species 35: HE
species[35] =
+1.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4];
// species 37: N2O4
species[37] =
+9.48220000e+00
+5.97227200e-03 * tc[1]
-2.56404400e-06 * tc[2]
+4.91688500e-10 * tc[3]
-3.49096900e-14 * tc[4];
// species 38: N2O3
species[38] =
+8.08583845e+00
+3.37756330e-03 * tc[1]
-1.31583890e-06 * tc[2]
+2.30762329e-10 * tc[3]
-1.47151267e-14 * tc[4];
// species 39: CH
species[39] =
+1.52093690e+00
+1.76536390e-03 * tc[1]
-4.61476600e-07 * tc[2]
+5.92896750e-11 * tc[3]
-3.34745010e-15 * tc[4];
// species 40: H2CN
species[40] =
+4.20970300e+00
+2.96929100e-03 * tc[1]
-2.85558900e-07 * tc[2]
-1.63555000e-10 * tc[3]
+3.04325900e-14 * tc[4];
// species 41: HCNH
species[41] =
+3.92329300e+00
+3.33289700e-03 * tc[1]
-3.37089700e-07 * tc[2]
-1.90161900e-10 * tc[3]
+3.53182500e-14 * tc[4];
// species 43: NO3
species[43] =
+6.12030700e+00
+3.24622800e-03 * tc[1]
-1.43161300e-06 * tc[2]
+2.79705300e-10 * tc[3]
-2.01300800e-14 * tc[4];
// species 45: N2
species[45] =
+1.95257637e+00
+1.39690040e-03 * tc[1]
-4.92631603e-07 * tc[2]
+7.86010195e-11 * tc[3]
-4.60755204e-15 * tc[4];
// species 46: CH4
species[46] =
+6.53262260e-01
+1.00263099e-02 * tc[1]
-3.31661238e-06 * tc[2]
+5.36483138e-10 * tc[3]
-3.14696758e-14 * tc[4];
// species 47: C2H6
species[47] =
+3.04666411e+00
+1.53538802e-02 * tc[1]
-5.47039485e-06 * tc[2]
+8.77826544e-10 * tc[3]
-5.23167531e-14 * tc[4];
// species 48: N2H4
species[48] =
+3.97731700e+00
+9.59551900e-03 * tc[1]
-3.54763900e-06 * tc[2]
+6.12429900e-10 * tc[3]
-4.02979500e-14 * tc[4];
// species 49: N2H3
species[49] =
+3.44184600e+00
+7.21427100e-03 * tc[1]
-2.49568400e-06 * tc[2]
+3.92056500e-10 * tc[3]
-2.29895000e-14 * tc[4];
// species 50: N2H2
species[50] =
+2.37118500e+00
+6.03996800e-03 * tc[1]
-2.30385400e-06 * tc[2]
+4.06278900e-10 * tc[3]
-2.71314400e-14 * tc[4];
}

// species with midpoint at T=1500 kelvin
if (T < 1500) {
// species 7: HNC
species[7] =
+2.59237700e+00
+5.56134000e-03 * tc[1]
-5.93682300e-06 * tc[2]
+3.78232900e-09 * tc[3]
-9.36509200e-13 * tc[4];
// species 24: H2NO
species[24] =
+1.53059000e+00
+8.59603500e-03 * tc[1]
-5.47103000e-06 * tc[2]
+2.27624900e-09 * tc[3]
-4.64807300e-13 * tc[4];
// species 34: NCN
species[34] =
+2.10127000e+00
+9.98167400e-03 * tc[1]
-9.92070100e-06 * tc[2]
+4.75891900e-09 * tc[3]
-8.96862600e-13 * tc[4];
// species 36: HNO2
species[36] =
+9.34838000e-01
+1.01003600e-02 * tc[1]
-4.96461600e-06 * tc[2]
+8.70112000e-10 * tc[3]
-2.32413500e-15 * tc[4];
// species 42: HNOH
species[42] =
+1.12527400e+00
+1.06628200e-02 * tc[1]
-7.60258900e-06 * tc[2]
+3.08164200e-09 * tc[3]
-5.72649800e-13 * tc[4];
// species 44: HONO2
species[44] =
-2.12233200e-01
+2.38232900e-02 * tc[1]
-2.20596400e-05 * tc[2]
+1.03404800e-08 * tc[3]
-1.97285700e-12 * tc[4];
} else {
// species 7: HNC
species[7] =
+4.28346400e+00
+1.09247600e-03 * tc[1]
-1.17086500e-07 * tc[2]
-2.30867200e-11 * tc[3]
+3.95067300e-15 * tc[4];
// species 24: H2NO
species[24] =
+4.67334600e+00
+2.29883700e-03 * tc[1]
-1.77444600e-07 * tc[2]
-1.10348200e-10 * tc[3]
+1.85976200e-14 * tc[4];
// species 34: NCN
species[34] =
+5.65212100e+00
+6.10803400e-04 * tc[1]
-1.38972700e-07 * tc[2]
+2.69554900e-12 * tc[3]
+1.66994400e-15 * tc[4];
// species 36: HNO2
species[36] =
+5.47963000e+00
+1.99527400e-03 * tc[1]
-1.74038700e-07 * tc[2]
-9.69587200e-11 * tc[3]
+1.70148000e-14 * tc[4];
// species 42: HNOH
species[42] =
+5.39613400e+00
+1.82106700e-03 * tc[1]
-1.87089200e-07 * tc[2]
-7.84447200e-11 * tc[3]
+1.44485500e-14 * tc[4];
// species 44: HONO2
species[44] =
+8.75614800e+00
+1.90094800e-03 * tc[1]
-3.24002000e-07 * tc[2]
-3.97663900e-11 * tc[3]
+1.10033400e-14 * tc[4];
}

// species with midpoint at T=1671 kelvin
if (T < 1671) {
// species 22: HON
species[22] =
+2.33656431e+00
+2.67682939e-03 * tc[1]
+5.61801303e-07 * tc[2]
-1.11362279e-09 * tc[3]
+2.84076438e-13 * tc[4];
} else {
// species 22: HON
species[22] =
+2.78577430e+00
+2.86062728e-03 * tc[1]
-1.02423922e-06 * tc[2]
+1.64463139e-10 * tc[3]
-9.77943616e-15 * tc[4];
}

// species with midpoint at T=1695 kelvin
if (T < 1695) {
// species 51: H2NN
species[51] =
+1.88544262e+00
+4.69495999e-03 * tc[1]
+7.01983230e-07 * tc[2]
-1.53359038e-09 * tc[3]
+3.79345858e-13 * tc[4];
} else {
// species 51: H2NN
species[51] =
+2.13531032e+00
+5.68632569e-03 * tc[1]
-1.93983467e-06 * tc[2]
+3.01290501e-10 * tc[3]
-1.74978144e-14 * tc[4];
}
return;
}

// compute Cp/R at the given temperature
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void cp_R(amrex::Real * species, const amrex::Real *  tc)
{

// temperature
const amrex::Real T = tc[1];

// species with midpoint at T=1000 kelvin
if (T < 1000) {
// species 0: OH*
species[0] =
+3.63726600e+00
+1.85091000e-04 * tc[1]
-1.67616460e-06 * tc[2]
+2.38720200e-09 * tc[3]
-8.43144200e-13 * tc[4];
// species 1: HCN
species[1] =
+2.41778700e+00
+9.03185600e-03 * tc[1]
-1.10772700e-05 * tc[2]
+7.98014100e-09 * tc[3]
-2.31114100e-12 * tc[4];
// species 2: HNCO
species[2] =
+3.49918800e+00
+6.26365800e-03 * tc[1]
+3.12576800e-06 * tc[2]
-8.62520000e-09 * tc[3]
+3.91337200e-12 * tc[4];
// species 3: NO
species[3] =
+3.37654200e+00
+1.25306300e-03 * tc[1]
-3.30275100e-06 * tc[2]
+5.21781000e-09 * tc[3]
-2.44626300e-12 * tc[4];
// species 4: N2O
species[4] =
+2.54305800e+00
+9.49219300e-03 * tc[1]
-9.79277500e-06 * tc[2]
+6.26384500e-09 * tc[3]
-1.90182600e-12 * tc[4];
// species 5: CO
species[5] =
+3.57953350e+00
-6.10353690e-04 * tc[1]
+1.01681430e-06 * tc[2]
+9.07005860e-10 * tc[3]
-9.04424490e-13 * tc[4];
// species 6: CO2
species[6] =
+2.35681300e+00
+8.98412990e-03 * tc[1]
-7.12206320e-06 * tc[2]
+2.45730080e-09 * tc[3]
-1.42885480e-13 * tc[4];
// species 8: O2
species[8] =
+3.78245636e+00
-2.99673416e-03 * tc[1]
+9.84730201e-06 * tc[2]
-9.68129509e-09 * tc[3]
+3.24372837e-12 * tc[4];
// species 9: H2
species[9] =
+2.34433112e+00
+7.98052075e-03 * tc[1]
-1.94781510e-05 * tc[2]
+2.01572094e-08 * tc[3]
-7.37611761e-12 * tc[4];
// species 10: AR
species[10] =
+2.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4];
// species 11: H
species[11] =
+2.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4];
// species 12: O
species[12] =
+3.16826710e+00
-3.27931884e-03 * tc[1]
+6.64306396e-06 * tc[2]
-6.12806624e-09 * tc[3]
+2.11265971e-12 * tc[4];
// species 13: OH
species[13] =
+3.99198424e+00
-2.40106655e-03 * tc[1]
+4.61664033e-06 * tc[2]
-3.87916306e-09 * tc[3]
+1.36319502e-12 * tc[4];
// species 14: HO2
species[14] =
+4.30179807e+00
-4.74912097e-03 * tc[1]
+2.11582905e-05 * tc[2]
-2.42763914e-08 * tc[3]
+9.29225225e-12 * tc[4];
// species 15: H2O
species[15] =
+4.19863520e+00
-2.03640170e-03 * tc[1]
+6.52034160e-06 * tc[2]
-5.48792690e-09 * tc[3]
+1.77196800e-12 * tc[4];
// species 16: H2O2
species[16] =
+4.31515149e+00
-8.47390622e-04 * tc[1]
+1.76404323e-05 * tc[2]
-2.26762944e-08 * tc[3]
+9.08950158e-12 * tc[4];
// species 17: HCO
species[17] =
+4.23754610e+00
-3.32075257e-03 * tc[1]
+1.40030264e-05 * tc[2]
-1.34239995e-08 * tc[3]
+4.37416208e-12 * tc[4];
// species 18: CH2O
species[18] =
+4.79372312e+00
-9.90833322e-03 * tc[1]
+3.73219990e-05 * tc[2]
-3.79285237e-08 * tc[3]
+1.31772641e-11 * tc[4];
// species 19: NO2
species[19] =
+2.67060000e+00
+7.83850100e-03 * tc[1]
-8.06386500e-06 * tc[2]
+6.16171500e-09 * tc[3]
-2.32015000e-12 * tc[4];
// species 20: NH3
species[20] =
+2.20435200e+00
+1.01147600e-02 * tc[1]
-1.46526500e-05 * tc[2]
+1.44723500e-08 * tc[3]
-5.32850900e-12 * tc[4];
// species 21: HNO
species[21] =
+2.78440300e+00
+6.60964600e-03 * tc[1]
-9.30022300e-06 * tc[2]
+9.43798000e-09 * tc[3]
-3.75314600e-12 * tc[4];
// species 23: HONO
species[23] =
+2.29041300e+00
+1.40992200e-02 * tc[1]
-1.36787200e-05 * tc[2]
+7.49878000e-09 * tc[3]
-1.87690500e-12 * tc[4];
// species 25: N
species[25] =
+2.50307100e+00
-2.18001800e-05 * tc[1]
+5.42052900e-08 * tc[2]
-5.64756000e-11 * tc[3]
+2.09990400e-14 * tc[4];
// species 26: NNH
species[26] =
+3.50134400e+00
+2.05358700e-03 * tc[1]
+7.17041000e-07 * tc[2]
+4.92134800e-10 * tc[3]
-9.67117000e-13 * tc[4];
// species 27: NH2
species[27] =
+3.43249300e+00
+3.29954000e-03 * tc[1]
-6.61360000e-06 * tc[2]
+8.59094700e-09 * tc[3]
-3.57204700e-12 * tc[4];
// species 28: NH
species[28] =
+3.49290840e+00
+3.11791970e-04 * tc[1]
-1.48904840e-06 * tc[2]
+2.48164420e-09 * tc[3]
-1.03569670e-12 * tc[4];
// species 29: CN
species[29] =
+3.61256066e+00
-9.53015376e-04 * tc[1]
+2.13757148e-06 * tc[2]
-3.05000108e-10 * tc[3]
-4.70518899e-13 * tc[4];
// species 30: NCO
species[30] =
+4.51241900e+00
-3.29807700e-03 * tc[1]
+2.19631900e-05 * tc[2]
-2.66561400e-08 * tc[3]
+1.02691900e-11 * tc[4];
// species 31: NCCN
species[31] =
+4.26546000e+00
+1.19225700e-02 * tc[1]
-1.34201400e-05 * tc[2]
+9.19230000e-09 * tc[3]
-2.77894000e-12 * tc[4];
// species 32: HOCN
species[32] =
+4.71619800e+00
-1.22497600e-03 * tc[1]
+1.57690700e-05 * tc[2]
-1.84474400e-08 * tc[3]
+6.84069000e-12 * tc[4];
// species 33: HCNO
species[33] =
+2.48256400e+00
+1.48135600e-02 * tc[1]
-1.36879800e-05 * tc[2]
+6.04690500e-09 * tc[3]
-8.77059100e-13 * tc[4];
// species 35: HE
species[35] =
+2.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4];
// species 37: N2O4
species[37] =
+3.62459300e+00
+2.47470800e-02 * tc[1]
-2.17287500e-05 * tc[2]
+9.92710400e-09 * tc[3]
-2.22281700e-12 * tc[4];
// species 38: N2O3
species[38] =
+5.81083964e+00
+1.43330962e-02 * tc[1]
-1.96208597e-05 * tc[2]
+1.73060735e-08 * tc[3]
-6.46553954e-12 * tc[4];
// species 39: CH
species[39] =
+3.48975830e+00
+3.24321600e-04 * tc[1]
-1.68997510e-06 * tc[2]
+3.16284200e-09 * tc[3]
-1.40618030e-12 * tc[4];
// species 40: H2CN
species[40] =
+2.85166100e+00
+5.69523300e-03 * tc[1]
+1.07114000e-06 * tc[2]
-1.62261200e-09 * tc[3]
-2.35110800e-13 * tc[4];
// species 41: HCNH
species[41] =
+2.75945600e+00
+6.10338700e-03 * tc[1]
+7.71314900e-07 * tc[2]
-2.06309400e-09 * tc[3]
+1.93192000e-13 * tc[4];
// species 43: NO3
species[43] =
+1.22107600e+00
+1.87879700e-02 * tc[1]
-1.34432100e-05 * tc[2]
+1.27460100e-09 * tc[3]
+1.35406000e-12 * tc[4];
// species 45: N2
species[45] =
+3.53100528e+00
-1.23660988e-04 * tc[1]
-5.02999433e-07 * tc[2]
+2.43530612e-09 * tc[3]
-1.40881235e-12 * tc[4];
// species 46: CH4
species[46] =
+5.14911468e+00
-1.36622009e-02 * tc[1]
+4.91453921e-05 * tc[2]
-4.84246767e-08 * tc[3]
+1.66603441e-11 * tc[4];
// species 47: C2H6
species[47] =
+4.29142572e+00
-5.50154901e-03 * tc[1]
+5.99438458e-05 * tc[2]
-7.08466469e-08 * tc[3]
+2.68685836e-11 * tc[4];
// species 48: N2H4
species[48] =
+6.44260600e-02
+2.74973000e-02 * tc[1]
-2.89945100e-05 * tc[2]
+1.74524000e-08 * tc[3]
-4.42228200e-12 * tc[4];
// species 49: N2H3
species[49] =
+3.17420400e+00
+4.71590700e-03 * tc[1]
+1.33486700e-05 * tc[2]
-1.91968500e-08 * tc[3]
+7.48756400e-12 * tc[4];
// species 50: N2H2
species[50] =
+1.61799900e+00
+1.30631200e-02 * tc[1]
-1.71571200e-05 * tc[2]
+1.60560800e-08 * tc[3]
-6.09363900e-12 * tc[4];
} else {
// species 0: OH*
species[0] =
+2.88273000e+00
+1.01397430e-03 * tc[1]
-2.27687700e-07 * tc[2]
+2.17468300e-11 * tc[3]
-5.12630500e-16 * tc[4];
// species 1: HCN
species[1] =
+3.42645700e+00
+3.92419000e-03 * tc[1]
-1.60113800e-06 * tc[2]
+3.16196600e-10 * tc[3]
-2.43285000e-14 * tc[4];
// species 2: HNCO
species[2] =
+5.32884400e+00
+4.21433700e-03 * tc[1]
-1.64739300e-06 * tc[2]
+3.01842200e-10 * tc[3]
-2.08448000e-14 * tc[4];
// species 3: NO
species[3] =
+3.24543500e+00
+1.26913800e-03 * tc[1]
-5.01589000e-07 * tc[2]
+9.16928300e-11 * tc[3]
-6.27541900e-15 * tc[4];
// species 4: N2O
species[4] =
+4.71897700e+00
+2.87371400e-03 * tc[1]
-1.19749600e-06 * tc[2]
+2.25055200e-10 * tc[3]
-1.57533700e-14 * tc[4];
// species 5: CO
species[5] =
+3.04848590e+00
+1.35172810e-03 * tc[1]
-4.85794050e-07 * tc[2]
+7.88536440e-11 * tc[3]
-4.69807460e-15 * tc[4];
// species 6: CO2
species[6] =
+4.63651110e+00
+2.74145690e-03 * tc[1]
-9.95897590e-07 * tc[2]
+1.60386660e-10 * tc[3]
-9.16198570e-15 * tc[4];
// species 8: O2
species[8] =
+3.66096065e+00
+6.56365811e-04 * tc[1]
-1.41149627e-07 * tc[2]
+2.05797935e-11 * tc[3]
-1.29913436e-15 * tc[4];
// species 9: H2
species[9] =
+2.93286575e+00
+8.26608026e-04 * tc[1]
-1.46402364e-07 * tc[2]
+1.54100414e-11 * tc[3]
-6.88804800e-16 * tc[4];
// species 10: AR
species[10] =
+2.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4];
// species 11: H
species[11] =
+2.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4];
// species 12: O
species[12] =
+2.54363697e+00
-2.73162486e-05 * tc[1]
-4.19029520e-09 * tc[2]
+4.95481845e-12 * tc[3]
-4.79553694e-16 * tc[4];
// species 13: OH
species[13] =
+2.83853033e+00
+1.10741289e-03 * tc[1]
-2.94000209e-07 * tc[2]
+4.20698729e-11 * tc[3]
-2.42289890e-15 * tc[4];
// species 14: HO2
species[14] =
+4.17228741e+00
+1.88117627e-03 * tc[1]
-3.46277286e-07 * tc[2]
+1.94657549e-11 * tc[3]
+1.76256905e-16 * tc[4];
// species 15: H2O
species[15] =
+2.67703890e+00
+2.97318160e-03 * tc[1]
-7.73768890e-07 * tc[2]
+9.44335140e-11 * tc[3]
-4.26899910e-15 * tc[4];
// species 16: H2O2
species[16] =
+4.57977305e+00
+4.05326003e-03 * tc[1]
-1.29844730e-06 * tc[2]
+1.98211400e-10 * tc[3]
-1.13968792e-14 * tc[4];
// species 17: HCO
species[17] =
+3.92001542e+00
+2.52279324e-03 * tc[1]
-6.71004164e-07 * tc[2]
+1.05615948e-10 * tc[3]
-7.43798261e-15 * tc[4];
// species 18: CH2O
species[18] =
+3.16952665e+00
+6.19320560e-03 * tc[1]
-2.25056366e-06 * tc[2]
+3.65975660e-10 * tc[3]
-2.20149458e-14 * tc[4];
// species 19: NO2
species[19] =
+4.68285900e+00
+2.46242900e-03 * tc[1]
-1.04225900e-06 * tc[2]
+1.97690200e-10 * tc[3]
-1.39171700e-14 * tc[4];
// species 20: NH3
species[20] =
+2.46190400e+00
+6.05916600e-03 * tc[1]
-2.00497700e-06 * tc[2]
+3.13600300e-10 * tc[3]
-1.93831700e-14 * tc[4];
// species 21: HNO
species[21] =
+3.61514400e+00
+3.21248600e-03 * tc[1]
-1.26033700e-06 * tc[2]
+2.26729800e-10 * tc[3]
-1.53623600e-14 * tc[4];
// species 23: HONO
species[23] =
+5.48689300e+00
+4.21806500e-03 * tc[1]
-1.64914300e-06 * tc[2]
+2.97187700e-10 * tc[3]
-2.02114800e-14 * tc[4];
// species 25: N
species[25] =
+2.45026800e+00
+1.06614600e-04 * tc[1]
-7.46533700e-08 * tc[2]
+1.87965200e-11 * tc[3]
-1.02598400e-15 * tc[4];
// species 26: NNH
species[26] =
+4.41534200e+00
+1.61438800e-03 * tc[1]
-1.63289400e-07 * tc[2]
-8.55984600e-11 * tc[3]
+1.61479100e-14 * tc[4];
// species 27: NH2
species[27] =
+2.96131100e+00
+2.93269900e-03 * tc[1]
-9.06360000e-07 * tc[2]
+1.61725700e-10 * tc[3]
-1.20420000e-14 * tc[4];
// species 28: NH
species[28] =
+2.78369290e+00
+1.32984290e-03 * tc[1]
-4.24780470e-07 * tc[2]
+7.83485040e-11 * tc[3]
-5.50444700e-15 * tc[4];
// species 29: CN
species[29] =
+3.39912871e+00
+7.46548271e-04 * tc[1]
-1.41493637e-07 * tc[2]
+1.86747261e-11 * tc[3]
-1.26032174e-15 * tc[4];
// species 30: NCO
species[30] =
+5.15117400e+00
+2.53796600e-03 * tc[1]
-1.09480800e-06 * tc[2]
+2.11298700e-10 * tc[3]
-1.50561700e-14 * tc[4];
// species 31: NCCN
species[31] =
+6.54800000e+00
+3.98471000e-03 * tc[1]
-1.63422000e-06 * tc[2]
+3.03860000e-10 * tc[3]
-2.11100000e-14 * tc[4];
// species 32: HOCN
species[32] =
+4.80747500e+00
+4.19183700e-03 * tc[1]
-1.61992400e-06 * tc[2]
+2.94362200e-10 * tc[3]
-2.02141900e-14 * tc[4];
// species 33: HCNO
species[33] =
+6.03562000e+00
+4.05933300e-03 * tc[1]
-1.58877700e-06 * tc[2]
+2.92048100e-10 * tc[3]
-2.02305700e-14 * tc[4];
// species 35: HE
species[35] =
+2.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4];
// species 37: N2O4
species[37] =
+1.04822000e+01
+5.97227200e-03 * tc[1]
-2.56404400e-06 * tc[2]
+4.91688500e-10 * tc[3]
-3.49096900e-14 * tc[4];
// species 38: N2O3
species[38] =
+9.08583845e+00
+3.37756330e-03 * tc[1]
-1.31583890e-06 * tc[2]
+2.30762329e-10 * tc[3]
-1.47151267e-14 * tc[4];
// species 39: CH
species[39] =
+2.52093690e+00
+1.76536390e-03 * tc[1]
-4.61476600e-07 * tc[2]
+5.92896750e-11 * tc[3]
-3.34745010e-15 * tc[4];
// species 40: H2CN
species[40] =
+5.20970300e+00
+2.96929100e-03 * tc[1]
-2.85558900e-07 * tc[2]
-1.63555000e-10 * tc[3]
+3.04325900e-14 * tc[4];
// species 41: HCNH
species[41] =
+4.92329300e+00
+3.33289700e-03 * tc[1]
-3.37089700e-07 * tc[2]
-1.90161900e-10 * tc[3]
+3.53182500e-14 * tc[4];
// species 43: NO3
species[43] =
+7.12030700e+00
+3.24622800e-03 * tc[1]
-1.43161300e-06 * tc[2]
+2.79705300e-10 * tc[3]
-2.01300800e-14 * tc[4];
// species 45: N2
species[45] =
+2.95257637e+00
+1.39690040e-03 * tc[1]
-4.92631603e-07 * tc[2]
+7.86010195e-11 * tc[3]
-4.60755204e-15 * tc[4];
// species 46: CH4
species[46] =
+1.65326226e+00
+1.00263099e-02 * tc[1]
-3.31661238e-06 * tc[2]
+5.36483138e-10 * tc[3]
-3.14696758e-14 * tc[4];
// species 47: C2H6
species[47] =
+4.04666411e+00
+1.53538802e-02 * tc[1]
-5.47039485e-06 * tc[2]
+8.77826544e-10 * tc[3]
-5.23167531e-14 * tc[4];
// species 48: N2H4
species[48] =
+4.97731700e+00
+9.59551900e-03 * tc[1]
-3.54763900e-06 * tc[2]
+6.12429900e-10 * tc[3]
-4.02979500e-14 * tc[4];
// species 49: N2H3
species[49] =
+4.44184600e+00
+7.21427100e-03 * tc[1]
-2.49568400e-06 * tc[2]
+3.92056500e-10 * tc[3]
-2.29895000e-14 * tc[4];
// species 50: N2H2
species[50] =
+3.37118500e+00
+6.03996800e-03 * tc[1]
-2.30385400e-06 * tc[2]
+4.06278900e-10 * tc[3]
-2.71314400e-14 * tc[4];
}

// species with midpoint at T=1500 kelvin
if (T < 1500) {
// species 7: HNC
species[7] =
+3.59237700e+00
+5.56134000e-03 * tc[1]
-5.93682300e-06 * tc[2]
+3.78232900e-09 * tc[3]
-9.36509200e-13 * tc[4];
// species 24: H2NO
species[24] =
+2.53059000e+00
+8.59603500e-03 * tc[1]
-5.47103000e-06 * tc[2]
+2.27624900e-09 * tc[3]
-4.64807300e-13 * tc[4];
// species 34: NCN
species[34] =
+3.10127000e+00
+9.98167400e-03 * tc[1]
-9.92070100e-06 * tc[2]
+4.75891900e-09 * tc[3]
-8.96862600e-13 * tc[4];
// species 36: HNO2
species[36] =
+1.93483800e+00
+1.01003600e-02 * tc[1]
-4.96461600e-06 * tc[2]
+8.70112000e-10 * tc[3]
-2.32413500e-15 * tc[4];
// species 42: HNOH
species[42] =
+2.12527400e+00
+1.06628200e-02 * tc[1]
-7.60258900e-06 * tc[2]
+3.08164200e-09 * tc[3]
-5.72649800e-13 * tc[4];
// species 44: HONO2
species[44] =
+7.87766800e-01
+2.38232900e-02 * tc[1]
-2.20596400e-05 * tc[2]
+1.03404800e-08 * tc[3]
-1.97285700e-12 * tc[4];
} else {
// species 7: HNC
species[7] =
+5.28346400e+00
+1.09247600e-03 * tc[1]
-1.17086500e-07 * tc[2]
-2.30867200e-11 * tc[3]
+3.95067300e-15 * tc[4];
// species 24: H2NO
species[24] =
+5.67334600e+00
+2.29883700e-03 * tc[1]
-1.77444600e-07 * tc[2]
-1.10348200e-10 * tc[3]
+1.85976200e-14 * tc[4];
// species 34: NCN
species[34] =
+6.65212100e+00
+6.10803400e-04 * tc[1]
-1.38972700e-07 * tc[2]
+2.69554900e-12 * tc[3]
+1.66994400e-15 * tc[4];
// species 36: HNO2
species[36] =
+6.47963000e+00
+1.99527400e-03 * tc[1]
-1.74038700e-07 * tc[2]
-9.69587200e-11 * tc[3]
+1.70148000e-14 * tc[4];
// species 42: HNOH
species[42] =
+6.39613400e+00
+1.82106700e-03 * tc[1]
-1.87089200e-07 * tc[2]
-7.84447200e-11 * tc[3]
+1.44485500e-14 * tc[4];
// species 44: HONO2
species[44] =
+9.75614800e+00
+1.90094800e-03 * tc[1]
-3.24002000e-07 * tc[2]
-3.97663900e-11 * tc[3]
+1.10033400e-14 * tc[4];
}

// species with midpoint at T=1671 kelvin
if (T < 1671) {
// species 22: HON
species[22] =
+3.33656431e+00
+2.67682939e-03 * tc[1]
+5.61801303e-07 * tc[2]
-1.11362279e-09 * tc[3]
+2.84076438e-13 * tc[4];
} else {
// species 22: HON
species[22] =
+3.78577430e+00
+2.86062728e-03 * tc[1]
-1.02423922e-06 * tc[2]
+1.64463139e-10 * tc[3]
-9.77943616e-15 * tc[4];
}

// species with midpoint at T=1695 kelvin
if (T < 1695) {
// species 51: H2NN
species[51] =
+2.88544262e+00
+4.69495999e-03 * tc[1]
+7.01983230e-07 * tc[2]
-1.53359038e-09 * tc[3]
+3.79345858e-13 * tc[4];
} else {
// species 51: H2NN
species[51] =
+3.13531032e+00
+5.68632569e-03 * tc[1]
-1.93983467e-06 * tc[2]
+3.01290501e-10 * tc[3]
-1.74978144e-14 * tc[4];
}
return;
}

// compute the g/(RT) at the given temperature
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void gibbs(amrex::Real * species, const amrex::Real *  tc)
{

// temperature
const amrex::Real T = tc[1];
const amrex::Real invT = 1 / T;

// species with midpoint at T=1000 kelvin
if (T < 1000) {
// species 0: OH*
species[0] =
+5.002130000000000e+04 * invT
+2.278405500000000e+00
-3.637266000000000e+00 * tc[0]
-9.254550000000000e-05 * tc[1]
+2.793607666666667e-07 * tc[2]
-1.989335000000000e-10 * tc[3]
+4.215721000000000e-14 * tc[4];
// species 1: HCN
species[1] =
+1.501044000000000e+04 * invT
-5.805104000000000e+00
-2.417787000000000e+00 * tc[0]
-4.515928000000000e-03 * tc[1]
+1.846211666666667e-06 * tc[2]
-6.650117500000000e-10 * tc[3]
+1.155570500000000e-13 * tc[4];
// species 2: HNCO
species[2] =
-1.523328000000000e+04 * invT
-3.245805000000000e+00
-3.499188000000000e+00 * tc[0]
-3.131829000000000e-03 * tc[1]
-5.209613333333334e-07 * tc[2]
+7.187666666666667e-10 * tc[3]
-1.956686000000000e-13 * tc[4];
// species 3: NO
species[3] =
+9.817960999999999e+03 * invT
-2.453047999999999e+00
-3.376542000000000e+00 * tc[0]
-6.265315000000000e-04 * tc[1]
+5.504585000000000e-07 * tc[2]
-4.348175000000000e-10 * tc[3]
+1.223131500000000e-13 * tc[4];
// species 4: N2O
species[4] =
+8.765100000000000e+03 * invT
-6.968164000000000e+00
-2.543058000000000e+00 * tc[0]
-4.746096500000000e-03 * tc[1]
+1.632129166666667e-06 * tc[2]
-5.219870833333333e-10 * tc[3]
+9.509129999999999e-14 * tc[4];
// species 5: CO
species[5] =
-1.434408600000000e+04 * invT
+7.112420000000030e-02
-3.579533500000000e+00 * tc[0]
+3.051768450000000e-04 * tc[1]
-1.694690500000000e-07 * tc[2]
-7.558382166666667e-11 * tc[3]
+4.522122450000000e-14 * tc[4];
// species 6: CO2
species[6] =
-4.837197100000000e+04 * invT
-7.544090500000000e+00
-2.356813000000000e+00 * tc[0]
-4.492064950000000e-03 * tc[1]
+1.187010533333333e-06 * tc[2]
-2.047750666666667e-10 * tc[3]
+7.144273999999999e-15 * tc[4];
// species 8: O2
species[8] =
-1.063943560000000e+03 * invT
+1.247806300000001e-01
-3.782456360000000e+00 * tc[0]
+1.498367080000000e-03 * tc[1]
-1.641217001666667e-06 * tc[2]
+8.067745908333334e-10 * tc[3]
-1.621864185000000e-13 * tc[4];
// species 9: H2
species[9] =
-9.179351730000000e+02 * invT
+1.661320882000000e+00
-2.344331120000000e+00 * tc[0]
-3.990260375000000e-03 * tc[1]
+3.246358500000000e-06 * tc[2]
-1.679767450000000e-09 * tc[3]
+3.688058805000000e-13 * tc[4];
// species 10: AR
species[10] =
-7.453750000000000e+02 * invT
-1.879674910000000e+00
-2.500000000000000e+00 * tc[0]
-0.000000000000000e+00 * tc[1]
-0.000000000000000e+00 * tc[2]
-0.000000000000000e+00 * tc[3]
-0.000000000000000e+00 * tc[4];
// species 11: H
species[11] =
+2.547366000000000e+04 * invT
+2.946682850000000e+00
-2.500000000000000e+00 * tc[0]
-0.000000000000000e+00 * tc[1]
-0.000000000000000e+00 * tc[2]
-0.000000000000000e+00 * tc[3]
-0.000000000000000e+00 * tc[4];
// species 12: O
species[12] =
+2.912225920000000e+04 * invT
+1.116333640000000e+00
-3.168267100000000e+00 * tc[0]
+1.639659420000000e-03 * tc[1]
-1.107177326666667e-06 * tc[2]
+5.106721866666666e-10 * tc[3]
-1.056329855000000e-13 * tc[4];
// species 13: OH
species[13] =
+3.368898360000000e+03 * invT
+4.095982717000000e+00
-3.991984240000000e+00 * tc[0]
+1.200533275000000e-03 * tc[1]
-7.694400550000000e-07 * tc[2]
+3.232635883333333e-10 * tc[3]
-6.815975100000000e-14 * tc[4];
// species 14: HO2
species[14] =
+2.640184850000000e+02 * invT
+5.851358700000002e-01
-4.301798070000000e+00 * tc[0]
+2.374560485000000e-03 * tc[1]
-3.526381750000000e-06 * tc[2]
+2.023032616666667e-09 * tc[3]
-4.646126125000001e-13 * tc[4];
// species 15: H2O
species[15] =
-3.029372600000000e+04 * invT
+5.047644210000000e+00
-4.198635200000000e+00 * tc[0]
+1.018200850000000e-03 * tc[1]
-1.086723600000000e-06 * tc[2]
+4.573272416666666e-10 * tc[3]
-8.859840000000001e-14 * tc[4];
// species 16: H2O2
species[16] =
-1.770674370000000e+04 * invT
+1.041418300000000e+00
-4.315151490000000e+00 * tc[0]
+4.236953110000000e-04 * tc[1]
-2.940072050000000e-06 * tc[2]
+1.889691200000000e-09 * tc[3]
-4.544750790000000e-13 * tc[4];
// species 17: HCO
species[17] =
+3.872411850000000e+03 * invT
+9.291974100000004e-01
-4.237546100000000e+00 * tc[0]
+1.660376285000000e-03 * tc[1]
-2.333837733333333e-06 * tc[2]
+1.118666625000000e-09 * tc[3]
-2.187081040000000e-13 * tc[4];
// species 18: CH2O
species[18] =
-1.437919530000000e+04 * invT
+4.190925062000000e+00
-4.793723120000000e+00 * tc[0]
+4.954166610000000e-03 * tc[1]
-6.220333166666666e-06 * tc[2]
+3.160710308333333e-09 * tc[3]
-6.588632050000001e-13 * tc[4];
// species 19: NO2
species[19] =
+2.896291000000000e+03 * invT
-8.941469999999999e+00
-2.670600000000000e+00 * tc[0]
-3.919250500000000e-03 * tc[1]
+1.343977500000000e-06 * tc[2]
-5.134762500000000e-10 * tc[3]
+1.160075000000000e-13 * tc[4];
// species 20: NH3
species[20] =
-6.525488000000000e+03 * invT
-5.922786000000000e+00
-2.204352000000000e+00 * tc[0]
-5.057380000000000e-03 * tc[1]
+2.442108333333333e-06 * tc[2]
-1.206029166666667e-09 * tc[3]
+2.664254500000000e-13 * tc[4];
// species 21: HNO
species[21] =
+1.091878000000000e+04 * invT
-6.251226000000000e+00
-2.784403000000000e+00 * tc[0]
-3.304823000000000e-03 * tc[1]
+1.550037166666667e-06 * tc[2]
-7.864983333333334e-10 * tc[3]
+1.876573000000000e-13 * tc[4];
// species 23: HONO
species[23] =
-1.043195000000000e+04 * invT
-1.099035700000000e+01
-2.290413000000000e+00 * tc[0]
-7.049610000000000e-03 * tc[1]
+2.279786666666666e-06 * tc[2]
-6.248983333333332e-10 * tc[3]
+9.384525000000000e-14 * tc[4];
// species 25: N
species[25] =
+5.609890000000000e+04 * invT
-1.664495000000000e+00
-2.503071000000000e+00 * tc[0]
+1.090009000000000e-05 * tc[1]
-9.034215000000001e-09 * tc[2]
+4.706300000000000e-12 * tc[3]
-1.049952000000000e-15 * tc[4];
// species 26: NNH
species[26] =
+2.833347000000000e+04 * invT
-2.890493000000000e+00
-3.501344000000000e+00 * tc[0]
-1.026793500000000e-03 * tc[1]
-1.195068333333333e-07 * tc[2]
-4.101123333333334e-11 * tc[3]
+4.835585000000000e-14 * tc[4];
// species 27: NH2
species[27] =
+2.177228000000000e+04 * invT
+3.423820000000002e-01
-3.432493000000000e+00 * tc[0]
-1.649770000000000e-03 * tc[1]
+1.102266666666667e-06 * tc[2]
-7.159122500000001e-10 * tc[3]
+1.786023500000000e-13 * tc[4];
// species 28: NH
species[28] =
+4.189429400000000e+04 * invT
+1.644580700000000e+00
-3.492908400000000e+00 * tc[0]
-1.558959850000000e-04 * tc[1]
+2.481747333333333e-07 * tc[2]
-2.068036833333333e-10 * tc[3]
+5.178483500000000e-14 * tc[4];
// species 29: CN
species[29] =
+5.151796010000000e+04 * invT
-3.698439999999996e-01
-3.612560660000000e+00 * tc[0]
+4.765076880000000e-04 * tc[1]
-3.562619133333333e-07 * tc[2]
+2.541667566666667e-11 * tc[3]
+2.352594495000000e-14 * tc[4];
// species 30: NCO
species[30] =
+1.399408000000000e+04 * invT
+2.780150000000000e+00
-4.512419000000000e+00 * tc[0]
+1.649038500000000e-03 * tc[1]
-3.660531666666666e-06 * tc[2]
+2.221345000000000e-09 * tc[3]
-5.134595000000000e-13 * tc[4];
// species 31: NCCN
species[31] =
+3.547890000000000e+04 * invT
+2.552460000000000e+00
-4.265460000000000e+00 * tc[0]
-5.961285000000000e-03 * tc[1]
+2.236690000000000e-06 * tc[2]
-7.660250000000001e-10 * tc[3]
+1.389470000000000e-13 * tc[4];
// species 32: HOCN
species[32] =
-3.027687000000000e+03 * invT
+1.984712000000000e+00
-4.716198000000000e+00 * tc[0]
+6.124880000000000e-04 * tc[1]
-2.628178333333333e-06 * tc[2]
+1.537286666666667e-09 * tc[3]
-3.420345000000000e-13 * tc[4];
// species 33: HCNO
species[33] =
+1.928154000000000e+04 * invT
-6.549969000000001e+00
-2.482564000000000e+00 * tc[0]
-7.406780000000000e-03 * tc[1]
+2.281330000000000e-06 * tc[2]
-5.039087500000000e-10 * tc[3]
+4.385295500000000e-14 * tc[4];
// species 35: HE
species[35] =
-7.453750000000000e+02 * invT
+1.571276026000000e+00
-2.500000000000000e+00 * tc[0]
-0.000000000000000e+00 * tc[1]
-0.000000000000000e+00 * tc[2]
-0.000000000000000e+00 * tc[3]
-0.000000000000000e+00 * tc[4];
// species 37: N2O4
species[37] =
-9.128241000000000e+02 * invT
-5.832581000000000e+00
-3.624593000000000e+00 * tc[0]
-1.237354000000000e-02 * tc[1]
+3.621458333333334e-06 * tc[2]
-8.272586666666667e-10 * tc[3]
+1.111408500000000e-13 * tc[4];
// species 38: N2O3
species[38] =
+8.191844530000000e+03 * invT
+4.606226430000000e+00
-5.810839640000000e+00 * tc[0]
-7.166548100000000e-03 * tc[1]
+3.270143283333333e-06 * tc[2]
-1.442172791666667e-09 * tc[3]
+3.232769770000000e-13 * tc[4];
// species 39: CH
species[39] =
+7.061264599999999e+04 * invT
+1.405474200000000e+00
-3.489758300000000e+00 * tc[0]
-1.621608000000000e-04 * tc[1]
+2.816625166666667e-07 * tc[2]
-2.635701666666667e-10 * tc[3]
+7.030901500000000e-14 * tc[4];
// species 40: H2CN
species[40] =
+2.863782000000000e+04 * invT
-6.141090000000000e+00
-2.851661000000000e+00 * tc[0]
-2.847616500000000e-03 * tc[1]
-1.785233333333333e-07 * tc[2]
+1.352176666666667e-10 * tc[3]
+1.175554000000000e-14 * tc[4];
// species 41: HCNH
species[41] =
+3.217247000000000e+04 * invT
-7.815434000000000e+00
-2.759456000000000e+00 * tc[0]
-3.051693500000000e-03 * tc[1]
-1.285524833333333e-07 * tc[2]
+1.719245000000000e-10 * tc[3]
-9.659599999999999e-15 * tc[4];
// species 43: NO3
species[43] =
+7.473144000000000e+03 * invT
-1.718095400000000e+01
-1.221076000000000e+00 * tc[0]
-9.393985000000001e-03 * tc[1]
+2.240535000000000e-06 * tc[2]
-1.062167500000000e-10 * tc[3]
-6.770299999999999e-14 * tc[4];
// species 45: N2
species[45] =
-1.046976280000000e+03 * invT
+5.635349000000001e-01
-3.531005280000000e+00 * tc[0]
+6.183049400000000e-05 * tc[1]
+8.383323883333334e-08 * tc[2]
-2.029421766666667e-10 * tc[3]
+7.044061750000001e-14 * tc[4];
// species 46: CH4
species[46] =
-1.024659830000000e+04 * invT
+9.787603100000000e+00
-5.149114680000000e+00 * tc[0]
+6.831100450000000e-03 * tc[1]
-8.190898683333333e-06 * tc[2]
+4.035389725000000e-09 * tc[3]
-8.330172050000000e-13 * tc[4];
// species 47: C2H6
species[47] =
-1.152220560000000e+04 * invT
+1.624635780000000e+00
-4.291425720000000e+00 * tc[0]
+2.750774505000000e-03 * tc[1]
-9.990640966666668e-06 * tc[2]
+5.903887241666666e-09 * tc[3]
-1.343429180000000e-12 * tc[4];
// species 48: N2H4
species[48] =
+1.045192000000000e+04 * invT
-2.121346394000000e+01
-6.442605999999999e-02 * tc[0]
-1.374865000000000e-02 * tc[1]
+4.832418333333333e-06 * tc[2]
-1.454366666666667e-09 * tc[3]
+2.211141000000000e-13 * tc[4];
// species 49: N2H3
species[49] =
+1.727270000000000e+04 * invT
-4.383020000000000e+00
-3.174204000000000e+00 * tc[0]
-2.357953500000000e-03 * tc[1]
-2.224778333333333e-06 * tc[2]
+1.599737500000000e-09 * tc[3]
-3.743782000000000e-13 * tc[4];
// species 50: N2H2
species[50] =
+2.467526000000000e+04 * invT
-1.217667100000000e+01
-1.617999000000000e+00 * tc[0]
-6.531560000000000e-03 * tc[1]
+2.859520000000000e-06 * tc[2]
-1.338006666666667e-09 * tc[3]
+3.046819500000000e-13 * tc[4];
} else {
// species 0: OH*
species[0] =
+5.026500000000000e+04 * invT
-2.712982000000000e+00
-2.882730000000000e+00 * tc[0]
-5.069871500000000e-04 * tc[1]
+3.794795000000000e-08 * tc[2]
-1.812235833333334e-12 * tc[3]
+2.563152500000000e-17 * tc[4];
// species 1: HCN
species[1] =
+1.485552000000000e+04 * invT
-1.813379999999998e-01
-3.426457000000000e+00 * tc[0]
-1.962095000000000e-03 * tc[1]
+2.668563333333333e-07 * tc[2]
-2.634971666666667e-11 * tc[3]
+1.216425000000000e-15 * tc[4];
// species 2: HNCO
species[2] =
-1.589215000000000e+04 * invT
+8.778894000000001e+00
-5.328844000000000e+00 * tc[0]
-2.107168500000000e-03 * tc[1]
+2.745655000000000e-07 * tc[2]
-2.515351666666667e-11 * tc[3]
+1.042240000000000e-15 * tc[4];
// species 3: NO
species[3] =
+9.800840000000000e+03 * invT
-3.171859000000000e+00
-3.245435000000000e+00 * tc[0]
-6.345690000000000e-04 * tc[1]
+8.359816666666666e-08 * tc[2]
-7.641069166666667e-12 * tc[3]
+3.137709500000000e-16 * tc[4];
// species 4: N2O
species[4] =
+8.165811000000000e+03 * invT
+6.376227000000000e+00
-4.718977000000000e+00 * tc[0]
-1.436857000000000e-03 * tc[1]
+1.995826666666667e-07 * tc[2]
-1.875460000000000e-11 * tc[3]
+7.876685000000001e-16 * tc[4];
// species 5: CO
species[5] =
-1.426611700000000e+04 * invT
-2.968611800000000e+00
-3.048485900000000e+00 * tc[0]
-6.758640500000000e-04 * tc[1]
+8.096567500000000e-08 * tc[2]
-6.571137000000000e-12 * tc[3]
+2.349037300000000e-16 * tc[4];
// species 6: CO2
species[6] =
-4.902490400000000e+04 * invT
+6.571406600000000e+00
-4.636511100000000e+00 * tc[0]
-1.370728450000000e-03 * tc[1]
+1.659829316666667e-07 * tc[2]
-1.336555500000000e-11 * tc[3]
+4.580992850000000e-16 * tc[4];
// species 8: O2
species[8] =
-1.215977180000000e+03 * invT
+2.455978599999997e-01
-3.660960650000000e+00 * tc[0]
-3.281829055000000e-04 * tc[1]
+2.352493783333333e-08 * tc[2]
-1.714982791666666e-12 * tc[3]
+6.495671800000001e-17 * tc[4];
// species 9: H2
species[9] =
-8.130655810000000e+02 * invT
+3.957194400000000e+00
-2.932865750000000e+00 * tc[0]
-4.133040130000000e-04 * tc[1]
+2.440039400000000e-08 * tc[2]
-1.284170116666667e-12 * tc[3]
+3.444024000000000e-17 * tc[4];
// species 10: AR
species[10] =
-7.453750000000000e+02 * invT
-1.879674910000000e+00
-2.500000000000000e+00 * tc[0]
-0.000000000000000e+00 * tc[1]
-0.000000000000000e+00 * tc[2]
-0.000000000000000e+00 * tc[3]
-0.000000000000000e+00 * tc[4];
// species 11: H
species[11] =
+2.547366000000000e+04 * invT
+2.946682850000000e+00
-2.500000000000000e+00 * tc[0]
-0.000000000000000e+00 * tc[1]
-0.000000000000000e+00 * tc[2]
-0.000000000000000e+00 * tc[3]
-0.000000000000000e+00 * tc[4];
// species 12: O
species[12] =
+2.922601200000000e+04 * invT
-2.378657600000000e+00
-2.543636970000000e+00 * tc[0]
+1.365812430000000e-05 * tc[1]
+6.983825333333333e-10 * tc[2]
-4.129015375000000e-13 * tc[3]
+2.397768470000000e-17 * tc[4];
// species 13: OH
species[13] =
+3.697808080000000e+03 * invT
-3.006416189999999e+00
-2.838530330000000e+00 * tc[0]
-5.537064450000000e-04 * tc[1]
+4.900003483333333e-08 * tc[2]
-3.505822741666666e-12 * tc[3]
+1.211449450000000e-16 * tc[4];
// species 14: HO2
species[14] =
+3.102068390000000e+01 * invT
+1.214610690000000e+00
-4.172287410000000e+00 * tc[0]
-9.405881350000000e-04 * tc[1]
+5.771288100000000e-08 * tc[2]
-1.622146241666667e-12 * tc[3]
-8.812845250000000e-18 * tc[4];
// species 15: H2O
species[15] =
-2.988589400000000e+04 * invT
-4.205511100000001e+00
-2.677038900000000e+00 * tc[0]
-1.486590800000000e-03 * tc[1]
+1.289614816666667e-07 * tc[2]
-7.869459500000001e-12 * tc[3]
+2.134499550000000e-16 * tc[4];
// species 16: H2O2
species[16] =
-1.800717750000000e+04 * invT
+3.914802356000000e+00
-4.579773050000000e+00 * tc[0]
-2.026630015000000e-03 * tc[1]
+2.164078833333333e-07 * tc[2]
-1.651761666666667e-11 * tc[3]
+5.698439600000000e-16 * tc[4];
// species 17: HCO
species[17] =
+3.653429280000000e+03 * invT
+3.392448600000000e-01
-3.920015420000000e+00 * tc[0]
-1.261396620000000e-03 * tc[1]
+1.118340273333333e-07 * tc[2]
-8.801329000000001e-12 * tc[3]
+3.718991305000000e-16 * tc[4];
// species 18: CH2O
species[18] =
-1.454868310000000e+04 * invT
-2.872552330000000e+00
-3.169526650000000e+00 * tc[0]
-3.096602800000000e-03 * tc[1]
+3.750939433333333e-07 * tc[2]
-3.049797166666667e-11 * tc[3]
+1.100747290000000e-15 * tc[4];
// species 19: NO2
species[19] =
+2.261292000000000e+03 * invT
+3.694260500000000e+00
-4.682859000000000e+00 * tc[0]
-1.231214500000000e-03 * tc[1]
+1.737098333333333e-07 * tc[2]
-1.647418333333333e-11 * tc[3]
+6.958585000000000e-16 * tc[4];
// species 20: NH3
species[20] =
-6.493270000000000e+03 * invT
-5.010192999999999e+00
-2.461904000000000e+00 * tc[0]
-3.029583000000000e-03 * tc[1]
+3.341628333333333e-07 * tc[2]
-2.613335833333333e-11 * tc[3]
+9.691585000000000e-16 * tc[4];
// species 21: HNO
species[21] =
+1.066191000000000e+04 * invT
-1.195120000000000e+00
-3.615144000000000e+00 * tc[0]
-1.606243000000000e-03 * tc[1]
+2.100561666666667e-07 * tc[2]
-1.889415000000000e-11 * tc[3]
+7.681180000000001e-16 * tc[4];
// species 23: HONO
species[23] =
-1.126865000000000e+04 * invT
+8.483895000000000e+00
-5.486893000000000e+00 * tc[0]
-2.109032500000000e-03 * tc[1]
+2.748571666666667e-07 * tc[2]
-2.476564166666666e-11 * tc[3]
+1.010574000000000e-15 * tc[4];
// species 25: N
species[25] =
+5.611604000000000e+04 * invT
-1.998490000000000e+00
-2.450268000000000e+00 * tc[0]
-5.330730000000000e-05 * tc[1]
+1.244222833333333e-08 * tc[2]
-1.566376666666667e-12 * tc[3]
+5.129920000000000e-17 * tc[4];
// species 26: NNH
species[26] =
+2.788029000000000e+04 * invT
+3.511053200000000e+00
-4.415342000000000e+00 * tc[0]
-8.071940000000000e-04 * tc[1]
+2.721490000000000e-08 * tc[2]
+7.133205000000000e-12 * tc[3]
-8.073955000000000e-16 * tc[4];
// species 27: NH2
species[27] =
+2.191977000000000e+04 * invT
-2.816567000000000e+00
-2.961311000000000e+00 * tc[0]
-1.466349500000000e-03 * tc[1]
+1.510600000000000e-07 * tc[2]
-1.347714166666667e-11 * tc[3]
+6.021000000000000e-16 * tc[4];
// species 28: NH
species[28] =
+4.213451400000000e+04 * invT
-2.957086900000000e+00
-2.783692900000000e+00 * tc[0]
-6.649214500000000e-04 * tc[1]
+7.079674500000000e-08 * tc[2]
-6.529041999999999e-12 * tc[3]
+2.752223500000000e-16 * tc[4];
// species 29: CN
species[29] =
+5.146652810000000e+04 * invT
-1.272374250000000e+00
-3.399128710000000e+00 * tc[0]
-3.732741355000000e-04 * tc[1]
+2.358227283333333e-08 * tc[2]
-1.556227175000000e-12 * tc[3]
+6.301608700000000e-17 * tc[4];
// species 30: NCO
species[30] =
+1.346329000000000e+04 * invT
+8.523068000000000e+00
-5.151174000000000e+00 * tc[0]
-1.268983000000000e-03 * tc[1]
+1.824680000000000e-07 * tc[2]
-1.760822500000000e-11 * tc[3]
+7.528085000000000e-16 * tc[4];
// species 31: NCCN
species[31] =
+3.490720000000000e+04 * invT
+1.628400000000000e+01
-6.548000000000000e+00 * tc[0]
-1.992355000000000e-03 * tc[1]
+2.723700000000000e-07 * tc[2]
-2.532166666666667e-11 * tc[3]
+1.055500000000000e-15 * tc[4];
// species 32: HOCN
species[32] =
-3.344311000000000e+03 * invT
+3.960867900000000e+00
-4.807475000000000e+00 * tc[0]
-2.095918500000000e-03 * tc[1]
+2.699873333333333e-07 * tc[2]
-2.453018333333333e-11 * tc[3]
+1.010709500000000e-15 * tc[4];
// species 33: HCNO
species[33] =
+1.833988000000000e+04 * invT
+1.513802500000000e+01
-6.035620000000000e+00 * tc[0]
-2.029666500000000e-03 * tc[1]
+2.647961666666667e-07 * tc[2]
-2.433734166666667e-11 * tc[3]
+1.011528500000000e-15 * tc[4];
// species 35: HE
species[35] =
-7.453750000000000e+02 * invT
+1.571276026000000e+00
-2.500000000000000e+00 * tc[0]
-0.000000000000000e+00 * tc[1]
-0.000000000000000e+00 * tc[2]
-0.000000000000000e+00 * tc[3]
-0.000000000000000e+00 * tc[4];
// species 37: N2O4
species[37] =
-2.849989000000000e+03 * invT
+3.660509000000000e+01
-1.048220000000000e+01 * tc[0]
-2.986136000000000e-03 * tc[1]
+4.273406666666666e-07 * tc[2]
-4.097404166666667e-11 * tc[3]
+1.745484500000000e-15 * tc[4];
// species 38: N2O3
species[38] =
+7.271601460000000e+03 * invT
+2.462202885000000e+01
-9.085838450000001e+00 * tc[0]
-1.688781650000000e-03 * tc[1]
+2.193064833333333e-07 * tc[2]
-1.923019408333333e-11 * tc[3]
+7.357563350000000e-16 * tc[4];
// species 39: CH
species[39] =
+7.094676900000000e+04 * invT
-4.884245999999999e+00
-2.520936900000000e+00 * tc[0]
-8.826819500000000e-04 * tc[1]
+7.691276666666666e-08 * tc[2]
-4.940806250000000e-12 * tc[3]
+1.673725050000000e-16 * tc[4];
// species 40: H2CN
species[40] =
+2.767711000000000e+04 * invT
+9.654181000000001e+00
-5.209703000000000e+00 * tc[0]
-1.484645500000000e-03 * tc[1]
+4.759315000000000e-08 * tc[2]
+1.362958333333333e-11 * tc[3]
-1.521629500000000e-15 * tc[4];
// species 41: HCNH
species[41] =
+3.132669000000000e+04 * invT
+6.555802000000000e+00
-4.923293000000000e+00 * tc[0]
-1.666448500000000e-03 * tc[1]
+5.618161666666666e-08 * tc[2]
+1.584682500000000e-11 * tc[3]
-1.765912500000000e-15 * tc[4];
// species 43: NO3
species[43] =
+5.864479000000000e+03 * invT
+1.925760700000000e+01
-7.120307000000000e+00 * tc[0]
-1.623114000000000e-03 * tc[1]
+2.386021666666667e-07 * tc[2]
-2.330877500000000e-11 * tc[3]
+1.006504000000000e-15 * tc[4];
// species 45: N2
species[45] =
-9.239486879999999e+02 * invT
-2.919311250000000e+00
-2.952576370000000e+00 * tc[0]
-6.984502000000001e-04 * tc[1]
+8.210526716666667e-08 * tc[2]
-6.550084958333333e-12 * tc[3]
+2.303776020000000e-16 * tc[4];
// species 46: CH4
species[46] =
-1.000959360000000e+04 * invT
-8.251800570000000e+00
-1.653262260000000e+00 * tc[0]
-5.013154950000000e-03 * tc[1]
+5.527687300000000e-07 * tc[2]
-4.470692816666667e-11 * tc[3]
+1.573483790000000e-15 * tc[4];
// species 47: C2H6
species[47] =
-1.244734990000000e+04 * invT
+5.015362423000000e+00
-4.046664110000000e+00 * tc[0]
-7.676940100000000e-03 * tc[1]
+9.117324750000000e-07 * tc[2]
-7.315221200000000e-11 * tc[3]
+2.615837655000000e-15 * tc[4];
// species 48: N2H4
species[48] =
+9.341218999999999e+03 * invT
+7.940307000000001e+00
-4.977317000000000e+00 * tc[0]
-4.797759500000000e-03 * tc[1]
+5.912731666666667e-07 * tc[2]
-5.103582500000000e-11 * tc[3]
+2.014897500000000e-15 * tc[4];
// species 49: N2H3
species[49] =
+1.664221000000000e+04 * invT
+4.869366500000000e+00
-4.441846000000000e+00 * tc[0]
-3.607135500000000e-03 * tc[1]
+4.159473333333333e-07 * tc[2]
-3.267137500000000e-11 * tc[3]
+1.149475000000000e-15 * tc[4];
// species 50: N2H2
species[50] =
+2.418172000000000e+04 * invT
-1.609399999999999e+00
-3.371185000000000e+00 * tc[0]
-3.019984000000000e-03 * tc[1]
+3.839756666666667e-07 * tc[2]
-3.385657500000000e-11 * tc[3]
+1.356572000000000e-15 * tc[4];
}

// species with midpoint at T=1500 kelvin
if (T < 1500) {
// species 7: HNC
species[7] =
+2.228268020000000e+04 * invT
+8.602170000000000e-01
-3.592377000000000e+00 * tc[0]
-2.780670000000000e-03 * tc[1]
+9.894704999999999e-07 * tc[2]
-3.151940833333334e-10 * tc[3]
+4.682546000000000e-14 * tc[4];
// species 24: H2NO
species[24] =
+6.868030000000000e+03 * invT
-8.735920000000000e+00
-2.530590000000000e+00 * tc[0]
-4.298017500000000e-03 * tc[1]
+9.118383333333333e-07 * tc[2]
-1.896874166666667e-10 * tc[3]
+2.324036500000000e-14 * tc[4];
// species 34: NCN
species[34] =
+5.285757000000000e+04 * invT
-4.216309000000001e+00
-3.101270000000000e+00 * tc[0]
-4.990837000000000e-03 * tc[1]
+1.653450166666667e-06 * tc[2]
-3.965765833333333e-10 * tc[3]
+4.484313000000000e-14 * tc[4];
// species 36: HNO2
species[36] =
-8.105484000000000e+03 * invT
-1.279766200000000e+01
-1.934838000000000e+00 * tc[0]
-5.050180000000000e-03 * tc[1]
+8.274360000000001e-07 * tc[2]
-7.250933333333334e-11 * tc[3]
+1.162067500000000e-16 * tc[4];
// species 42: HNOH
species[42] =
+9.553544000000000e+03 * invT
-1.097144600000000e+01
-2.125274000000000e+00 * tc[0]
-5.331410000000000e-03 * tc[1]
+1.267098166666667e-06 * tc[2]
-2.568035000000000e-10 * tc[3]
+2.863249000000000e-14 * tc[4];
// species 44: HONO2
species[44] =
-1.630442000000000e+04 * invT
-2.030187320000000e+01
-7.877668000000000e-01 * tc[0]
-1.191164500000000e-02 * tc[1]
+3.676606666666667e-06 * tc[2]
-8.617066666666666e-10 * tc[3]
+9.864285000000000e-14 * tc[4];
} else {
// species 7: HNC
species[7] =
+2.161423020000000e+04 * invT
+1.167168200000000e+01
-5.283464000000000e+00 * tc[0]
-5.462380000000000e-04 * tc[1]
+1.951441666666667e-08 * tc[2]
+1.923893333333333e-12 * tc[3]
-1.975336500000000e-16 * tc[4];
// species 24: H2NO
species[24] =
+5.569325000000000e+03 * invT
+1.182688600000000e+01
-5.673346000000000e+00 * tc[0]
-1.149418500000000e-03 * tc[1]
+2.957410000000000e-08 * tc[2]
+9.195683333333332e-12 * tc[3]
-9.298810000000001e-16 * tc[4];
// species 34: NCN
species[34] =
+5.172403000000000e+04 * invT
+1.803729100000000e+01
-6.652121000000000e+00 * tc[0]
-3.054017000000000e-04 * tc[1]
+2.316211666666667e-08 * tc[2]
-2.246290833333333e-13 * tc[3]
-8.349720000000000e-17 * tc[4];
// species 36: HNO2
species[36] =
-9.999271000000001e+03 * invT
+1.715249000000000e+01
-6.479630000000000e+00 * tc[0]
-9.976370000000000e-04 * tc[1]
+2.900645000000000e-08 * tc[2]
+8.079893333333334e-12 * tc[3]
-8.507399999999999e-16 * tc[4];
// species 42: HNOH
species[42] =
+7.859615000000000e+03 * invT
+1.680092400000000e+01
-6.396134000000000e+00 * tc[0]
-9.105335000000000e-04 * tc[1]
+3.118153333333333e-08 * tc[2]
+6.537060000000000e-12 * tc[3]
-7.224275000000000e-16 * tc[4];
// species 44: HONO2
species[44] =
-1.942244000000000e+04 * invT
+3.665637800000000e+01
-9.756148000000000e+00 * tc[0]
-9.504740000000000e-04 * tc[1]
+5.400033333333333e-08 * tc[2]
+3.313865833333333e-12 * tc[3]
-5.501670000000000e-16 * tc[4];
}

// species with midpoint at T=1671 kelvin
if (T < 1671) {
// species 22: HON
species[22] =
+2.959797510000000e+04 * invT
-2.626867570000000e+00
-3.336564310000000e+00 * tc[0]
-1.338414695000000e-03 * tc[1]
-9.363355050000000e-08 * tc[2]
+9.280189916666667e-11 * tc[3]
-1.420382190000000e-14 * tc[4];
} else {
// species 22: HON
species[22] =
+2.933197010000000e+04 * invT
+6.638413700000001e-01
-3.785774300000000e+00 * tc[0]
-1.430313640000000e-03 * tc[1]
+1.707065366666667e-07 * tc[2]
-1.370526158333333e-11 * tc[3]
+4.889718080000000e-16 * tc[4];
}

// species with midpoint at T=1695 kelvin
if (T < 1695) {
// species 51: H2NN
species[51] =
+3.360306900000000e+04 * invT
-6.065525170000000e+00
-2.885442620000000e+00 * tc[0]
-2.347479995000000e-03 * tc[1]
-1.169972050000000e-07 * tc[2]
+1.277991983333333e-10 * tc[3]
-1.896729290000000e-14 * tc[4];
} else {
// species 51: H2NN
species[51] =
+3.336783460000000e+04 * invT
-3.912848080000000e+00
-3.135310320000000e+00 * tc[0]
-2.843162845000000e-03 * tc[1]
+3.233057783333333e-07 * tc[2]
-2.510754175000000e-11 * tc[3]
+8.748907200000000e-16 * tc[4];
}
return;
}

// compute the a/(RT) at the given temperature
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void helmholtz(amrex::Real * species, const amrex::Real *  tc)
{

// temperature
const amrex::Real T = tc[1];
const amrex::Real invT = 1 / T;

// species with midpoint at T=1000 kelvin
if (T < 1000) {
// species 0: OH*
species[0] =
+5.00213000e+04 * invT
+1.27840550e+00
-3.63726600e+00 * tc[0]
-9.25455000e-05 * tc[1]
+2.79360767e-07 * tc[2]
-1.98933500e-10 * tc[3]
+4.21572100e-14 * tc[4];
// species 1: HCN
species[1] =
+1.50104400e+04 * invT
-6.80510400e+00
-2.41778700e+00 * tc[0]
-4.51592800e-03 * tc[1]
+1.84621167e-06 * tc[2]
-6.65011750e-10 * tc[3]
+1.15557050e-13 * tc[4];
// species 2: HNCO
species[2] =
-1.52332800e+04 * invT
-4.24580500e+00
-3.49918800e+00 * tc[0]
-3.13182900e-03 * tc[1]
-5.20961333e-07 * tc[2]
+7.18766667e-10 * tc[3]
-1.95668600e-13 * tc[4];
// species 3: NO
species[3] =
+9.81796100e+03 * invT
-3.45304800e+00
-3.37654200e+00 * tc[0]
-6.26531500e-04 * tc[1]
+5.50458500e-07 * tc[2]
-4.34817500e-10 * tc[3]
+1.22313150e-13 * tc[4];
// species 4: N2O
species[4] =
+8.76510000e+03 * invT
-7.96816400e+00
-2.54305800e+00 * tc[0]
-4.74609650e-03 * tc[1]
+1.63212917e-06 * tc[2]
-5.21987083e-10 * tc[3]
+9.50913000e-14 * tc[4];
// species 5: CO
species[5] =
-1.43440860e+04 * invT
-9.28875800e-01
-3.57953350e+00 * tc[0]
+3.05176845e-04 * tc[1]
-1.69469050e-07 * tc[2]
-7.55838217e-11 * tc[3]
+4.52212245e-14 * tc[4];
// species 6: CO2
species[6] =
-4.83719710e+04 * invT
-8.54409050e+00
-2.35681300e+00 * tc[0]
-4.49206495e-03 * tc[1]
+1.18701053e-06 * tc[2]
-2.04775067e-10 * tc[3]
+7.14427400e-15 * tc[4];
// species 8: O2
species[8] =
-1.06394356e+03 * invT
-8.75219370e-01
-3.78245636e+00 * tc[0]
+1.49836708e-03 * tc[1]
-1.64121700e-06 * tc[2]
+8.06774591e-10 * tc[3]
-1.62186418e-13 * tc[4];
// species 9: H2
species[9] =
-9.17935173e+02 * invT
+6.61320882e-01
-2.34433112e+00 * tc[0]
-3.99026037e-03 * tc[1]
+3.24635850e-06 * tc[2]
-1.67976745e-09 * tc[3]
+3.68805881e-13 * tc[4];
// species 10: AR
species[10] =
-7.45375000e+02 * invT
-2.87967491e+00
-2.50000000e+00 * tc[0]
-0.00000000e+00 * tc[1]
-0.00000000e+00 * tc[2]
-0.00000000e+00 * tc[3]
-0.00000000e+00 * tc[4];
// species 11: H
species[11] =
+2.54736600e+04 * invT
+1.94668285e+00
-2.50000000e+00 * tc[0]
-0.00000000e+00 * tc[1]
-0.00000000e+00 * tc[2]
-0.00000000e+00 * tc[3]
-0.00000000e+00 * tc[4];
// species 12: O
species[12] =
+2.91222592e+04 * invT
+1.16333640e-01
-3.16826710e+00 * tc[0]
+1.63965942e-03 * tc[1]
-1.10717733e-06 * tc[2]
+5.10672187e-10 * tc[3]
-1.05632985e-13 * tc[4];
// species 13: OH
species[13] =
+3.36889836e+03 * invT
+3.09598272e+00
-3.99198424e+00 * tc[0]
+1.20053327e-03 * tc[1]
-7.69440055e-07 * tc[2]
+3.23263588e-10 * tc[3]
-6.81597510e-14 * tc[4];
// species 14: HO2
species[14] =
+2.64018485e+02 * invT
-4.14864130e-01
-4.30179807e+00 * tc[0]
+2.37456049e-03 * tc[1]
-3.52638175e-06 * tc[2]
+2.02303262e-09 * tc[3]
-4.64612613e-13 * tc[4];
// species 15: H2O
species[15] =
-3.02937260e+04 * invT
+4.04764421e+00
-4.19863520e+00 * tc[0]
+1.01820085e-03 * tc[1]
-1.08672360e-06 * tc[2]
+4.57327242e-10 * tc[3]
-8.85984000e-14 * tc[4];
// species 16: H2O2
species[16] =
-1.77067437e+04 * invT
+4.14183000e-02
-4.31515149e+00 * tc[0]
+4.23695311e-04 * tc[1]
-2.94007205e-06 * tc[2]
+1.88969120e-09 * tc[3]
-4.54475079e-13 * tc[4];
// species 17: HCO
species[17] =
+3.87241185e+03 * invT
-7.08025900e-02
-4.23754610e+00 * tc[0]
+1.66037629e-03 * tc[1]
-2.33383773e-06 * tc[2]
+1.11866662e-09 * tc[3]
-2.18708104e-13 * tc[4];
// species 18: CH2O
species[18] =
-1.43791953e+04 * invT
+3.19092506e+00
-4.79372312e+00 * tc[0]
+4.95416661e-03 * tc[1]
-6.22033317e-06 * tc[2]
+3.16071031e-09 * tc[3]
-6.58863205e-13 * tc[4];
// species 19: NO2
species[19] =
+2.89629100e+03 * invT
-9.94147000e+00
-2.67060000e+00 * tc[0]
-3.91925050e-03 * tc[1]
+1.34397750e-06 * tc[2]
-5.13476250e-10 * tc[3]
+1.16007500e-13 * tc[4];
// species 20: NH3
species[20] =
-6.52548800e+03 * invT
-6.92278600e+00
-2.20435200e+00 * tc[0]
-5.05738000e-03 * tc[1]
+2.44210833e-06 * tc[2]
-1.20602917e-09 * tc[3]
+2.66425450e-13 * tc[4];
// species 21: HNO
species[21] =
+1.09187800e+04 * invT
-7.25122600e+00
-2.78440300e+00 * tc[0]
-3.30482300e-03 * tc[1]
+1.55003717e-06 * tc[2]
-7.86498333e-10 * tc[3]
+1.87657300e-13 * tc[4];
// species 23: HONO
species[23] =
-1.04319500e+04 * invT
-1.19903570e+01
-2.29041300e+00 * tc[0]
-7.04961000e-03 * tc[1]
+2.27978667e-06 * tc[2]
-6.24898333e-10 * tc[3]
+9.38452500e-14 * tc[4];
// species 25: N
species[25] =
+5.60989000e+04 * invT
-2.66449500e+00
-2.50307100e+00 * tc[0]
+1.09000900e-05 * tc[1]
-9.03421500e-09 * tc[2]
+4.70630000e-12 * tc[3]
-1.04995200e-15 * tc[4];
// species 26: NNH
species[26] =
+2.83334700e+04 * invT
-3.89049300e+00
-3.50134400e+00 * tc[0]
-1.02679350e-03 * tc[1]
-1.19506833e-07 * tc[2]
-4.10112333e-11 * tc[3]
+4.83558500e-14 * tc[4];
// species 27: NH2
species[27] =
+2.17722800e+04 * invT
-6.57618000e-01
-3.43249300e+00 * tc[0]
-1.64977000e-03 * tc[1]
+1.10226667e-06 * tc[2]
-7.15912250e-10 * tc[3]
+1.78602350e-13 * tc[4];
// species 28: NH
species[28] =
+4.18942940e+04 * invT
+6.44580700e-01
-3.49290840e+00 * tc[0]
-1.55895985e-04 * tc[1]
+2.48174733e-07 * tc[2]
-2.06803683e-10 * tc[3]
+5.17848350e-14 * tc[4];
// species 29: CN
species[29] =
+5.15179601e+04 * invT
-1.36984400e+00
-3.61256066e+00 * tc[0]
+4.76507688e-04 * tc[1]
-3.56261913e-07 * tc[2]
+2.54166757e-11 * tc[3]
+2.35259450e-14 * tc[4];
// species 30: NCO
species[30] =
+1.39940800e+04 * invT
+1.78015000e+00
-4.51241900e+00 * tc[0]
+1.64903850e-03 * tc[1]
-3.66053167e-06 * tc[2]
+2.22134500e-09 * tc[3]
-5.13459500e-13 * tc[4];
// species 31: NCCN
species[31] =
+3.54789000e+04 * invT
+1.55246000e+00
-4.26546000e+00 * tc[0]
-5.96128500e-03 * tc[1]
+2.23669000e-06 * tc[2]
-7.66025000e-10 * tc[3]
+1.38947000e-13 * tc[4];
// species 32: HOCN
species[32] =
-3.02768700e+03 * invT
+9.84712000e-01
-4.71619800e+00 * tc[0]
+6.12488000e-04 * tc[1]
-2.62817833e-06 * tc[2]
+1.53728667e-09 * tc[3]
-3.42034500e-13 * tc[4];
// species 33: HCNO
species[33] =
+1.92815400e+04 * invT
-7.54996900e+00
-2.48256400e+00 * tc[0]
-7.40678000e-03 * tc[1]
+2.28133000e-06 * tc[2]
-5.03908750e-10 * tc[3]
+4.38529550e-14 * tc[4];
// species 35: HE
species[35] =
-7.45375000e+02 * invT
+5.71276026e-01
-2.50000000e+00 * tc[0]
-0.00000000e+00 * tc[1]
-0.00000000e+00 * tc[2]
-0.00000000e+00 * tc[3]
-0.00000000e+00 * tc[4];
// species 37: N2O4
species[37] =
-9.12824100e+02 * invT
-6.83258100e+00
-3.62459300e+00 * tc[0]
-1.23735400e-02 * tc[1]
+3.62145833e-06 * tc[2]
-8.27258667e-10 * tc[3]
+1.11140850e-13 * tc[4];
// species 38: N2O3
species[38] =
+8.19184453e+03 * invT
+3.60622643e+00
-5.81083964e+00 * tc[0]
-7.16654810e-03 * tc[1]
+3.27014328e-06 * tc[2]
-1.44217279e-09 * tc[3]
+3.23276977e-13 * tc[4];
// species 39: CH
species[39] =
+7.06126460e+04 * invT
+4.05474200e-01
-3.48975830e+00 * tc[0]
-1.62160800e-04 * tc[1]
+2.81662517e-07 * tc[2]
-2.63570167e-10 * tc[3]
+7.03090150e-14 * tc[4];
// species 40: H2CN
species[40] =
+2.86378200e+04 * invT
-7.14109000e+00
-2.85166100e+00 * tc[0]
-2.84761650e-03 * tc[1]
-1.78523333e-07 * tc[2]
+1.35217667e-10 * tc[3]
+1.17555400e-14 * tc[4];
// species 41: HCNH
species[41] =
+3.21724700e+04 * invT
-8.81543400e+00
-2.75945600e+00 * tc[0]
-3.05169350e-03 * tc[1]
-1.28552483e-07 * tc[2]
+1.71924500e-10 * tc[3]
-9.65960000e-15 * tc[4];
// species 43: NO3
species[43] =
+7.47314400e+03 * invT
-1.81809540e+01
-1.22107600e+00 * tc[0]
-9.39398500e-03 * tc[1]
+2.24053500e-06 * tc[2]
-1.06216750e-10 * tc[3]
-6.77030000e-14 * tc[4];
// species 45: N2
species[45] =
-1.04697628e+03 * invT
-4.36465100e-01
-3.53100528e+00 * tc[0]
+6.18304940e-05 * tc[1]
+8.38332388e-08 * tc[2]
-2.02942177e-10 * tc[3]
+7.04406175e-14 * tc[4];
// species 46: CH4
species[46] =
-1.02465983e+04 * invT
+8.78760310e+00
-5.14911468e+00 * tc[0]
+6.83110045e-03 * tc[1]
-8.19089868e-06 * tc[2]
+4.03538972e-09 * tc[3]
-8.33017205e-13 * tc[4];
// species 47: C2H6
species[47] =
-1.15222056e+04 * invT
+6.24635780e-01
-4.29142572e+00 * tc[0]
+2.75077450e-03 * tc[1]
-9.99064097e-06 * tc[2]
+5.90388724e-09 * tc[3]
-1.34342918e-12 * tc[4];
// species 48: N2H4
species[48] =
+1.04519200e+04 * invT
-2.22134639e+01
-6.44260600e-02 * tc[0]
-1.37486500e-02 * tc[1]
+4.83241833e-06 * tc[2]
-1.45436667e-09 * tc[3]
+2.21114100e-13 * tc[4];
// species 49: N2H3
species[49] =
+1.72727000e+04 * invT
-5.38302000e+00
-3.17420400e+00 * tc[0]
-2.35795350e-03 * tc[1]
-2.22477833e-06 * tc[2]
+1.59973750e-09 * tc[3]
-3.74378200e-13 * tc[4];
// species 50: N2H2
species[50] =
+2.46752600e+04 * invT
-1.31766710e+01
-1.61799900e+00 * tc[0]
-6.53156000e-03 * tc[1]
+2.85952000e-06 * tc[2]
-1.33800667e-09 * tc[3]
+3.04681950e-13 * tc[4];
} else {
// species 0: OH*
species[0] =
+5.02650000e+04 * invT
-3.71298200e+00
-2.88273000e+00 * tc[0]
-5.06987150e-04 * tc[1]
+3.79479500e-08 * tc[2]
-1.81223583e-12 * tc[3]
+2.56315250e-17 * tc[4];
// species 1: HCN
species[1] =
+1.48555200e+04 * invT
-1.18133800e+00
-3.42645700e+00 * tc[0]
-1.96209500e-03 * tc[1]
+2.66856333e-07 * tc[2]
-2.63497167e-11 * tc[3]
+1.21642500e-15 * tc[4];
// species 2: HNCO
species[2] =
-1.58921500e+04 * invT
+7.77889400e+00
-5.32884400e+00 * tc[0]
-2.10716850e-03 * tc[1]
+2.74565500e-07 * tc[2]
-2.51535167e-11 * tc[3]
+1.04224000e-15 * tc[4];
// species 3: NO
species[3] =
+9.80084000e+03 * invT
-4.17185900e+00
-3.24543500e+00 * tc[0]
-6.34569000e-04 * tc[1]
+8.35981667e-08 * tc[2]
-7.64106917e-12 * tc[3]
+3.13770950e-16 * tc[4];
// species 4: N2O
species[4] =
+8.16581100e+03 * invT
+5.37622700e+00
-4.71897700e+00 * tc[0]
-1.43685700e-03 * tc[1]
+1.99582667e-07 * tc[2]
-1.87546000e-11 * tc[3]
+7.87668500e-16 * tc[4];
// species 5: CO
species[5] =
-1.42661170e+04 * invT
-3.96861180e+00
-3.04848590e+00 * tc[0]
-6.75864050e-04 * tc[1]
+8.09656750e-08 * tc[2]
-6.57113700e-12 * tc[3]
+2.34903730e-16 * tc[4];
// species 6: CO2
species[6] =
-4.90249040e+04 * invT
+5.57140660e+00
-4.63651110e+00 * tc[0]
-1.37072845e-03 * tc[1]
+1.65982932e-07 * tc[2]
-1.33655550e-11 * tc[3]
+4.58099285e-16 * tc[4];
// species 8: O2
species[8] =
-1.21597718e+03 * invT
-7.54402140e-01
-3.66096065e+00 * tc[0]
-3.28182906e-04 * tc[1]
+2.35249378e-08 * tc[2]
-1.71498279e-12 * tc[3]
+6.49567180e-17 * tc[4];
// species 9: H2
species[9] =
-8.13065581e+02 * invT
+2.95719440e+00
-2.93286575e+00 * tc[0]
-4.13304013e-04 * tc[1]
+2.44003940e-08 * tc[2]
-1.28417012e-12 * tc[3]
+3.44402400e-17 * tc[4];
// species 10: AR
species[10] =
-7.45375000e+02 * invT
-2.87967491e+00
-2.50000000e+00 * tc[0]
-0.00000000e+00 * tc[1]
-0.00000000e+00 * tc[2]
-0.00000000e+00 * tc[3]
-0.00000000e+00 * tc[4];
// species 11: H
species[11] =
+2.54736600e+04 * invT
+1.94668285e+00
-2.50000000e+00 * tc[0]
-0.00000000e+00 * tc[1]
-0.00000000e+00 * tc[2]
-0.00000000e+00 * tc[3]
-0.00000000e+00 * tc[4];
// species 12: O
species[12] =
+2.92260120e+04 * invT
-3.37865760e+00
-2.54363697e+00 * tc[0]
+1.36581243e-05 * tc[1]
+6.98382533e-10 * tc[2]
-4.12901538e-13 * tc[3]
+2.39776847e-17 * tc[4];
// species 13: OH
species[13] =
+3.69780808e+03 * invT
-4.00641619e+00
-2.83853033e+00 * tc[0]
-5.53706445e-04 * tc[1]
+4.90000348e-08 * tc[2]
-3.50582274e-12 * tc[3]
+1.21144945e-16 * tc[4];
// species 14: HO2
species[14] =
+3.10206839e+01 * invT
+2.14610690e-01
-4.17228741e+00 * tc[0]
-9.40588135e-04 * tc[1]
+5.77128810e-08 * tc[2]
-1.62214624e-12 * tc[3]
-8.81284525e-18 * tc[4];
// species 15: H2O
species[15] =
-2.98858940e+04 * invT
-5.20551110e+00
-2.67703890e+00 * tc[0]
-1.48659080e-03 * tc[1]
+1.28961482e-07 * tc[2]
-7.86945950e-12 * tc[3]
+2.13449955e-16 * tc[4];
// species 16: H2O2
species[16] =
-1.80071775e+04 * invT
+2.91480236e+00
-4.57977305e+00 * tc[0]
-2.02663002e-03 * tc[1]
+2.16407883e-07 * tc[2]
-1.65176167e-11 * tc[3]
+5.69843960e-16 * tc[4];
// species 17: HCO
species[17] =
+3.65342928e+03 * invT
-6.60755140e-01
-3.92001542e+00 * tc[0]
-1.26139662e-03 * tc[1]
+1.11834027e-07 * tc[2]
-8.80132900e-12 * tc[3]
+3.71899131e-16 * tc[4];
// species 18: CH2O
species[18] =
-1.45486831e+04 * invT
-3.87255233e+00
-3.16952665e+00 * tc[0]
-3.09660280e-03 * tc[1]
+3.75093943e-07 * tc[2]
-3.04979717e-11 * tc[3]
+1.10074729e-15 * tc[4];
// species 19: NO2
species[19] =
+2.26129200e+03 * invT
+2.69426050e+00
-4.68285900e+00 * tc[0]
-1.23121450e-03 * tc[1]
+1.73709833e-07 * tc[2]
-1.64741833e-11 * tc[3]
+6.95858500e-16 * tc[4];
// species 20: NH3
species[20] =
-6.49327000e+03 * invT
-6.01019300e+00
-2.46190400e+00 * tc[0]
-3.02958300e-03 * tc[1]
+3.34162833e-07 * tc[2]
-2.61333583e-11 * tc[3]
+9.69158500e-16 * tc[4];
// species 21: HNO
species[21] =
+1.06619100e+04 * invT
-2.19512000e+00
-3.61514400e+00 * tc[0]
-1.60624300e-03 * tc[1]
+2.10056167e-07 * tc[2]
-1.88941500e-11 * tc[3]
+7.68118000e-16 * tc[4];
// species 23: HONO
species[23] =
-1.12686500e+04 * invT
+7.48389500e+00
-5.48689300e+00 * tc[0]
-2.10903250e-03 * tc[1]
+2.74857167e-07 * tc[2]
-2.47656417e-11 * tc[3]
+1.01057400e-15 * tc[4];
// species 25: N
species[25] =
+5.61160400e+04 * invT
-2.99849000e+00
-2.45026800e+00 * tc[0]
-5.33073000e-05 * tc[1]
+1.24422283e-08 * tc[2]
-1.56637667e-12 * tc[3]
+5.12992000e-17 * tc[4];
// species 26: NNH
species[26] =
+2.78802900e+04 * invT
+2.51105320e+00
-4.41534200e+00 * tc[0]
-8.07194000e-04 * tc[1]
+2.72149000e-08 * tc[2]
+7.13320500e-12 * tc[3]
-8.07395500e-16 * tc[4];
// species 27: NH2
species[27] =
+2.19197700e+04 * invT
-3.81656700e+00
-2.96131100e+00 * tc[0]
-1.46634950e-03 * tc[1]
+1.51060000e-07 * tc[2]
-1.34771417e-11 * tc[3]
+6.02100000e-16 * tc[4];
// species 28: NH
species[28] =
+4.21345140e+04 * invT
-3.95708690e+00
-2.78369290e+00 * tc[0]
-6.64921450e-04 * tc[1]
+7.07967450e-08 * tc[2]
-6.52904200e-12 * tc[3]
+2.75222350e-16 * tc[4];
// species 29: CN
species[29] =
+5.14665281e+04 * invT
-2.27237425e+00
-3.39912871e+00 * tc[0]
-3.73274135e-04 * tc[1]
+2.35822728e-08 * tc[2]
-1.55622717e-12 * tc[3]
+6.30160870e-17 * tc[4];
// species 30: NCO
species[30] =
+1.34632900e+04 * invT
+7.52306800e+00
-5.15117400e+00 * tc[0]
-1.26898300e-03 * tc[1]
+1.82468000e-07 * tc[2]
-1.76082250e-11 * tc[3]
+7.52808500e-16 * tc[4];
// species 31: NCCN
species[31] =
+3.49072000e+04 * invT
+1.52840000e+01
-6.54800000e+00 * tc[0]
-1.99235500e-03 * tc[1]
+2.72370000e-07 * tc[2]
-2.53216667e-11 * tc[3]
+1.05550000e-15 * tc[4];
// species 32: HOCN
species[32] =
-3.34431100e+03 * invT
+2.96086790e+00
-4.80747500e+00 * tc[0]
-2.09591850e-03 * tc[1]
+2.69987333e-07 * tc[2]
-2.45301833e-11 * tc[3]
+1.01070950e-15 * tc[4];
// species 33: HCNO
species[33] =
+1.83398800e+04 * invT
+1.41380250e+01
-6.03562000e+00 * tc[0]
-2.02966650e-03 * tc[1]
+2.64796167e-07 * tc[2]
-2.43373417e-11 * tc[3]
+1.01152850e-15 * tc[4];
// species 35: HE
species[35] =
-7.45375000e+02 * invT
+5.71276026e-01
-2.50000000e+00 * tc[0]
-0.00000000e+00 * tc[1]
-0.00000000e+00 * tc[2]
-0.00000000e+00 * tc[3]
-0.00000000e+00 * tc[4];
// species 37: N2O4
species[37] =
-2.84998900e+03 * invT
+3.56050900e+01
-1.04822000e+01 * tc[0]
-2.98613600e-03 * tc[1]
+4.27340667e-07 * tc[2]
-4.09740417e-11 * tc[3]
+1.74548450e-15 * tc[4];
// species 38: N2O3
species[38] =
+7.27160146e+03 * invT
+2.36220288e+01
-9.08583845e+00 * tc[0]
-1.68878165e-03 * tc[1]
+2.19306483e-07 * tc[2]
-1.92301941e-11 * tc[3]
+7.35756335e-16 * tc[4];
// species 39: CH
species[39] =
+7.09467690e+04 * invT
-5.88424600e+00
-2.52093690e+00 * tc[0]
-8.82681950e-04 * tc[1]
+7.69127667e-08 * tc[2]
-4.94080625e-12 * tc[3]
+1.67372505e-16 * tc[4];
// species 40: H2CN
species[40] =
+2.76771100e+04 * invT
+8.65418100e+00
-5.20970300e+00 * tc[0]
-1.48464550e-03 * tc[1]
+4.75931500e-08 * tc[2]
+1.36295833e-11 * tc[3]
-1.52162950e-15 * tc[4];
// species 41: HCNH
species[41] =
+3.13266900e+04 * invT
+5.55580200e+00
-4.92329300e+00 * tc[0]
-1.66644850e-03 * tc[1]
+5.61816167e-08 * tc[2]
+1.58468250e-11 * tc[3]
-1.76591250e-15 * tc[4];
// species 43: NO3
species[43] =
+5.86447900e+03 * invT
+1.82576070e+01
-7.12030700e+00 * tc[0]
-1.62311400e-03 * tc[1]
+2.38602167e-07 * tc[2]
-2.33087750e-11 * tc[3]
+1.00650400e-15 * tc[4];
// species 45: N2
species[45] =
-9.23948688e+02 * invT
-3.91931125e+00
-2.95257637e+00 * tc[0]
-6.98450200e-04 * tc[1]
+8.21052672e-08 * tc[2]
-6.55008496e-12 * tc[3]
+2.30377602e-16 * tc[4];
// species 46: CH4
species[46] =
-1.00095936e+04 * invT
-9.25180057e+00
-1.65326226e+00 * tc[0]
-5.01315495e-03 * tc[1]
+5.52768730e-07 * tc[2]
-4.47069282e-11 * tc[3]
+1.57348379e-15 * tc[4];
// species 47: C2H6
species[47] =
-1.24473499e+04 * invT
+4.01536242e+00
-4.04666411e+00 * tc[0]
-7.67694010e-03 * tc[1]
+9.11732475e-07 * tc[2]
-7.31522120e-11 * tc[3]
+2.61583765e-15 * tc[4];
// species 48: N2H4
species[48] =
+9.34121900e+03 * invT
+6.94030700e+00
-4.97731700e+00 * tc[0]
-4.79775950e-03 * tc[1]
+5.91273167e-07 * tc[2]
-5.10358250e-11 * tc[3]
+2.01489750e-15 * tc[4];
// species 49: N2H3
species[49] =
+1.66422100e+04 * invT
+3.86936650e+00
-4.44184600e+00 * tc[0]
-3.60713550e-03 * tc[1]
+4.15947333e-07 * tc[2]
-3.26713750e-11 * tc[3]
+1.14947500e-15 * tc[4];
// species 50: N2H2
species[50] =
+2.41817200e+04 * invT
-2.60940000e+00
-3.37118500e+00 * tc[0]
-3.01998400e-03 * tc[1]
+3.83975667e-07 * tc[2]
-3.38565750e-11 * tc[3]
+1.35657200e-15 * tc[4];
}

// species with midpoint at T=1500 kelvin
if (T < 1500) {
// species 7: HNC
species[7] =
+2.22826802e+04 * invT
-1.39783000e-01
-3.59237700e+00 * tc[0]
-2.78067000e-03 * tc[1]
+9.89470500e-07 * tc[2]
-3.15194083e-10 * tc[3]
+4.68254600e-14 * tc[4];
// species 24: H2NO
species[24] =
+6.86803000e+03 * invT
-9.73592000e+00
-2.53059000e+00 * tc[0]
-4.29801750e-03 * tc[1]
+9.11838333e-07 * tc[2]
-1.89687417e-10 * tc[3]
+2.32403650e-14 * tc[4];
// species 34: NCN
species[34] =
+5.28575700e+04 * invT
-5.21630900e+00
-3.10127000e+00 * tc[0]
-4.99083700e-03 * tc[1]
+1.65345017e-06 * tc[2]
-3.96576583e-10 * tc[3]
+4.48431300e-14 * tc[4];
// species 36: HNO2
species[36] =
-8.10548400e+03 * invT
-1.37976620e+01
-1.93483800e+00 * tc[0]
-5.05018000e-03 * tc[1]
+8.27436000e-07 * tc[2]
-7.25093333e-11 * tc[3]
+1.16206750e-16 * tc[4];
// species 42: HNOH
species[42] =
+9.55354400e+03 * invT
-1.19714460e+01
-2.12527400e+00 * tc[0]
-5.33141000e-03 * tc[1]
+1.26709817e-06 * tc[2]
-2.56803500e-10 * tc[3]
+2.86324900e-14 * tc[4];
// species 44: HONO2
species[44] =
-1.63044200e+04 * invT
-2.13018732e+01
-7.87766800e-01 * tc[0]
-1.19116450e-02 * tc[1]
+3.67660667e-06 * tc[2]
-8.61706667e-10 * tc[3]
+9.86428500e-14 * tc[4];
} else {
// species 7: HNC
species[7] =
+2.16142302e+04 * invT
+1.06716820e+01
-5.28346400e+00 * tc[0]
-5.46238000e-04 * tc[1]
+1.95144167e-08 * tc[2]
+1.92389333e-12 * tc[3]
-1.97533650e-16 * tc[4];
// species 24: H2NO
species[24] =
+5.56932500e+03 * invT
+1.08268860e+01
-5.67334600e+00 * tc[0]
-1.14941850e-03 * tc[1]
+2.95741000e-08 * tc[2]
+9.19568333e-12 * tc[3]
-9.29881000e-16 * tc[4];
// species 34: NCN
species[34] =
+5.17240300e+04 * invT
+1.70372910e+01
-6.65212100e+00 * tc[0]
-3.05401700e-04 * tc[1]
+2.31621167e-08 * tc[2]
-2.24629083e-13 * tc[3]
-8.34972000e-17 * tc[4];
// species 36: HNO2
species[36] =
-9.99927100e+03 * invT
+1.61524900e+01
-6.47963000e+00 * tc[0]
-9.97637000e-04 * tc[1]
+2.90064500e-08 * tc[2]
+8.07989333e-12 * tc[3]
-8.50740000e-16 * tc[4];
// species 42: HNOH
species[42] =
+7.85961500e+03 * invT
+1.58009240e+01
-6.39613400e+00 * tc[0]
-9.10533500e-04 * tc[1]
+3.11815333e-08 * tc[2]
+6.53706000e-12 * tc[3]
-7.22427500e-16 * tc[4];
// species 44: HONO2
species[44] =
-1.94224400e+04 * invT
+3.56563780e+01
-9.75614800e+00 * tc[0]
-9.50474000e-04 * tc[1]
+5.40003333e-08 * tc[2]
+3.31386583e-12 * tc[3]
-5.50167000e-16 * tc[4];
}

// species with midpoint at T=1671 kelvin
if (T < 1671) {
// species 22: HON
species[22] =
+2.95979751e+04 * invT
-3.62686757e+00
-3.33656431e+00 * tc[0]
-1.33841470e-03 * tc[1]
-9.36335505e-08 * tc[2]
+9.28018992e-11 * tc[3]
-1.42038219e-14 * tc[4];
} else {
// species 22: HON
species[22] =
+2.93319701e+04 * invT
-3.36158630e-01
-3.78577430e+00 * tc[0]
-1.43031364e-03 * tc[1]
+1.70706537e-07 * tc[2]
-1.37052616e-11 * tc[3]
+4.88971808e-16 * tc[4];
}

// species with midpoint at T=1695 kelvin
if (T < 1695) {
// species 51: H2NN
species[51] =
+3.36030690e+04 * invT
-7.06552517e+00
-2.88544262e+00 * tc[0]
-2.34747999e-03 * tc[1]
-1.16997205e-07 * tc[2]
+1.27799198e-10 * tc[3]
-1.89672929e-14 * tc[4];
} else {
// species 51: H2NN
species[51] =
+3.33678346e+04 * invT
-4.91284808e+00
-3.13531032e+00 * tc[0]
-2.84316284e-03 * tc[1]
+3.23305778e-07 * tc[2]
-2.51075417e-11 * tc[3]
+8.74890720e-16 * tc[4];
}
return;
}

// compute the e/(RT) at the given temperature
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void speciesInternalEnergy(amrex::Real * species, const amrex::Real *  tc)
{

// temperature
const amrex::Real T = tc[1];
const amrex::Real invT = 1 / T;

// species with midpoint at T=1000 kelvin
if (T < 1000) {
// species 0: OH*
species[0] =
+2.63726600e+00
+9.25455000e-05 * tc[1]
-5.58721533e-07 * tc[2]
+5.96800500e-10 * tc[3]
-1.68628840e-13 * tc[4]
+5.00213000e+04 * invT;
// species 1: HCN
species[1] =
+1.41778700e+00
+4.51592800e-03 * tc[1]
-3.69242333e-06 * tc[2]
+1.99503525e-09 * tc[3]
-4.62228200e-13 * tc[4]
+1.50104400e+04 * invT;
// species 2: HNCO
species[2] =
+2.49918800e+00
+3.13182900e-03 * tc[1]
+1.04192267e-06 * tc[2]
-2.15630000e-09 * tc[3]
+7.82674400e-13 * tc[4]
-1.52332800e+04 * invT;
// species 3: NO
species[3] =
+2.37654200e+00
+6.26531500e-04 * tc[1]
-1.10091700e-06 * tc[2]
+1.30445250e-09 * tc[3]
-4.89252600e-13 * tc[4]
+9.81796100e+03 * invT;
// species 4: N2O
species[4] =
+1.54305800e+00
+4.74609650e-03 * tc[1]
-3.26425833e-06 * tc[2]
+1.56596125e-09 * tc[3]
-3.80365200e-13 * tc[4]
+8.76510000e+03 * invT;
// species 5: CO
species[5] =
+2.57953350e+00
-3.05176845e-04 * tc[1]
+3.38938100e-07 * tc[2]
+2.26751465e-10 * tc[3]
-1.80884898e-13 * tc[4]
-1.43440860e+04 * invT;
// species 6: CO2
species[6] =
+1.35681300e+00
+4.49206495e-03 * tc[1]
-2.37402107e-06 * tc[2]
+6.14325200e-10 * tc[3]
-2.85770960e-14 * tc[4]
-4.83719710e+04 * invT;
// species 8: O2
species[8] =
+2.78245636e+00
-1.49836708e-03 * tc[1]
+3.28243400e-06 * tc[2]
-2.42032377e-09 * tc[3]
+6.48745674e-13 * tc[4]
-1.06394356e+03 * invT;
// species 9: H2
species[9] =
+1.34433112e+00
+3.99026037e-03 * tc[1]
-6.49271700e-06 * tc[2]
+5.03930235e-09 * tc[3]
-1.47522352e-12 * tc[4]
-9.17935173e+02 * invT;
// species 10: AR
species[10] =
+1.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
-7.45375000e+02 * invT;
// species 11: H
species[11] =
+1.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
+2.54736600e+04 * invT;
// species 12: O
species[12] =
+2.16826710e+00
-1.63965942e-03 * tc[1]
+2.21435465e-06 * tc[2]
-1.53201656e-09 * tc[3]
+4.22531942e-13 * tc[4]
+2.91222592e+04 * invT;
// species 13: OH
species[13] =
+2.99198424e+00
-1.20053327e-03 * tc[1]
+1.53888011e-06 * tc[2]
-9.69790765e-10 * tc[3]
+2.72639004e-13 * tc[4]
+3.36889836e+03 * invT;
// species 14: HO2
species[14] =
+3.30179807e+00
-2.37456049e-03 * tc[1]
+7.05276350e-06 * tc[2]
-6.06909785e-09 * tc[3]
+1.85845045e-12 * tc[4]
+2.64018485e+02 * invT;
// species 15: H2O
species[15] =
+3.19863520e+00
-1.01820085e-03 * tc[1]
+2.17344720e-06 * tc[2]
-1.37198172e-09 * tc[3]
+3.54393600e-13 * tc[4]
-3.02937260e+04 * invT;
// species 16: H2O2
species[16] =
+3.31515149e+00
-4.23695311e-04 * tc[1]
+5.88014410e-06 * tc[2]
-5.66907360e-09 * tc[3]
+1.81790032e-12 * tc[4]
-1.77067437e+04 * invT;
// species 17: HCO
species[17] =
+3.23754610e+00
-1.66037629e-03 * tc[1]
+4.66767547e-06 * tc[2]
-3.35599987e-09 * tc[3]
+8.74832416e-13 * tc[4]
+3.87241185e+03 * invT;
// species 18: CH2O
species[18] =
+3.79372312e+00
-4.95416661e-03 * tc[1]
+1.24406663e-05 * tc[2]
-9.48213092e-09 * tc[3]
+2.63545282e-12 * tc[4]
-1.43791953e+04 * invT;
// species 19: NO2
species[19] =
+1.67060000e+00
+3.91925050e-03 * tc[1]
-2.68795500e-06 * tc[2]
+1.54042875e-09 * tc[3]
-4.64030000e-13 * tc[4]
+2.89629100e+03 * invT;
// species 20: NH3
species[20] =
+1.20435200e+00
+5.05738000e-03 * tc[1]
-4.88421667e-06 * tc[2]
+3.61808750e-09 * tc[3]
-1.06570180e-12 * tc[4]
-6.52548800e+03 * invT;
// species 21: HNO
species[21] =
+1.78440300e+00
+3.30482300e-03 * tc[1]
-3.10007433e-06 * tc[2]
+2.35949500e-09 * tc[3]
-7.50629200e-13 * tc[4]
+1.09187800e+04 * invT;
// species 23: HONO
species[23] =
+1.29041300e+00
+7.04961000e-03 * tc[1]
-4.55957333e-06 * tc[2]
+1.87469500e-09 * tc[3]
-3.75381000e-13 * tc[4]
-1.04319500e+04 * invT;
// species 25: N
species[25] =
+1.50307100e+00
-1.09000900e-05 * tc[1]
+1.80684300e-08 * tc[2]
-1.41189000e-11 * tc[3]
+4.19980800e-15 * tc[4]
+5.60989000e+04 * invT;
// species 26: NNH
species[26] =
+2.50134400e+00
+1.02679350e-03 * tc[1]
+2.39013667e-07 * tc[2]
+1.23033700e-10 * tc[3]
-1.93423400e-13 * tc[4]
+2.83334700e+04 * invT;
// species 27: NH2
species[27] =
+2.43249300e+00
+1.64977000e-03 * tc[1]
-2.20453333e-06 * tc[2]
+2.14773675e-09 * tc[3]
-7.14409400e-13 * tc[4]
+2.17722800e+04 * invT;
// species 28: NH
species[28] =
+2.49290840e+00
+1.55895985e-04 * tc[1]
-4.96349467e-07 * tc[2]
+6.20411050e-10 * tc[3]
-2.07139340e-13 * tc[4]
+4.18942940e+04 * invT;
// species 29: CN
species[29] =
+2.61256066e+00
-4.76507688e-04 * tc[1]
+7.12523827e-07 * tc[2]
-7.62500270e-11 * tc[3]
-9.41037798e-14 * tc[4]
+5.15179601e+04 * invT;
// species 30: NCO
species[30] =
+3.51241900e+00
-1.64903850e-03 * tc[1]
+7.32106333e-06 * tc[2]
-6.66403500e-09 * tc[3]
+2.05383800e-12 * tc[4]
+1.39940800e+04 * invT;
// species 31: NCCN
species[31] =
+3.26546000e+00
+5.96128500e-03 * tc[1]
-4.47338000e-06 * tc[2]
+2.29807500e-09 * tc[3]
-5.55788000e-13 * tc[4]
+3.54789000e+04 * invT;
// species 32: HOCN
species[32] =
+3.71619800e+00
-6.12488000e-04 * tc[1]
+5.25635667e-06 * tc[2]
-4.61186000e-09 * tc[3]
+1.36813800e-12 * tc[4]
-3.02768700e+03 * invT;
// species 33: HCNO
species[33] =
+1.48256400e+00
+7.40678000e-03 * tc[1]
-4.56266000e-06 * tc[2]
+1.51172625e-09 * tc[3]
-1.75411820e-13 * tc[4]
+1.92815400e+04 * invT;
// species 35: HE
species[35] =
+1.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
-7.45375000e+02 * invT;
// species 37: N2O4
species[37] =
+2.62459300e+00
+1.23735400e-02 * tc[1]
-7.24291667e-06 * tc[2]
+2.48177600e-09 * tc[3]
-4.44563400e-13 * tc[4]
-9.12824100e+02 * invT;
// species 38: N2O3
species[38] =
+4.81083964e+00
+7.16654810e-03 * tc[1]
-6.54028657e-06 * tc[2]
+4.32651838e-09 * tc[3]
-1.29310791e-12 * tc[4]
+8.19184453e+03 * invT;
// species 39: CH
species[39] =
+2.48975830e+00
+1.62160800e-04 * tc[1]
-5.63325033e-07 * tc[2]
+7.90710500e-10 * tc[3]
-2.81236060e-13 * tc[4]
+7.06126460e+04 * invT;
// species 40: H2CN
species[40] =
+1.85166100e+00
+2.84761650e-03 * tc[1]
+3.57046667e-07 * tc[2]
-4.05653000e-10 * tc[3]
-4.70221600e-14 * tc[4]
+2.86378200e+04 * invT;
// species 41: HCNH
species[41] =
+1.75945600e+00
+3.05169350e-03 * tc[1]
+2.57104967e-07 * tc[2]
-5.15773500e-10 * tc[3]
+3.86384000e-14 * tc[4]
+3.21724700e+04 * invT;
// species 43: NO3
species[43] =
+2.21076000e-01
+9.39398500e-03 * tc[1]
-4.48107000e-06 * tc[2]
+3.18650250e-10 * tc[3]
+2.70812000e-13 * tc[4]
+7.47314400e+03 * invT;
// species 45: N2
species[45] =
+2.53100528e+00
-6.18304940e-05 * tc[1]
-1.67666478e-07 * tc[2]
+6.08826530e-10 * tc[3]
-2.81762470e-13 * tc[4]
-1.04697628e+03 * invT;
// species 46: CH4
species[46] =
+4.14911468e+00
-6.83110045e-03 * tc[1]
+1.63817974e-05 * tc[2]
-1.21061692e-08 * tc[3]
+3.33206882e-12 * tc[4]
-1.02465983e+04 * invT;
// species 47: C2H6
species[47] =
+3.29142572e+00
-2.75077450e-03 * tc[1]
+1.99812819e-05 * tc[2]
-1.77116617e-08 * tc[3]
+5.37371672e-12 * tc[4]
-1.15222056e+04 * invT;
// species 48: N2H4
species[48] =
-9.35573940e-01
+1.37486500e-02 * tc[1]
-9.66483667e-06 * tc[2]
+4.36310000e-09 * tc[3]
-8.84456400e-13 * tc[4]
+1.04519200e+04 * invT;
// species 49: N2H3
species[49] =
+2.17420400e+00
+2.35795350e-03 * tc[1]
+4.44955667e-06 * tc[2]
-4.79921250e-09 * tc[3]
+1.49751280e-12 * tc[4]
+1.72727000e+04 * invT;
// species 50: N2H2
species[50] =
+6.17999000e-01
+6.53156000e-03 * tc[1]
-5.71904000e-06 * tc[2]
+4.01402000e-09 * tc[3]
-1.21872780e-12 * tc[4]
+2.46752600e+04 * invT;
} else {
// species 0: OH*
species[0] =
+1.88273000e+00
+5.06987150e-04 * tc[1]
-7.58959000e-08 * tc[2]
+5.43670750e-12 * tc[3]
-1.02526100e-16 * tc[4]
+5.02650000e+04 * invT;
// species 1: HCN
species[1] =
+2.42645700e+00
+1.96209500e-03 * tc[1]
-5.33712667e-07 * tc[2]
+7.90491500e-11 * tc[3]
-4.86570000e-15 * tc[4]
+1.48555200e+04 * invT;
// species 2: HNCO
species[2] =
+4.32884400e+00
+2.10716850e-03 * tc[1]
-5.49131000e-07 * tc[2]
+7.54605500e-11 * tc[3]
-4.16896000e-15 * tc[4]
-1.58921500e+04 * invT;
// species 3: NO
species[3] =
+2.24543500e+00
+6.34569000e-04 * tc[1]
-1.67196333e-07 * tc[2]
+2.29232075e-11 * tc[3]
-1.25508380e-15 * tc[4]
+9.80084000e+03 * invT;
// species 4: N2O
species[4] =
+3.71897700e+00
+1.43685700e-03 * tc[1]
-3.99165333e-07 * tc[2]
+5.62638000e-11 * tc[3]
-3.15067400e-15 * tc[4]
+8.16581100e+03 * invT;
// species 5: CO
species[5] =
+2.04848590e+00
+6.75864050e-04 * tc[1]
-1.61931350e-07 * tc[2]
+1.97134110e-11 * tc[3]
-9.39614920e-16 * tc[4]
-1.42661170e+04 * invT;
// species 6: CO2
species[6] =
+3.63651110e+00
+1.37072845e-03 * tc[1]
-3.31965863e-07 * tc[2]
+4.00966650e-11 * tc[3]
-1.83239714e-15 * tc[4]
-4.90249040e+04 * invT;
// species 8: O2
species[8] =
+2.66096065e+00
+3.28182906e-04 * tc[1]
-4.70498757e-08 * tc[2]
+5.14494837e-12 * tc[3]
-2.59826872e-16 * tc[4]
-1.21597718e+03 * invT;
// species 9: H2
species[9] =
+1.93286575e+00
+4.13304013e-04 * tc[1]
-4.88007880e-08 * tc[2]
+3.85251035e-12 * tc[3]
-1.37760960e-16 * tc[4]
-8.13065581e+02 * invT;
// species 10: AR
species[10] =
+1.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
-7.45375000e+02 * invT;
// species 11: H
species[11] =
+1.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
+2.54736600e+04 * invT;
// species 12: O
species[12] =
+1.54363697e+00
-1.36581243e-05 * tc[1]
-1.39676507e-09 * tc[2]
+1.23870461e-12 * tc[3]
-9.59107388e-17 * tc[4]
+2.92260120e+04 * invT;
// species 13: OH
species[13] =
+1.83853033e+00
+5.53706445e-04 * tc[1]
-9.80000697e-08 * tc[2]
+1.05174682e-11 * tc[3]
-4.84579780e-16 * tc[4]
+3.69780808e+03 * invT;
// species 14: HO2
species[14] =
+3.17228741e+00
+9.40588135e-04 * tc[1]
-1.15425762e-07 * tc[2]
+4.86643873e-12 * tc[3]
+3.52513810e-17 * tc[4]
+3.10206839e+01 * invT;
// species 15: H2O
species[15] =
+1.67703890e+00
+1.48659080e-03 * tc[1]
-2.57922963e-07 * tc[2]
+2.36083785e-11 * tc[3]
-8.53799820e-16 * tc[4]
-2.98858940e+04 * invT;
// species 16: H2O2
species[16] =
+3.57977305e+00
+2.02663002e-03 * tc[1]
-4.32815767e-07 * tc[2]
+4.95528500e-11 * tc[3]
-2.27937584e-15 * tc[4]
-1.80071775e+04 * invT;
// species 17: HCO
species[17] =
+2.92001542e+00
+1.26139662e-03 * tc[1]
-2.23668055e-07 * tc[2]
+2.64039870e-11 * tc[3]
-1.48759652e-15 * tc[4]
+3.65342928e+03 * invT;
// species 18: CH2O
species[18] =
+2.16952665e+00
+3.09660280e-03 * tc[1]
-7.50187887e-07 * tc[2]
+9.14939150e-11 * tc[3]
-4.40298916e-15 * tc[4]
-1.45486831e+04 * invT;
// species 19: NO2
species[19] =
+3.68285900e+00
+1.23121450e-03 * tc[1]
-3.47419667e-07 * tc[2]
+4.94225500e-11 * tc[3]
-2.78343400e-15 * tc[4]
+2.26129200e+03 * invT;
// species 20: NH3
species[20] =
+1.46190400e+00
+3.02958300e-03 * tc[1]
-6.68325667e-07 * tc[2]
+7.84000750e-11 * tc[3]
-3.87663400e-15 * tc[4]
-6.49327000e+03 * invT;
// species 21: HNO
species[21] =
+2.61514400e+00
+1.60624300e-03 * tc[1]
-4.20112333e-07 * tc[2]
+5.66824500e-11 * tc[3]
-3.07247200e-15 * tc[4]
+1.06619100e+04 * invT;
// species 23: HONO
species[23] =
+4.48689300e+00
+2.10903250e-03 * tc[1]
-5.49714333e-07 * tc[2]
+7.42969250e-11 * tc[3]
-4.04229600e-15 * tc[4]
-1.12686500e+04 * invT;
// species 25: N
species[25] =
+1.45026800e+00
+5.33073000e-05 * tc[1]
-2.48844567e-08 * tc[2]
+4.69913000e-12 * tc[3]
-2.05196800e-16 * tc[4]
+5.61160400e+04 * invT;
// species 26: NNH
species[26] =
+3.41534200e+00
+8.07194000e-04 * tc[1]
-5.44298000e-08 * tc[2]
-2.13996150e-11 * tc[3]
+3.22958200e-15 * tc[4]
+2.78802900e+04 * invT;
// species 27: NH2
species[27] =
+1.96131100e+00
+1.46634950e-03 * tc[1]
-3.02120000e-07 * tc[2]
+4.04314250e-11 * tc[3]
-2.40840000e-15 * tc[4]
+2.19197700e+04 * invT;
// species 28: NH
species[28] =
+1.78369290e+00
+6.64921450e-04 * tc[1]
-1.41593490e-07 * tc[2]
+1.95871260e-11 * tc[3]
-1.10088940e-15 * tc[4]
+4.21345140e+04 * invT;
// species 29: CN
species[29] =
+2.39912871e+00
+3.73274135e-04 * tc[1]
-4.71645457e-08 * tc[2]
+4.66868152e-12 * tc[3]
-2.52064348e-16 * tc[4]
+5.14665281e+04 * invT;
// species 30: NCO
species[30] =
+4.15117400e+00
+1.26898300e-03 * tc[1]
-3.64936000e-07 * tc[2]
+5.28246750e-11 * tc[3]
-3.01123400e-15 * tc[4]
+1.34632900e+04 * invT;
// species 31: NCCN
species[31] =
+5.54800000e+00
+1.99235500e-03 * tc[1]
-5.44740000e-07 * tc[2]
+7.59650000e-11 * tc[3]
-4.22200000e-15 * tc[4]
+3.49072000e+04 * invT;
// species 32: HOCN
species[32] =
+3.80747500e+00
+2.09591850e-03 * tc[1]
-5.39974667e-07 * tc[2]
+7.35905500e-11 * tc[3]
-4.04283800e-15 * tc[4]
-3.34431100e+03 * invT;
// species 33: HCNO
species[33] =
+5.03562000e+00
+2.02966650e-03 * tc[1]
-5.29592333e-07 * tc[2]
+7.30120250e-11 * tc[3]
-4.04611400e-15 * tc[4]
+1.83398800e+04 * invT;
// species 35: HE
species[35] =
+1.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
-7.45375000e+02 * invT;
// species 37: N2O4
species[37] =
+9.48220000e+00
+2.98613600e-03 * tc[1]
-8.54681333e-07 * tc[2]
+1.22922125e-10 * tc[3]
-6.98193800e-15 * tc[4]
-2.84998900e+03 * invT;
// species 38: N2O3
species[38] =
+8.08583845e+00
+1.68878165e-03 * tc[1]
-4.38612967e-07 * tc[2]
+5.76905823e-11 * tc[3]
-2.94302534e-15 * tc[4]
+7.27160146e+03 * invT;
// species 39: CH
species[39] =
+1.52093690e+00
+8.82681950e-04 * tc[1]
-1.53825533e-07 * tc[2]
+1.48224187e-11 * tc[3]
-6.69490020e-16 * tc[4]
+7.09467690e+04 * invT;
// species 40: H2CN
species[40] =
+4.20970300e+00
+1.48464550e-03 * tc[1]
-9.51863000e-08 * tc[2]
-4.08887500e-11 * tc[3]
+6.08651800e-15 * tc[4]
+2.76771100e+04 * invT;
// species 41: HCNH
species[41] =
+3.92329300e+00
+1.66644850e-03 * tc[1]
-1.12363233e-07 * tc[2]
-4.75404750e-11 * tc[3]
+7.06365000e-15 * tc[4]
+3.13266900e+04 * invT;
// species 43: NO3
species[43] =
+6.12030700e+00
+1.62311400e-03 * tc[1]
-4.77204333e-07 * tc[2]
+6.99263250e-11 * tc[3]
-4.02601600e-15 * tc[4]
+5.86447900e+03 * invT;
// species 45: N2
species[45] =
+1.95257637e+00
+6.98450200e-04 * tc[1]
-1.64210534e-07 * tc[2]
+1.96502549e-11 * tc[3]
-9.21510408e-16 * tc[4]
-9.23948688e+02 * invT;
// species 46: CH4
species[46] =
+6.53262260e-01
+5.01315495e-03 * tc[1]
-1.10553746e-06 * tc[2]
+1.34120785e-10 * tc[3]
-6.29393516e-15 * tc[4]
-1.00095936e+04 * invT;
// species 47: C2H6
species[47] =
+3.04666411e+00
+7.67694010e-03 * tc[1]
-1.82346495e-06 * tc[2]
+2.19456636e-10 * tc[3]
-1.04633506e-14 * tc[4]
-1.24473499e+04 * invT;
// species 48: N2H4
species[48] =
+3.97731700e+00
+4.79775950e-03 * tc[1]
-1.18254633e-06 * tc[2]
+1.53107475e-10 * tc[3]
-8.05959000e-15 * tc[4]
+9.34121900e+03 * invT;
// species 49: N2H3
species[49] =
+3.44184600e+00
+3.60713550e-03 * tc[1]
-8.31894667e-07 * tc[2]
+9.80141250e-11 * tc[3]
-4.59790000e-15 * tc[4]
+1.66422100e+04 * invT;
// species 50: N2H2
species[50] =
+2.37118500e+00
+3.01998400e-03 * tc[1]
-7.67951333e-07 * tc[2]
+1.01569725e-10 * tc[3]
-5.42628800e-15 * tc[4]
+2.41817200e+04 * invT;
}

// species with midpoint at T=1500 kelvin
if (T < 1500) {
// species 7: HNC
species[7] =
+2.59237700e+00
+2.78067000e-03 * tc[1]
-1.97894100e-06 * tc[2]
+9.45582250e-10 * tc[3]
-1.87301840e-13 * tc[4]
+2.22826802e+04 * invT;
// species 24: H2NO
species[24] =
+1.53059000e+00
+4.29801750e-03 * tc[1]
-1.82367667e-06 * tc[2]
+5.69062250e-10 * tc[3]
-9.29614600e-14 * tc[4]
+6.86803000e+03 * invT;
// species 34: NCN
species[34] =
+2.10127000e+00
+4.99083700e-03 * tc[1]
-3.30690033e-06 * tc[2]
+1.18972975e-09 * tc[3]
-1.79372520e-13 * tc[4]
+5.28575700e+04 * invT;
// species 36: HNO2
species[36] =
+9.34838000e-01
+5.05018000e-03 * tc[1]
-1.65487200e-06 * tc[2]
+2.17528000e-10 * tc[3]
-4.64827000e-16 * tc[4]
-8.10548400e+03 * invT;
// species 42: HNOH
species[42] =
+1.12527400e+00
+5.33141000e-03 * tc[1]
-2.53419633e-06 * tc[2]
+7.70410500e-10 * tc[3]
-1.14529960e-13 * tc[4]
+9.55354400e+03 * invT;
// species 44: HONO2
species[44] =
-2.12233200e-01
+1.19116450e-02 * tc[1]
-7.35321333e-06 * tc[2]
+2.58512000e-09 * tc[3]
-3.94571400e-13 * tc[4]
-1.63044200e+04 * invT;
} else {
// species 7: HNC
species[7] =
+4.28346400e+00
+5.46238000e-04 * tc[1]
-3.90288333e-08 * tc[2]
-5.77168000e-12 * tc[3]
+7.90134600e-16 * tc[4]
+2.16142302e+04 * invT;
// species 24: H2NO
species[24] =
+4.67334600e+00
+1.14941850e-03 * tc[1]
-5.91482000e-08 * tc[2]
-2.75870500e-11 * tc[3]
+3.71952400e-15 * tc[4]
+5.56932500e+03 * invT;
// species 34: NCN
species[34] =
+5.65212100e+00
+3.05401700e-04 * tc[1]
-4.63242333e-08 * tc[2]
+6.73887250e-13 * tc[3]
+3.33988800e-16 * tc[4]
+5.17240300e+04 * invT;
// species 36: HNO2
species[36] =
+5.47963000e+00
+9.97637000e-04 * tc[1]
-5.80129000e-08 * tc[2]
-2.42396800e-11 * tc[3]
+3.40296000e-15 * tc[4]
-9.99927100e+03 * invT;
// species 42: HNOH
species[42] =
+5.39613400e+00
+9.10533500e-04 * tc[1]
-6.23630667e-08 * tc[2]
-1.96111800e-11 * tc[3]
+2.88971000e-15 * tc[4]
+7.85961500e+03 * invT;
// species 44: HONO2
species[44] =
+8.75614800e+00
+9.50474000e-04 * tc[1]
-1.08000667e-07 * tc[2]
-9.94159750e-12 * tc[3]
+2.20066800e-15 * tc[4]
-1.94224400e+04 * invT;
}

// species with midpoint at T=1671 kelvin
if (T < 1671) {
// species 22: HON
species[22] =
+2.33656431e+00
+1.33841470e-03 * tc[1]
+1.87267101e-07 * tc[2]
-2.78405697e-10 * tc[3]
+5.68152876e-14 * tc[4]
+2.95979751e+04 * invT;
} else {
// species 22: HON
species[22] =
+2.78577430e+00
+1.43031364e-03 * tc[1]
-3.41413073e-07 * tc[2]
+4.11157848e-11 * tc[3]
-1.95588723e-15 * tc[4]
+2.93319701e+04 * invT;
}

// species with midpoint at T=1695 kelvin
if (T < 1695) {
// species 51: H2NN
species[51] =
+1.88544262e+00
+2.34747999e-03 * tc[1]
+2.33994410e-07 * tc[2]
-3.83397595e-10 * tc[3]
+7.58691716e-14 * tc[4]
+3.36030690e+04 * invT;
} else {
// species 51: H2NN
species[51] =
+2.13531032e+00
+2.84316284e-03 * tc[1]
-6.46611557e-07 * tc[2]
+7.53226252e-11 * tc[3]
-3.49956288e-15 * tc[4]
+3.33678346e+04 * invT;
}
return;
}

// compute the h/(RT) at the given temperature (Eq 20)
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void speciesEnthalpy(amrex::Real * species, const amrex::Real *  tc)
{

// temperature
const amrex::Real T = tc[1];
const amrex::Real invT = 1 / T;

// species with midpoint at T=1000 kelvin
if (T < 1000) {
// species 0: OH*
species[0] =
+3.63726600e+00
+9.25455000e-05 * tc[1]
-5.58721533e-07 * tc[2]
+5.96800500e-10 * tc[3]
-1.68628840e-13 * tc[4]
+5.00213000e+04 * invT;
// species 1: HCN
species[1] =
+2.41778700e+00
+4.51592800e-03 * tc[1]
-3.69242333e-06 * tc[2]
+1.99503525e-09 * tc[3]
-4.62228200e-13 * tc[4]
+1.50104400e+04 * invT;
// species 2: HNCO
species[2] =
+3.49918800e+00
+3.13182900e-03 * tc[1]
+1.04192267e-06 * tc[2]
-2.15630000e-09 * tc[3]
+7.82674400e-13 * tc[4]
-1.52332800e+04 * invT;
// species 3: NO
species[3] =
+3.37654200e+00
+6.26531500e-04 * tc[1]
-1.10091700e-06 * tc[2]
+1.30445250e-09 * tc[3]
-4.89252600e-13 * tc[4]
+9.81796100e+03 * invT;
// species 4: N2O
species[4] =
+2.54305800e+00
+4.74609650e-03 * tc[1]
-3.26425833e-06 * tc[2]
+1.56596125e-09 * tc[3]
-3.80365200e-13 * tc[4]
+8.76510000e+03 * invT;
// species 5: CO
species[5] =
+3.57953350e+00
-3.05176845e-04 * tc[1]
+3.38938100e-07 * tc[2]
+2.26751465e-10 * tc[3]
-1.80884898e-13 * tc[4]
-1.43440860e+04 * invT;
// species 6: CO2
species[6] =
+2.35681300e+00
+4.49206495e-03 * tc[1]
-2.37402107e-06 * tc[2]
+6.14325200e-10 * tc[3]
-2.85770960e-14 * tc[4]
-4.83719710e+04 * invT;
// species 8: O2
species[8] =
+3.78245636e+00
-1.49836708e-03 * tc[1]
+3.28243400e-06 * tc[2]
-2.42032377e-09 * tc[3]
+6.48745674e-13 * tc[4]
-1.06394356e+03 * invT;
// species 9: H2
species[9] =
+2.34433112e+00
+3.99026037e-03 * tc[1]
-6.49271700e-06 * tc[2]
+5.03930235e-09 * tc[3]
-1.47522352e-12 * tc[4]
-9.17935173e+02 * invT;
// species 10: AR
species[10] =
+2.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
-7.45375000e+02 * invT;
// species 11: H
species[11] =
+2.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
+2.54736600e+04 * invT;
// species 12: O
species[12] =
+3.16826710e+00
-1.63965942e-03 * tc[1]
+2.21435465e-06 * tc[2]
-1.53201656e-09 * tc[3]
+4.22531942e-13 * tc[4]
+2.91222592e+04 * invT;
// species 13: OH
species[13] =
+3.99198424e+00
-1.20053327e-03 * tc[1]
+1.53888011e-06 * tc[2]
-9.69790765e-10 * tc[3]
+2.72639004e-13 * tc[4]
+3.36889836e+03 * invT;
// species 14: HO2
species[14] =
+4.30179807e+00
-2.37456049e-03 * tc[1]
+7.05276350e-06 * tc[2]
-6.06909785e-09 * tc[3]
+1.85845045e-12 * tc[4]
+2.64018485e+02 * invT;
// species 15: H2O
species[15] =
+4.19863520e+00
-1.01820085e-03 * tc[1]
+2.17344720e-06 * tc[2]
-1.37198172e-09 * tc[3]
+3.54393600e-13 * tc[4]
-3.02937260e+04 * invT;
// species 16: H2O2
species[16] =
+4.31515149e+00
-4.23695311e-04 * tc[1]
+5.88014410e-06 * tc[2]
-5.66907360e-09 * tc[3]
+1.81790032e-12 * tc[4]
-1.77067437e+04 * invT;
// species 17: HCO
species[17] =
+4.23754610e+00
-1.66037629e-03 * tc[1]
+4.66767547e-06 * tc[2]
-3.35599987e-09 * tc[3]
+8.74832416e-13 * tc[4]
+3.87241185e+03 * invT;
// species 18: CH2O
species[18] =
+4.79372312e+00
-4.95416661e-03 * tc[1]
+1.24406663e-05 * tc[2]
-9.48213092e-09 * tc[3]
+2.63545282e-12 * tc[4]
-1.43791953e+04 * invT;
// species 19: NO2
species[19] =
+2.67060000e+00
+3.91925050e-03 * tc[1]
-2.68795500e-06 * tc[2]
+1.54042875e-09 * tc[3]
-4.64030000e-13 * tc[4]
+2.89629100e+03 * invT;
// species 20: NH3
species[20] =
+2.20435200e+00
+5.05738000e-03 * tc[1]
-4.88421667e-06 * tc[2]
+3.61808750e-09 * tc[3]
-1.06570180e-12 * tc[4]
-6.52548800e+03 * invT;
// species 21: HNO
species[21] =
+2.78440300e+00
+3.30482300e-03 * tc[1]
-3.10007433e-06 * tc[2]
+2.35949500e-09 * tc[3]
-7.50629200e-13 * tc[4]
+1.09187800e+04 * invT;
// species 23: HONO
species[23] =
+2.29041300e+00
+7.04961000e-03 * tc[1]
-4.55957333e-06 * tc[2]
+1.87469500e-09 * tc[3]
-3.75381000e-13 * tc[4]
-1.04319500e+04 * invT;
// species 25: N
species[25] =
+2.50307100e+00
-1.09000900e-05 * tc[1]
+1.80684300e-08 * tc[2]
-1.41189000e-11 * tc[3]
+4.19980800e-15 * tc[4]
+5.60989000e+04 * invT;
// species 26: NNH
species[26] =
+3.50134400e+00
+1.02679350e-03 * tc[1]
+2.39013667e-07 * tc[2]
+1.23033700e-10 * tc[3]
-1.93423400e-13 * tc[4]
+2.83334700e+04 * invT;
// species 27: NH2
species[27] =
+3.43249300e+00
+1.64977000e-03 * tc[1]
-2.20453333e-06 * tc[2]
+2.14773675e-09 * tc[3]
-7.14409400e-13 * tc[4]
+2.17722800e+04 * invT;
// species 28: NH
species[28] =
+3.49290840e+00
+1.55895985e-04 * tc[1]
-4.96349467e-07 * tc[2]
+6.20411050e-10 * tc[3]
-2.07139340e-13 * tc[4]
+4.18942940e+04 * invT;
// species 29: CN
species[29] =
+3.61256066e+00
-4.76507688e-04 * tc[1]
+7.12523827e-07 * tc[2]
-7.62500270e-11 * tc[3]
-9.41037798e-14 * tc[4]
+5.15179601e+04 * invT;
// species 30: NCO
species[30] =
+4.51241900e+00
-1.64903850e-03 * tc[1]
+7.32106333e-06 * tc[2]
-6.66403500e-09 * tc[3]
+2.05383800e-12 * tc[4]
+1.39940800e+04 * invT;
// species 31: NCCN
species[31] =
+4.26546000e+00
+5.96128500e-03 * tc[1]
-4.47338000e-06 * tc[2]
+2.29807500e-09 * tc[3]
-5.55788000e-13 * tc[4]
+3.54789000e+04 * invT;
// species 32: HOCN
species[32] =
+4.71619800e+00
-6.12488000e-04 * tc[1]
+5.25635667e-06 * tc[2]
-4.61186000e-09 * tc[3]
+1.36813800e-12 * tc[4]
-3.02768700e+03 * invT;
// species 33: HCNO
species[33] =
+2.48256400e+00
+7.40678000e-03 * tc[1]
-4.56266000e-06 * tc[2]
+1.51172625e-09 * tc[3]
-1.75411820e-13 * tc[4]
+1.92815400e+04 * invT;
// species 35: HE
species[35] =
+2.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
-7.45375000e+02 * invT;
// species 37: N2O4
species[37] =
+3.62459300e+00
+1.23735400e-02 * tc[1]
-7.24291667e-06 * tc[2]
+2.48177600e-09 * tc[3]
-4.44563400e-13 * tc[4]
-9.12824100e+02 * invT;
// species 38: N2O3
species[38] =
+5.81083964e+00
+7.16654810e-03 * tc[1]
-6.54028657e-06 * tc[2]
+4.32651838e-09 * tc[3]
-1.29310791e-12 * tc[4]
+8.19184453e+03 * invT;
// species 39: CH
species[39] =
+3.48975830e+00
+1.62160800e-04 * tc[1]
-5.63325033e-07 * tc[2]
+7.90710500e-10 * tc[3]
-2.81236060e-13 * tc[4]
+7.06126460e+04 * invT;
// species 40: H2CN
species[40] =
+2.85166100e+00
+2.84761650e-03 * tc[1]
+3.57046667e-07 * tc[2]
-4.05653000e-10 * tc[3]
-4.70221600e-14 * tc[4]
+2.86378200e+04 * invT;
// species 41: HCNH
species[41] =
+2.75945600e+00
+3.05169350e-03 * tc[1]
+2.57104967e-07 * tc[2]
-5.15773500e-10 * tc[3]
+3.86384000e-14 * tc[4]
+3.21724700e+04 * invT;
// species 43: NO3
species[43] =
+1.22107600e+00
+9.39398500e-03 * tc[1]
-4.48107000e-06 * tc[2]
+3.18650250e-10 * tc[3]
+2.70812000e-13 * tc[4]
+7.47314400e+03 * invT;
// species 45: N2
species[45] =
+3.53100528e+00
-6.18304940e-05 * tc[1]
-1.67666478e-07 * tc[2]
+6.08826530e-10 * tc[3]
-2.81762470e-13 * tc[4]
-1.04697628e+03 * invT;
// species 46: CH4
species[46] =
+5.14911468e+00
-6.83110045e-03 * tc[1]
+1.63817974e-05 * tc[2]
-1.21061692e-08 * tc[3]
+3.33206882e-12 * tc[4]
-1.02465983e+04 * invT;
// species 47: C2H6
species[47] =
+4.29142572e+00
-2.75077450e-03 * tc[1]
+1.99812819e-05 * tc[2]
-1.77116617e-08 * tc[3]
+5.37371672e-12 * tc[4]
-1.15222056e+04 * invT;
// species 48: N2H4
species[48] =
+6.44260600e-02
+1.37486500e-02 * tc[1]
-9.66483667e-06 * tc[2]
+4.36310000e-09 * tc[3]
-8.84456400e-13 * tc[4]
+1.04519200e+04 * invT;
// species 49: N2H3
species[49] =
+3.17420400e+00
+2.35795350e-03 * tc[1]
+4.44955667e-06 * tc[2]
-4.79921250e-09 * tc[3]
+1.49751280e-12 * tc[4]
+1.72727000e+04 * invT;
// species 50: N2H2
species[50] =
+1.61799900e+00
+6.53156000e-03 * tc[1]
-5.71904000e-06 * tc[2]
+4.01402000e-09 * tc[3]
-1.21872780e-12 * tc[4]
+2.46752600e+04 * invT;
} else {
// species 0: OH*
species[0] =
+2.88273000e+00
+5.06987150e-04 * tc[1]
-7.58959000e-08 * tc[2]
+5.43670750e-12 * tc[3]
-1.02526100e-16 * tc[4]
+5.02650000e+04 * invT;
// species 1: HCN
species[1] =
+3.42645700e+00
+1.96209500e-03 * tc[1]
-5.33712667e-07 * tc[2]
+7.90491500e-11 * tc[3]
-4.86570000e-15 * tc[4]
+1.48555200e+04 * invT;
// species 2: HNCO
species[2] =
+5.32884400e+00
+2.10716850e-03 * tc[1]
-5.49131000e-07 * tc[2]
+7.54605500e-11 * tc[3]
-4.16896000e-15 * tc[4]
-1.58921500e+04 * invT;
// species 3: NO
species[3] =
+3.24543500e+00
+6.34569000e-04 * tc[1]
-1.67196333e-07 * tc[2]
+2.29232075e-11 * tc[3]
-1.25508380e-15 * tc[4]
+9.80084000e+03 * invT;
// species 4: N2O
species[4] =
+4.71897700e+00
+1.43685700e-03 * tc[1]
-3.99165333e-07 * tc[2]
+5.62638000e-11 * tc[3]
-3.15067400e-15 * tc[4]
+8.16581100e+03 * invT;
// species 5: CO
species[5] =
+3.04848590e+00
+6.75864050e-04 * tc[1]
-1.61931350e-07 * tc[2]
+1.97134110e-11 * tc[3]
-9.39614920e-16 * tc[4]
-1.42661170e+04 * invT;
// species 6: CO2
species[6] =
+4.63651110e+00
+1.37072845e-03 * tc[1]
-3.31965863e-07 * tc[2]
+4.00966650e-11 * tc[3]
-1.83239714e-15 * tc[4]
-4.90249040e+04 * invT;
// species 8: O2
species[8] =
+3.66096065e+00
+3.28182906e-04 * tc[1]
-4.70498757e-08 * tc[2]
+5.14494837e-12 * tc[3]
-2.59826872e-16 * tc[4]
-1.21597718e+03 * invT;
// species 9: H2
species[9] =
+2.93286575e+00
+4.13304013e-04 * tc[1]
-4.88007880e-08 * tc[2]
+3.85251035e-12 * tc[3]
-1.37760960e-16 * tc[4]
-8.13065581e+02 * invT;
// species 10: AR
species[10] =
+2.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
-7.45375000e+02 * invT;
// species 11: H
species[11] =
+2.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
+2.54736600e+04 * invT;
// species 12: O
species[12] =
+2.54363697e+00
-1.36581243e-05 * tc[1]
-1.39676507e-09 * tc[2]
+1.23870461e-12 * tc[3]
-9.59107388e-17 * tc[4]
+2.92260120e+04 * invT;
// species 13: OH
species[13] =
+2.83853033e+00
+5.53706445e-04 * tc[1]
-9.80000697e-08 * tc[2]
+1.05174682e-11 * tc[3]
-4.84579780e-16 * tc[4]
+3.69780808e+03 * invT;
// species 14: HO2
species[14] =
+4.17228741e+00
+9.40588135e-04 * tc[1]
-1.15425762e-07 * tc[2]
+4.86643873e-12 * tc[3]
+3.52513810e-17 * tc[4]
+3.10206839e+01 * invT;
// species 15: H2O
species[15] =
+2.67703890e+00
+1.48659080e-03 * tc[1]
-2.57922963e-07 * tc[2]
+2.36083785e-11 * tc[3]
-8.53799820e-16 * tc[4]
-2.98858940e+04 * invT;
// species 16: H2O2
species[16] =
+4.57977305e+00
+2.02663002e-03 * tc[1]
-4.32815767e-07 * tc[2]
+4.95528500e-11 * tc[3]
-2.27937584e-15 * tc[4]
-1.80071775e+04 * invT;
// species 17: HCO
species[17] =
+3.92001542e+00
+1.26139662e-03 * tc[1]
-2.23668055e-07 * tc[2]
+2.64039870e-11 * tc[3]
-1.48759652e-15 * tc[4]
+3.65342928e+03 * invT;
// species 18: CH2O
species[18] =
+3.16952665e+00
+3.09660280e-03 * tc[1]
-7.50187887e-07 * tc[2]
+9.14939150e-11 * tc[3]
-4.40298916e-15 * tc[4]
-1.45486831e+04 * invT;
// species 19: NO2
species[19] =
+4.68285900e+00
+1.23121450e-03 * tc[1]
-3.47419667e-07 * tc[2]
+4.94225500e-11 * tc[3]
-2.78343400e-15 * tc[4]
+2.26129200e+03 * invT;
// species 20: NH3
species[20] =
+2.46190400e+00
+3.02958300e-03 * tc[1]
-6.68325667e-07 * tc[2]
+7.84000750e-11 * tc[3]
-3.87663400e-15 * tc[4]
-6.49327000e+03 * invT;
// species 21: HNO
species[21] =
+3.61514400e+00
+1.60624300e-03 * tc[1]
-4.20112333e-07 * tc[2]
+5.66824500e-11 * tc[3]
-3.07247200e-15 * tc[4]
+1.06619100e+04 * invT;
// species 23: HONO
species[23] =
+5.48689300e+00
+2.10903250e-03 * tc[1]
-5.49714333e-07 * tc[2]
+7.42969250e-11 * tc[3]
-4.04229600e-15 * tc[4]
-1.12686500e+04 * invT;
// species 25: N
species[25] =
+2.45026800e+00
+5.33073000e-05 * tc[1]
-2.48844567e-08 * tc[2]
+4.69913000e-12 * tc[3]
-2.05196800e-16 * tc[4]
+5.61160400e+04 * invT;
// species 26: NNH
species[26] =
+4.41534200e+00
+8.07194000e-04 * tc[1]
-5.44298000e-08 * tc[2]
-2.13996150e-11 * tc[3]
+3.22958200e-15 * tc[4]
+2.78802900e+04 * invT;
// species 27: NH2
species[27] =
+2.96131100e+00
+1.46634950e-03 * tc[1]
-3.02120000e-07 * tc[2]
+4.04314250e-11 * tc[3]
-2.40840000e-15 * tc[4]
+2.19197700e+04 * invT;
// species 28: NH
species[28] =
+2.78369290e+00
+6.64921450e-04 * tc[1]
-1.41593490e-07 * tc[2]
+1.95871260e-11 * tc[3]
-1.10088940e-15 * tc[4]
+4.21345140e+04 * invT;
// species 29: CN
species[29] =
+3.39912871e+00
+3.73274135e-04 * tc[1]
-4.71645457e-08 * tc[2]
+4.66868152e-12 * tc[3]
-2.52064348e-16 * tc[4]
+5.14665281e+04 * invT;
// species 30: NCO
species[30] =
+5.15117400e+00
+1.26898300e-03 * tc[1]
-3.64936000e-07 * tc[2]
+5.28246750e-11 * tc[3]
-3.01123400e-15 * tc[4]
+1.34632900e+04 * invT;
// species 31: NCCN
species[31] =
+6.54800000e+00
+1.99235500e-03 * tc[1]
-5.44740000e-07 * tc[2]
+7.59650000e-11 * tc[3]
-4.22200000e-15 * tc[4]
+3.49072000e+04 * invT;
// species 32: HOCN
species[32] =
+4.80747500e+00
+2.09591850e-03 * tc[1]
-5.39974667e-07 * tc[2]
+7.35905500e-11 * tc[3]
-4.04283800e-15 * tc[4]
-3.34431100e+03 * invT;
// species 33: HCNO
species[33] =
+6.03562000e+00
+2.02966650e-03 * tc[1]
-5.29592333e-07 * tc[2]
+7.30120250e-11 * tc[3]
-4.04611400e-15 * tc[4]
+1.83398800e+04 * invT;
// species 35: HE
species[35] =
+2.50000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
-7.45375000e+02 * invT;
// species 37: N2O4
species[37] =
+1.04822000e+01
+2.98613600e-03 * tc[1]
-8.54681333e-07 * tc[2]
+1.22922125e-10 * tc[3]
-6.98193800e-15 * tc[4]
-2.84998900e+03 * invT;
// species 38: N2O3
species[38] =
+9.08583845e+00
+1.68878165e-03 * tc[1]
-4.38612967e-07 * tc[2]
+5.76905823e-11 * tc[3]
-2.94302534e-15 * tc[4]
+7.27160146e+03 * invT;
// species 39: CH
species[39] =
+2.52093690e+00
+8.82681950e-04 * tc[1]
-1.53825533e-07 * tc[2]
+1.48224187e-11 * tc[3]
-6.69490020e-16 * tc[4]
+7.09467690e+04 * invT;
// species 40: H2CN
species[40] =
+5.20970300e+00
+1.48464550e-03 * tc[1]
-9.51863000e-08 * tc[2]
-4.08887500e-11 * tc[3]
+6.08651800e-15 * tc[4]
+2.76771100e+04 * invT;
// species 41: HCNH
species[41] =
+4.92329300e+00
+1.66644850e-03 * tc[1]
-1.12363233e-07 * tc[2]
-4.75404750e-11 * tc[3]
+7.06365000e-15 * tc[4]
+3.13266900e+04 * invT;
// species 43: NO3
species[43] =
+7.12030700e+00
+1.62311400e-03 * tc[1]
-4.77204333e-07 * tc[2]
+6.99263250e-11 * tc[3]
-4.02601600e-15 * tc[4]
+5.86447900e+03 * invT;
// species 45: N2
species[45] =
+2.95257637e+00
+6.98450200e-04 * tc[1]
-1.64210534e-07 * tc[2]
+1.96502549e-11 * tc[3]
-9.21510408e-16 * tc[4]
-9.23948688e+02 * invT;
// species 46: CH4
species[46] =
+1.65326226e+00
+5.01315495e-03 * tc[1]
-1.10553746e-06 * tc[2]
+1.34120785e-10 * tc[3]
-6.29393516e-15 * tc[4]
-1.00095936e+04 * invT;
// species 47: C2H6
species[47] =
+4.04666411e+00
+7.67694010e-03 * tc[1]
-1.82346495e-06 * tc[2]
+2.19456636e-10 * tc[3]
-1.04633506e-14 * tc[4]
-1.24473499e+04 * invT;
// species 48: N2H4
species[48] =
+4.97731700e+00
+4.79775950e-03 * tc[1]
-1.18254633e-06 * tc[2]
+1.53107475e-10 * tc[3]
-8.05959000e-15 * tc[4]
+9.34121900e+03 * invT;
// species 49: N2H3
species[49] =
+4.44184600e+00
+3.60713550e-03 * tc[1]
-8.31894667e-07 * tc[2]
+9.80141250e-11 * tc[3]
-4.59790000e-15 * tc[4]
+1.66422100e+04 * invT;
// species 50: N2H2
species[50] =
+3.37118500e+00
+3.01998400e-03 * tc[1]
-7.67951333e-07 * tc[2]
+1.01569725e-10 * tc[3]
-5.42628800e-15 * tc[4]
+2.41817200e+04 * invT;
}

// species with midpoint at T=1500 kelvin
if (T < 1500) {
// species 7: HNC
species[7] =
+3.59237700e+00
+2.78067000e-03 * tc[1]
-1.97894100e-06 * tc[2]
+9.45582250e-10 * tc[3]
-1.87301840e-13 * tc[4]
+2.22826802e+04 * invT;
// species 24: H2NO
species[24] =
+2.53059000e+00
+4.29801750e-03 * tc[1]
-1.82367667e-06 * tc[2]
+5.69062250e-10 * tc[3]
-9.29614600e-14 * tc[4]
+6.86803000e+03 * invT;
// species 34: NCN
species[34] =
+3.10127000e+00
+4.99083700e-03 * tc[1]
-3.30690033e-06 * tc[2]
+1.18972975e-09 * tc[3]
-1.79372520e-13 * tc[4]
+5.28575700e+04 * invT;
// species 36: HNO2
species[36] =
+1.93483800e+00
+5.05018000e-03 * tc[1]
-1.65487200e-06 * tc[2]
+2.17528000e-10 * tc[3]
-4.64827000e-16 * tc[4]
-8.10548400e+03 * invT;
// species 42: HNOH
species[42] =
+2.12527400e+00
+5.33141000e-03 * tc[1]
-2.53419633e-06 * tc[2]
+7.70410500e-10 * tc[3]
-1.14529960e-13 * tc[4]
+9.55354400e+03 * invT;
// species 44: HONO2
species[44] =
+7.87766800e-01
+1.19116450e-02 * tc[1]
-7.35321333e-06 * tc[2]
+2.58512000e-09 * tc[3]
-3.94571400e-13 * tc[4]
-1.63044200e+04 * invT;
} else {
// species 7: HNC
species[7] =
+5.28346400e+00
+5.46238000e-04 * tc[1]
-3.90288333e-08 * tc[2]
-5.77168000e-12 * tc[3]
+7.90134600e-16 * tc[4]
+2.16142302e+04 * invT;
// species 24: H2NO
species[24] =
+5.67334600e+00
+1.14941850e-03 * tc[1]
-5.91482000e-08 * tc[2]
-2.75870500e-11 * tc[3]
+3.71952400e-15 * tc[4]
+5.56932500e+03 * invT;
// species 34: NCN
species[34] =
+6.65212100e+00
+3.05401700e-04 * tc[1]
-4.63242333e-08 * tc[2]
+6.73887250e-13 * tc[3]
+3.33988800e-16 * tc[4]
+5.17240300e+04 * invT;
// species 36: HNO2
species[36] =
+6.47963000e+00
+9.97637000e-04 * tc[1]
-5.80129000e-08 * tc[2]
-2.42396800e-11 * tc[3]
+3.40296000e-15 * tc[4]
-9.99927100e+03 * invT;
// species 42: HNOH
species[42] =
+6.39613400e+00
+9.10533500e-04 * tc[1]
-6.23630667e-08 * tc[2]
-1.96111800e-11 * tc[3]
+2.88971000e-15 * tc[4]
+7.85961500e+03 * invT;
// species 44: HONO2
species[44] =
+9.75614800e+00
+9.50474000e-04 * tc[1]
-1.08000667e-07 * tc[2]
-9.94159750e-12 * tc[3]
+2.20066800e-15 * tc[4]
-1.94224400e+04 * invT;
}

// species with midpoint at T=1671 kelvin
if (T < 1671) {
// species 22: HON
species[22] =
+3.33656431e+00
+1.33841470e-03 * tc[1]
+1.87267101e-07 * tc[2]
-2.78405697e-10 * tc[3]
+5.68152876e-14 * tc[4]
+2.95979751e+04 * invT;
} else {
// species 22: HON
species[22] =
+3.78577430e+00
+1.43031364e-03 * tc[1]
-3.41413073e-07 * tc[2]
+4.11157848e-11 * tc[3]
-1.95588723e-15 * tc[4]
+2.93319701e+04 * invT;
}

// species with midpoint at T=1695 kelvin
if (T < 1695) {
// species 51: H2NN
species[51] =
+2.88544262e+00
+2.34747999e-03 * tc[1]
+2.33994410e-07 * tc[2]
-3.83397595e-10 * tc[3]
+7.58691716e-14 * tc[4]
+3.36030690e+04 * invT;
} else {
// species 51: H2NN
species[51] =
+3.13531032e+00
+2.84316284e-03 * tc[1]
-6.46611557e-07 * tc[2]
+7.53226252e-11 * tc[3]
-3.49956288e-15 * tc[4]
+3.33678346e+04 * invT;
}
return;
}

// compute the S/R at the given temperature (Eq 21)
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void speciesEntropy(amrex::Real * species, const amrex::Real *  tc)
{

// temperature
const amrex::Real T = tc[1];

// species with midpoint at T=1000 kelvin
if (T < 1000) {
// species 0: OH*
species[0] =
+3.63726600e+00 * tc[0]
+1.85091000e-04 * tc[1]
-8.38082300e-07 * tc[2]
+7.95734000e-10 * tc[3]
-2.10786050e-13 * tc[4]
+1.35886050e+00 ;
// species 1: HCN
species[1] =
+2.41778700e+00 * tc[0]
+9.03185600e-03 * tc[1]
-5.53863500e-06 * tc[2]
+2.66004700e-09 * tc[3]
-5.77785250e-13 * tc[4]
+8.22289100e+00 ;
// species 2: HNCO
species[2] =
+3.49918800e+00 * tc[0]
+6.26365800e-03 * tc[1]
+1.56288400e-06 * tc[2]
-2.87506667e-09 * tc[3]
+9.78343000e-13 * tc[4]
+6.74499300e+00 ;
// species 3: NO
species[3] =
+3.37654200e+00 * tc[0]
+1.25306300e-03 * tc[1]
-1.65137550e-06 * tc[2]
+1.73927000e-09 * tc[3]
-6.11565750e-13 * tc[4]
+5.82959000e+00 ;
// species 4: N2O
species[4] =
+2.54305800e+00 * tc[0]
+9.49219300e-03 * tc[1]
-4.89638750e-06 * tc[2]
+2.08794833e-09 * tc[3]
-4.75456500e-13 * tc[4]
+9.51122200e+00 ;
// species 5: CO
species[5] =
+3.57953350e+00 * tc[0]
-6.10353690e-04 * tc[1]
+5.08407150e-07 * tc[2]
+3.02335287e-10 * tc[3]
-2.26106122e-13 * tc[4]
+3.50840930e+00 ;
// species 6: CO2
species[6] =
+2.35681300e+00 * tc[0]
+8.98412990e-03 * tc[1]
-3.56103160e-06 * tc[2]
+8.19100267e-10 * tc[3]
-3.57213700e-14 * tc[4]
+9.90090350e+00 ;
// species 8: O2
species[8] =
+3.78245636e+00 * tc[0]
-2.99673416e-03 * tc[1]
+4.92365101e-06 * tc[2]
-3.22709836e-09 * tc[3]
+8.10932092e-13 * tc[4]
+3.65767573e+00 ;
// species 9: H2
species[9] =
+2.34433112e+00 * tc[0]
+7.98052075e-03 * tc[1]
-9.73907550e-06 * tc[2]
+6.71906980e-09 * tc[3]
-1.84402940e-12 * tc[4]
+6.83010238e-01 ;
// species 10: AR
species[10] =
+2.50000000e+00 * tc[0]
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
+4.37967491e+00 ;
// species 11: H
species[11] =
+2.50000000e+00 * tc[0]
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
-4.46682850e-01 ;
// species 12: O
species[12] =
+3.16826710e+00 * tc[0]
-3.27931884e-03 * tc[1]
+3.32153198e-06 * tc[2]
-2.04268875e-09 * tc[3]
+5.28164927e-13 * tc[4]
+2.05193346e+00 ;
// species 13: OH
species[13] =
+3.99198424e+00 * tc[0]
-2.40106655e-03 * tc[1]
+2.30832017e-06 * tc[2]
-1.29305435e-09 * tc[3]
+3.40798755e-13 * tc[4]
-1.03998477e-01 ;
// species 14: HO2
species[14] =
+4.30179807e+00 * tc[0]
-4.74912097e-03 * tc[1]
+1.05791453e-05 * tc[2]
-8.09213047e-09 * tc[3]
+2.32306306e-12 * tc[4]
+3.71666220e+00 ;
// species 15: H2O
species[15] =
+4.19863520e+00 * tc[0]
-2.03640170e-03 * tc[1]
+3.26017080e-06 * tc[2]
-1.82930897e-09 * tc[3]
+4.42992000e-13 * tc[4]
-8.49009010e-01 ;
// species 16: H2O2
species[16] =
+4.31515149e+00 * tc[0]
-8.47390622e-04 * tc[1]
+8.82021615e-06 * tc[2]
-7.55876480e-09 * tc[3]
+2.27237539e-12 * tc[4]
+3.27373319e+00 ;
// species 17: HCO
species[17] =
+4.23754610e+00 * tc[0]
-3.32075257e-03 * tc[1]
+7.00151320e-06 * tc[2]
-4.47466650e-09 * tc[3]
+1.09354052e-12 * tc[4]
+3.30834869e+00 ;
// species 18: CH2O
species[18] =
+4.79372312e+00 * tc[0]
-9.90833322e-03 * tc[1]
+1.86609995e-05 * tc[2]
-1.26428412e-08 * tc[3]
+3.29431603e-12 * tc[4]
+6.02798058e-01 ;
// species 19: NO2
species[19] =
+2.67060000e+00 * tc[0]
+7.83850100e-03 * tc[1]
-4.03193250e-06 * tc[2]
+2.05390500e-09 * tc[3]
-5.80037500e-13 * tc[4]
+1.16120700e+01 ;
// species 20: NH3
species[20] =
+2.20435200e+00 * tc[0]
+1.01147600e-02 * tc[1]
-7.32632500e-06 * tc[2]
+4.82411667e-09 * tc[3]
-1.33212725e-12 * tc[4]
+8.12713800e+00 ;
// species 21: HNO
species[21] =
+2.78440300e+00 * tc[0]
+6.60964600e-03 * tc[1]
-4.65011150e-06 * tc[2]
+3.14599333e-09 * tc[3]
-9.38286500e-13 * tc[4]
+9.03562900e+00 ;
// species 23: HONO
species[23] =
+2.29041300e+00 * tc[0]
+1.40992200e-02 * tc[1]
-6.83936000e-06 * tc[2]
+2.49959333e-09 * tc[3]
-4.69226250e-13 * tc[4]
+1.32807700e+01 ;
// species 25: N
species[25] =
+2.50307100e+00 * tc[0]
-2.18001800e-05 * tc[1]
+2.71026450e-08 * tc[2]
-1.88252000e-11 * tc[3]
+5.24976000e-15 * tc[4]
+4.16756600e+00 ;
// species 26: NNH
species[26] =
+3.50134400e+00 * tc[0]
+2.05358700e-03 * tc[1]
+3.58520500e-07 * tc[2]
+1.64044933e-10 * tc[3]
-2.41779250e-13 * tc[4]
+6.39183700e+00 ;
// species 27: NH2
species[27] =
+3.43249300e+00 * tc[0]
+3.29954000e-03 * tc[1]
-3.30680000e-06 * tc[2]
+2.86364900e-09 * tc[3]
-8.93011750e-13 * tc[4]
+3.09011100e+00 ;
// species 28: NH
species[28] =
+3.49290840e+00 * tc[0]
+3.11791970e-04 * tc[1]
-7.44524200e-07 * tc[2]
+8.27214733e-10 * tc[3]
-2.58924175e-13 * tc[4]
+1.84832770e+00 ;
// species 29: CN
species[29] =
+3.61256066e+00 * tc[0]
-9.53015376e-04 * tc[1]
+1.06878574e-06 * tc[2]
-1.01666703e-10 * tc[3]
-1.17629725e-13 * tc[4]
+3.98240466e+00 ;
// species 30: NCO
species[30] =
+4.51241900e+00 * tc[0]
-3.29807700e-03 * tc[1]
+1.09815950e-05 * tc[2]
-8.88538000e-09 * tc[3]
+2.56729750e-12 * tc[4]
+1.73226900e+00 ;
// species 31: NCCN
species[31] =
+4.26546000e+00 * tc[0]
+1.19225700e-02 * tc[1]
-6.71007000e-06 * tc[2]
+3.06410000e-09 * tc[3]
-6.94735000e-13 * tc[4]
+1.71300000e+00 ;
// species 32: HOCN
species[32] =
+4.71619800e+00 * tc[0]
-1.22497600e-03 * tc[1]
+7.88453500e-06 * tc[2]
-6.14914667e-09 * tc[3]
+1.71017250e-12 * tc[4]
+2.73148600e+00 ;
// species 33: HCNO
species[33] =
+2.48256400e+00 * tc[0]
+1.48135600e-02 * tc[1]
-6.84399000e-06 * tc[2]
+2.01563500e-09 * tc[3]
-2.19264775e-13 * tc[4]
+9.03253300e+00 ;
// species 35: HE
species[35] =
+2.50000000e+00 * tc[0]
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
+9.28723974e-01 ;
// species 37: N2O4
species[37] =
+3.62459300e+00 * tc[0]
+2.47470800e-02 * tc[1]
-1.08643750e-05 * tc[2]
+3.30903467e-09 * tc[3]
-5.55704250e-13 * tc[4]
+9.45717400e+00 ;
// species 38: N2O3
species[38] =
+5.81083964e+00 * tc[0]
+1.43330962e-02 * tc[1]
-9.81042985e-06 * tc[2]
+5.76869117e-09 * tc[3]
-1.61638489e-12 * tc[4]
+1.20461321e+00 ;
// species 39: CH
species[39] =
+3.48975830e+00 * tc[0]
+3.24321600e-04 * tc[1]
-8.44987550e-07 * tc[2]
+1.05428067e-09 * tc[3]
-3.51545075e-13 * tc[4]
+2.08428410e+00 ;
// species 40: H2CN
species[40] =
+2.85166100e+00 * tc[0]
+5.69523300e-03 * tc[1]
+5.35570000e-07 * tc[2]
-5.40870667e-10 * tc[3]
-5.87777000e-14 * tc[4]
+8.99275100e+00 ;
// species 41: HCNH
species[41] =
+2.75945600e+00 * tc[0]
+6.10338700e-03 * tc[1]
+3.85657450e-07 * tc[2]
-6.87698000e-10 * tc[3]
+4.82980000e-14 * tc[4]
+1.05748900e+01 ;
// species 43: NO3
species[43] =
+1.22107600e+00 * tc[0]
+1.87879700e-02 * tc[1]
-6.72160500e-06 * tc[2]
+4.24867000e-10 * tc[3]
+3.38515000e-13 * tc[4]
+1.84020300e+01 ;
// species 45: N2
species[45] =
+3.53100528e+00 * tc[0]
-1.23660988e-04 * tc[1]
-2.51499717e-07 * tc[2]
+8.11768707e-10 * tc[3]
-3.52203088e-13 * tc[4]
+2.96747038e+00 ;
// species 46: CH4
species[46] =
+5.14911468e+00 * tc[0]
-1.36622009e-02 * tc[1]
+2.45726961e-05 * tc[2]
-1.61415589e-08 * tc[3]
+4.16508602e-12 * tc[4]
-4.63848842e+00 ;
// species 47: C2H6
species[47] =
+4.29142572e+00 * tc[0]
-5.50154901e-03 * tc[1]
+2.99719229e-05 * tc[2]
-2.36155490e-08 * tc[3]
+6.71714590e-12 * tc[4]
+2.66678994e+00 ;
// species 48: N2H4
species[48] =
+6.44260600e-02 * tc[0]
+2.74973000e-02 * tc[1]
-1.44972550e-05 * tc[2]
+5.81746667e-09 * tc[3]
-1.10557050e-12 * tc[4]
+2.12778900e+01 ;
// species 49: N2H3
species[49] =
+3.17420400e+00 * tc[0]
+4.71590700e-03 * tc[1]
+6.67433500e-06 * tc[2]
-6.39895000e-09 * tc[3]
+1.87189100e-12 * tc[4]
+7.55722400e+00 ;
// species 50: N2H2
species[50] =
+1.61799900e+00 * tc[0]
+1.30631200e-02 * tc[1]
-8.57856000e-06 * tc[2]
+5.35202667e-09 * tc[3]
-1.52340975e-12 * tc[4]
+1.37946700e+01 ;
} else {
// species 0: OH*
species[0] =
+2.88273000e+00 * tc[0]
+1.01397430e-03 * tc[1]
-1.13843850e-07 * tc[2]
+7.24894333e-12 * tc[3]
-1.28157625e-16 * tc[4]
+5.59571200e+00 ;
// species 1: HCN
species[1] =
+3.42645700e+00 * tc[0]
+3.92419000e-03 * tc[1]
-8.00569000e-07 * tc[2]
+1.05398867e-10 * tc[3]
-6.08212500e-15 * tc[4]
+3.60779500e+00 ;
// species 2: HNCO
species[2] =
+5.32884400e+00 * tc[0]
+4.21433700e-03 * tc[1]
-8.23696500e-07 * tc[2]
+1.00614067e-10 * tc[3]
-5.21120000e-15 * tc[4]
-3.45005000e+00 ;
// species 3: NO
species[3] =
+3.24543500e+00 * tc[0]
+1.26913800e-03 * tc[1]
-2.50794500e-07 * tc[2]
+3.05642767e-11 * tc[3]
-1.56885475e-15 * tc[4]
+6.41729400e+00 ;
// species 4: N2O
species[4] =
+4.71897700e+00 * tc[0]
+2.87371400e-03 * tc[1]
-5.98748000e-07 * tc[2]
+7.50184000e-11 * tc[3]
-3.93834250e-15 * tc[4]
-1.65725000e+00 ;
// species 5: CO
species[5] =
+3.04848590e+00 * tc[0]
+1.35172810e-03 * tc[1]
-2.42897025e-07 * tc[2]
+2.62845480e-11 * tc[3]
-1.17451865e-15 * tc[4]
+6.01709770e+00 ;
// species 6: CO2
species[6] =
+4.63651110e+00 * tc[0]
+2.74145690e-03 * tc[1]
-4.97948795e-07 * tc[2]
+5.34622200e-11 * tc[3]
-2.29049642e-15 * tc[4]
-1.93489550e+00 ;
// species 8: O2
species[8] =
+3.66096065e+00 * tc[0]
+6.56365811e-04 * tc[1]
-7.05748135e-08 * tc[2]
+6.85993117e-12 * tc[3]
-3.24783590e-16 * tc[4]
+3.41536279e+00 ;
// species 9: H2
species[9] =
+2.93286575e+00 * tc[0]
+8.26608026e-04 * tc[1]
-7.32011820e-08 * tc[2]
+5.13668047e-12 * tc[3]
-1.72201200e-16 * tc[4]
-1.02432865e+00 ;
// species 10: AR
species[10] =
+2.50000000e+00 * tc[0]
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
+4.37967491e+00 ;
// species 11: H
species[11] =
+2.50000000e+00 * tc[0]
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
-4.46682850e-01 ;
// species 12: O
species[12] =
+2.54363697e+00 * tc[0]
-2.73162486e-05 * tc[1]
-2.09514760e-09 * tc[2]
+1.65160615e-12 * tc[3]
-1.19888423e-16 * tc[4]
+4.92229457e+00 ;
// species 13: OH
species[13] =
+2.83853033e+00 * tc[0]
+1.10741289e-03 * tc[1]
-1.47000104e-07 * tc[2]
+1.40232910e-11 * tc[3]
-6.05724725e-16 * tc[4]
+5.84494652e+00 ;
// species 14: HO2
species[14] =
+4.17228741e+00 * tc[0]
+1.88117627e-03 * tc[1]
-1.73138643e-07 * tc[2]
+6.48858497e-12 * tc[3]
+4.40642262e-17 * tc[4]
+2.95767672e+00 ;
// species 15: H2O
species[15] =
+2.67703890e+00 * tc[0]
+2.97318160e-03 * tc[1]
-3.86884445e-07 * tc[2]
+3.14778380e-11 * tc[3]
-1.06724977e-15 * tc[4]
+6.88255000e+00 ;
// species 16: H2O2
species[16] =
+4.57977305e+00 * tc[0]
+4.05326003e-03 * tc[1]
-6.49223650e-07 * tc[2]
+6.60704667e-11 * tc[3]
-2.84921980e-15 * tc[4]
+6.64970694e-01 ;
// species 17: HCO
species[17] =
+3.92001542e+00 * tc[0]
+2.52279324e-03 * tc[1]
-3.35502082e-07 * tc[2]
+3.52053160e-11 * tc[3]
-1.85949565e-15 * tc[4]
+3.58077056e+00 ;
// species 18: CH2O
species[18] =
+3.16952665e+00 * tc[0]
+6.19320560e-03 * tc[1]
-1.12528183e-06 * tc[2]
+1.21991887e-10 * tc[3]
-5.50373645e-15 * tc[4]
+6.04207898e+00 ;
// species 19: NO2
species[19] =
+4.68285900e+00 * tc[0]
+2.46242900e-03 * tc[1]
-5.21129500e-07 * tc[2]
+6.58967333e-11 * tc[3]
-3.47929250e-15 * tc[4]
+9.88598500e-01 ;
// species 20: NH3
species[20] =
+2.46190400e+00 * tc[0]
+6.05916600e-03 * tc[1]
-1.00248850e-06 * tc[2]
+1.04533433e-10 * tc[3]
-4.84579250e-15 * tc[4]
+7.47209700e+00 ;
// species 21: HNO
species[21] =
+3.61514400e+00 * tc[0]
+3.21248600e-03 * tc[1]
-6.30168500e-07 * tc[2]
+7.55766000e-11 * tc[3]
-3.84059000e-15 * tc[4]
+4.81026400e+00 ;
// species 23: HONO
species[23] =
+5.48689300e+00 * tc[0]
+4.21806500e-03 * tc[1]
-8.24571500e-07 * tc[2]
+9.90625667e-11 * tc[3]
-5.05287000e-15 * tc[4]
-2.99700200e+00 ;
// species 25: N
species[25] =
+2.45026800e+00 * tc[0]
+1.06614600e-04 * tc[1]
-3.73266850e-08 * tc[2]
+6.26550667e-12 * tc[3]
-2.56496000e-16 * tc[4]
+4.44875800e+00 ;
// species 26: NNH
species[26] =
+4.41534200e+00 * tc[0]
+1.61438800e-03 * tc[1]
-8.16447000e-08 * tc[2]
-2.85328200e-11 * tc[3]
+4.03697750e-15 * tc[4]
+9.04288800e-01 ;
// species 27: NH2
species[27] =
+2.96131100e+00 * tc[0]
+2.93269900e-03 * tc[1]
-4.53180000e-07 * tc[2]
+5.39085667e-11 * tc[3]
-3.01050000e-15 * tc[4]
+5.77787800e+00 ;
// species 28: NH
species[28] =
+2.78369290e+00 * tc[0]
+1.32984290e-03 * tc[1]
-2.12390235e-07 * tc[2]
+2.61161680e-11 * tc[3]
-1.37611175e-15 * tc[4]
+5.74077980e+00 ;
// species 29: CN
species[29] =
+3.39912871e+00 * tc[0]
+7.46548271e-04 * tc[1]
-7.07468185e-08 * tc[2]
+6.22490870e-12 * tc[3]
-3.15080435e-16 * tc[4]
+4.67150296e+00 ;
// species 30: NCO
species[30] =
+5.15117400e+00 * tc[0]
+2.53796600e-03 * tc[1]
-5.47404000e-07 * tc[2]
+7.04329000e-11 * tc[3]
-3.76404250e-15 * tc[4]
-3.37189400e+00 ;
// species 31: NCCN
species[31] =
+6.54800000e+00 * tc[0]
+3.98471000e-03 * tc[1]
-8.17110000e-07 * tc[2]
+1.01286667e-10 * tc[3]
-5.27750000e-15 * tc[4]
-9.73600000e+00 ;
// species 32: HOCN
species[32] =
+4.80747500e+00 * tc[0]
+4.19183700e-03 * tc[1]
-8.09962000e-07 * tc[2]
+9.81207333e-11 * tc[3]
-5.05354750e-15 * tc[4]
+8.46607100e-01 ;
// species 33: HCNO
species[33] =
+6.03562000e+00 * tc[0]
+4.05933300e-03 * tc[1]
-7.94388500e-07 * tc[2]
+9.73493667e-11 * tc[3]
-5.05764250e-15 * tc[4]
-9.10240500e+00 ;
// species 35: HE
species[35] =
+2.50000000e+00 * tc[0]
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3]
+0.00000000e+00 * tc[4]
+9.28723974e-01 ;
// species 37: N2O4
species[37] =
+1.04822000e+01 * tc[0]
+5.97227200e-03 * tc[1]
-1.28202200e-06 * tc[2]
+1.63896167e-10 * tc[3]
-8.72742250e-15 * tc[4]
-2.61228900e+01 ;
// species 38: N2O3
species[38] =
+9.08583845e+00 * tc[0]
+3.37756330e-03 * tc[1]
-6.57919450e-07 * tc[2]
+7.69207763e-11 * tc[3]
-3.67878167e-15 * tc[4]
-1.55361904e+01 ;
// species 39: CH
species[39] =
+2.52093690e+00 * tc[0]
+1.76536390e-03 * tc[1]
-2.30738300e-07 * tc[2]
+1.97632250e-11 * tc[3]
-8.36862525e-16 * tc[4]
+7.40518290e+00 ;
// species 40: H2CN
species[40] =
+5.20970300e+00 * tc[0]
+2.96929100e-03 * tc[1]
-1.42779450e-07 * tc[2]
-5.45183333e-11 * tc[3]
+7.60814750e-15 * tc[4]
-4.44447800e+00 ;
// species 41: HCNH
species[41] =
+4.92329300e+00 * tc[0]
+3.33289700e-03 * tc[1]
-1.68544850e-07 * tc[2]
-6.33873000e-11 * tc[3]
+8.82956250e-15 * tc[4]
-1.63250900e+00 ;
// species 43: NO3
species[43] =
+7.12030700e+00 * tc[0]
+3.24622800e-03 * tc[1]
-7.15806500e-07 * tc[2]
+9.32351000e-11 * tc[3]
-5.03252000e-15 * tc[4]
-1.21373000e+01 ;
// species 45: N2
species[45] =
+2.95257637e+00 * tc[0]
+1.39690040e-03 * tc[1]
-2.46315802e-07 * tc[2]
+2.62003398e-11 * tc[3]
-1.15188801e-15 * tc[4]
+5.87188762e+00 ;
// species 46: CH4
species[46] =
+1.65326226e+00 * tc[0]
+1.00263099e-02 * tc[1]
-1.65830619e-06 * tc[2]
+1.78827713e-10 * tc[3]
-7.86741895e-15 * tc[4]
+9.90506283e+00 ;
// species 47: C2H6
species[47] =
+4.04666411e+00 * tc[0]
+1.53538802e-02 * tc[1]
-2.73519742e-06 * tc[2]
+2.92608848e-10 * tc[3]
-1.30791883e-14 * tc[4]
-9.68698313e-01 ;
// species 48: N2H4
species[48] =
+4.97731700e+00 * tc[0]
+9.59551900e-03 * tc[1]
-1.77381950e-06 * tc[2]
+2.04143300e-10 * tc[3]
-1.00744875e-14 * tc[4]
-2.96299000e+00 ;
// species 49: N2H3
species[49] =
+4.44184600e+00 * tc[0]
+7.21427100e-03 * tc[1]
-1.24784200e-06 * tc[2]
+1.30685500e-10 * tc[3]
-5.74737500e-15 * tc[4]
-4.27520500e-01 ;
// species 50: N2H2
species[50] =
+3.37118500e+00 * tc[0]
+6.03996800e-03 * tc[1]
-1.15192700e-06 * tc[2]
+1.35426300e-10 * tc[3]
-6.78286000e-15 * tc[4]
+4.98058500e+00 ;
}

// species with midpoint at T=1500 kelvin
if (T < 1500) {
// species 7: HNC
species[7] =
+3.59237700e+00 * tc[0]
+5.56134000e-03 * tc[1]
-2.96841150e-06 * tc[2]
+1.26077633e-09 * tc[3]
-2.34127300e-13 * tc[4]
+2.73216000e+00 ;
// species 24: H2NO
species[24] =
+2.53059000e+00 * tc[0]
+8.59603500e-03 * tc[1]
-2.73551500e-06 * tc[2]
+7.58749667e-10 * tc[3]
-1.16201825e-13 * tc[4]
+1.12665100e+01 ;
// species 34: NCN
species[34] =
+3.10127000e+00 * tc[0]
+9.98167400e-03 * tc[1]
-4.96035050e-06 * tc[2]
+1.58630633e-09 * tc[3]
-2.24215650e-13 * tc[4]
+7.31757900e+00 ;
// species 36: HNO2
species[36] =
+1.93483800e+00 * tc[0]
+1.01003600e-02 * tc[1]
-2.48230800e-06 * tc[2]
+2.90037333e-10 * tc[3]
-5.81033750e-16 * tc[4]
+1.47325000e+01 ;
// species 42: HNOH
species[42] =
+2.12527400e+00 * tc[0]
+1.06628200e-02 * tc[1]
-3.80129450e-06 * tc[2]
+1.02721400e-09 * tc[3]
-1.43162450e-13 * tc[4]
+1.30967200e+01 ;
// species 44: HONO2
species[44] =
+7.87766800e-01 * tc[0]
+2.38232900e-02 * tc[1]
-1.10298200e-05 * tc[2]
+3.44682667e-09 * tc[3]
-4.93214250e-13 * tc[4]
+2.10896400e+01 ;
} else {
// species 7: HNC
species[7] =
+5.28346400e+00 * tc[0]
+1.09247600e-03 * tc[1]
-5.85432500e-08 * tc[2]
-7.69557333e-12 * tc[3]
+9.87668250e-16 * tc[4]
-6.38821800e+00 ;
// species 24: H2NO
species[24] =
+5.67334600e+00 * tc[0]
+2.29883700e-03 * tc[1]
-8.87223000e-08 * tc[2]
-3.67827333e-11 * tc[3]
+4.64940500e-15 * tc[4]
-6.15354000e+00 ;
// species 34: NCN
species[34] =
+6.65212100e+00 * tc[0]
+6.10803400e-04 * tc[1]
-6.94863500e-08 * tc[2]
+8.98516333e-13 * tc[3]
+4.17486000e-16 * tc[4]
-1.13851700e+01 ;
// species 36: HNO2
species[36] =
+6.47963000e+00 * tc[0]
+1.99527400e-03 * tc[1]
-8.70193500e-08 * tc[2]
-3.23195733e-11 * tc[3]
+4.25370000e-15 * tc[4]
-1.06728600e+01 ;
// species 42: HNOH
species[42] =
+6.39613400e+00 * tc[0]
+1.82106700e-03 * tc[1]
-9.35446000e-08 * tc[2]
-2.61482400e-11 * tc[3]
+3.61213750e-15 * tc[4]
-1.04047900e+01 ;
// species 44: HONO2
species[44] =
+9.75614800e+00 * tc[0]
+1.90094800e-03 * tc[1]
-1.62001000e-07 * tc[2]
-1.32554633e-11 * tc[3]
+2.75083500e-15 * tc[4]
-2.69002300e+01 ;
}

// species with midpoint at T=1671 kelvin
if (T < 1671) {
// species 22: HON
species[22] =
+3.33656431e+00 * tc[0]
+2.67682939e-03 * tc[1]
+2.80900652e-07 * tc[2]
-3.71207597e-10 * tc[3]
+7.10191095e-14 * tc[4]
+5.96343188e+00 ;
} else {
// species 22: HON
species[22] =
+3.78577430e+00 * tc[0]
+2.86062728e-03 * tc[1]
-5.12119610e-07 * tc[2]
+5.48210463e-11 * tc[3]
-2.44485904e-15 * tc[4]
+3.12193293e+00 ;
}

// species with midpoint at T=1695 kelvin
if (T < 1695) {
// species 51: H2NN
species[51] =
+2.88544262e+00 * tc[0]
+4.69495999e-03 * tc[1]
+3.50991615e-07 * tc[2]
-5.11196793e-10 * tc[3]
+9.48364645e-14 * tc[4]
+8.95096779e+00 ;
} else {
// species 51: H2NN
species[51] =
+3.13531032e+00 * tc[0]
+5.68632569e-03 * tc[1]
-9.69917335e-07 * tc[2]
+1.00430167e-10 * tc[3]
-4.37445360e-15 * tc[4]
+7.04815840e+00 ;
}
return;
}

// Returns the mean specific heat at CP (Eq. 33)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKCPBL(amrex::Real *  T, amrex::Real *  x,  amrex::Real *  cpbl)
{
int id; // loop counter
amrex::Real result = 0; 
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
amrex::Real cpor[52]; //  temporary storage
cp_R(cpor, tc);

// perform dot product
for (id = 0; id < 52; ++id) {
result += x[id]*cpor[id];
}

*cpbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CP (Eq. 34)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKCPBS(amrex::Real *  T, amrex::Real *  y,  amrex::Real *  cpbs)
{
amrex::Real result = 0; 
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
amrex::Real cpor[52], tresult[52]; //  temporary storage
amrex::Real imw[52];

get_imw(imw);

cp_R(cpor, tc);

for (int i = 0; i < 52; i++)
{
tresult[i] = cpor[i]*y[i]*imw[i];

}
for (int i = 0; i < 52; i++)
{
result += tresult[i];
}

*cpbs = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 35)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKCVBL(amrex::Real *  T, amrex::Real *  x,  amrex::Real *  cvbl)
{
int id; // loop counter
amrex::Real result = 0; 
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
amrex::Real cvor[52]; //  temporary storage
cv_R(cvor, tc);

// perform dot product
for (id = 0; id < 52; ++id) {
result += x[id]*cvor[id];
}

*cvbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 36)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKCVBS(amrex::Real *  T, amrex::Real *  y,  amrex::Real *  cvbs)
{
amrex::Real result = 0; 
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
amrex::Real cvor[52]; //  temporary storage
amrex::Real imw[52];

get_imw(imw);

cv_R(cvor, tc);

// multiply by y/molecularweight
result += cvor[0]*y[0]*imw[0]; // OH*
result += cvor[1]*y[1]*imw[1]; // HCN
result += cvor[2]*y[2]*imw[2]; // HNCO
result += cvor[3]*y[3]*imw[3]; // NO
result += cvor[4]*y[4]*imw[4]; // N2O
result += cvor[5]*y[5]*imw[5]; // CO
result += cvor[6]*y[6]*imw[6]; // CO2
result += cvor[7]*y[7]*imw[7]; // HNC
result += cvor[8]*y[8]*imw[8]; // O2
result += cvor[9]*y[9]*imw[9]; // H2
result += cvor[10]*y[10]*imw[10]; // AR
result += cvor[11]*y[11]*imw[11]; // H
result += cvor[12]*y[12]*imw[12]; // O
result += cvor[13]*y[13]*imw[13]; // OH
result += cvor[14]*y[14]*imw[14]; // HO2
result += cvor[15]*y[15]*imw[15]; // H2O
result += cvor[16]*y[16]*imw[16]; // H2O2
result += cvor[17]*y[17]*imw[17]; // HCO
result += cvor[18]*y[18]*imw[18]; // CH2O
result += cvor[19]*y[19]*imw[19]; // NO2
result += cvor[20]*y[20]*imw[20]; // NH3
result += cvor[21]*y[21]*imw[21]; // HNO
result += cvor[22]*y[22]*imw[22]; // HON
result += cvor[23]*y[23]*imw[23]; // HONO
result += cvor[24]*y[24]*imw[24]; // H2NO
result += cvor[25]*y[25]*imw[25]; // N
result += cvor[26]*y[26]*imw[26]; // NNH
result += cvor[27]*y[27]*imw[27]; // NH2
result += cvor[28]*y[28]*imw[28]; // NH
result += cvor[29]*y[29]*imw[29]; // CN
result += cvor[30]*y[30]*imw[30]; // NCO
result += cvor[31]*y[31]*imw[31]; // NCCN
result += cvor[32]*y[32]*imw[32]; // HOCN
result += cvor[33]*y[33]*imw[33]; // HCNO
result += cvor[34]*y[34]*imw[34]; // NCN
result += cvor[35]*y[35]*imw[35]; // HE
result += cvor[36]*y[36]*imw[36]; // HNO2
result += cvor[37]*y[37]*imw[37]; // N2O4
result += cvor[38]*y[38]*imw[38]; // N2O3
result += cvor[39]*y[39]*imw[39]; // CH
result += cvor[40]*y[40]*imw[40]; // H2CN
result += cvor[41]*y[41]*imw[41]; // HCNH
result += cvor[42]*y[42]*imw[42]; // HNOH
result += cvor[43]*y[43]*imw[43]; // NO3
result += cvor[44]*y[44]*imw[44]; // HONO2
result += cvor[45]*y[45]*imw[45]; // N2
result += cvor[46]*y[46]*imw[46]; // CH4
result += cvor[47]*y[47]*imw[47]; // C2H6
result += cvor[48]*y[48]*imw[48]; // N2H4
result += cvor[49]*y[49]*imw[49]; // N2H3
result += cvor[50]*y[50]*imw[50]; // N2H2
result += cvor[51]*y[51]*imw[51]; // H2NN

*cvbs = result * 8.31446261815324e+07;
}

// Returns the mean enthalpy of the mixture in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKHBML(amrex::Real *  T, amrex::Real *  x,  amrex::Real *  hbml)
{
int id; // loop counter
amrex::Real result = 0; 
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
amrex::Real hml[52]; //  temporary storage
amrex::Real RT = 8.31446261815324e+07*tT; // R*T
speciesEnthalpy(hml, tc);

// perform dot product
for (id = 0; id < 52; ++id) {
result += x[id]*hml[id];
}

*hbml = result * RT;
}

// Returns mean enthalpy of mixture in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKHBMS(amrex::Real *  T, amrex::Real *  y,  amrex::Real *  hbms)
{
amrex::Real result = 0;
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
amrex::Real hml[52], tmp[52]; //  temporary storage
amrex::Real RT = 8.31446261815324e+07*tT; // R*T
amrex::Real imw[52];

get_imw(imw);

speciesEnthalpy(hml, tc);

int id;
for (id = 0; id < 52; ++id) {
tmp[id] = y[id]*hml[id]*imw[id];
}
for (id = 0; id < 52; ++id) {
result += tmp[id];
}

*hbms = result * RT;
}

// get mean internal energy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKUBML(amrex::Real *  T, amrex::Real *  x,  amrex::Real *  ubml)
{
int id; // loop counter
amrex::Real result = 0; 
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
amrex::Real uml[52]; //  temporary energy array
amrex::Real RT = 8.31446261815324e+07*tT; // R*T
speciesInternalEnergy(uml, tc);

// perform dot product
for (id = 0; id < 52; ++id) {
result += x[id]*uml[id];
}

*ubml = result * RT;
}

// get mean internal energy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKUBMS(amrex::Real *  T, amrex::Real *  y,  amrex::Real *  ubms)
{
amrex::Real result = 0;
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
amrex::Real ums[52]; //  temporary energy array
amrex::Real RT = 8.31446261815324e+07*tT; // R*T
amrex::Real imw[52];

get_imw(imw);

speciesInternalEnergy(ums, tc);

// perform dot product + scaling by wt
result += y[0]*ums[0]*imw[0]; // OH*
result += y[1]*ums[1]*imw[1]; // HCN
result += y[2]*ums[2]*imw[2]; // HNCO
result += y[3]*ums[3]*imw[3]; // NO
result += y[4]*ums[4]*imw[4]; // N2O
result += y[5]*ums[5]*imw[5]; // CO
result += y[6]*ums[6]*imw[6]; // CO2
result += y[7]*ums[7]*imw[7]; // HNC
result += y[8]*ums[8]*imw[8]; // O2
result += y[9]*ums[9]*imw[9]; // H2
result += y[10]*ums[10]*imw[10]; // AR
result += y[11]*ums[11]*imw[11]; // H
result += y[12]*ums[12]*imw[12]; // O
result += y[13]*ums[13]*imw[13]; // OH
result += y[14]*ums[14]*imw[14]; // HO2
result += y[15]*ums[15]*imw[15]; // H2O
result += y[16]*ums[16]*imw[16]; // H2O2
result += y[17]*ums[17]*imw[17]; // HCO
result += y[18]*ums[18]*imw[18]; // CH2O
result += y[19]*ums[19]*imw[19]; // NO2
result += y[20]*ums[20]*imw[20]; // NH3
result += y[21]*ums[21]*imw[21]; // HNO
result += y[22]*ums[22]*imw[22]; // HON
result += y[23]*ums[23]*imw[23]; // HONO
result += y[24]*ums[24]*imw[24]; // H2NO
result += y[25]*ums[25]*imw[25]; // N
result += y[26]*ums[26]*imw[26]; // NNH
result += y[27]*ums[27]*imw[27]; // NH2
result += y[28]*ums[28]*imw[28]; // NH
result += y[29]*ums[29]*imw[29]; // CN
result += y[30]*ums[30]*imw[30]; // NCO
result += y[31]*ums[31]*imw[31]; // NCCN
result += y[32]*ums[32]*imw[32]; // HOCN
result += y[33]*ums[33]*imw[33]; // HCNO
result += y[34]*ums[34]*imw[34]; // NCN
result += y[35]*ums[35]*imw[35]; // HE
result += y[36]*ums[36]*imw[36]; // HNO2
result += y[37]*ums[37]*imw[37]; // N2O4
result += y[38]*ums[38]*imw[38]; // N2O3
result += y[39]*ums[39]*imw[39]; // CH
result += y[40]*ums[40]*imw[40]; // H2CN
result += y[41]*ums[41]*imw[41]; // HCNH
result += y[42]*ums[42]*imw[42]; // HNOH
result += y[43]*ums[43]*imw[43]; // NO3
result += y[44]*ums[44]*imw[44]; // HONO2
result += y[45]*ums[45]*imw[45]; // N2
result += y[46]*ums[46]*imw[46]; // CH4
result += y[47]*ums[47]*imw[47]; // C2H6
result += y[48]*ums[48]*imw[48]; // N2H4
result += y[49]*ums[49]*imw[49]; // N2H3
result += y[50]*ums[50]*imw[50]; // N2H2
result += y[51]*ums[51]*imw[51]; // H2NN

*ubms = result * RT;
}

// get mixture entropy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKSBML(amrex::Real *  P, amrex::Real *  T, amrex::Real *  x,  amrex::Real *  sbml)
{
int id; // loop counter
amrex::Real result = 0; 
// Log of normalized pressure in cgs units dynes/cm^2 by Patm
amrex::Real logPratio = log ( *P / 1013250.0 ); 
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { log(tT), tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
amrex::Real sor[52]; //  temporary storage
speciesEntropy(sor, tc);

// Compute Eq 42
for (id = 0; id < 52; ++id) {
result += x[id]*(sor[id]-log((x[id]+1e-100))-logPratio);
}

*sbml = result * 8.31446261815324e+07;
}

// get mixture entropy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKSBMS(amrex::Real *  P, amrex::Real *  T, amrex::Real *  y,  amrex::Real *  sbms)
{
amrex::Real result = 0; 
// Log of normalized pressure in cgs units dynes/cm^2 by Patm
amrex::Real logPratio = log ( *P / 1013250.0 ); 
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { log(tT), tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
amrex::Real sor[52]; //  temporary storage
amrex::Real x[52]; //  need a ytx conversion
amrex::Real YOW = 0; // See Eq 4, 6 in CK Manual
amrex::Real imw[52];

get_imw(imw);

// Compute inverse of mean molecular wt first
YOW += y[0]*imw[0]; // OH*
YOW += y[1]*imw[1]; // HCN
YOW += y[2]*imw[2]; // HNCO
YOW += y[3]*imw[3]; // NO
YOW += y[4]*imw[4]; // N2O
YOW += y[5]*imw[5]; // CO
YOW += y[6]*imw[6]; // CO2
YOW += y[7]*imw[7]; // HNC
YOW += y[8]*imw[8]; // O2
YOW += y[9]*imw[9]; // H2
YOW += y[10]*imw[10]; // AR
YOW += y[11]*imw[11]; // H
YOW += y[12]*imw[12]; // O
YOW += y[13]*imw[13]; // OH
YOW += y[14]*imw[14]; // HO2
YOW += y[15]*imw[15]; // H2O
YOW += y[16]*imw[16]; // H2O2
YOW += y[17]*imw[17]; // HCO
YOW += y[18]*imw[18]; // CH2O
YOW += y[19]*imw[19]; // NO2
YOW += y[20]*imw[20]; // NH3
YOW += y[21]*imw[21]; // HNO
YOW += y[22]*imw[22]; // HON
YOW += y[23]*imw[23]; // HONO
YOW += y[24]*imw[24]; // H2NO
YOW += y[25]*imw[25]; // N
YOW += y[26]*imw[26]; // NNH
YOW += y[27]*imw[27]; // NH2
YOW += y[28]*imw[28]; // NH
YOW += y[29]*imw[29]; // CN
YOW += y[30]*imw[30]; // NCO
YOW += y[31]*imw[31]; // NCCN
YOW += y[32]*imw[32]; // HOCN
YOW += y[33]*imw[33]; // HCNO
YOW += y[34]*imw[34]; // NCN
YOW += y[35]*imw[35]; // HE
YOW += y[36]*imw[36]; // HNO2
YOW += y[37]*imw[37]; // N2O4
YOW += y[38]*imw[38]; // N2O3
YOW += y[39]*imw[39]; // CH
YOW += y[40]*imw[40]; // H2CN
YOW += y[41]*imw[41]; // HCNH
YOW += y[42]*imw[42]; // HNOH
YOW += y[43]*imw[43]; // NO3
YOW += y[44]*imw[44]; // HONO2
YOW += y[45]*imw[45]; // N2
YOW += y[46]*imw[46]; // CH4
YOW += y[47]*imw[47]; // C2H6
YOW += y[48]*imw[48]; // N2H4
YOW += y[49]*imw[49]; // N2H3
YOW += y[50]*imw[50]; // N2H2
YOW += y[51]*imw[51]; // H2NN
// Now compute y to x conversion
x[0] = y[0]/(17.007000*YOW); 
x[1] = y[1]/(27.026000*YOW); 
x[2] = y[2]/(43.025000*YOW); 
x[3] = y[3]/(30.006000*YOW); 
x[4] = y[4]/(44.013000*YOW); 
x[5] = y[5]/(28.010000*YOW); 
x[6] = y[6]/(44.009000*YOW); 
x[7] = y[7]/(27.026000*YOW); 
x[8] = y[8]/(31.998000*YOW); 
x[9] = y[9]/(2.016000*YOW); 
x[10] = y[10]/(39.950000*YOW); 
x[11] = y[11]/(1.008000*YOW); 
x[12] = y[12]/(15.999000*YOW); 
x[13] = y[13]/(17.007000*YOW); 
x[14] = y[14]/(33.006000*YOW); 
x[15] = y[15]/(18.015000*YOW); 
x[16] = y[16]/(34.014000*YOW); 
x[17] = y[17]/(29.018000*YOW); 
x[18] = y[18]/(30.026000*YOW); 
x[19] = y[19]/(46.005000*YOW); 
x[20] = y[20]/(17.031000*YOW); 
x[21] = y[21]/(31.014000*YOW); 
x[22] = y[22]/(31.014000*YOW); 
x[23] = y[23]/(47.013000*YOW); 
x[24] = y[24]/(32.022000*YOW); 
x[25] = y[25]/(14.007000*YOW); 
x[26] = y[26]/(29.022000*YOW); 
x[27] = y[27]/(16.023000*YOW); 
x[28] = y[28]/(15.015000*YOW); 
x[29] = y[29]/(26.018000*YOW); 
x[30] = y[30]/(42.017000*YOW); 
x[31] = y[31]/(52.036000*YOW); 
x[32] = y[32]/(43.025000*YOW); 
x[33] = y[33]/(43.025000*YOW); 
x[34] = y[34]/(40.025000*YOW); 
x[35] = y[35]/(4.002602*YOW); 
x[36] = y[36]/(47.013000*YOW); 
x[37] = y[37]/(92.010000*YOW); 
x[38] = y[38]/(76.011000*YOW); 
x[39] = y[39]/(13.019000*YOW); 
x[40] = y[40]/(28.034000*YOW); 
x[41] = y[41]/(28.034000*YOW); 
x[42] = y[42]/(32.022000*YOW); 
x[43] = y[43]/(62.004000*YOW); 
x[44] = y[44]/(63.012000*YOW); 
x[45] = y[45]/(28.014000*YOW); 
x[46] = y[46]/(16.043000*YOW); 
x[47] = y[47]/(30.070000*YOW); 
x[48] = y[48]/(32.046000*YOW); 
x[49] = y[49]/(31.038000*YOW); 
x[50] = y[50]/(30.030000*YOW); 
x[51] = y[51]/(30.030000*YOW); 
speciesEntropy(sor, tc);
// Perform computation in Eq 42 and 43
result += x[0]*(sor[0]-log((x[0]+1e-100))-logPratio);
result += x[1]*(sor[1]-log((x[1]+1e-100))-logPratio);
result += x[2]*(sor[2]-log((x[2]+1e-100))-logPratio);
result += x[3]*(sor[3]-log((x[3]+1e-100))-logPratio);
result += x[4]*(sor[4]-log((x[4]+1e-100))-logPratio);
result += x[5]*(sor[5]-log((x[5]+1e-100))-logPratio);
result += x[6]*(sor[6]-log((x[6]+1e-100))-logPratio);
result += x[7]*(sor[7]-log((x[7]+1e-100))-logPratio);
result += x[8]*(sor[8]-log((x[8]+1e-100))-logPratio);
result += x[9]*(sor[9]-log((x[9]+1e-100))-logPratio);
result += x[10]*(sor[10]-log((x[10]+1e-100))-logPratio);
result += x[11]*(sor[11]-log((x[11]+1e-100))-logPratio);
result += x[12]*(sor[12]-log((x[12]+1e-100))-logPratio);
result += x[13]*(sor[13]-log((x[13]+1e-100))-logPratio);
result += x[14]*(sor[14]-log((x[14]+1e-100))-logPratio);
result += x[15]*(sor[15]-log((x[15]+1e-100))-logPratio);
result += x[16]*(sor[16]-log((x[16]+1e-100))-logPratio);
result += x[17]*(sor[17]-log((x[17]+1e-100))-logPratio);
result += x[18]*(sor[18]-log((x[18]+1e-100))-logPratio);
result += x[19]*(sor[19]-log((x[19]+1e-100))-logPratio);
result += x[20]*(sor[20]-log((x[20]+1e-100))-logPratio);
result += x[21]*(sor[21]-log((x[21]+1e-100))-logPratio);
result += x[22]*(sor[22]-log((x[22]+1e-100))-logPratio);
result += x[23]*(sor[23]-log((x[23]+1e-100))-logPratio);
result += x[24]*(sor[24]-log((x[24]+1e-100))-logPratio);
result += x[25]*(sor[25]-log((x[25]+1e-100))-logPratio);
result += x[26]*(sor[26]-log((x[26]+1e-100))-logPratio);
result += x[27]*(sor[27]-log((x[27]+1e-100))-logPratio);
result += x[28]*(sor[28]-log((x[28]+1e-100))-logPratio);
result += x[29]*(sor[29]-log((x[29]+1e-100))-logPratio);
result += x[30]*(sor[30]-log((x[30]+1e-100))-logPratio);
result += x[31]*(sor[31]-log((x[31]+1e-100))-logPratio);
result += x[32]*(sor[32]-log((x[32]+1e-100))-logPratio);
result += x[33]*(sor[33]-log((x[33]+1e-100))-logPratio);
result += x[34]*(sor[34]-log((x[34]+1e-100))-logPratio);
result += x[35]*(sor[35]-log((x[35]+1e-100))-logPratio);
result += x[36]*(sor[36]-log((x[36]+1e-100))-logPratio);
result += x[37]*(sor[37]-log((x[37]+1e-100))-logPratio);
result += x[38]*(sor[38]-log((x[38]+1e-100))-logPratio);
result += x[39]*(sor[39]-log((x[39]+1e-100))-logPratio);
result += x[40]*(sor[40]-log((x[40]+1e-100))-logPratio);
result += x[41]*(sor[41]-log((x[41]+1e-100))-logPratio);
result += x[42]*(sor[42]-log((x[42]+1e-100))-logPratio);
result += x[43]*(sor[43]-log((x[43]+1e-100))-logPratio);
result += x[44]*(sor[44]-log((x[44]+1e-100))-logPratio);
result += x[45]*(sor[45]-log((x[45]+1e-100))-logPratio);
result += x[46]*(sor[46]-log((x[46]+1e-100))-logPratio);
result += x[47]*(sor[47]-log((x[47]+1e-100))-logPratio);
result += x[48]*(sor[48]-log((x[48]+1e-100))-logPratio);
result += x[49]*(sor[49]-log((x[49]+1e-100))-logPratio);
result += x[50]*(sor[50]-log((x[50]+1e-100))-logPratio);
result += x[51]*(sor[51]-log((x[51]+1e-100))-logPratio);
// Scale by R/W
*sbms = result * 8.31446261815324e+07 * YOW;
}

//  get temperature given internal energy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void GET_T_GIVEN_EY(amrex::Real *  e, amrex::Real *  y, amrex::Real *  t, int * ierr)
{
#ifdef CONVERGENCE
const int maxiter = 5000;
const amrex::Real tol  = 1.e-12;
#else
const int maxiter = 200;
const amrex::Real tol  = 1.e-6;
#endif
amrex::Real ein  = *e;
amrex::Real tmin = 90;// max lower bound for thermo def
amrex::Real tmax = 4000;// min upper bound for thermo def
amrex::Real e1,emin,emax,cv,t1,dt;
int i;//  loop counter
CKUBMS(&tmin, y, &emin);
CKUBMS(&tmax, y, &emax);
if (ein < emin) {
// Linear Extrapolation below tmin
CKCVBS(&tmin, y, &cv);
*t = tmin - (emin-ein)/cv;
*ierr = 1;
return;
}
if (ein > emax) {
// Linear Extrapolation above tmax
CKCVBS(&tmax, y, &cv);
*t = tmax - (emax-ein)/cv;
*ierr = 1;
return;
}
t1 = *t;
if (t1 < tmin || t1 > tmax) {
t1 = tmin + (tmax-tmin)/(emax-emin)*(ein-emin);
}
for (i = 0; i < maxiter; ++i) {
CKUBMS(&t1,y,&e1);
CKCVBS(&t1,y,&cv);
dt = (ein - e1) / cv;
if (dt > 100.) { dt = 100.; }
else if (dt < -100.) { dt = -100.; }
else if (fabs(dt) < tol) break;
else if (t1+dt == t1) break;
t1 += dt;
}
*t = t1;
*ierr = 0;
return;
}

//  get temperature given enthalpy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void GET_T_GIVEN_HY(amrex::Real *  h, amrex::Real *  y, amrex::Real *  t, int * ierr)
{
#ifdef CONVERGENCE
const int maxiter = 5000;
const amrex::Real tol  = 1.e-12;
#else
const int maxiter = 200;
const amrex::Real tol  = 1.e-6;
#endif
amrex::Real hin  = *h;
amrex::Real tmin = 90;// max lower bound for thermo def
amrex::Real tmax = 4000;// min upper bound for thermo def
amrex::Real h1,hmin,hmax,cp,t1,dt;
int i;//  loop counter
CKHBMS(&tmin, y, &hmin);
CKHBMS(&tmax, y, &hmax);
if (hin < hmin) {
// Linear Extrapolation below tmin
CKCPBS(&tmin, y, &cp);
*t = tmin - (hmin-hin)/cp;
*ierr = 1;
return;
}
if (hin > hmax) {
// Linear Extrapolation above tmax
CKCPBS(&tmax, y, &cp);
*t = tmax - (hmax-hin)/cp;
*ierr = 1;
return;
}
t1 = *t;
if (t1 < tmin || t1 > tmax) {
t1 = tmin + (tmax-tmin)/(hmax-hmin)*(hin-hmin);
}
for (i = 0; i < maxiter; ++i) {
CKHBMS(&t1,y,&h1);
CKCPBS(&t1,y,&cp);
dt = (hin - h1) / cp;
if (dt > 100.) { dt = 100.; }
else if (dt < -100.) { dt = -100.; }
else if (fabs(dt) < tol) break;
else if (t1+dt == t1) break;
t1 += dt;
}
*t = t1;
*ierr = 0;
return;
}

// Compute P = rhoRT/W(x)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKPX(amrex::Real *  rho, amrex::Real *  T, amrex::Real *  x, amrex::Real *  P)
{
amrex::Real XW = 0;//  To hold mean molecular wt
XW += x[0]*17.007000; // OH*
XW += x[1]*27.026000; // HCN
XW += x[2]*43.025000; // HNCO
XW += x[3]*30.006000; // NO
XW += x[4]*44.013000; // N2O
XW += x[5]*28.010000; // CO
XW += x[6]*44.009000; // CO2
XW += x[7]*27.026000; // HNC
XW += x[8]*31.998000; // O2
XW += x[9]*2.016000; // H2
XW += x[10]*39.950000; // AR
XW += x[11]*1.008000; // H
XW += x[12]*15.999000; // O
XW += x[13]*17.007000; // OH
XW += x[14]*33.006000; // HO2
XW += x[15]*18.015000; // H2O
XW += x[16]*34.014000; // H2O2
XW += x[17]*29.018000; // HCO
XW += x[18]*30.026000; // CH2O
XW += x[19]*46.005000; // NO2
XW += x[20]*17.031000; // NH3
XW += x[21]*31.014000; // HNO
XW += x[22]*31.014000; // HON
XW += x[23]*47.013000; // HONO
XW += x[24]*32.022000; // H2NO
XW += x[25]*14.007000; // N
XW += x[26]*29.022000; // NNH
XW += x[27]*16.023000; // NH2
XW += x[28]*15.015000; // NH
XW += x[29]*26.018000; // CN
XW += x[30]*42.017000; // NCO
XW += x[31]*52.036000; // NCCN
XW += x[32]*43.025000; // HOCN
XW += x[33]*43.025000; // HCNO
XW += x[34]*40.025000; // NCN
XW += x[35]*4.002602; // HE
XW += x[36]*47.013000; // HNO2
XW += x[37]*92.010000; // N2O4
XW += x[38]*76.011000; // N2O3
XW += x[39]*13.019000; // CH
XW += x[40]*28.034000; // H2CN
XW += x[41]*28.034000; // HCNH
XW += x[42]*32.022000; // HNOH
XW += x[43]*62.004000; // NO3
XW += x[44]*63.012000; // HONO2
XW += x[45]*28.014000; // N2
XW += x[46]*16.043000; // CH4
XW += x[47]*30.070000; // C2H6
XW += x[48]*32.046000; // N2H4
XW += x[49]*31.038000; // N2H3
XW += x[50]*30.030000; // N2H2
XW += x[51]*30.030000; // H2NN
*P = *rho * 8.31446261815324e+07 * (*T) / XW; // P = rho*R*T/W

return;
}

// Compute P = rhoRT/W(y)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKPY(amrex::Real *  rho, amrex::Real *  T, amrex::Real *  y,  amrex::Real *  P)
{
amrex::Real YOW = 0;//  for computing mean MW
amrex::Real imw[52];

get_imw(imw);

YOW += y[0]*imw[0]; // OH*
YOW += y[1]*imw[1]; // HCN
YOW += y[2]*imw[2]; // HNCO
YOW += y[3]*imw[3]; // NO
YOW += y[4]*imw[4]; // N2O
YOW += y[5]*imw[5]; // CO
YOW += y[6]*imw[6]; // CO2
YOW += y[7]*imw[7]; // HNC
YOW += y[8]*imw[8]; // O2
YOW += y[9]*imw[9]; // H2
YOW += y[10]*imw[10]; // AR
YOW += y[11]*imw[11]; // H
YOW += y[12]*imw[12]; // O
YOW += y[13]*imw[13]; // OH
YOW += y[14]*imw[14]; // HO2
YOW += y[15]*imw[15]; // H2O
YOW += y[16]*imw[16]; // H2O2
YOW += y[17]*imw[17]; // HCO
YOW += y[18]*imw[18]; // CH2O
YOW += y[19]*imw[19]; // NO2
YOW += y[20]*imw[20]; // NH3
YOW += y[21]*imw[21]; // HNO
YOW += y[22]*imw[22]; // HON
YOW += y[23]*imw[23]; // HONO
YOW += y[24]*imw[24]; // H2NO
YOW += y[25]*imw[25]; // N
YOW += y[26]*imw[26]; // NNH
YOW += y[27]*imw[27]; // NH2
YOW += y[28]*imw[28]; // NH
YOW += y[29]*imw[29]; // CN
YOW += y[30]*imw[30]; // NCO
YOW += y[31]*imw[31]; // NCCN
YOW += y[32]*imw[32]; // HOCN
YOW += y[33]*imw[33]; // HCNO
YOW += y[34]*imw[34]; // NCN
YOW += y[35]*imw[35]; // HE
YOW += y[36]*imw[36]; // HNO2
YOW += y[37]*imw[37]; // N2O4
YOW += y[38]*imw[38]; // N2O3
YOW += y[39]*imw[39]; // CH
YOW += y[40]*imw[40]; // H2CN
YOW += y[41]*imw[41]; // HCNH
YOW += y[42]*imw[42]; // HNOH
YOW += y[43]*imw[43]; // NO3
YOW += y[44]*imw[44]; // HONO2
YOW += y[45]*imw[45]; // N2
YOW += y[46]*imw[46]; // CH4
YOW += y[47]*imw[47]; // C2H6
YOW += y[48]*imw[48]; // N2H4
YOW += y[49]*imw[49]; // N2H3
YOW += y[50]*imw[50]; // N2H2
YOW += y[51]*imw[51]; // H2NN
*P = *rho * 8.31446261815324e+07 * (*T) * YOW; // P = rho*R*T/W

return;
}

// Compute P = rhoRT/W(c)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKPC(amrex::Real *  rho, amrex::Real *  T, amrex::Real *  c,  amrex::Real *  P)
{
int id; // loop counter
// See Eq 5 in CK Manual
amrex::Real W = 0;
amrex::Real sumC = 0;
W += c[0]*17.007000; // OH*
W += c[1]*27.026000; // HCN
W += c[2]*43.025000; // HNCO
W += c[3]*30.006000; // NO
W += c[4]*44.013000; // N2O
W += c[5]*28.010000; // CO
W += c[6]*44.009000; // CO2
W += c[7]*27.026000; // HNC
W += c[8]*31.998000; // O2
W += c[9]*2.016000; // H2
W += c[10]*39.950000; // AR
W += c[11]*1.008000; // H
W += c[12]*15.999000; // O
W += c[13]*17.007000; // OH
W += c[14]*33.006000; // HO2
W += c[15]*18.015000; // H2O
W += c[16]*34.014000; // H2O2
W += c[17]*29.018000; // HCO
W += c[18]*30.026000; // CH2O
W += c[19]*46.005000; // NO2
W += c[20]*17.031000; // NH3
W += c[21]*31.014000; // HNO
W += c[22]*31.014000; // HON
W += c[23]*47.013000; // HONO
W += c[24]*32.022000; // H2NO
W += c[25]*14.007000; // N
W += c[26]*29.022000; // NNH
W += c[27]*16.023000; // NH2
W += c[28]*15.015000; // NH
W += c[29]*26.018000; // CN
W += c[30]*42.017000; // NCO
W += c[31]*52.036000; // NCCN
W += c[32]*43.025000; // HOCN
W += c[33]*43.025000; // HCNO
W += c[34]*40.025000; // NCN
W += c[35]*4.002602; // HE
W += c[36]*47.013000; // HNO2
W += c[37]*92.010000; // N2O4
W += c[38]*76.011000; // N2O3
W += c[39]*13.019000; // CH
W += c[40]*28.034000; // H2CN
W += c[41]*28.034000; // HCNH
W += c[42]*32.022000; // HNOH
W += c[43]*62.004000; // NO3
W += c[44]*63.012000; // HONO2
W += c[45]*28.014000; // N2
W += c[46]*16.043000; // CH4
W += c[47]*30.070000; // C2H6
W += c[48]*32.046000; // N2H4
W += c[49]*31.038000; // N2H3
W += c[50]*30.030000; // N2H2
W += c[51]*30.030000; // H2NN

for (id = 0; id < 52; ++id) {
sumC += c[id];
}
*P = *rho * 8.31446261815324e+07 * (*T) * sumC / W; // P = rho*R*T/W

return;
}

// Compute rho = PW(x)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKRHOX(amrex::Real *  P, amrex::Real *  T, amrex::Real *  x,  amrex::Real *  rho)
{
amrex::Real XW = 0;//  To hold mean molecular wt
XW += x[0]*17.007000; // OH*
XW += x[1]*27.026000; // HCN
XW += x[2]*43.025000; // HNCO
XW += x[3]*30.006000; // NO
XW += x[4]*44.013000; // N2O
XW += x[5]*28.010000; // CO
XW += x[6]*44.009000; // CO2
XW += x[7]*27.026000; // HNC
XW += x[8]*31.998000; // O2
XW += x[9]*2.016000; // H2
XW += x[10]*39.950000; // AR
XW += x[11]*1.008000; // H
XW += x[12]*15.999000; // O
XW += x[13]*17.007000; // OH
XW += x[14]*33.006000; // HO2
XW += x[15]*18.015000; // H2O
XW += x[16]*34.014000; // H2O2
XW += x[17]*29.018000; // HCO
XW += x[18]*30.026000; // CH2O
XW += x[19]*46.005000; // NO2
XW += x[20]*17.031000; // NH3
XW += x[21]*31.014000; // HNO
XW += x[22]*31.014000; // HON
XW += x[23]*47.013000; // HONO
XW += x[24]*32.022000; // H2NO
XW += x[25]*14.007000; // N
XW += x[26]*29.022000; // NNH
XW += x[27]*16.023000; // NH2
XW += x[28]*15.015000; // NH
XW += x[29]*26.018000; // CN
XW += x[30]*42.017000; // NCO
XW += x[31]*52.036000; // NCCN
XW += x[32]*43.025000; // HOCN
XW += x[33]*43.025000; // HCNO
XW += x[34]*40.025000; // NCN
XW += x[35]*4.002602; // HE
XW += x[36]*47.013000; // HNO2
XW += x[37]*92.010000; // N2O4
XW += x[38]*76.011000; // N2O3
XW += x[39]*13.019000; // CH
XW += x[40]*28.034000; // H2CN
XW += x[41]*28.034000; // HCNH
XW += x[42]*32.022000; // HNOH
XW += x[43]*62.004000; // NO3
XW += x[44]*63.012000; // HONO2
XW += x[45]*28.014000; // N2
XW += x[46]*16.043000; // CH4
XW += x[47]*30.070000; // C2H6
XW += x[48]*32.046000; // N2H4
XW += x[49]*31.038000; // N2H3
XW += x[50]*30.030000; // N2H2
XW += x[51]*30.030000; // H2NN
*rho = *P * XW / (8.31446261815324e+07 * (*T)); // rho = P*W/(R*T)

return;
}

// Compute rho = P*W(y)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKRHOY(amrex::Real *  P, amrex::Real *  T, amrex::Real *  y,  amrex::Real *  rho)
{
amrex::Real YOW = 0;
amrex::Real tmp[52];
amrex::Real imw[52];

get_imw(imw);

for (int i = 0; i < 52; i++)
{
tmp[i] = y[i]*imw[i];
}
for (int i = 0; i < 52; i++)
{
YOW += tmp[i];
}

*rho = *P / (8.31446261815324e+07 * (*T) * YOW);// rho = P*W/(R*T)
return;
}

// Compute rho = P*W(c)/(R*T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKRHOC(amrex::Real *  P, amrex::Real *  T, amrex::Real *  c,  amrex::Real *  rho)
{
int id; // loop counter
// See Eq 5 in CK Manual
amrex::Real W = 0;
amrex::Real sumC = 0;
W += c[0]*17.007000; // OH*
W += c[1]*27.026000; // HCN
W += c[2]*43.025000; // HNCO
W += c[3]*30.006000; // NO
W += c[4]*44.013000; // N2O
W += c[5]*28.010000; // CO
W += c[6]*44.009000; // CO2
W += c[7]*27.026000; // HNC
W += c[8]*31.998000; // O2
W += c[9]*2.016000; // H2
W += c[10]*39.950000; // AR
W += c[11]*1.008000; // H
W += c[12]*15.999000; // O
W += c[13]*17.007000; // OH
W += c[14]*33.006000; // HO2
W += c[15]*18.015000; // H2O
W += c[16]*34.014000; // H2O2
W += c[17]*29.018000; // HCO
W += c[18]*30.026000; // CH2O
W += c[19]*46.005000; // NO2
W += c[20]*17.031000; // NH3
W += c[21]*31.014000; // HNO
W += c[22]*31.014000; // HON
W += c[23]*47.013000; // HONO
W += c[24]*32.022000; // H2NO
W += c[25]*14.007000; // N
W += c[26]*29.022000; // NNH
W += c[27]*16.023000; // NH2
W += c[28]*15.015000; // NH
W += c[29]*26.018000; // CN
W += c[30]*42.017000; // NCO
W += c[31]*52.036000; // NCCN
W += c[32]*43.025000; // HOCN
W += c[33]*43.025000; // HCNO
W += c[34]*40.025000; // NCN
W += c[35]*4.002602; // HE
W += c[36]*47.013000; // HNO2
W += c[37]*92.010000; // N2O4
W += c[38]*76.011000; // N2O3
W += c[39]*13.019000; // CH
W += c[40]*28.034000; // H2CN
W += c[41]*28.034000; // HCNH
W += c[42]*32.022000; // HNOH
W += c[43]*62.004000; // NO3
W += c[44]*63.012000; // HONO2
W += c[45]*28.014000; // N2
W += c[46]*16.043000; // CH4
W += c[47]*30.070000; // C2H6
W += c[48]*32.046000; // N2H4
W += c[49]*31.038000; // N2H3
W += c[50]*30.030000; // N2H2
W += c[51]*30.030000; // H2NN

for (id = 0; id < 52; ++id) {
sumC += c[id];
}
*rho = *P * W / (sumC * (*T) * 8.31446261815324e+07); // rho = PW/(R*T)

return;
}

// get molecular weight for all species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKWT( amrex::Real *  wt)
{
get_mw(wt);
}

// given y[species]: mass fractions
// s mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKMMWY(amrex::Real *  y,  amrex::Real *  wtm)
{
amrex::Real YOW = 0;
amrex::Real tmp[52];
amrex::Real imw[52];

get_imw(imw);

for (int i = 0; i < 52; i++)
{
tmp[i] = y[i]*imw[i];
}
for (int i = 0; i < 52; i++)
{
YOW += tmp[i];
}

*wtm = 1.0 / YOW;
return;
}

// given x[species]: mole fractions
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKMMWX(amrex::Real *  x,  amrex::Real *  wtm)
{
amrex::Real XW = 0;//  see Eq 4 in CK Manual
XW += x[0]*17.007000; // OH*
XW += x[1]*27.026000; // HCN
XW += x[2]*43.025000; // HNCO
XW += x[3]*30.006000; // NO
XW += x[4]*44.013000; // N2O
XW += x[5]*28.010000; // CO
XW += x[6]*44.009000; // CO2
XW += x[7]*27.026000; // HNC
XW += x[8]*31.998000; // O2
XW += x[9]*2.016000; // H2
XW += x[10]*39.950000; // AR
XW += x[11]*1.008000; // H
XW += x[12]*15.999000; // O
XW += x[13]*17.007000; // OH
XW += x[14]*33.006000; // HO2
XW += x[15]*18.015000; // H2O
XW += x[16]*34.014000; // H2O2
XW += x[17]*29.018000; // HCO
XW += x[18]*30.026000; // CH2O
XW += x[19]*46.005000; // NO2
XW += x[20]*17.031000; // NH3
XW += x[21]*31.014000; // HNO
XW += x[22]*31.014000; // HON
XW += x[23]*47.013000; // HONO
XW += x[24]*32.022000; // H2NO
XW += x[25]*14.007000; // N
XW += x[26]*29.022000; // NNH
XW += x[27]*16.023000; // NH2
XW += x[28]*15.015000; // NH
XW += x[29]*26.018000; // CN
XW += x[30]*42.017000; // NCO
XW += x[31]*52.036000; // NCCN
XW += x[32]*43.025000; // HOCN
XW += x[33]*43.025000; // HCNO
XW += x[34]*40.025000; // NCN
XW += x[35]*4.002602; // HE
XW += x[36]*47.013000; // HNO2
XW += x[37]*92.010000; // N2O4
XW += x[38]*76.011000; // N2O3
XW += x[39]*13.019000; // CH
XW += x[40]*28.034000; // H2CN
XW += x[41]*28.034000; // HCNH
XW += x[42]*32.022000; // HNOH
XW += x[43]*62.004000; // NO3
XW += x[44]*63.012000; // HONO2
XW += x[45]*28.014000; // N2
XW += x[46]*16.043000; // CH4
XW += x[47]*30.070000; // C2H6
XW += x[48]*32.046000; // N2H4
XW += x[49]*31.038000; // N2H3
XW += x[50]*30.030000; // N2H2
XW += x[51]*30.030000; // H2NN
*wtm = XW;

return;
}

// given c[species]: molar concentration
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKMMWC(amrex::Real *  c,  amrex::Real *  wtm)
{
int id; // loop counter
// See Eq 5 in CK Manual
amrex::Real W = 0;
amrex::Real sumC = 0;
W += c[0]*17.007000; // OH*
W += c[1]*27.026000; // HCN
W += c[2]*43.025000; // HNCO
W += c[3]*30.006000; // NO
W += c[4]*44.013000; // N2O
W += c[5]*28.010000; // CO
W += c[6]*44.009000; // CO2
W += c[7]*27.026000; // HNC
W += c[8]*31.998000; // O2
W += c[9]*2.016000; // H2
W += c[10]*39.950000; // AR
W += c[11]*1.008000; // H
W += c[12]*15.999000; // O
W += c[13]*17.007000; // OH
W += c[14]*33.006000; // HO2
W += c[15]*18.015000; // H2O
W += c[16]*34.014000; // H2O2
W += c[17]*29.018000; // HCO
W += c[18]*30.026000; // CH2O
W += c[19]*46.005000; // NO2
W += c[20]*17.031000; // NH3
W += c[21]*31.014000; // HNO
W += c[22]*31.014000; // HON
W += c[23]*47.013000; // HONO
W += c[24]*32.022000; // H2NO
W += c[25]*14.007000; // N
W += c[26]*29.022000; // NNH
W += c[27]*16.023000; // NH2
W += c[28]*15.015000; // NH
W += c[29]*26.018000; // CN
W += c[30]*42.017000; // NCO
W += c[31]*52.036000; // NCCN
W += c[32]*43.025000; // HOCN
W += c[33]*43.025000; // HCNO
W += c[34]*40.025000; // NCN
W += c[35]*4.002602; // HE
W += c[36]*47.013000; // HNO2
W += c[37]*92.010000; // N2O4
W += c[38]*76.011000; // N2O3
W += c[39]*13.019000; // CH
W += c[40]*28.034000; // H2CN
W += c[41]*28.034000; // HCNH
W += c[42]*32.022000; // HNOH
W += c[43]*62.004000; // NO3
W += c[44]*63.012000; // HONO2
W += c[45]*28.014000; // N2
W += c[46]*16.043000; // CH4
W += c[47]*30.070000; // C2H6
W += c[48]*32.046000; // N2H4
W += c[49]*31.038000; // N2H3
W += c[50]*30.030000; // N2H2
W += c[51]*30.030000; // H2NN

for (id = 0; id < 52; ++id) {
sumC += c[id];
}
//  CK provides no guard against divison by zero
*wtm = W/sumC;

return;
}

// get Cp/R as a function of T 
// for all species (Eq 19)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKCPOR(amrex::Real *  T, amrex::Real *  cpor)
{
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
cp_R(cpor, tc);
}

// get H/RT as a function of T 
// for all species (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKHORT(amrex::Real *  T, amrex::Real *  hort)
{
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
speciesEnthalpy(hort, tc);
}

// get S/R as a function of T 
// for all species (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKSOR(amrex::Real *  T, amrex::Real *  sor)
{
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { log(tT), tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
speciesEntropy(sor, tc);
}

// convert y[species] (mass fracs) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKYTX(amrex::Real *  y,  amrex::Real *  x)
{
amrex::Real YOW = 0;
amrex::Real tmp[52];
amrex::Real imw[52];

get_imw(imw);

for (int i = 0; i < 52; i++)
{
tmp[i] = y[i]*imw[i];
}
for (int i = 0; i < 52; i++)
{
YOW += tmp[i];
}

amrex::Real YOWINV = 1.0/YOW;

for (int i = 0; i < 52; i++)
{
x[i] = y[i]*imw[i]*YOWINV;
}
return;
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKYTCP(amrex::Real *  P, amrex::Real *  T, amrex::Real *  y,  amrex::Real *  c)
{
amrex::Real YOW = 0;
amrex::Real PWORT;
amrex::Real imw[52];

get_imw(imw);

// Compute inverse of mean molecular wt first
for (int i = 0; i < 52; i++)
{
c[i] = y[i]*imw[i];
}
for (int i = 0; i < 52; i++)
{
YOW += c[i];
}

// PW/RT (see Eq. 7)
PWORT = (*P)/(YOW * 8.31446261815324e+07 * (*T)); 
// Now compute conversion

for (int i = 0; i < 52; i++)
{
c[i] = PWORT * y[i] * imw[i];
}
return;
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKYTCR(amrex::Real *  rho, amrex::Real * /*T*/, amrex::Real * y,  amrex::Real * c)
{
amrex::Real imw[52];

get_imw(imw);

for (int i = 0; i < 52; i++)
{
c[i] = (*rho)  * y[i] * imw[i];
}
}

// convert x[species] (mole fracs) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKXTY(amrex::Real *  x,  amrex::Real *  y)
{
amrex::Real XW = 0; // See Eq 4, 9 in CK Manual
// Compute mean molecular wt first
XW += x[0]*17.007000; // OH*
XW += x[1]*27.026000; // HCN
XW += x[2]*43.025000; // HNCO
XW += x[3]*30.006000; // NO
XW += x[4]*44.013000; // N2O
XW += x[5]*28.010000; // CO
XW += x[6]*44.009000; // CO2
XW += x[7]*27.026000; // HNC
XW += x[8]*31.998000; // O2
XW += x[9]*2.016000; // H2
XW += x[10]*39.950000; // AR
XW += x[11]*1.008000; // H
XW += x[12]*15.999000; // O
XW += x[13]*17.007000; // OH
XW += x[14]*33.006000; // HO2
XW += x[15]*18.015000; // H2O
XW += x[16]*34.014000; // H2O2
XW += x[17]*29.018000; // HCO
XW += x[18]*30.026000; // CH2O
XW += x[19]*46.005000; // NO2
XW += x[20]*17.031000; // NH3
XW += x[21]*31.014000; // HNO
XW += x[22]*31.014000; // HON
XW += x[23]*47.013000; // HONO
XW += x[24]*32.022000; // H2NO
XW += x[25]*14.007000; // N
XW += x[26]*29.022000; // NNH
XW += x[27]*16.023000; // NH2
XW += x[28]*15.015000; // NH
XW += x[29]*26.018000; // CN
XW += x[30]*42.017000; // NCO
XW += x[31]*52.036000; // NCCN
XW += x[32]*43.025000; // HOCN
XW += x[33]*43.025000; // HCNO
XW += x[34]*40.025000; // NCN
XW += x[35]*4.002602; // HE
XW += x[36]*47.013000; // HNO2
XW += x[37]*92.010000; // N2O4
XW += x[38]*76.011000; // N2O3
XW += x[39]*13.019000; // CH
XW += x[40]*28.034000; // H2CN
XW += x[41]*28.034000; // HCNH
XW += x[42]*32.022000; // HNOH
XW += x[43]*62.004000; // NO3
XW += x[44]*63.012000; // HONO2
XW += x[45]*28.014000; // N2
XW += x[46]*16.043000; // CH4
XW += x[47]*30.070000; // C2H6
XW += x[48]*32.046000; // N2H4
XW += x[49]*31.038000; // N2H3
XW += x[50]*30.030000; // N2H2
XW += x[51]*30.030000; // H2NN
// Now compute conversion
amrex::Real XWinv = 1.0/XW;
y[0] = x[0]*17.007000*XWinv; 
y[1] = x[1]*27.026000*XWinv; 
y[2] = x[2]*43.025000*XWinv; 
y[3] = x[3]*30.006000*XWinv; 
y[4] = x[4]*44.013000*XWinv; 
y[5] = x[5]*28.010000*XWinv; 
y[6] = x[6]*44.009000*XWinv; 
y[7] = x[7]*27.026000*XWinv; 
y[8] = x[8]*31.998000*XWinv; 
y[9] = x[9]*2.016000*XWinv; 
y[10] = x[10]*39.950000*XWinv; 
y[11] = x[11]*1.008000*XWinv; 
y[12] = x[12]*15.999000*XWinv; 
y[13] = x[13]*17.007000*XWinv; 
y[14] = x[14]*33.006000*XWinv; 
y[15] = x[15]*18.015000*XWinv; 
y[16] = x[16]*34.014000*XWinv; 
y[17] = x[17]*29.018000*XWinv; 
y[18] = x[18]*30.026000*XWinv; 
y[19] = x[19]*46.005000*XWinv; 
y[20] = x[20]*17.031000*XWinv; 
y[21] = x[21]*31.014000*XWinv; 
y[22] = x[22]*31.014000*XWinv; 
y[23] = x[23]*47.013000*XWinv; 
y[24] = x[24]*32.022000*XWinv; 
y[25] = x[25]*14.007000*XWinv; 
y[26] = x[26]*29.022000*XWinv; 
y[27] = x[27]*16.023000*XWinv; 
y[28] = x[28]*15.015000*XWinv; 
y[29] = x[29]*26.018000*XWinv; 
y[30] = x[30]*42.017000*XWinv; 
y[31] = x[31]*52.036000*XWinv; 
y[32] = x[32]*43.025000*XWinv; 
y[33] = x[33]*43.025000*XWinv; 
y[34] = x[34]*40.025000*XWinv; 
y[35] = x[35]*4.002602*XWinv; 
y[36] = x[36]*47.013000*XWinv; 
y[37] = x[37]*92.010000*XWinv; 
y[38] = x[38]*76.011000*XWinv; 
y[39] = x[39]*13.019000*XWinv; 
y[40] = x[40]*28.034000*XWinv; 
y[41] = x[41]*28.034000*XWinv; 
y[42] = x[42]*32.022000*XWinv; 
y[43] = x[43]*62.004000*XWinv; 
y[44] = x[44]*63.012000*XWinv; 
y[45] = x[45]*28.014000*XWinv; 
y[46] = x[46]*16.043000*XWinv; 
y[47] = x[47]*30.070000*XWinv; 
y[48] = x[48]*32.046000*XWinv; 
y[49] = x[49]*31.038000*XWinv; 
y[50] = x[50]*30.030000*XWinv; 
y[51] = x[51]*30.030000*XWinv; 

return;
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKXTCP(amrex::Real *  P, amrex::Real *  T, amrex::Real *  x,  amrex::Real *  c)
{
int id; // loop counter
amrex::Real PORT = (*P)/(8.31446261815324e+07 * (*T)); // P/RT

// Compute conversion, see Eq 10
for (id = 0; id < 52; ++id) {
c[id] = x[id]*PORT;
}

return;
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKXTCR(amrex::Real *  rho, amrex::Real * /*T*/, amrex::Real *  x, amrex::Real *  c)
{
int id; // loop counter
amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
amrex::Real ROW; 
// Compute mean molecular wt first
XW += x[0]*17.007000; // OH*
XW += x[1]*27.026000; // HCN
XW += x[2]*43.025000; // HNCO
XW += x[3]*30.006000; // NO
XW += x[4]*44.013000; // N2O
XW += x[5]*28.010000; // CO
XW += x[6]*44.009000; // CO2
XW += x[7]*27.026000; // HNC
XW += x[8]*31.998000; // O2
XW += x[9]*2.016000; // H2
XW += x[10]*39.950000; // AR
XW += x[11]*1.008000; // H
XW += x[12]*15.999000; // O
XW += x[13]*17.007000; // OH
XW += x[14]*33.006000; // HO2
XW += x[15]*18.015000; // H2O
XW += x[16]*34.014000; // H2O2
XW += x[17]*29.018000; // HCO
XW += x[18]*30.026000; // CH2O
XW += x[19]*46.005000; // NO2
XW += x[20]*17.031000; // NH3
XW += x[21]*31.014000; // HNO
XW += x[22]*31.014000; // HON
XW += x[23]*47.013000; // HONO
XW += x[24]*32.022000; // H2NO
XW += x[25]*14.007000; // N
XW += x[26]*29.022000; // NNH
XW += x[27]*16.023000; // NH2
XW += x[28]*15.015000; // NH
XW += x[29]*26.018000; // CN
XW += x[30]*42.017000; // NCO
XW += x[31]*52.036000; // NCCN
XW += x[32]*43.025000; // HOCN
XW += x[33]*43.025000; // HCNO
XW += x[34]*40.025000; // NCN
XW += x[35]*4.002602; // HE
XW += x[36]*47.013000; // HNO2
XW += x[37]*92.010000; // N2O4
XW += x[38]*76.011000; // N2O3
XW += x[39]*13.019000; // CH
XW += x[40]*28.034000; // H2CN
XW += x[41]*28.034000; // HCNH
XW += x[42]*32.022000; // HNOH
XW += x[43]*62.004000; // NO3
XW += x[44]*63.012000; // HONO2
XW += x[45]*28.014000; // N2
XW += x[46]*16.043000; // CH4
XW += x[47]*30.070000; // C2H6
XW += x[48]*32.046000; // N2H4
XW += x[49]*31.038000; // N2H3
XW += x[50]*30.030000; // N2H2
XW += x[51]*30.030000; // H2NN
ROW = (*rho) / XW;

// Compute conversion, see Eq 11
for (id = 0; id < 52; ++id) {
c[id] = x[id]*ROW;
}

return;
}

// convert c[species] (molar conc) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKCTX(amrex::Real *  c, amrex::Real *  x)
{
int id; // loop counter
amrex::Real sumC = 0; 

// compute sum of c 
for (id = 0; id < 52; ++id) {
sumC += c[id];
}

//  See Eq 13 
amrex::Real sumCinv = 1.0/sumC;
for (id = 0; id < 52; ++id) {
x[id] = c[id]*sumCinv;
}

return;
}

// convert c[species] (molar conc) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKCTY(amrex::Real *  c, amrex::Real *  y)
{
amrex::Real CW = 0; // See Eq 12 in CK Manual
// compute denominator in eq 12 first
CW += c[0]*17.007000; // OH*
CW += c[1]*27.026000; // HCN
CW += c[2]*43.025000; // HNCO
CW += c[3]*30.006000; // NO
CW += c[4]*44.013000; // N2O
CW += c[5]*28.010000; // CO
CW += c[6]*44.009000; // CO2
CW += c[7]*27.026000; // HNC
CW += c[8]*31.998000; // O2
CW += c[9]*2.016000; // H2
CW += c[10]*39.950000; // AR
CW += c[11]*1.008000; // H
CW += c[12]*15.999000; // O
CW += c[13]*17.007000; // OH
CW += c[14]*33.006000; // HO2
CW += c[15]*18.015000; // H2O
CW += c[16]*34.014000; // H2O2
CW += c[17]*29.018000; // HCO
CW += c[18]*30.026000; // CH2O
CW += c[19]*46.005000; // NO2
CW += c[20]*17.031000; // NH3
CW += c[21]*31.014000; // HNO
CW += c[22]*31.014000; // HON
CW += c[23]*47.013000; // HONO
CW += c[24]*32.022000; // H2NO
CW += c[25]*14.007000; // N
CW += c[26]*29.022000; // NNH
CW += c[27]*16.023000; // NH2
CW += c[28]*15.015000; // NH
CW += c[29]*26.018000; // CN
CW += c[30]*42.017000; // NCO
CW += c[31]*52.036000; // NCCN
CW += c[32]*43.025000; // HOCN
CW += c[33]*43.025000; // HCNO
CW += c[34]*40.025000; // NCN
CW += c[35]*4.002602; // HE
CW += c[36]*47.013000; // HNO2
CW += c[37]*92.010000; // N2O4
CW += c[38]*76.011000; // N2O3
CW += c[39]*13.019000; // CH
CW += c[40]*28.034000; // H2CN
CW += c[41]*28.034000; // HCNH
CW += c[42]*32.022000; // HNOH
CW += c[43]*62.004000; // NO3
CW += c[44]*63.012000; // HONO2
CW += c[45]*28.014000; // N2
CW += c[46]*16.043000; // CH4
CW += c[47]*30.070000; // C2H6
CW += c[48]*32.046000; // N2H4
CW += c[49]*31.038000; // N2H3
CW += c[50]*30.030000; // N2H2
CW += c[51]*30.030000; // H2NN
// Now compute conversion
amrex::Real CWinv = 1.0/CW;
y[0] = c[0]*17.007000*CWinv; 
y[1] = c[1]*27.026000*CWinv; 
y[2] = c[2]*43.025000*CWinv; 
y[3] = c[3]*30.006000*CWinv; 
y[4] = c[4]*44.013000*CWinv; 
y[5] = c[5]*28.010000*CWinv; 
y[6] = c[6]*44.009000*CWinv; 
y[7] = c[7]*27.026000*CWinv; 
y[8] = c[8]*31.998000*CWinv; 
y[9] = c[9]*2.016000*CWinv; 
y[10] = c[10]*39.950000*CWinv; 
y[11] = c[11]*1.008000*CWinv; 
y[12] = c[12]*15.999000*CWinv; 
y[13] = c[13]*17.007000*CWinv; 
y[14] = c[14]*33.006000*CWinv; 
y[15] = c[15]*18.015000*CWinv; 
y[16] = c[16]*34.014000*CWinv; 
y[17] = c[17]*29.018000*CWinv; 
y[18] = c[18]*30.026000*CWinv; 
y[19] = c[19]*46.005000*CWinv; 
y[20] = c[20]*17.031000*CWinv; 
y[21] = c[21]*31.014000*CWinv; 
y[22] = c[22]*31.014000*CWinv; 
y[23] = c[23]*47.013000*CWinv; 
y[24] = c[24]*32.022000*CWinv; 
y[25] = c[25]*14.007000*CWinv; 
y[26] = c[26]*29.022000*CWinv; 
y[27] = c[27]*16.023000*CWinv; 
y[28] = c[28]*15.015000*CWinv; 
y[29] = c[29]*26.018000*CWinv; 
y[30] = c[30]*42.017000*CWinv; 
y[31] = c[31]*52.036000*CWinv; 
y[32] = c[32]*43.025000*CWinv; 
y[33] = c[33]*43.025000*CWinv; 
y[34] = c[34]*40.025000*CWinv; 
y[35] = c[35]*4.002602*CWinv; 
y[36] = c[36]*47.013000*CWinv; 
y[37] = c[37]*92.010000*CWinv; 
y[38] = c[38]*76.011000*CWinv; 
y[39] = c[39]*13.019000*CWinv; 
y[40] = c[40]*28.034000*CWinv; 
y[41] = c[41]*28.034000*CWinv; 
y[42] = c[42]*32.022000*CWinv; 
y[43] = c[43]*62.004000*CWinv; 
y[44] = c[44]*63.012000*CWinv; 
y[45] = c[45]*28.014000*CWinv; 
y[46] = c[46]*16.043000*CWinv; 
y[47] = c[47]*30.070000*CWinv; 
y[48] = c[48]*32.046000*CWinv; 
y[49] = c[49]*31.038000*CWinv; 
y[50] = c[50]*30.030000*CWinv; 
y[51] = c[51]*30.030000*CWinv; 

return;
}

// get specific heat at constant volume as a function 
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKCVML(amrex::Real *  T,  amrex::Real *  cvml)
{
int id; // loop counter
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
cv_R(cvml, tc);

// convert to chemkin units
for (id = 0; id < 52; ++id) {
cvml[id] *= 8.31446261815324e+07;
}
}

// get specific heat at constant pressure as a 
// function of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKCPML(amrex::Real *  T,  amrex::Real *  cpml)
{
int id; // loop counter
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
cp_R(cpml, tc);

// convert to chemkin units
for (id = 0; id < 52; ++id) {
cpml[id] *= 8.31446261815324e+07;
}
}

// get internal energy as a function 
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKUML(amrex::Real *  T,  amrex::Real *  uml)
{
int id; // loop counter
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
amrex::Real RT = 8.31446261815324e+07*tT; // R*T
speciesInternalEnergy(uml, tc);

// convert to chemkin units
for (id = 0; id < 52; ++id) {
uml[id] *= RT;
}
}

// get enthalpy as a function 
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKHML(amrex::Real *  T,  amrex::Real *  hml)
{
int id; // loop counter
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
amrex::Real RT = 8.31446261815324e+07*tT; // R*T
speciesEnthalpy(hml, tc);

// convert to chemkin units
for (id = 0; id < 52; ++id) {
hml[id] *= RT;
}
}

// Returns the standard-state entropies in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKSML(amrex::Real *  T,  amrex::Real *  sml)
{
int id; // loop counter
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { log(tT), tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
speciesEntropy(sml, tc);

// convert to chemkin units
for (id = 0; id < 52; ++id) {
sml[id] *= 8.31446261815324e+07;
}
}

// Returns the specific heats at constant volume
// in mass units (Eq. 29)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKCVMS(amrex::Real *  T,  amrex::Real *  cvms)
{
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
cv_R(cvms, tc);
// multiply by R/molecularweight
cvms[0] *= 4.888847308845322e+06; // OH*
cvms[1] *= 3.076468074503530e+06; // HCN
cvms[2] *= 1.932472427229109e+06; // HNCO
cvms[3] *= 2.770933352713870e+06; // NO
cvms[4] *= 1.889092454082485e+06; // N2O
cvms[5] *= 2.968390795484913e+06; // CO
cvms[6] *= 1.889264154639560e+06; // CO2
cvms[7] *= 3.076468074503530e+06; // HNC
cvms[8] *= 2.598431970171023e+06; // O2
cvms[9] *= 4.124237409798234e+07; // H2
cvms[10] *= 2.081217176008320e+06; // AR
cvms[11] *= 8.248474819596468e+07; // H
cvms[12] *= 5.196863940342046e+06; // O
cvms[13] *= 4.888847308845322e+06; // OH
cvms[14] *= 2.519076112874398e+06; // HO2
cvms[15] *= 4.615299815794193e+06; // H2O
cvms[16] *= 2.444423654422661e+06; // H2O2
cvms[17] *= 2.865277627042952e+06; // HCO
cvms[18] *= 2.769087663409458e+06; // CH2O
cvms[19] *= 1.807295428356318e+06; // NO2
cvms[20] *= 4.881957969674852e+06; // NH3
cvms[21] *= 2.680873998243773e+06; // HNO
cvms[22] *= 2.680873998243773e+06; // HON
cvms[23] *= 1.768545427467560e+06; // HONO
cvms[24] *= 2.596484485089389e+06; // H2NO
cvms[25] *= 5.935933903157878e+06; // N
cvms[26] *= 2.864882715923520e+06; // NNH
cvms[27] *= 5.189079834084279e+06; // NH2
cvms[28] *= 5.537437641127699e+06; // NH
cvms[29] *= 3.195657859233315e+06; // CN
cvms[30] *= 1.978833000488669e+06; // NCO
cvms[31] *= 1.597828929616658e+06; // NCCN
cvms[32] *= 1.932472427229109e+06; // HOCN
cvms[33] *= 1.932472427229109e+06; // HCNO
cvms[34] *= 2.077317331206306e+06; // NCN
cvms[35] *= 2.077264394049980e+07; // HE
cvms[36] *= 1.768545427467560e+06; // HNO2
cvms[37] *= 9.036477141781588e+05; // N2O4
cvms[38] *= 1.093849918847698e+06; // N2O3
cvms[39] *= 6.386406496776436e+06; // CH
cvms[40] *= 2.965849546319912e+06; // H2CN
cvms[41] *= 2.965849546319912e+06; // HCNH
cvms[42] *= 2.596484485089389e+06; // HNOH
cvms[43] *= 1.340955844486362e+06; // NO3
cvms[44] *= 1.319504636918879e+06; // HONO2
cvms[45] *= 2.967966951578939e+06; // N2
cvms[46] *= 5.182610869633635e+06; // CH4
cvms[47] *= 2.765035789209591e+06; // C2H6
cvms[48] *= 2.594539917042139e+06; // N2H4
cvms[49] *= 2.678801023955551e+06; // N2H3
cvms[50] *= 2.768718820563850e+06; // N2H2
cvms[51] *= 2.768718820563850e+06; // H2NN
}

// Returns the specific heats at constant pressure
// in mass units (Eq. 26)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKCPMS(amrex::Real *  T,  amrex::Real *  cpms)
{
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
cp_R(cpms, tc);
// multiply by R/molecularweight
cpms[0] *= 4.888847308845322e+06; // OH*
cpms[1] *= 3.076468074503530e+06; // HCN
cpms[2] *= 1.932472427229109e+06; // HNCO
cpms[3] *= 2.770933352713870e+06; // NO
cpms[4] *= 1.889092454082485e+06; // N2O
cpms[5] *= 2.968390795484913e+06; // CO
cpms[6] *= 1.889264154639560e+06; // CO2
cpms[7] *= 3.076468074503530e+06; // HNC
cpms[8] *= 2.598431970171023e+06; // O2
cpms[9] *= 4.124237409798234e+07; // H2
cpms[10] *= 2.081217176008320e+06; // AR
cpms[11] *= 8.248474819596468e+07; // H
cpms[12] *= 5.196863940342046e+06; // O
cpms[13] *= 4.888847308845322e+06; // OH
cpms[14] *= 2.519076112874398e+06; // HO2
cpms[15] *= 4.615299815794193e+06; // H2O
cpms[16] *= 2.444423654422661e+06; // H2O2
cpms[17] *= 2.865277627042952e+06; // HCO
cpms[18] *= 2.769087663409458e+06; // CH2O
cpms[19] *= 1.807295428356318e+06; // NO2
cpms[20] *= 4.881957969674852e+06; // NH3
cpms[21] *= 2.680873998243773e+06; // HNO
cpms[22] *= 2.680873998243773e+06; // HON
cpms[23] *= 1.768545427467560e+06; // HONO
cpms[24] *= 2.596484485089389e+06; // H2NO
cpms[25] *= 5.935933903157878e+06; // N
cpms[26] *= 2.864882715923520e+06; // NNH
cpms[27] *= 5.189079834084279e+06; // NH2
cpms[28] *= 5.537437641127699e+06; // NH
cpms[29] *= 3.195657859233315e+06; // CN
cpms[30] *= 1.978833000488669e+06; // NCO
cpms[31] *= 1.597828929616658e+06; // NCCN
cpms[32] *= 1.932472427229109e+06; // HOCN
cpms[33] *= 1.932472427229109e+06; // HCNO
cpms[34] *= 2.077317331206306e+06; // NCN
cpms[35] *= 2.077264394049980e+07; // HE
cpms[36] *= 1.768545427467560e+06; // HNO2
cpms[37] *= 9.036477141781588e+05; // N2O4
cpms[38] *= 1.093849918847698e+06; // N2O3
cpms[39] *= 6.386406496776436e+06; // CH
cpms[40] *= 2.965849546319912e+06; // H2CN
cpms[41] *= 2.965849546319912e+06; // HCNH
cpms[42] *= 2.596484485089389e+06; // HNOH
cpms[43] *= 1.340955844486362e+06; // NO3
cpms[44] *= 1.319504636918879e+06; // HONO2
cpms[45] *= 2.967966951578939e+06; // N2
cpms[46] *= 5.182610869633635e+06; // CH4
cpms[47] *= 2.765035789209591e+06; // C2H6
cpms[48] *= 2.594539917042139e+06; // N2H4
cpms[49] *= 2.678801023955551e+06; // N2H3
cpms[50] *= 2.768718820563850e+06; // N2H2
cpms[51] *= 2.768718820563850e+06; // H2NN
}

// Returns internal energy in mass units (Eq 30.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKUMS(amrex::Real *  T,  amrex::Real *  ums)
{
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
amrex::Real RT = 8.31446261815324e+07*tT; // R*T
amrex::Real imw[52];

get_imw(imw);

speciesInternalEnergy(ums, tc);

for (int i = 0; i < 52; i++)
{
ums[i] *= RT*imw[i];
}
}

// Returns enthalpy in mass units (Eq 27.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKHMS(amrex::Real *  T,  amrex::Real *  hms)
{
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { 0, tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
amrex::Real RT = 8.31446261815324e+07*tT; // R*T
amrex::Real imw[52];

get_imw(imw);

speciesEnthalpy(hms, tc);

for (int i = 0; i < 52; i++)
{
hms[i] *= RT*imw[i];
}
}

// Returns the entropies in mass units (Eq 28.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKSMS(amrex::Real *  T,  amrex::Real *  sms)
{
amrex::Real tT = *T; // temporary temperature
const amrex::Real tc[5] = { log(tT), tT, tT*tT, tT*tT*tT, tT*tT*tT*tT }; // temperature cache
speciesEntropy(sms, tc);
// multiply by R/molecularweight
sms[0] *= 4.888847308845322e+06; // OH*
sms[1] *= 3.076468074503530e+06; // HCN
sms[2] *= 1.932472427229109e+06; // HNCO
sms[3] *= 2.770933352713870e+06; // NO
sms[4] *= 1.889092454082485e+06; // N2O
sms[5] *= 2.968390795484913e+06; // CO
sms[6] *= 1.889264154639560e+06; // CO2
sms[7] *= 3.076468074503530e+06; // HNC
sms[8] *= 2.598431970171023e+06; // O2
sms[9] *= 4.124237409798234e+07; // H2
sms[10] *= 2.081217176008320e+06; // AR
sms[11] *= 8.248474819596468e+07; // H
sms[12] *= 5.196863940342046e+06; // O
sms[13] *= 4.888847308845322e+06; // OH
sms[14] *= 2.519076112874398e+06; // HO2
sms[15] *= 4.615299815794193e+06; // H2O
sms[16] *= 2.444423654422661e+06; // H2O2
sms[17] *= 2.865277627042952e+06; // HCO
sms[18] *= 2.769087663409458e+06; // CH2O
sms[19] *= 1.807295428356318e+06; // NO2
sms[20] *= 4.881957969674852e+06; // NH3
sms[21] *= 2.680873998243773e+06; // HNO
sms[22] *= 2.680873998243773e+06; // HON
sms[23] *= 1.768545427467560e+06; // HONO
sms[24] *= 2.596484485089389e+06; // H2NO
sms[25] *= 5.935933903157878e+06; // N
sms[26] *= 2.864882715923520e+06; // NNH
sms[27] *= 5.189079834084279e+06; // NH2
sms[28] *= 5.537437641127699e+06; // NH
sms[29] *= 3.195657859233315e+06; // CN
sms[30] *= 1.978833000488669e+06; // NCO
sms[31] *= 1.597828929616658e+06; // NCCN
sms[32] *= 1.932472427229109e+06; // HOCN
sms[33] *= 1.932472427229109e+06; // HCNO
sms[34] *= 2.077317331206306e+06; // NCN
sms[35] *= 2.077264394049980e+07; // HE
sms[36] *= 1.768545427467560e+06; // HNO2
sms[37] *= 9.036477141781588e+05; // N2O4
sms[38] *= 1.093849918847698e+06; // N2O3
sms[39] *= 6.386406496776436e+06; // CH
sms[40] *= 2.965849546319912e+06; // H2CN
sms[41] *= 2.965849546319912e+06; // HCNH
sms[42] *= 2.596484485089389e+06; // HNOH
sms[43] *= 1.340955844486362e+06; // NO3
sms[44] *= 1.319504636918879e+06; // HONO2
sms[45] *= 2.967966951578939e+06; // N2
sms[46] *= 5.182610869633635e+06; // CH4
sms[47] *= 2.765035789209591e+06; // C2H6
sms[48] *= 2.594539917042139e+06; // N2H4
sms[49] *= 2.678801023955551e+06; // N2H3
sms[50] *= 2.768718820563850e+06; // N2H2
sms[51] *= 2.768718820563850e+06; // H2NN
}

// GPU version of productionRate: no more use of thermo namespace vectors 
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void comp_qfqr(amrex::Real *  qf, amrex::Real * qr, amrex::Real * sc, amrex::Real * sc_qss, const amrex::Real * tc, amrex::Real invT)
{

// reaction 1: H + NO (+M) <=> HNO (+M)
qf[0] = sc[3]*sc[11];
qr[0] = sc[21];

// reaction 13: H + O2 (+M) <=> HO2 (+M)
qf[1] = sc[8]*sc[11];
qr[1] = sc[14];

// reaction 14: H + O2 (+AR) <=> HO2 (+AR)
qf[2] = sc[8]*sc[10]*sc[11];
qr[2] = sc[10]*sc[14];

// reaction 21: H2O2 (+H2O) <=> 2 OH (+H2O)
qf[3] = sc[15]*sc[16];
qr[3] = (sc[13] * sc[13])*sc[15];

// reaction 22: H2O2 (+M) <=> 2 OH (+M)
qf[4] = sc[16];
qr[4] = (sc[13] * sc[13]);

// reaction 236: NO + OH (+M) <=> HONO (+M)
qf[5] = sc[3]*sc[13];
qr[5] = sc[23];

// reaction 243: NO2 + OH (+M) <=> HONO2 (+M)
qf[6] = sc[13]*sc[19];
qr[6] = sc[44];

// reaction 28: CO + O (+M) <=> CO2 (+M)
qf[7] = sc[5]*sc[12];
qr[7] = sc[6];

// reaction 150: N2O (+M) <=> N2 + O (+M)
qf[8] = sc[4];
qr[8] = sc[12]*sc[45];

// reaction 197: NO2 + O (+M) <=> NO3 (+M)
qf[9] = sc[12]*sc[19];
qr[9] = sc[43];

// reaction 269: N2O4 (+M) <=> 2 NO2 (+M)
qf[10] = sc[37];
qr[10] = (sc[19] * sc[19]);

// reaction 9: H2 + M <=> 2 H + M
qf[11] = sc[9];
qr[11] = (sc[11] * sc[11]);

// reaction 10: 2 O + M <=> O2 + M
qf[12] = (sc[12] * sc[12]);
qr[12] = sc[8];

// reaction 11: H + O + M <=> OH + M
qf[13] = sc[11]*sc[12];
qr[13] = sc[13];

// reaction 12: H + OH + M <=> H2O + M
qf[14] = sc[11]*sc[13];
qr[14] = sc[15];

// reaction 33: HCO + M <=> CO + H + M
qf[15] = sc[17];
qr[15] = sc[5]*sc[11];

// reaction 43: HCN + M <=> CN + H + M
qf[16] = sc[1];
qr[16] = sc[11]*sc[29];

// reaction 44: HCN + N2 <=> CN + H + N2
qf[17] = sc[1]*sc[45];
qr[17] = sc[11]*sc[29]*sc[45];

// reaction 45: HCN + M <=> HNC + M
qf[18] = sc[1];
qr[18] = sc[7];

// reaction 76: HNCO + M <=> CO + NH + M
qf[19] = sc[2];
qr[19] = sc[5]*sc[28];

// reaction 98: HCNO + OH <=> H + NCO + OH
qf[20] = sc[13]*sc[33];
qr[20] = sc[11]*sc[13]*sc[30];

// reaction 101: NCO + M <=> CO + N + M
qf[21] = sc[30];
qr[21] = sc[5]*sc[25];

// reaction 132: NH3 + M <=> H + NH2 + M
qf[22] = sc[20];
qr[22] = sc[11]*sc[27];

// reaction 165: H2NO + M <=> H + HNO + M
qf[23] = sc[24];
qr[23] = sc[11]*sc[21];

// reaction 166: H2NO + M <=> HNOH + M
qf[24] = sc[24];
qr[24] = sc[42];

// reaction 176: HNOH + M <=> H + HNO + M
qf[25] = sc[42];
qr[25] = sc[11]*sc[21];

// reaction 188: HON + M <=> H + NO + M
qf[26] = sc[22];
qr[26] = sc[3]*sc[11];

// reaction 206: NO3 + NO2 <=> NO + O2 + NO2
qf[27] = sc[19]*sc[43];
qr[27] = sc[3]*sc[8]*sc[19];

// reaction 214: NNH + O2 <=> H + N2 + O2
qf[28] = sc[8]*sc[26];
qr[28] = sc[8]*sc[11]*sc[45];

// reaction 219: NCCN + M <=> 2 CN + M
qf[29] = sc[31];
qr[29] = (sc[29] * sc[29]);

// reaction 222: H + O + M <=> OH* + M
qf[30] = sc[11]*sc[12];
qr[30] = sc[0];

// reaction 233: N2 + M <=> 2 N + M
qf[31] = sc[45];
qr[31] = (sc[25] * sc[25]);

// reaction 234: N + O + M <=> NO + M
qf[32] = sc[12]*sc[25];
qr[32] = sc[3];

// reaction 240: NO2 + M <=> NO + O + M
qf[33] = sc[19];
qr[33] = sc[3]*sc[12];

// reaction 257: H2NO + M <=> H2 + NO + M
qf[34] = sc[24];
qr[34] = sc[3]*sc[9];

// reaction 258: HO2 + NO + M <=> HONO2 + M
qf[35] = sc[3]*sc[14];
qr[35] = sc[44];

// reaction 0: H + N2O <=> N2 + OH
qf[36] = sc[4]*sc[11];
qr[36] = sc[13]*sc[45];

// reaction 2: N + NO <=> N2 + O
qf[37] = sc[3]*sc[25];
qr[37] = sc[12]*sc[45];

// reaction 3: H + HNO <=> H2 + NO
qf[38] = sc[11]*sc[21];
qr[38] = sc[3]*sc[9];

// reaction 4: H + N2O <=> NH + NO
qf[39] = sc[4]*sc[11];
qr[39] = sc[3]*sc[28];

// reaction 5: H + O2 <=> O + OH
qf[40] = sc[8]*sc[11];
qr[40] = sc[12]*sc[13];

// reaction 6: H2 + O <=> H + OH
qf[41] = sc[9]*sc[12];
qr[41] = sc[11]*sc[13];

// reaction 7: H2 + OH <=> H + H2O
qf[42] = sc[9]*sc[13];
qr[42] = sc[11]*sc[15];

// reaction 8: H2O + O <=> 2 OH
qf[43] = sc[12]*sc[15];
qr[43] = (sc[13] * sc[13]);

// reaction 15: H + HO2 <=> 2 OH
qf[44] = sc[11]*sc[14];
qr[44] = (sc[13] * sc[13]);

// reaction 16: H2 + O2 <=> H + HO2
qf[45] = sc[8]*sc[9];
qr[45] = sc[11]*sc[14];

// reaction 17: HO2 + O <=> O2 + OH
qf[46] = sc[12]*sc[14];
qr[46] = sc[8]*sc[13];

// reaction 18: HO2 + OH <=> H2O + O2
qf[47] = sc[13]*sc[14];
qr[47] = sc[8]*sc[15];

// reaction 19: 2 HO2 <=> H2O2 + O2
qf[48] = (sc[14] * sc[14]);
qr[48] = sc[8]*sc[16];

// reaction 20: 2 HO2 <=> H2O2 + O2
qf[49] = (sc[14] * sc[14]);
qr[49] = sc[8]*sc[16];

// reaction 23: H + H2O2 <=> H2O + OH
qf[50] = sc[11]*sc[16];
qr[50] = sc[13]*sc[15];

// reaction 24: H + H2O2 <=> H2 + HO2
qf[51] = sc[11]*sc[16];
qr[51] = sc[9]*sc[14];

// reaction 25: H2O2 + O <=> HO2 + OH
qf[52] = sc[12]*sc[16];
qr[52] = sc[13]*sc[14];

// reaction 26: H2O2 + OH <=> H2O + HO2
qf[53] = sc[13]*sc[16];
qr[53] = sc[14]*sc[15];

// reaction 27: H2O2 + OH <=> H2O + HO2
qf[54] = sc[13]*sc[16];
qr[54] = sc[14]*sc[15];

// reaction 29: CO + O2 <=> CO2 + O
qf[55] = sc[5]*sc[8];
qr[55] = sc[6]*sc[12];

// reaction 30: CO + OH <=> CO2 + H
qf[56] = sc[5]*sc[13];
qr[56] = sc[6]*sc[11];

// reaction 31: CO + OH <=> CO2 + H
qf[57] = sc[5]*sc[13];
qr[57] = sc[6]*sc[11];

// reaction 32: CO + HO2 <=> CO2 + OH
qf[58] = sc[5]*sc[14];
qr[58] = sc[6]*sc[13];

// reaction 34: HCO + O2 <=> CO + HO2
qf[59] = sc[8]*sc[17];
qr[59] = sc[5]*sc[14];

// reaction 35: H + HCO <=> CO + H2
qf[60] = sc[11]*sc[17];
qr[60] = sc[5]*sc[9];

// reaction 36: HCO + O <=> CO + OH
qf[61] = sc[12]*sc[17];
qr[61] = sc[5]*sc[13];

// reaction 37: HCO + O <=> CO2 + H
qf[62] = sc[12]*sc[17];
qr[62] = sc[6]*sc[11];

// reaction 38: HCO + OH <=> CO + H2O
qf[63] = sc[13]*sc[17];
qr[63] = sc[5]*sc[15];

// reaction 39: HCO + HO2 => CO2 + H + OH
qf[64] = sc[14]*sc[17];
qr[64] = 0.0;

// reaction 40: 2 HCO => 2 CO + H2
qf[65] = (sc[17] * sc[17]);
qr[65] = 0.0;

// reaction 41: CH2O + O2 <=> HCO + HO2
qf[66] = sc[8]*sc[18];
qr[66] = sc[14]*sc[17];

// reaction 42: 2 HCO <=> CH2O + CO
qf[67] = (sc[17] * sc[17]);
qr[67] = sc[5]*sc[18];

// reaction 46: CN + H2 <=> H + HCN
qf[68] = sc[9]*sc[29];
qr[68] = sc[1]*sc[11];

// reaction 47: HCN + O <=> H + NCO
qf[69] = sc[1]*sc[12];
qr[69] = sc[11]*sc[30];

// reaction 48: HCN + O <=> CN + OH
qf[70] = sc[1]*sc[12];
qr[70] = sc[13]*sc[29];

// reaction 49: HCN + O <=> CO + NH
qf[71] = sc[1]*sc[12];
qr[71] = sc[5]*sc[28];

// reaction 50: HCN + OH <=> CN + H2O
qf[72] = sc[1]*sc[13];
qr[72] = sc[15]*sc[29];

// reaction 51: HCN + OH <=> H + HOCN
qf[73] = sc[1]*sc[13];
qr[73] = sc[11]*sc[32];

// reaction 52: HCN + OH <=> H + HNCO
qf[74] = sc[1]*sc[13];
qr[74] = sc[2]*sc[11];

// reaction 53: HCN + OH <=> CO + NH2
qf[75] = sc[1]*sc[13];
qr[75] = sc[5]*sc[27];

// reaction 54: HCN + O2 <=> CN + HO2
qf[76] = sc[1]*sc[8];
qr[76] = sc[14]*sc[29];

// reaction 55: CN + HCN <=> H + NCCN
qf[77] = sc[1]*sc[29];
qr[77] = sc[11]*sc[31];

// reaction 56: H + HNC <=> H + HCN
qf[78] = sc[7]*sc[11];
qr[78] = sc[1]*sc[11];

// reaction 57: HNC + O <=> CO + NH
qf[79] = sc[7]*sc[12];
qr[79] = sc[5]*sc[28];

// reaction 58: HNC + OH <=> H + HNCO
qf[80] = sc[7]*sc[13];
qr[80] = sc[2]*sc[11];

// reaction 59: CN + HNC <=> H + NCCN
qf[81] = sc[7]*sc[29];
qr[81] = sc[11]*sc[31];

// reaction 60: CN + O <=> CO + N
qf[82] = sc[12]*sc[29];
qr[82] = sc[5]*sc[25];

// reaction 61: CN + OH <=> H + NCO
qf[83] = sc[13]*sc[29];
qr[83] = sc[11]*sc[30];

// reaction 62: CN + O2 <=> NCO + O
qf[84] = sc[8]*sc[29];
qr[84] = sc[12]*sc[30];

// reaction 63: CN + O2 <=> NCO + O
qf[85] = sc[8]*sc[29];
qr[85] = sc[12]*sc[30];

// reaction 64: CN + O2 <=> CO + NO
qf[86] = sc[8]*sc[29];
qr[86] = sc[3]*sc[5];

// reaction 65: CN + CO2 <=> CO + NCO
qf[87] = sc[6]*sc[29];
qr[87] = sc[5]*sc[30];

// reaction 66: CH2O + CN <=> HCN + HCO
qf[88] = sc[18]*sc[29];
qr[88] = sc[1]*sc[17];

// reaction 67: CN + NO <=> N + NCO
qf[89] = sc[3]*sc[29];
qr[89] = sc[25]*sc[30];

// reaction 68: CN + NO2 <=> NCO + NO
qf[90] = sc[19]*sc[29];
qr[90] = sc[3]*sc[30];

// reaction 69: CN + NO2 <=> CO + N2O
qf[91] = sc[19]*sc[29];
qr[91] = sc[4]*sc[5];

// reaction 70: CN + NO2 <=> CO2 + N2
qf[92] = sc[19]*sc[29];
qr[92] = sc[6]*sc[45];

// reaction 71: CN + HNO <=> HCN + NO
qf[93] = sc[21]*sc[29];
qr[93] = sc[1]*sc[3];

// reaction 72: CN + HONO <=> HCN + NO2
qf[94] = sc[23]*sc[29];
qr[94] = sc[1]*sc[19];

// reaction 73: CN + N2O <=> NCN + NO
qf[95] = sc[4]*sc[29];
qr[95] = sc[3]*sc[34];

// reaction 74: CN + HNCO <=> HCN + NCO
qf[96] = sc[2]*sc[29];
qr[96] = sc[1]*sc[30];

// reaction 75: CN + NCO <=> CO + NCN
qf[97] = sc[29]*sc[30];
qr[97] = sc[5]*sc[34];

// reaction 77: H + HNCO <=> CO + NH2
qf[98] = sc[2]*sc[11];
qr[98] = sc[5]*sc[27];

// reaction 78: H + HNCO <=> H2 + NCO
qf[99] = sc[2]*sc[11];
qr[99] = sc[9]*sc[30];

// reaction 79: HNCO + O <=> NCO + OH
qf[100] = sc[2]*sc[12];
qr[100] = sc[13]*sc[30];

// reaction 80: HNCO + O <=> CO2 + NH
qf[101] = sc[2]*sc[12];
qr[101] = sc[6]*sc[28];

// reaction 81: HNCO + O <=> CO + HNO
qf[102] = sc[2]*sc[12];
qr[102] = sc[5]*sc[21];

// reaction 82: HNCO + OH <=> H2O + NCO
qf[103] = sc[2]*sc[13];
qr[103] = sc[15]*sc[30];

// reaction 83: HNCO + HO2 <=> H2O2 + NCO
qf[104] = sc[2]*sc[14];
qr[104] = sc[16]*sc[30];

// reaction 84: HNCO + O2 <=> CO2 + HNO
qf[105] = sc[2]*sc[8];
qr[105] = sc[6]*sc[21];

// reaction 85: HNCO + NH <=> NCO + NH2
qf[106] = sc[2]*sc[28];
qr[106] = sc[27]*sc[30];

// reaction 86: H + HOCN <=> H + HNCO
qf[107] = sc[11]*sc[32];
qr[107] = sc[2]*sc[11];

// reaction 87: H + HOCN <=> CO + NH2
qf[108] = sc[11]*sc[32];
qr[108] = sc[5]*sc[27];

// reaction 88: H + HOCN <=> H2 + NCO
qf[109] = sc[11]*sc[32];
qr[109] = sc[9]*sc[30];

// reaction 89: HOCN + O <=> NCO + OH
qf[110] = sc[12]*sc[32];
qr[110] = sc[13]*sc[30];

// reaction 90: HOCN + OH <=> H2O + NCO
qf[111] = sc[13]*sc[32];
qr[111] = sc[15]*sc[30];

// reaction 91: HOCN + NH2 <=> NCO + NH3
qf[112] = sc[27]*sc[32];
qr[112] = sc[20]*sc[30];

// reaction 92: HCNO <=> HCN + O
qf[113] = sc[33];
qr[113] = sc[1]*sc[12];

// reaction 93: H + HCNO <=> HCN + OH
qf[114] = sc[11]*sc[33];
qr[114] = sc[1]*sc[13];

// reaction 94: HCNO + O <=> HCO + NO
qf[115] = sc[12]*sc[33];
qr[115] = sc[3]*sc[17];

// reaction 95: HCNO + OH <=> CH2O + NO
qf[116] = sc[13]*sc[33];
qr[116] = sc[3]*sc[18];

// reaction 96: HCNO + O <=> NCO + OH
qf[117] = sc[12]*sc[33];
qr[117] = sc[13]*sc[30];

// reaction 97: HCNO + OH <=> CO + H2 + NO
qf[118] = sc[13]*sc[33];
qr[118] = sc[3]*sc[5]*sc[9];

// reaction 99: HCNO + OH <=> H2O + NCO
qf[119] = sc[13]*sc[33];
qr[119] = sc[15]*sc[30];

// reaction 100: HCNO + OH <=> HCO + HNO
qf[120] = sc[13]*sc[33];
qr[120] = sc[17]*sc[21];

// reaction 102: H + NCO <=> CO + NH
qf[121] = sc[11]*sc[30];
qr[121] = sc[5]*sc[28];

// reaction 103: NCO + O <=> CO + NO
qf[122] = sc[12]*sc[30];
qr[122] = sc[3]*sc[5];

// reaction 104: NCO + OH <=> CO + HON
qf[123] = sc[13]*sc[30];
qr[123] = sc[5]*sc[22];

// reaction 105: NCO + OH <=> CO + H + NO
qf[124] = sc[13]*sc[30];
qr[124] = sc[3]*sc[5]*sc[11];

// reaction 106: HO2 + NCO <=> HNCO + O2
qf[125] = sc[14]*sc[30];
qr[125] = sc[2]*sc[8];

// reaction 107: NCO + O2 <=> CO2 + NO
qf[126] = sc[8]*sc[30];
qr[126] = sc[3]*sc[6];

// reaction 108: HCO + NCO <=> CO + HNCO
qf[127] = sc[17]*sc[30];
qr[127] = sc[2]*sc[5];

// reaction 109: CH2O + NCO <=> HCO + HNCO
qf[128] = sc[18]*sc[30];
qr[128] = sc[2]*sc[17];

// reaction 110: NCO + NO <=> CO + N2O
qf[129] = sc[3]*sc[30];
qr[129] = sc[4]*sc[5];

// reaction 111: NCO + NO <=> CO2 + N2
qf[130] = sc[3]*sc[30];
qr[130] = sc[6]*sc[45];

// reaction 112: NCO + NO2 <=> CO + 2 NO
qf[131] = sc[19]*sc[30];
qr[131] = (sc[3] * sc[3])*sc[5];

// reaction 113: NCO + NO2 <=> CO2 + N2O
qf[132] = sc[19]*sc[30];
qr[132] = sc[4]*sc[6];

// reaction 114: HNO + NCO <=> HNCO + NO
qf[133] = sc[21]*sc[30];
qr[133] = sc[2]*sc[3];

// reaction 115: HONO + NCO <=> HNCO + NO2
qf[134] = sc[23]*sc[30];
qr[134] = sc[2]*sc[19];

// reaction 116: N + NCO <=> CO + N2
qf[135] = sc[25]*sc[30];
qr[135] = sc[5]*sc[45];

// reaction 117: NCO + NH3 <=> HNCO + NH2
qf[136] = sc[20]*sc[30];
qr[136] = sc[2]*sc[27];

// reaction 118: 2 NCO <=> 2 CO + N2
qf[137] = (sc[30] * sc[30]);
qr[137] = (sc[5] * sc[5])*sc[45];

// reaction 119: H2CN <=> H + HCN
qf[138] = sc[40];
qr[138] = sc[1]*sc[11];

// reaction 120: H + H2CN <=> H2 + HCN
qf[139] = sc[11]*sc[40];
qr[139] = sc[1]*sc[9];

// reaction 121: H2CN + O <=> HCN + OH
qf[140] = sc[12]*sc[40];
qr[140] = sc[1]*sc[13];

// reaction 122: H2CN + OH <=> H2O + HCN
qf[141] = sc[13]*sc[40];
qr[141] = sc[1]*sc[15];

// reaction 123: H2CN + OH <=> H2O + HCN
qf[142] = sc[13]*sc[40];
qr[142] = sc[1]*sc[15];

// reaction 124: H2CN + O2 <=> CH2O + NO
qf[143] = sc[8]*sc[40];
qr[143] = sc[3]*sc[18];

// reaction 125: H2CN + NH2 <=> HCN + NH3
qf[144] = sc[27]*sc[40];
qr[144] = sc[1]*sc[20];

// reaction 126: HCNH <=> H + HCN
qf[145] = sc[41];
qr[145] = sc[1]*sc[11];

// reaction 127: H + HCNH <=> H + H2CN
qf[146] = sc[11]*sc[41];
qr[146] = sc[11]*sc[40];

// reaction 128: H + HCNH <=> H2 + HCN
qf[147] = sc[11]*sc[41];
qr[147] = sc[1]*sc[9];

// reaction 129: HCNH + O <=> H + HNCO
qf[148] = sc[12]*sc[41];
qr[148] = sc[2]*sc[11];

// reaction 130: HCNH + O <=> HCN + OH
qf[149] = sc[12]*sc[41];
qr[149] = sc[1]*sc[13];

// reaction 131: HCNH + OH <=> H2O + HCN
qf[150] = sc[13]*sc[41];
qr[150] = sc[1]*sc[15];

// reaction 133: H + NH3 <=> H2 + NH2
qf[151] = sc[11]*sc[20];
qr[151] = sc[9]*sc[27];

// reaction 134: NH3 + O <=> NH2 + OH
qf[152] = sc[12]*sc[20];
qr[152] = sc[13]*sc[27];

// reaction 135: NH3 + OH <=> H2O + NH2
qf[153] = sc[13]*sc[20];
qr[153] = sc[15]*sc[27];

// reaction 136: HO2 + NH3 <=> H2O2 + NH2
qf[154] = sc[14]*sc[20];
qr[154] = sc[16]*sc[27];

// reaction 137: H + NH2 <=> H2 + NH
qf[155] = sc[11]*sc[27];
qr[155] = sc[9]*sc[28];

// reaction 138: NH2 + O <=> H + HNO
qf[156] = sc[12]*sc[27];
qr[156] = sc[11]*sc[21];

// reaction 139: NH2 + O <=> NH + OH
qf[157] = sc[12]*sc[27];
qr[157] = sc[13]*sc[28];

// reaction 140: NH2 + OH <=> H2O + NH
qf[158] = sc[13]*sc[27];
qr[158] = sc[15]*sc[28];

// reaction 141: HO2 + NH2 <=> H2NO + OH
qf[159] = sc[14]*sc[27];
qr[159] = sc[13]*sc[24];

// reaction 142: HO2 + NH2 <=> NH3 + O2
qf[160] = sc[14]*sc[27];
qr[160] = sc[8]*sc[20];

// reaction 143: NH2 + O2 <=> H2NO + O
qf[161] = sc[8]*sc[27];
qr[161] = sc[12]*sc[24];

// reaction 144: NH2 + O2 <=> HNO + OH
qf[162] = sc[8]*sc[27];
qr[162] = sc[13]*sc[21];

// reaction 145: 2 NH2 <=> NH + NH3
qf[163] = (sc[27] * sc[27]);
qr[163] = sc[20]*sc[28];

// reaction 146: NH + NH2 <=> N + NH3
qf[164] = sc[27]*sc[28];
qr[164] = sc[20]*sc[25];

// reaction 147: N + NH2 <=> 2 H + N2
qf[165] = sc[25]*sc[27];
qr[165] = (sc[11] * sc[11])*sc[45];

// reaction 148: NH2 + NO <=> H2O + N2
qf[166] = sc[3]*sc[27];
qr[166] = sc[15]*sc[45];

// reaction 149: NH + O <=> H + NO
qf[167] = sc[12]*sc[28];
qr[167] = sc[3]*sc[11];

// reaction 151: N2O + OH <=> HO2 + N2
qf[168] = sc[4]*sc[13];
qr[168] = sc[14]*sc[45];

// reaction 152: NH2 + NO <=> NNH + OH
qf[169] = sc[3]*sc[27];
qr[169] = sc[13]*sc[26];

// reaction 153: N + OH <=> H + NO
qf[170] = sc[13]*sc[25];
qr[170] = sc[3]*sc[11];

// reaction 154: NH2 + NO2 <=> H2O + N2O
qf[171] = sc[19]*sc[27];
qr[171] = sc[4]*sc[15];

// reaction 155: NH2 + NO2 <=> H2NO + NO
qf[172] = sc[19]*sc[27];
qr[172] = sc[3]*sc[24];

// reaction 156: H + NH <=> H2 + N
qf[173] = sc[11]*sc[28];
qr[173] = sc[9]*sc[25];

// reaction 157: NH + OH <=> H + HNO
qf[174] = sc[13]*sc[28];
qr[174] = sc[11]*sc[21];

// reaction 158: NH + OH <=> H2O + N
qf[175] = sc[13]*sc[28];
qr[175] = sc[15]*sc[25];

// reaction 159: NH + O2 <=> HNO + O
qf[176] = sc[8]*sc[28];
qr[176] = sc[12]*sc[21];

// reaction 160: NH + O2 <=> NO + OH
qf[177] = sc[8]*sc[28];
qr[177] = sc[3]*sc[13];

// reaction 161: 2 NH <=> 2 H + N2
qf[178] = (sc[28] * sc[28]);
qr[178] = (sc[11] * sc[11])*sc[45];

// reaction 162: N + NH <=> H + N2
qf[179] = sc[25]*sc[28];
qr[179] = sc[11]*sc[45];

// reaction 163: NH + NO <=> N2 + OH
qf[180] = sc[3]*sc[28];
qr[180] = sc[13]*sc[45];

// reaction 164: NH + NO2 <=> N2O + OH
qf[181] = sc[19]*sc[28];
qr[181] = sc[4]*sc[13];

// reaction 167: H + H2NO <=> H2 + HNO
qf[182] = sc[11]*sc[24];
qr[182] = sc[9]*sc[21];

// reaction 168: H + H2NO <=> NH2 + OH
qf[183] = sc[11]*sc[24];
qr[183] = sc[13]*sc[27];

// reaction 169: H2NO + O <=> HNO + OH
qf[184] = sc[12]*sc[24];
qr[184] = sc[13]*sc[21];

// reaction 170: H2NO + OH <=> H2O + HNO
qf[185] = sc[13]*sc[24];
qr[185] = sc[15]*sc[21];

// reaction 171: H2NO + HO2 <=> H2O2 + HNO
qf[186] = sc[14]*sc[24];
qr[186] = sc[16]*sc[21];

// reaction 172: H2NO + O2 <=> HNO + HO2
qf[187] = sc[8]*sc[24];
qr[187] = sc[14]*sc[21];

// reaction 173: H2NO + NO <=> 2 HNO
qf[188] = sc[3]*sc[24];
qr[188] = (sc[21] * sc[21]);

// reaction 174: H2NO + NH2 <=> HNO + NH3
qf[189] = sc[24]*sc[27];
qr[189] = sc[20]*sc[21];

// reaction 175: H2NO + NO2 <=> HNO + HONO
qf[190] = sc[19]*sc[24];
qr[190] = sc[21]*sc[23];

// reaction 177: H + HNOH <=> NH2 + OH
qf[191] = sc[11]*sc[42];
qr[191] = sc[13]*sc[27];

// reaction 178: H + HNOH <=> H2 + HNO
qf[192] = sc[11]*sc[42];
qr[192] = sc[9]*sc[21];

// reaction 179: HNOH + O <=> HNO + OH
qf[193] = sc[12]*sc[42];
qr[193] = sc[13]*sc[21];

// reaction 180: HNOH + O <=> HNO + OH
qf[194] = sc[12]*sc[42];
qr[194] = sc[13]*sc[21];

// reaction 181: HNOH + OH <=> H2O + HNO
qf[195] = sc[13]*sc[42];
qr[195] = sc[15]*sc[21];

// reaction 182: HNOH + HO2 <=> H2O2 + HNO
qf[196] = sc[14]*sc[42];
qr[196] = sc[16]*sc[21];

// reaction 183: HNOH + O2 <=> HNO + HO2
qf[197] = sc[8]*sc[42];
qr[197] = sc[14]*sc[21];

// reaction 184: HNOH + NH2 <=> HNO + NH3
qf[198] = sc[27]*sc[42];
qr[198] = sc[20]*sc[21];

// reaction 185: HNOH + NO2 <=> HNO + HONO
qf[199] = sc[19]*sc[42];
qr[199] = sc[21]*sc[23];

// reaction 186: HNO + O2 <=> HO2 + NO
qf[200] = sc[8]*sc[21];
qr[200] = sc[3]*sc[14];

// reaction 187: HCO + HNO <=> CH2O + NO
qf[201] = sc[17]*sc[21];
qr[201] = sc[3]*sc[18];

// reaction 189: H + HON <=> H + HNO
qf[202] = sc[11]*sc[22];
qr[202] = sc[11]*sc[21];

// reaction 190: H + HON <=> NH + OH
qf[203] = sc[11]*sc[22];
qr[203] = sc[13]*sc[28];

// reaction 191: HON + O <=> NO + OH
qf[204] = sc[12]*sc[22];
qr[204] = sc[3]*sc[13];

// reaction 192: HON + OH <=> H + HONO
qf[205] = sc[13]*sc[22];
qr[205] = sc[11]*sc[23];

// reaction 193: HON + O2 <=> NO2 + OH
qf[206] = sc[8]*sc[22];
qr[206] = sc[13]*sc[19];

// reaction 194: HCO + NO <=> CO + HNO
qf[207] = sc[3]*sc[17];
qr[207] = sc[5]*sc[21];

// reaction 195: H + HONO <=> HNO + OH
qf[208] = sc[11]*sc[23];
qr[208] = sc[13]*sc[21];

// reaction 196: H + HONO <=> H2O + NO
qf[209] = sc[11]*sc[23];
qr[209] = sc[3]*sc[15];

// reaction 198: 2 NO2 <=> NO + NO3
qf[210] = (sc[19] * sc[19]);
qr[210] = sc[3]*sc[43];

// reaction 199: CO + NO2 <=> CO2 + NO
qf[211] = sc[5]*sc[19];
qr[211] = sc[3]*sc[6];

// reaction 200: HCO + NO2 <=> CO + NO + OH
qf[212] = sc[17]*sc[19];
qr[212] = sc[3]*sc[5]*sc[13];

// reaction 201: HCO + NO2 <=> CO2 + H + NO
qf[213] = sc[17]*sc[19];
qr[213] = sc[3]*sc[6]*sc[11];

// reaction 202: H + NO3 <=> NO2 + OH
qf[214] = sc[11]*sc[43];
qr[214] = sc[13]*sc[19];

// reaction 203: NO3 + O <=> NO2 + O2
qf[215] = sc[12]*sc[43];
qr[215] = sc[8]*sc[19];

// reaction 204: NO3 + OH <=> HO2 + NO2
qf[216] = sc[13]*sc[43];
qr[216] = sc[14]*sc[19];

// reaction 205: HO2 + NO3 <=> NO2 + O2 + OH
qf[217] = sc[14]*sc[43];
qr[217] = sc[8]*sc[13]*sc[19];

// reaction 207: NNH <=> H + N2
qf[218] = sc[26];
qr[218] = sc[11]*sc[45];

// reaction 208: H + NNH <=> H2 + N2
qf[219] = sc[11]*sc[26];
qr[219] = sc[9]*sc[45];

// reaction 209: NNH + O <=> H + N2O
qf[220] = sc[12]*sc[26];
qr[220] = sc[4]*sc[11];

// reaction 210: NNH + O <=> N2 + OH
qf[221] = sc[12]*sc[26];
qr[221] = sc[13]*sc[45];

// reaction 211: NNH + O <=> NH + NO
qf[222] = sc[12]*sc[26];
qr[222] = sc[3]*sc[28];

// reaction 212: NNH + OH <=> H2O + N2
qf[223] = sc[13]*sc[26];
qr[223] = sc[15]*sc[45];

// reaction 213: NNH + O2 <=> HO2 + N2
qf[224] = sc[8]*sc[26];
qr[224] = sc[14]*sc[45];

// reaction 215: NH + NNH <=> N2 + NH2
qf[225] = sc[26]*sc[28];
qr[225] = sc[27]*sc[45];

// reaction 216: NH2 + NNH <=> N2 + NH3
qf[226] = sc[26]*sc[27];
qr[226] = sc[20]*sc[45];

// reaction 217: NNH + NO <=> HNO + N2
qf[227] = sc[3]*sc[26];
qr[227] = sc[21]*sc[45];

// reaction 218: CO + N2O <=> CO2 + N2
qf[228] = sc[4]*sc[5];
qr[228] = sc[6]*sc[45];

// reaction 220: NCCN + O <=> CN + NCO
qf[229] = sc[12]*sc[31];
qr[229] = sc[29]*sc[30];

// reaction 221: NCCN + OH <=> CN + HOCN
qf[230] = sc[13]*sc[31];
qr[230] = sc[29]*sc[32];

// reaction 223: H2O + OH* <=> H2O + OH
qf[231] = sc[0]*sc[15];
qr[231] = sc[13]*sc[15];

// reaction 224: H2 + OH* <=> H2 + OH
qf[232] = sc[0]*sc[9];
qr[232] = sc[9]*sc[13];

// reaction 225: N2 + OH* <=> N2 + OH
qf[233] = sc[0]*sc[45];
qr[233] = sc[13]*sc[45];

// reaction 226: OH + OH* <=> 2 OH
qf[234] = sc[0]*sc[13];
qr[234] = (sc[13] * sc[13]);

// reaction 227: H + OH* <=> H + OH
qf[235] = sc[0]*sc[11];
qr[235] = sc[11]*sc[13];

// reaction 228: AR + OH* <=> AR + OH
qf[236] = sc[0]*sc[10];
qr[236] = sc[10]*sc[13];

// reaction 229: O2 + OH* <=> O2 + OH
qf[237] = sc[0]*sc[8];
qr[237] = sc[8]*sc[13];

// reaction 230: CO2 + OH* <=> CO2 + OH
qf[238] = sc[0]*sc[6];
qr[238] = sc[6]*sc[13];

// reaction 231: CO + OH* <=> CO + OH
qf[239] = sc[0]*sc[5];
qr[239] = sc[5]*sc[13];

// reaction 232: H + N2O <=> N2 + OH*
qf[240] = sc[4]*sc[11];
qr[240] = sc[0]*sc[45];

// reaction 235: HO2 + NO <=> NO2 + OH
qf[241] = sc[3]*sc[14];
qr[241] = sc[13]*sc[19];

// reaction 237: H2 + NO2 <=> H + HONO
qf[242] = sc[9]*sc[19];
qr[242] = sc[11]*sc[23];

// reaction 238: H + NO2 <=> NO + OH
qf[243] = sc[11]*sc[19];
qr[243] = sc[3]*sc[13];

// reaction 239: NO2 + O <=> NO + O2
qf[244] = sc[12]*sc[19];
qr[244] = sc[3]*sc[8];

// reaction 241: 2 NO2 <=> 2 NO + O2
qf[245] = (sc[19] * sc[19]);
qr[245] = (sc[3] * sc[3])*sc[8];

// reaction 242: HO2 + NO2 <=> HONO + O2
qf[246] = sc[14]*sc[19];
qr[246] = sc[8]*sc[23];

// reaction 244: NO + NO2 <=> N2O + O2
qf[247] = sc[3]*sc[19];
qr[247] = sc[4]*sc[8];

// reaction 245: HONO + O <=> NO2 + OH
qf[248] = sc[12]*sc[23];
qr[248] = sc[13]*sc[19];

// reaction 246: HONO + OH <=> H2O + NO2
qf[249] = sc[13]*sc[23];
qr[249] = sc[15]*sc[19];

// reaction 247: 2 HONO <=> H2O + NO + NO2
qf[250] = (sc[23] * sc[23]);
qr[250] = sc[3]*sc[15]*sc[19];

// reaction 248: HNO + O <=> NO + OH
qf[251] = sc[12]*sc[21];
qr[251] = sc[3]*sc[13];

// reaction 249: HNO + OH <=> H2O + NO
qf[252] = sc[13]*sc[21];
qr[252] = sc[3]*sc[15];

// reaction 250: HNO + NO2 <=> HONO + NO
qf[253] = sc[19]*sc[21];
qr[253] = sc[3]*sc[23];

// reaction 251: 2 HNO <=> H2O + N2O
qf[254] = (sc[21] * sc[21]);
qr[254] = sc[4]*sc[15];

// reaction 252: HNO + NO <=> N2O + OH
qf[255] = sc[3]*sc[21];
qr[255] = sc[4]*sc[13];

// reaction 253: N + NO2 <=> N2O + O
qf[256] = sc[19]*sc[25];
qr[256] = sc[4]*sc[12];

// reaction 254: N + O2 <=> NO + O
qf[257] = sc[8]*sc[25];
qr[257] = sc[3]*sc[12];

// reaction 255: N + N2O <=> N2 + NO
qf[258] = sc[4]*sc[25];
qr[258] = sc[3]*sc[45];

// reaction 256: N2O + NO <=> N2 + NO2
qf[259] = sc[3]*sc[4];
qr[259] = sc[19]*sc[45];

// reaction 259: H + HNO2 <=> H2 + NO2
qf[260] = sc[11]*sc[36];
qr[260] = sc[9]*sc[19];

// reaction 260: HNO2 + O <=> NO2 + OH
qf[261] = sc[12]*sc[36];
qr[261] = sc[13]*sc[19];

// reaction 261: HNO2 + OH <=> H2O + NO2
qf[262] = sc[13]*sc[36];
qr[262] = sc[15]*sc[19];

// reaction 262: HNO2 <=> HONO
qf[263] = sc[36];
qr[263] = sc[23];

// reaction 263: HONO + NH2 <=> NH3 + NO2
qf[264] = sc[23]*sc[27];
qr[264] = sc[19]*sc[20];

// reaction 264: HNO + N <=> NH + NO
qf[265] = sc[21]*sc[25];
qr[265] = sc[3]*sc[28];

// reaction 265: N2O + O <=> N2 + O2
qf[266] = sc[4]*sc[12];
qr[266] = sc[8]*sc[45];

// reaction 266: N2O + O <=> 2 NO
qf[267] = sc[4]*sc[12];
qr[267] = (sc[3] * sc[3]);

// reaction 267: NO3 <=> NO + O2
qf[268] = sc[43];
qr[268] = sc[3]*sc[8];

// reaction 268: 2 NO3 <=> 2 NO2 + O2
qf[269] = (sc[43] * sc[43]);
qr[269] = sc[8]*(sc[19] * sc[19]);

// reaction 270: N2O4 + O <=> N2O3 + O2
qf[270] = sc[12]*sc[37];
qr[270] = sc[8]*sc[38];

// reaction 271: N2O3 + O <=> 2 NO2
qf[271] = sc[12]*sc[38];
qr[271] = (sc[19] * sc[19]);

// compute the mixture concentration
amrex::Real mixture = 0.0;
for (int i = 0; i < 52; ++i) {
mixture += sc[i];
}

// compute the Gibbs free energy
amrex::Real g_RT[52];
gibbs(g_RT, tc);

// reference concentration: P_atm / (RT) in inverse mol/m^3
amrex::Real refC = 101325 / 8.31446 * invT;
amrex::Real refCinv = 1 / refC;

// Evaluate the kfs
amrex::Real k_f, k_r, Corr;
amrex::Real redP, F, logPred, logFcent, troe_c, troe_n, troe, F_troe;

// reaction 0:  H + N2O <=> N2 + OH
k_f = 50000000
           * exp(-(7648.89332023174) * invT);
qf[36] *= k_f;
qr[36] *= k_f * exp(-(g_RT[4] + g_RT[11] - g_RT[13] - g_RT[45]));
// reaction 1:  H + NO (+M) <=> HNO (+M)
k_f = 1500000000
           * exp((-0.4) * tc[0]);
Corr  = mixture;
redP = Corr / k_f * 240 
           * exp(0.206  * tc[0] - (-779.985831997315) *invT);
F = redP / (1.0 + redP);
logPred = log10(redP);
logFcent = log10(
    (0.18)*exp(-tc[1] * 1e+30)
    + 0.82 * exp(-tc[1] * 1e-30)
    + exp(-1e+30 * invT));
troe_c = -0.4 - 0.67 * logFcent;
troe_n = 0.75 - 1.27 * logFcent;
troe = (troe_c + logPred) / (troe_n - 0.14*(troe_c + logPred));
F_troe = exp(M_LN10 * logFcent / (1.0 + troe*troe));
Corr = F * F_troe;
qf[0] *= Corr * k_f;
qr[0] *= Corr * k_f * exp(-(g_RT[3] + g_RT[11] - g_RT[21])) * (refC);
// reaction 2:  N + NO <=> N2 + O
k_f = 21000000
           ;
qf[37] *= k_f;
qr[37] *= k_f * exp(-(g_RT[3] - g_RT[12] + g_RT[25] - g_RT[45]));
// reaction 3:  H + HNO <=> H2 + NO
k_f = 440000
           * exp((0.7) * tc[0] - (327.090832773068) * invT);
qf[38] *= k_f;
qr[38] *= k_f * exp(-(-g_RT[3] - g_RT[9] + g_RT[11] + g_RT[21]));
// reaction 4:  H + N2O <=> NH + NO
k_f = 6.7e+16
           * exp((-2.16) * tc[0] - (18697.0152179744) * invT);
qf[39] *= k_f;
qr[39] *= k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[11] - g_RT[28]));
// reaction 5:  H + O2 <=> O + OH
k_f = 104000000
           * exp(-(7692.16995349094) * invT);
qf[40] *= k_f;
qr[40] *= k_f * exp(-(g_RT[8] + g_RT[11] - g_RT[12] - g_RT[13]));
// reaction 6:  H2 + O <=> H + OH
k_f = 0.0509
           * exp((2.67) * tc[0] - (3166.2392612433) * invT);
qf[41] *= k_f;
qr[41] *= k_f * exp(-(g_RT[9] - g_RT[11] + g_RT[12] - g_RT[13]));
// reaction 7:  H2 + OH <=> H + H2O
k_f = 43800000
           * exp(-(3517.48449397499) * invT);
qf[42] *= k_f;
qr[42] *= k_f * exp(-(g_RT[9] - g_RT[11] + g_RT[13] - g_RT[15]));
// reaction 8:  H2O + O <=> 2 OH
k_f = 2.97
           * exp((2.02) * tc[0] - (6743.10332178324) * invT);
qf[43] *= k_f;
qr[43] *= k_f * exp(-(g_RT[12] - 2.000000*g_RT[13] + g_RT[15]));
// reaction 9:  H2 + M <=> 2 H + M
k_f = 45770000000000
           * exp((-1.4) * tc[0] - (52535.8199100127) * invT);
Corr  = mixture + (0.9)*sc[5] + (2.8)*sc[6] + (1.5)*sc[9] + (11)*sc[15] + (-0.17)*sc[35] + sc[46] + (2)*sc[47];
qf[11] *= Corr * k_f;
qr[11] *= Corr * k_f * exp(-(g_RT[9] - 2.000000*g_RT[11])) * (refCinv);
// reaction 10:  2 O + M <=> O2 + M
k_f = 6165
           * exp((-0.5) * tc[0]);
Corr  = mixture + (0.9)*sc[5] + (2.8)*sc[6] + (1.5)*sc[9] + (-0.17)*sc[10] + (11)*sc[15] + (-0.17)*sc[35] + sc[46] + (2)*sc[47];
qf[12] *= Corr * k_f;
qr[12] *= Corr * k_f * exp(-(-g_RT[8] + 2.000000*g_RT[12])) * (refC);
// reaction 11:  H + O + M <=> OH + M
k_f = 4714000
           * exp((-1) * tc[0]);
Corr  = mixture + (0.5)*sc[5] + sc[6] + (1.5)*sc[9] + (-0.25)*sc[10] + (11)*sc[15] + (-0.25)*sc[35] + sc[46] + (2)*sc[47];
qf[13] *= Corr * k_f;
qr[13] *= Corr * k_f * exp(-(g_RT[11] + g_RT[12] - g_RT[13])) * (refC);
// reaction 12:  H + OH + M <=> H2O + M
k_f = 35000000000
           * exp((-2) * tc[0]);
Corr  = mixture + (-0.27)*sc[9] + (-0.62)*sc[10] + (2.65)*sc[15] + sc[46] + (2)*sc[47];
qf[14] *= Corr * k_f;
qr[14] *= Corr * k_f * exp(-(g_RT[11] + g_RT[13] - g_RT[15])) * (refC);
// reaction 13:  H + O2 (+M) <=> HO2 (+M)
k_f = 4650000
           * exp((0.44) * tc[0]);
Corr  = mixture + (0.9)*sc[5] + (2.8)*sc[6] + (0.3)*sc[9] + (-1)*sc[10] + (9)*sc[15] + (-1)*sc[35] + sc[46] + (2)*sc[47];
redP = Corr / k_f * 17370000 
           * exp(-1.23  * tc[0]);
F = redP / (1.0 + redP);
logPred = log10(redP);
logFcent = log10(
    (0.33)*exp(-tc[1] * 1e+30)
    + 0.67 * exp(-tc[1] * 1e-30)
    + exp(-1e+30 * invT));
troe_c = -0.4 - 0.67 * logFcent;
troe_n = 0.75 - 1.27 * logFcent;
troe = (troe_c + logPred) / (troe_n - 0.14*(troe_c + logPred));
F_troe = exp(M_LN10 * logFcent / (1.0 + troe*troe));
Corr = F * F_troe;
qf[1] *= Corr * k_f;
qr[1] *= Corr * k_f * exp(-(g_RT[8] + g_RT[11] - g_RT[14])) * (refC);
// reaction 14:  H + O2 (+AR) <=> HO2 (+AR)
k_f = 4650000
           * exp((0.44) * tc[0]);
Corr  = mixture;
redP = Corr / k_f * 6810000 
           * exp(-1.2  * tc[0]);
F = redP / (1.0 + redP);
logPred = log10(redP);
logFcent = log10(
    (0.3)*exp(-tc[1] * 1e+30)
    + 0.7 * exp(-tc[1] * 1e-30)
    + exp(-1e+30 * invT));
troe_c = -0.4 - 0.67 * logFcent;
troe_n = 0.75 - 1.27 * logFcent;
troe = (troe_c + logPred) / (troe_n - 0.14*(troe_c + logPred));
F_troe = exp(M_LN10 * logFcent / (1.0 + troe*troe));
Corr = F * F_troe;
qf[2] *= Corr * k_f;
qr[2] *= Corr * k_f * exp(-(g_RT[8] + g_RT[11] - g_RT[14])) * (refC);
// reaction 15:  H + HO2 <=> 2 OH
k_f = 70790000
           * exp(-(148.448916412392) * invT);
qf[44] *= k_f;
qr[44] *= k_f * exp(-(g_RT[11] - 2.000000*g_RT[13] + g_RT[14]));
// reaction 16:  H2 + O2 <=> H + HO2
k_f = 0.5176
           * exp((2.433) * tc[0] - (26923.0980538841) * invT);
qf[45] *= k_f;
qr[45] *= k_f * exp(-(g_RT[8] + g_RT[9] - g_RT[11] - g_RT[14]));
// reaction 17:  HO2 + O <=> O2 + OH
k_f = 32500000
           ;
qf[46] *= k_f;
qr[46] *= k_f * exp(-(-g_RT[8] + g_RT[12] - g_RT[13] + g_RT[14]));
// reaction 18:  HO2 + OH <=> H2O + O2
k_f = 24560000
           * exp(-(-250.098682904946) * invT);
qf[47] *= k_f;
qr[47] *= k_f * exp(-(-g_RT[8] + g_RT[13] + g_RT[14] - g_RT[15]));
// reaction 19:  2 HO2 <=> H2O2 + O2
k_f = 130000
           * exp(-(-820.243165261693) * invT);
qf[48] *= k_f;
qr[48] *= k_f * exp(-(-g_RT[8] + 2.000000*g_RT[14] - g_RT[16]));
// reaction 20:  2 HO2 <=> H2O2 + O2
k_f = 365800000
           * exp(-(6038.59998965664) * invT);
qf[49] *= k_f;
qr[49] *= k_f * exp(-(-g_RT[8] + 2.000000*g_RT[14] - g_RT[16]));
// reaction 21:  H2O2 (+H2O) <=> 2 OH (+H2O)
k_f = 2000000000000
           * exp((0.9) * tc[0] - (24531.8124579801) * invT);
Corr  = mixture;
redP = Corr / k_f * 1.865e+19 
           * exp(-2.3  * tc[0] - (24531.8124579801) *invT);
F = redP / (1.0 + redP);
logPred = log10(redP);
logFcent = log10(
    (0.49)*exp(-tc[1] * 1e+30)
    + 0.51 * exp(-tc[1] * 1e-30)
    + 0.0);
troe_c = -0.4 - 0.67 * logFcent;
troe_n = 0.75 - 1.27 * logFcent;
troe = (troe_c + logPred) / (troe_n - 0.14*(troe_c + logPred));
F_troe = exp(M_LN10 * logFcent / (1.0 + troe*troe));
Corr = F * F_troe;
qf[3] *= Corr * k_f;
qr[3] *= Corr * k_f * exp(-(-2.000000*g_RT[13] + g_RT[16])) * (refCinv);
// reaction 22:  H2O2 (+M) <=> 2 OH (+M)
k_f = 2000000000000
           * exp((0.9) * tc[0] - (24531.8124579801) * invT);
Corr  = mixture + (1.8)*sc[5] + (0.6)*sc[6] + (0.2)*sc[8] + (2.7)*sc[9] + (-1)*sc[15] + (6.7)*sc[16] + (-0.35)*sc[35] + (0.5)*sc[45];
redP = Corr / k_f * 2.49e+18 
           * exp(-2.3  * tc[0] - (24531.8124579801) *invT);
F = redP / (1.0 + redP);
logPred = log10(redP);
logFcent = log10(
    (0.57)*exp(-tc[1] * 1e+30)
    + 0.43 * exp(-tc[1] * 1e-30)
    + 0.0);
troe_c = -0.4 - 0.67 * logFcent;
troe_n = 0.75 - 1.27 * logFcent;
troe = (troe_c + logPred) / (troe_n - 0.14*(troe_c + logPred));
F_troe = exp(M_LN10 * logFcent / (1.0 + troe*troe));
Corr = F * F_troe;
qf[4] *= Corr * k_f;
qr[4] *= Corr * k_f * exp(-(-2.000000*g_RT[13] + g_RT[16])) * (refCinv);
// reaction 23:  H + H2O2 <=> H2O + OH
k_f = 24100000
           * exp(-(1997.77016324474) * invT);
qf[50] *= k_f;
qr[50] *= k_f * exp(-(g_RT[11] - g_RT[13] - g_RT[15] + g_RT[16]));
// reaction 24:  H + H2O2 <=> H2 + HO2
k_f = 21500
           * exp((1) * tc[0] - (3019.29999482832) * invT);
qf[51] *= k_f;
qr[51] *= k_f * exp(-(-g_RT[9] + g_RT[11] - g_RT[14] + g_RT[16]));
// reaction 25:  H2O2 + O <=> HO2 + OH
k_f = 9.55
           * exp((2) * tc[0] - (1997.77016324474) * invT);
qf[52] *= k_f;
qr[52] *= k_f * exp(-(g_RT[12] - g_RT[13] - g_RT[14] + g_RT[16]));
// reaction 26:  H2O2 + OH <=> H2O + HO2
k_f = 1740000
           * exp(-(160.022899725901) * invT);
qf[53] *= k_f;
qr[53] *= k_f * exp(-(g_RT[13] - g_RT[14] - g_RT[15] + g_RT[16]));
// reaction 27:  H2O2 + OH <=> H2O + HO2
k_f = 75900000
           * exp(-(3657.88194373451) * invT);
qf[54] *= k_f;
qr[54] *= k_f * exp(-(g_RT[13] - g_RT[14] - g_RT[15] + g_RT[16]));
// reaction 28:  CO + O (+M) <=> CO2 (+M)
k_f = 13620
           * exp(-(1199.66853127845) * invT);
Corr  = mixture + (0.75)*sc[5] + (2.6)*sc[6] + sc[9] + (-0.3)*sc[10] + (11)*sc[15] + (-0.3)*sc[35];
redP = Corr / k_f * 1173000000000 
           * exp(-2.79  * tc[0] - (2108.98104638758) *invT);
Corr = redP / (1. + redP);
qf[7] *= Corr * k_f;
qr[7] *= Corr * k_f * exp(-(g_RT[5] - g_RT[6] + g_RT[12])) * (refC);
// reaction 29:  CO + O2 <=> CO2 + O
k_f = 1119000
           * exp(-(24003.4349588851) * invT);
qf[55] *= k_f;
qr[55] *= k_f * exp(-(g_RT[5] - g_RT[6] + g_RT[8] - g_RT[12]));
// reaction 30:  CO + OH <=> CO2 + H
k_f = 0.07015
           * exp((2.053) * tc[0] - (-178.994168026739) * invT);
qf[56] *= k_f;
qr[56] *= k_f * exp(-(g_RT[5] - g_RT[6] - g_RT[11] + g_RT[13]));
// reaction 31:  CO + OH <=> CO2 + H
k_f = 5757000
           * exp((-0.664) * tc[0] - (166.967289714006) * invT);
qf[57] *= k_f;
qr[57] *= k_f * exp(-(g_RT[5] - g_RT[6] - g_RT[11] + g_RT[13]));
// reaction 32:  CO + HO2 <=> CO2 + OH
k_f = 0.157
           * exp((2.18) * tc[0] - (9027.70698453667) * invT);
qf[58] *= k_f;
qr[58] *= k_f * exp(-(g_RT[5] - g_RT[6] - g_RT[13] + g_RT[14]));
// reaction 33:  HCO + M <=> CO + H + M
k_f = 570000
           * exp((0.66) * tc[0] - (7482.83182051618) * invT);
Corr  = mixture + (0.5)*sc[5] + sc[6] + sc[9] + (11)*sc[15] + sc[46] + (2)*sc[47];
qf[15] *= Corr * k_f;
qr[15] *= Corr * k_f * exp(-(-g_RT[5] - g_RT[11] + g_RT[17])) * (refCinv);
// reaction 34:  HCO + O2 <=> CO + HO2
k_f = 7580000
           * exp(-(206.318832979935) * invT);
qf[59] *= k_f;
qr[59] *= k_f * exp(-(-g_RT[5] + g_RT[8] - g_RT[14] + g_RT[17]));
// reaction 35:  H + HCO <=> CO + H2
k_f = 73400000
           ;
qf[60] *= k_f;
qr[60] *= k_f * exp(-(-g_RT[5] - g_RT[9] + g_RT[11] + g_RT[17]));
// reaction 36:  HCO + O <=> CO + OH
k_f = 30200000
           ;
qf[61] *= k_f;
qr[61] *= k_f * exp(-(-g_RT[5] + g_RT[12] - g_RT[13] + g_RT[17]));
// reaction 37:  HCO + O <=> CO2 + H
k_f = 30000000
           ;
qf[62] *= k_f;
qr[62] *= k_f * exp(-(-g_RT[6] - g_RT[11] + g_RT[12] + g_RT[17]));
// reaction 38:  HCO + OH <=> CO + H2O
k_f = 102000000
           ;
qf[63] *= k_f;
qr[63] *= k_f * exp(-(-g_RT[5] + g_RT[13] - g_RT[15] + g_RT[17]));
// reaction 39:  HCO + HO2 => CO2 + H + OH
k_f = 30000000
           ;
qf[64] *= k_f;
qr[64] *= k_f * exp(-(-g_RT[6] - g_RT[11] - g_RT[13] + g_RT[14] + g_RT[17])) * (refCinv);
// reaction 40:  2 HCO => 2 CO + H2
k_f = 3000000
           ;
qf[65] *= k_f;
qr[65] *= k_f * exp(-(-2.000000*g_RT[5] - g_RT[9] + 2.000000*g_RT[17])) * (refCinv);
// reaction 41:  CH2O + O2 <=> HCO + HO2
k_f = 8070000000
           * exp(-(26881.8342872881) * invT);
qf[66] *= k_f;
qr[66] *= k_f * exp(-(g_RT[8] - g_RT[14] - g_RT[17] + g_RT[18]));
// reaction 42:  2 HCO <=> CH2O + CO
k_f = 18000000
           ;
qf[67] *= k_f;
qr[67] *= k_f * exp(-(-g_RT[5] + 2.000000*g_RT[17] - g_RT[18]));
// reaction 43:  HCN + M <=> CN + H + M
k_f = 3.4e+29
           * exp((-5.13) * tc[0] - (66927.8165520277) * invT);
Corr  = mixture + (0.5)*sc[8] + (9)*sc[15] + (-1)*sc[45];
qf[16] *= Corr * k_f;
qr[16] *= Corr * k_f * exp(-(g_RT[1] - g_RT[11] - g_RT[29])) * (refCinv);
// reaction 44:  HCN + N2 <=> CN + H + N2
k_f = 3.6e+20
           * exp((-2.6) * tc[0] - (62846.7293923514) * invT);
qf[17] *= k_f;
qr[17] *= k_f * exp(-(g_RT[1] - g_RT[11] - g_RT[29])) * (refCinv);
// reaction 45:  HCN + M <=> HNC + M
k_f = 1.6e+20
           * exp((-3.23) * tc[0] - (27475.6299529377) * invT);
Corr  = mixture + sc[6] + (-0.3)*sc[10] + (6)*sc[15];
qf[18] *= Corr * k_f;
qr[18] *= Corr * k_f * exp(-(g_RT[1] - g_RT[7]));
// reaction 46:  CN + H2 <=> H + HCN
k_f = 0.11
           * exp((2.6) * tc[0] - (960.137398355405) * invT);
qf[68] *= k_f;
qr[68] *= k_f * exp(-(-g_RT[1] + g_RT[9] - g_RT[11] + g_RT[29]));
// reaction 47:  HCN + O <=> H + NCO
k_f = 0.014
           * exp((2.64) * tc[0] - (2506.0189957075) * invT);
qf[69] *= k_f;
qr[69] *= k_f * exp(-(g_RT[1] - g_RT[11] + g_RT[12] - g_RT[30]));
// reaction 48:  HCN + O <=> CN + OH
k_f = 42000
           * exp((0.4) * tc[0] - (10398.9723988545) * invT);
qf[70] *= k_f;
qr[70] *= k_f * exp(-(g_RT[1] + g_RT[12] - g_RT[13] - g_RT[29]));
// reaction 49:  HCN + O <=> CO + NH
k_f = 0.0035
           * exp((2.64) * tc[0] - (2506.0189957075) * invT);
qf[71] *= k_f;
qr[71] *= k_f * exp(-(g_RT[1] - g_RT[5] + g_RT[12] - g_RT[28]));
// reaction 50:  HCN + OH <=> CN + H2O
k_f = 3.9
           * exp((1.83) * tc[0] - (5183.13165778861) * invT);
qf[72] *= k_f;
qr[72] *= k_f * exp(-(g_RT[1] + g_RT[13] - g_RT[15] - g_RT[29]));
// reaction 51:  HCN + OH <=> H + HOCN
k_f = 0.059
           * exp((2.4) * tc[0] - (6290.208322559) * invT);
qf[73] *= k_f;
qr[73] *= k_f * exp(-(g_RT[1] - g_RT[11] + g_RT[13] - g_RT[32]));
// reaction 52:  HCN + OH <=> H + HNCO
k_f = 2e-09
           * exp((4) * tc[0] - (503.21666580472) * invT);
qf[74] *= k_f;
qr[74] *= k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[11] + g_RT[13]));
// reaction 53:  HCN + OH <=> CO + NH2
k_f = 7.8e-10
           * exp((4) * tc[0] - (2012.86666321888) * invT);
qf[75] *= k_f;
qr[75] *= k_f * exp(-(g_RT[1] - g_RT[5] + g_RT[13] - g_RT[27]));
// reaction 54:  HCN + O2 <=> CN + HO2
k_f = 30000000
           * exp(-(37791.5716019344) * invT);
qf[76] *= k_f;
qr[76] *= k_f * exp(-(g_RT[1] + g_RT[8] - g_RT[14] - g_RT[29]));
// reaction 55:  CN + HCN <=> H + NCCN
k_f = 15
           * exp((1.71) * tc[0] - (769.921498681221) * invT);
qf[77] *= k_f;
qr[77] *= k_f * exp(-(g_RT[1] - g_RT[11] + g_RT[29] - g_RT[31]));
// reaction 56:  H + HNC <=> H + HCN
k_f = 78000000
           * exp(-(1811.57999689699) * invT);
qf[78] *= k_f;
qr[78] *= k_f * exp(-(-g_RT[1] + g_RT[7] + g_RT[11] - g_RT[11]));
// reaction 57:  HNC + O <=> CO + NH
k_f = 4600000
           * exp(-(1107.07666477038) * invT);
qf[79] *= k_f;
qr[79] *= k_f * exp(-(-g_RT[5] + g_RT[7] + g_RT[12] - g_RT[28]));
// reaction 58:  HNC + OH <=> H + HNCO
k_f = 28000000
           * exp(-(1861.90166347746) * invT);
qf[80] *= k_f;
qr[80] *= k_f * exp(-(-g_RT[2] + g_RT[7] - g_RT[11] + g_RT[13]));
// reaction 59:  CN + HNC <=> H + NCCN
k_f = 10000000
           ;
qf[81] *= k_f;
qr[81] *= k_f * exp(-(g_RT[7] - g_RT[11] + g_RT[29] - g_RT[31]));
// reaction 60:  CN + O <=> CO + N
k_f = 1900000
           * exp((0.46) * tc[0] - (363.825649376812) * invT);
qf[82] *= k_f;
qr[82] *= k_f * exp(-(-g_RT[5] + g_RT[12] - g_RT[25] + g_RT[29]));
// reaction 61:  CN + OH <=> H + NCO
k_f = 1000000000
           * exp((-0.437) * tc[0]);
qf[83] *= k_f;
qr[83] *= k_f * exp(-(-g_RT[11] + g_RT[13] + g_RT[29] - g_RT[30]));
// reaction 62:  CN + O2 <=> NCO + O
k_f = 7200000
           * exp(-(-209.841349640568) * invT);
qf[84] *= k_f;
qr[84] *= k_f * exp(-(g_RT[8] - g_RT[12] + g_RT[29] - g_RT[30]));
// reaction 63:  CN + O2 <=> NCO + O
k_f = -280000000000
           * exp((-2) * tc[0]);
qf[85] *= k_f;
qr[85] *= k_f * exp(-(g_RT[8] - g_RT[12] + g_RT[29] - g_RT[30]));
// reaction 64:  CN + O2 <=> CO + NO
k_f = 280000000000
           * exp((-2) * tc[0]);
qf[86] *= k_f;
qr[86] *= k_f * exp(-(-g_RT[3] - g_RT[5] + g_RT[8] + g_RT[29]));
// reaction 65:  CN + CO2 <=> CO + NCO
k_f = 3.7
           * exp((2.16) * tc[0] - (13536.528310147) * invT);
qf[87] *= k_f;
qr[87] *= k_f * exp(-(-g_RT[5] + g_RT[6] + g_RT[29] - g_RT[30]));
// reaction 66:  CH2O + CN <=> HCN + HCO
k_f = 42000000
           ;
qf[88] *= k_f;
qr[88] *= k_f * exp(-(-g_RT[1] - g_RT[17] + g_RT[18] + g_RT[29]));
// reaction 67:  CN + NO <=> N + NCO
k_f = 96000000
           * exp(-(21185.4216303787) * invT);
qf[89] *= k_f;
qr[89] *= k_f * exp(-(g_RT[3] - g_RT[25] + g_RT[29] - g_RT[30]));
// reaction 68:  CN + NO2 <=> NCO + NO
k_f = 5300000000
           * exp((-0.752) * tc[0] - (173.106533036824) * invT);
qf[90] *= k_f;
qr[90] *= k_f * exp(-(-g_RT[3] + g_RT[19] + g_RT[29] - g_RT[30]));
// reaction 69:  CN + NO2 <=> CO + N2O
k_f = 490000000
           * exp((-0.752) * tc[0] - (173.106533036824) * invT);
qf[91] *= k_f;
qr[91] *= k_f * exp(-(-g_RT[4] - g_RT[5] + g_RT[19] + g_RT[29]));
// reaction 70:  CN + NO2 <=> CO2 + N2
k_f = 370000000
           * exp((-0.752) * tc[0] - (173.106533036824) * invT);
qf[92] *= k_f;
qr[92] *= k_f * exp(-(-g_RT[6] + g_RT[19] + g_RT[29] - g_RT[45]));
// reaction 71:  CN + HNO <=> HCN + NO
k_f = 18000000
           ;
qf[93] *= k_f;
qr[93] *= k_f * exp(-(-g_RT[1] - g_RT[3] + g_RT[21] + g_RT[29]));
// reaction 72:  CN + HONO <=> HCN + NO2
k_f = 12000000
           ;
qf[94] *= k_f;
qr[94] *= k_f * exp(-(-g_RT[1] - g_RT[19] + g_RT[23] + g_RT[29]));
// reaction 73:  CN + N2O <=> NCN + NO
k_f = 0.0038
           * exp((2.6) * tc[0] - (1861.90166347746) * invT);
qf[95] *= k_f;
qr[95] *= k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[29] - g_RT[34]));
// reaction 74:  CN + HNCO <=> HCN + NCO
k_f = 10000000
           ;
qf[96] *= k_f;
qr[96] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[29] - g_RT[30]));
// reaction 75:  CN + NCO <=> CO + NCN
k_f = 18000000
           ;
qf[97] *= k_f;
qr[97] *= k_f * exp(-(-g_RT[5] + g_RT[29] + g_RT[30] - g_RT[34]));
// reaction 76:  HNCO + M <=> CO + NH + M
k_f = 11000000000
           * exp(-(43276.6332592059) * invT);
qf[19] *= k_f;
qr[19] *= k_f * exp(-(g_RT[2] - g_RT[5] - g_RT[28])) * (refCinv);
// reaction 77:  H + HNCO <=> CO + NH2
k_f = 0.036
           * exp((2.49) * tc[0] - (1180.04308131207) * invT);
qf[98] *= k_f;
qr[98] *= k_f * exp(-(g_RT[2] - g_RT[5] + g_RT[11] - g_RT[27]));
// reaction 78:  H + HNCO <=> H2 + NCO
k_f = 90
           * exp((1.66) * tc[0] - (6994.7116546856) * invT);
qf[99] *= k_f;
qr[99] *= k_f * exp(-(g_RT[2] - g_RT[9] + g_RT[11] - g_RT[30]));
// reaction 79:  HNCO + O <=> NCO + OH
k_f = 2.2
           * exp((2.11) * tc[0] - (5751.76649014795) * invT);
qf[100] *= k_f;
qr[100] *= k_f * exp(-(g_RT[2] + g_RT[12] - g_RT[13] - g_RT[30]));
// reaction 80:  HNCO + O <=> CO2 + NH
k_f = 96
           * exp((1.41) * tc[0] - (4287.40599265621) * invT);
qf[101] *= k_f;
qr[101] *= k_f * exp(-(g_RT[2] - g_RT[6] + g_RT[12] - g_RT[28]));
// reaction 81:  HNCO + O <=> CO + HNO
k_f = 150
           * exp((1.57) * tc[0] - (22147.5718953973) * invT);
qf[102] *= k_f;
qr[102] *= k_f * exp(-(g_RT[2] - g_RT[5] + g_RT[12] - g_RT[21]));
// reaction 82:  HNCO + OH <=> H2O + NCO
k_f = 36
           * exp((1.5) * tc[0] - (1811.57999689699) * invT);
qf[103] *= k_f;
qr[103] *= k_f * exp(-(g_RT[2] + g_RT[13] - g_RT[15] - g_RT[30]));
// reaction 83:  HNCO + HO2 <=> H2O2 + NCO
k_f = 300000
           * exp(-(11070.7666477038) * invT);
qf[104] *= k_f;
qr[104] *= k_f * exp(-(g_RT[2] + g_RT[14] - g_RT[16] - g_RT[30]));
// reaction 84:  HNCO + O2 <=> CO2 + HNO
k_f = 1000000
           * exp(-(17612.5833031652) * invT);
qf[105] *= k_f;
qr[105] *= k_f * exp(-(g_RT[2] - g_RT[6] + g_RT[8] - g_RT[21]));
// reaction 85:  HNCO + NH <=> NCO + NH2
k_f = 30000000
           * exp(-(11926.2349795719) * invT);
qf[106] *= k_f;
qr[106] *= k_f * exp(-(g_RT[2] - g_RT[27] + g_RT[28] - g_RT[30]));
// reaction 86:  H + HOCN <=> H + HNCO
k_f = 310
           * exp((0.84) * tc[0] - (964.666348347648) * invT);
qf[107] *= k_f;
qr[107] *= k_f * exp(-(-g_RT[2] + g_RT[11] - g_RT[11] + g_RT[32]));
// reaction 87:  H + HOCN <=> CO + NH2
k_f = 120
           * exp((0.61) * tc[0] - (1044.6777982106) * invT);
qf[108] *= k_f;
qr[108] *= k_f * exp(-(-g_RT[5] + g_RT[11] - g_RT[27] + g_RT[32]));
// reaction 88:  H + HOCN <=> H2 + NCO
k_f = 240
           * exp((1.5) * tc[0] - (3329.78467762983) * invT);
qf[109] *= k_f;
qr[109] *= k_f * exp(-(-g_RT[9] + g_RT[11] - g_RT[30] + g_RT[32]));
// reaction 89:  HOCN + O <=> NCO + OH
k_f = 170
           * exp((1.5) * tc[0] - (2079.79447977091) * invT);
qf[110] *= k_f;
qr[110] *= k_f * exp(-(g_RT[12] - g_RT[13] - g_RT[30] + g_RT[32]));
// reaction 90:  HOCN + OH <=> H2O + NCO
k_f = 1.2
           * exp((2) * tc[0] - (-124.79773311957) * invT);
qf[111] *= k_f;
qr[111] *= k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[30] + g_RT[32]));
// reaction 91:  HOCN + NH2 <=> NCO + NH3
k_f = 0.92
           * exp((1.94) * tc[0] - (1834.72796352401) * invT);
qf[112] *= k_f;
qr[112] *= k_f * exp(-(-g_RT[20] + g_RT[27] - g_RT[30] + g_RT[32]));
// reaction 92:  HCNO <=> HCN + O
k_f = 4.2e+31
           * exp((-6.12) * tc[0] - (30801.8921139069) * invT);
qf[113] *= k_f;
qr[113] *= k_f * exp(-(-g_RT[1] - g_RT[12] + g_RT[33])) * (refCinv);
// reaction 93:  H + HCNO <=> HCN + OH
k_f = 72000
           * exp((0.841) * tc[0] - (4333.70192591025) * invT);
qf[114] *= k_f;
qr[114] *= k_f * exp(-(-g_RT[1] + g_RT[11] - g_RT[13] + g_RT[33]));
// reaction 94:  HCNO + O <=> HCO + NO
k_f = 63000000
           ;
qf[115] *= k_f;
qr[115] *= k_f * exp(-(-g_RT[3] + g_RT[12] - g_RT[17] + g_RT[33]));
// reaction 95:  HCNO + OH <=> CH2O + NO
k_f = 1000000
           ;
qf[116] *= k_f;
qr[116] *= k_f * exp(-(-g_RT[3] + g_RT[13] - g_RT[18] + g_RT[33]));
// reaction 96:  HCNO + O <=> NCO + OH
k_f = 7000000
           ;
qf[117] *= k_f;
qr[117] *= k_f * exp(-(g_RT[12] - g_RT[13] - g_RT[30] + g_RT[33]));
// reaction 97:  HCNO + OH <=> CO + H2 + NO
k_f = 6500000
           ;
qf[118] *= k_f;
qr[118] *= k_f * exp(-(-g_RT[3] - g_RT[5] - g_RT[9] + g_RT[13] + g_RT[33])) * (refCinv);
// reaction 98:  HCNO + OH <=> H + NCO + OH
k_f = 4500000
           ;
qf[20] *= k_f;
qr[20] *= k_f * exp(-(-g_RT[11] - g_RT[30] + g_RT[33])) * (refCinv);
// reaction 99:  HCNO + OH <=> H2O + NCO
k_f = 3500000
           ;
qf[119] *= k_f;
qr[119] *= k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[30] + g_RT[33]));
// reaction 100:  HCNO + OH <=> HCO + HNO
k_f = 4500000
           ;
qf[120] *= k_f;
qr[120] *= k_f * exp(-(g_RT[13] - g_RT[17] - g_RT[21] + g_RT[33]));
// reaction 101:  NCO + M <=> CO + N + M
k_f = 220000000
           * exp(-(27198.8607867451) * invT);
qf[21] *= k_f;
qr[21] *= k_f * exp(-(-g_RT[5] - g_RT[25] + g_RT[30])) * (refCinv);
// reaction 102:  H + NCO <=> CO + NH
k_f = 72000000
           * exp(-(503.21666580472) * invT);
qf[121] *= k_f;
qr[121] *= k_f * exp(-(-g_RT[5] + g_RT[11] - g_RT[28] + g_RT[30]));
// reaction 103:  NCO + O <=> CO + NO
k_f = 2000000000
           * exp((-0.5) * tc[0]);
qf[122] *= k_f;
qr[122] *= k_f * exp(-(-g_RT[3] - g_RT[5] + g_RT[12] + g_RT[30]));
// reaction 104:  NCO + OH <=> CO + HON
k_f = 5300000
           * exp((-0.07) * tc[0] - (2579.48862891499) * invT);
qf[123] *= k_f;
qr[123] *= k_f * exp(-(-g_RT[5] + g_RT[13] - g_RT[22] + g_RT[30]));
// reaction 105:  NCO + OH <=> CO + H + NO
k_f = 8300000
           * exp((-0.05) * tc[0] - (9079.03508444875) * invT);
qf[124] *= k_f;
qr[124] *= k_f * exp(-(-g_RT[3] - g_RT[5] - g_RT[11] + g_RT[13] + g_RT[30])) * (refCinv);
// reaction 106:  HO2 + NCO <=> HNCO + O2
k_f = 20000000
           ;
qf[125] *= k_f;
qr[125] *= k_f * exp(-(-g_RT[2] - g_RT[8] + g_RT[14] + g_RT[30]));
// reaction 107:  NCO + O2 <=> CO2 + NO
k_f = 2000000
           * exp(-(10064.3333160944) * invT);
qf[126] *= k_f;
qr[126] *= k_f * exp(-(-g_RT[3] - g_RT[6] + g_RT[8] + g_RT[30]));
// reaction 108:  HCO + NCO <=> CO + HNCO
k_f = 36000000
           ;
qf[127] *= k_f;
qr[127] *= k_f * exp(-(-g_RT[2] - g_RT[5] + g_RT[17] + g_RT[30]));
// reaction 109:  CH2O + NCO <=> HCO + HNCO
k_f = 6000000
           ;
qf[128] *= k_f;
qr[128] *= k_f * exp(-(-g_RT[2] - g_RT[17] + g_RT[18] + g_RT[30]));
// reaction 110:  NCO + NO <=> CO + N2O
k_f = 40000000000000
           * exp((-2.19) * tc[0] - (877.106648497626) * invT);
qf[129] *= k_f;
qr[129] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[5] + g_RT[30]));
// reaction 111:  NCO + NO <=> CO2 + N2
k_f = 1.5e+15
           * exp((-2.74) * tc[0] - (917.867198427809) * invT);
qf[130] *= k_f;
qr[130] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[30] - g_RT[45]));
// reaction 112:  NCO + NO2 <=> CO + 2 NO
k_f = 250000
           * exp(-(355.774182723937) * invT);
qf[131] *= k_f;
qr[131] *= k_f * exp(-(-2.000000*g_RT[3] - g_RT[5] + g_RT[19] + g_RT[30])) * (refCinv);
// reaction 113:  NCO + NO2 <=> CO2 + N2O
k_f = 3000000
           * exp(-(-355.774182723937) * invT);
qf[132] *= k_f;
qr[132] *= k_f * exp(-(-g_RT[4] - g_RT[6] + g_RT[19] + g_RT[30]));
// reaction 114:  HNO + NCO <=> HNCO + NO
k_f = 18000000
           ;
qf[133] *= k_f;
qr[133] *= k_f * exp(-(-g_RT[2] - g_RT[3] + g_RT[21] + g_RT[30]));
// reaction 115:  HONO + NCO <=> HNCO + NO2
k_f = 3600000
           ;
qf[134] *= k_f;
qr[134] *= k_f * exp(-(-g_RT[2] - g_RT[19] + g_RT[23] + g_RT[30]));
// reaction 116:  N + NCO <=> CO + N2
k_f = 20000000
           ;
qf[135] *= k_f;
qr[135] *= k_f * exp(-(-g_RT[5] + g_RT[25] + g_RT[30] - g_RT[45]));
// reaction 117:  NCO + NH3 <=> HNCO + NH2
k_f = 0.028
           * exp((2.48) * tc[0] - (493.152332488625) * invT);
qf[136] *= k_f;
qr[136] *= k_f * exp(-(-g_RT[2] + g_RT[20] - g_RT[27] + g_RT[30]));
// reaction 118:  2 NCO <=> 2 CO + N2
k_f = 18000000
           ;
qf[137] *= k_f;
qr[137] *= k_f * exp(-(-2.000000*g_RT[5] + 2.000000*g_RT[30] - g_RT[45])) * (refCinv);
// reaction 119:  H2CN <=> H + HCN
k_f = 4e+28
           * exp((-6.03) * tc[0] - (15044.6686575637) * invT);
qf[138] *= k_f;
qr[138] *= k_f * exp(-(-g_RT[1] - g_RT[11] + g_RT[40])) * (refCinv);
// reaction 120:  H + H2CN <=> H2 + HCN
k_f = 240
           * exp((1.5) * tc[0] - (-449.875699229419) * invT);
qf[139] *= k_f;
qr[139] *= k_f * exp(-(-g_RT[1] - g_RT[9] + g_RT[11] + g_RT[40]));
// reaction 121:  H2CN + O <=> HCN + OH
k_f = 170
           * exp((1.5) * tc[0] - (-449.875699229419) * invT);
qf[140] *= k_f;
qr[140] *= k_f * exp(-(-g_RT[1] + g_RT[12] - g_RT[13] + g_RT[40]));
// reaction 122:  H2CN + OH <=> H2O + HCN
k_f = 15000000000000
           * exp((-2.18) * tc[0] - (1089.96729813302) * invT);
qf[141] *= k_f;
qr[141] *= k_f * exp(-(-g_RT[1] + g_RT[13] - g_RT[15] + g_RT[40]));
// reaction 123:  H2CN + OH <=> H2O + HCN
k_f = 1.2
           * exp((2) * tc[0] - (-599.834265639226) * invT);
qf[142] *= k_f;
qr[142] *= k_f * exp(-(-g_RT[1] + g_RT[13] - g_RT[15] + g_RT[40]));
// reaction 124:  H2CN + O2 <=> CH2O + NO
k_f = 3000000
           * exp(-(2999.67454486193) * invT);
qf[143] *= k_f;
qr[143] *= k_f * exp(-(-g_RT[3] + g_RT[8] - g_RT[18] + g_RT[40]));
// reaction 125:  H2CN + NH2 <=> HCN + NH3
k_f = 0.92
           * exp((1.94) * tc[0] - (-579.705599007037) * invT);
qf[144] *= k_f;
qr[144] *= k_f * exp(-(-g_RT[1] - g_RT[20] + g_RT[27] + g_RT[40]));
// reaction 126:  HCNH <=> H + HCN
k_f = 6.1e+28
           * exp((-5.69) * tc[0] - (12213.5716957464) * invT);
qf[145] *= k_f;
qr[145] *= k_f * exp(-(-g_RT[1] - g_RT[11] + g_RT[41])) * (refCinv);
// reaction 127:  H + HCNH <=> H + H2CN
k_f = 20000000
           ;
qf[146] *= k_f;
qr[146] *= k_f * exp(-(g_RT[11] - g_RT[11] - g_RT[40] + g_RT[41]));
// reaction 128:  H + HCNH <=> H2 + HCN
k_f = 240
           * exp((1.5) * tc[0] - (-449.875699229419) * invT);
qf[147] *= k_f;
qr[147] *= k_f * exp(-(-g_RT[1] - g_RT[9] + g_RT[11] + g_RT[41]));
// reaction 129:  HCNH + O <=> H + HNCO
k_f = 70000000
           ;
qf[148] *= k_f;
qr[148] *= k_f * exp(-(-g_RT[2] - g_RT[11] + g_RT[12] + g_RT[41]));
// reaction 130:  HCNH + O <=> HCN + OH
k_f = 170
           * exp((1.5) * tc[0] - (-449.875699229419) * invT);
qf[149] *= k_f;
qr[149] *= k_f * exp(-(-g_RT[1] + g_RT[12] - g_RT[13] + g_RT[41]));
// reaction 131:  HCNH + OH <=> H2O + HCN
k_f = 1.2
           * exp((2) * tc[0] - (-599.834265639226) * invT);
qf[150] *= k_f;
qr[150] *= k_f * exp(-(-g_RT[1] + g_RT[13] - g_RT[15] + g_RT[41]));
// reaction 132:  NH3 + M <=> H + NH2 + M
k_f = 22000000000
           * exp(-(47035.6617527671) * invT);
Corr  = mixture;
qf[22] *= Corr * k_f;
qr[22] *= Corr * k_f * exp(-(-g_RT[11] + g_RT[20] - g_RT[27])) * (refCinv);
// reaction 133:  H + NH3 <=> H2 + NH2
k_f = 0.64
           * exp((2.39) * tc[0] - (5118.2167078998) * invT);
qf[151] *= k_f;
qr[151] *= k_f * exp(-(-g_RT[9] + g_RT[11] + g_RT[20] - g_RT[27]));
// reaction 134:  NH3 + O <=> NH2 + OH
k_f = 9.4
           * exp((1.94) * tc[0] - (3250.77966109849) * invT);
qf[152] *= k_f;
qr[152] *= k_f * exp(-(g_RT[12] - g_RT[13] + g_RT[20] - g_RT[27]));
// reaction 135:  NH3 + OH <=> H2O + NH2
k_f = 2
           * exp((2.04) * tc[0] - (284.820632845471) * invT);
qf[153] *= k_f;
qr[153] *= k_f * exp(-(g_RT[13] - g_RT[15] + g_RT[20] - g_RT[27]));
// reaction 136:  HO2 + NH3 <=> H2O2 + NH2
k_f = 300000
           * exp(-(11070.7666477038) * invT);
qf[154] *= k_f;
qr[154] *= k_f * exp(-(g_RT[14] - g_RT[16] + g_RT[20] - g_RT[27]));
// reaction 137:  H + NH2 <=> H2 + NH
k_f = 40000000
           * exp(-(1836.74083018723) * invT);
qf[155] *= k_f;
qr[155] *= k_f * exp(-(-g_RT[9] + g_RT[11] + g_RT[27] - g_RT[28]));
// reaction 138:  NH2 + O <=> H + HNO
k_f = 660000000
           * exp((-0.5) * tc[0]);
qf[156] *= k_f;
qr[156] *= k_f * exp(-(-g_RT[11] + g_RT[12] - g_RT[21] + g_RT[27]));
// reaction 139:  NH2 + O <=> NH + OH
k_f = 6800000
           ;
qf[157] *= k_f;
qr[157] *= k_f * exp(-(g_RT[12] - g_RT[13] + g_RT[27] - g_RT[28]));
// reaction 140:  NH2 + OH <=> H2O + NH
k_f = 4
           * exp((2) * tc[0] - (503.21666580472) * invT);
qf[158] *= k_f;
qr[158] *= k_f * exp(-(g_RT[13] - g_RT[15] + g_RT[27] - g_RT[28]));
// reaction 141:  HO2 + NH2 <=> H2NO + OH
k_f = 50000000
           ;
qf[159] *= k_f;
qr[159] *= k_f * exp(-(-g_RT[13] + g_RT[14] - g_RT[24] + g_RT[27]));
// reaction 142:  HO2 + NH2 <=> NH3 + O2
k_f = 0.92
           * exp((1.94) * tc[0] - (-579.705599007037) * invT);
qf[160] *= k_f;
qr[160] *= k_f * exp(-(-g_RT[8] + g_RT[14] - g_RT[20] + g_RT[27]));
// reaction 143:  NH2 + O2 <=> H2NO + O
k_f = 250000
           * exp((0.48) * tc[0] - (14888.1682744984) * invT);
qf[161] *= k_f;
qr[161] *= k_f * exp(-(g_RT[8] - g_RT[12] - g_RT[24] + g_RT[27]));
// reaction 144:  NH2 + O2 <=> HNO + OH
k_f = 62
           * exp((1.23) * tc[0] - (17662.9049697457) * invT);
qf[162] *= k_f;
qr[162] *= k_f * exp(-(g_RT[8] - g_RT[13] - g_RT[21] + g_RT[27]));
// reaction 145:  2 NH2 <=> NH + NH3
k_f = 50000000
           * exp(-(5032.1666580472) * invT);
qf[163] *= k_f;
qr[163] *= k_f * exp(-(-g_RT[20] + 2.000000*g_RT[27] - g_RT[28]));
// reaction 146:  NH + NH2 <=> N + NH3
k_f = 0.92
           * exp((1.94) * tc[0] - (1229.86153122673) * invT);
qf[164] *= k_f;
qr[164] *= k_f * exp(-(-g_RT[20] - g_RT[25] + g_RT[27] + g_RT[28]));
// reaction 147:  N + NH2 <=> 2 H + N2
k_f = 70000000
           ;
qf[165] *= k_f;
qr[165] *= k_f * exp(-(-2.000000*g_RT[11] + g_RT[25] + g_RT[27] - g_RT[45])) * (refCinv);
// reaction 148:  NH2 + NO <=> H2O + N2
k_f = 280000000000000
           * exp((-2.654) * tc[0] - (633.046565582337) * invT);
qf[166] *= k_f;
qr[166] *= k_f * exp(-(g_RT[3] - g_RT[15] + g_RT[27] - g_RT[45]));
// reaction 149:  NH + O <=> H + NO
k_f = 92000000
           ;
qf[167] *= k_f;
qr[167] *= k_f * exp(-(-g_RT[3] - g_RT[11] + g_RT[12] + g_RT[28]));
// reaction 150:  N2O (+M) <=> N2 + O (+M)
k_f = 99000000000
           * exp(-(29166.4379500416) * invT);
Corr  = mixture + (2)*sc[3] + (2.5)*sc[4] + (0.4)*sc[8] + (11)*sc[15] + (0.7)*sc[45];
redP = Corr / k_f * 662000000 
           * exp(- (28934.9582837714) *invT);
Corr = redP / (1. + redP);
qf[8] *= Corr * k_f;
qr[8] *= Corr * k_f * exp(-(g_RT[4] - g_RT[12] - g_RT[45])) * (refCinv);
// reaction 151:  N2O + OH <=> HO2 + N2
k_f = 2000000
           * exp(-(20128.6666321888) * invT);
qf[168] *= k_f;
qr[168] *= k_f * exp(-(g_RT[4] + g_RT[13] - g_RT[14] - g_RT[45]));
// reaction 152:  NH2 + NO <=> NNH + OH
k_f = 31000000
           * exp((-0.48) * tc[0] - (593.795665649569) * invT);
qf[169] *= k_f;
qr[169] *= k_f * exp(-(g_RT[3] - g_RT[13] - g_RT[26] + g_RT[27]));
// reaction 153:  N + OH <=> H + NO
k_f = 38000000
           ;
qf[170] *= k_f;
qr[170] *= k_f * exp(-(-g_RT[3] - g_RT[11] + g_RT[13] + g_RT[25]));
// reaction 154:  NH2 + NO2 <=> H2O + N2O
k_f = 16000000000
           * exp((-1.44) * tc[0] - (134.862066435665) * invT);
qf[171] *= k_f;
qr[171] *= k_f * exp(-(-g_RT[4] - g_RT[15] + g_RT[19] + g_RT[27]));
// reaction 155:  NH2 + NO2 <=> H2NO + NO
k_f = 65000000000
           * exp((-1.44) * tc[0] - (134.862066435665) * invT);
qf[172] *= k_f;
qr[172] *= k_f * exp(-(-g_RT[3] + g_RT[19] - g_RT[24] + g_RT[27]));
// reaction 156:  H + NH <=> H2 + N
k_f = 100000000
           ;
qf[173] *= k_f;
qr[173] *= k_f * exp(-(-g_RT[9] + g_RT[11] - g_RT[25] + g_RT[28]));
// reaction 157:  NH + OH <=> H + HNO
k_f = 20000000
           ;
qf[174] *= k_f;
qr[174] *= k_f * exp(-(-g_RT[11] + g_RT[13] - g_RT[21] + g_RT[28]));
// reaction 158:  NH + OH <=> H2O + N
k_f = 500000
           * exp((0.5) * tc[0] - (1006.43333160944) * invT);
qf[175] *= k_f;
qr[175] *= k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[25] + g_RT[28]));
// reaction 159:  NH + O2 <=> HNO + O
k_f = 0.46
           * exp((2) * tc[0] - (3270.90832773068) * invT);
qf[176] *= k_f;
qr[176] *= k_f * exp(-(g_RT[8] - g_RT[12] - g_RT[21] + g_RT[28]));
// reaction 160:  NH + O2 <=> NO + OH
k_f = 76000
           * exp(-(769.921498681221) * invT);
qf[177] *= k_f;
qr[177] *= k_f * exp(-(-g_RT[3] + g_RT[8] - g_RT[13] + g_RT[28]));
// reaction 161:  2 NH <=> 2 H + N2
k_f = 25000000
           ;
qf[178] *= k_f;
qr[178] *= k_f * exp(-(-2.000000*g_RT[11] + 2.000000*g_RT[28] - g_RT[45])) * (refCinv);
// reaction 162:  N + NH <=> H + N2
k_f = 30000000
           ;
qf[179] *= k_f;
qr[179] *= k_f * exp(-(-g_RT[11] + g_RT[25] + g_RT[28] - g_RT[45]));
// reaction 163:  NH + NO <=> N2 + OH
k_f = 22000000
           * exp((-0.23) * tc[0]);
qf[180] *= k_f;
qr[180] *= k_f * exp(-(g_RT[3] - g_RT[13] + g_RT[28] - g_RT[45]));
// reaction 164:  NH + NO2 <=> N2O + OH
k_f = 10000000
           ;
qf[181] *= k_f;
qr[181] *= k_f * exp(-(-g_RT[4] - g_RT[13] + g_RT[19] + g_RT[28]));
// reaction 165:  H2NO + M <=> H + HNO + M
k_f = 2.8e+18
           * exp((-2.83) * tc[0] - (32666.3098607134) * invT);
qf[23] *= k_f;
qr[23] *= k_f * exp(-(-g_RT[11] - g_RT[21] + g_RT[24])) * (refCinv);
// reaction 166:  H2NO + M <=> HNOH + M
k_f = 1.1e+23
           * exp((-4) * tc[0] - (22141.5332954077) * invT);
qf[24] *= k_f;
qr[24] *= k_f * exp(-(g_RT[24] - g_RT[42]));
// reaction 167:  H + H2NO <=> H2 + HNO
k_f = 30
           * exp((2) * tc[0] - (1006.43333160944) * invT);
qf[182] *= k_f;
qr[182] *= k_f * exp(-(-g_RT[9] + g_RT[11] - g_RT[21] + g_RT[24]));
// reaction 168:  H + H2NO <=> NH2 + OH
k_f = 50000000
           ;
qf[183] *= k_f;
qr[183] *= k_f * exp(-(g_RT[11] - g_RT[13] + g_RT[24] - g_RT[27]));
// reaction 169:  H2NO + O <=> HNO + OH
k_f = 30
           * exp((2) * tc[0] - (1006.43333160944) * invT);
qf[184] *= k_f;
qr[184] *= k_f * exp(-(g_RT[12] - g_RT[13] - g_RT[21] + g_RT[24]));
// reaction 170:  H2NO + OH <=> H2O + HNO
k_f = 20
           * exp((2) * tc[0] - (503.21666580472) * invT);
qf[185] *= k_f;
qr[185] *= k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[21] + g_RT[24]));
// reaction 171:  H2NO + HO2 <=> H2O2 + HNO
k_f = 0.029
           * exp((2.69) * tc[0] - (805.146665287552) * invT);
qf[186] *= k_f;
qr[186] *= k_f * exp(-(g_RT[14] - g_RT[16] - g_RT[21] + g_RT[24]));
// reaction 172:  H2NO + O2 <=> HNO + HO2
k_f = 3000000
           * exp(-(12580.416645118) * invT);
qf[187] *= k_f;
qr[187] *= k_f * exp(-(g_RT[8] - g_RT[14] - g_RT[21] + g_RT[24]));
// reaction 173:  H2NO + NO <=> 2 HNO
k_f = 0.02
           * exp((2) * tc[0] - (6541.81665546136) * invT);
qf[188] *= k_f;
qr[188] *= k_f * exp(-(g_RT[3] - 2.000000*g_RT[21] + g_RT[24]));
// reaction 174:  H2NO + NH2 <=> HNO + NH3
k_f = 3000000
           * exp(-(503.21666580472) * invT);
qf[189] *= k_f;
qr[189] *= k_f * exp(-(-g_RT[20] - g_RT[21] + g_RT[24] + g_RT[27]));
// reaction 175:  H2NO + NO2 <=> HNO + HONO
k_f = 600000
           * exp(-(1006.43333160944) * invT);
qf[190] *= k_f;
qr[190] *= k_f * exp(-(g_RT[19] - g_RT[21] - g_RT[23] + g_RT[24]));
// reaction 176:  HNOH + M <=> H + HNO + M
k_f = 2e+18
           * exp((-2.84) * tc[0] - (29656.5709825354) * invT);
qf[25] *= k_f;
qr[25] *= k_f * exp(-(-g_RT[11] - g_RT[21] + g_RT[42])) * (refCinv);
// reaction 177:  H + HNOH <=> NH2 + OH
k_f = 40000000
           ;
qf[191] *= k_f;
qr[191] *= k_f * exp(-(g_RT[11] - g_RT[13] - g_RT[27] + g_RT[42]));
// reaction 178:  H + HNOH <=> H2 + HNO
k_f = 480
           * exp((1.5) * tc[0] - (190.215899674184) * invT);
qf[192] *= k_f;
qr[192] *= k_f * exp(-(-g_RT[9] + g_RT[11] - g_RT[21] + g_RT[42]));
// reaction 179:  HNOH + O <=> HNO + OH
k_f = 70000000
           ;
qf[193] *= k_f;
qr[193] *= k_f * exp(-(g_RT[12] - g_RT[13] - g_RT[21] + g_RT[42]));
// reaction 180:  HNOH + O <=> HNO + OH
k_f = 330
           * exp((1.5) * tc[0] - (-180.15156635809) * invT);
qf[194] *= k_f;
qr[194] *= k_f * exp(-(g_RT[12] - g_RT[13] - g_RT[21] + g_RT[42]));
// reaction 181:  HNOH + OH <=> H2O + HNO
k_f = 2.4
           * exp((2) * tc[0] - (-599.834265639226) * invT);
qf[195] *= k_f;
qr[195] *= k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[21] + g_RT[42]));
// reaction 182:  HNOH + HO2 <=> H2O2 + HNO
k_f = 0.029
           * exp((2.69) * tc[0] - (-805.146665287552) * invT);
qf[196] *= k_f;
qr[196] *= k_f * exp(-(g_RT[14] - g_RT[16] - g_RT[21] + g_RT[42]));
// reaction 183:  HNOH + O2 <=> HNO + HO2
k_f = 3000000
           * exp(-(12580.416645118) * invT);
qf[197] *= k_f;
qr[197] *= k_f * exp(-(g_RT[8] - g_RT[14] - g_RT[21] + g_RT[42]));
// reaction 184:  HNOH + NH2 <=> HNO + NH3
k_f = 1.8
           * exp((1.94) * tc[0] - (-579.705599007037) * invT);
qf[198] *= k_f;
qr[198] *= k_f * exp(-(-g_RT[20] - g_RT[21] + g_RT[27] + g_RT[42]));
// reaction 185:  HNOH + NO2 <=> HNO + HONO
k_f = 600000
           * exp(-(1006.43333160944) * invT);
qf[199] *= k_f;
qr[199] *= k_f * exp(-(g_RT[19] - g_RT[21] - g_RT[23] + g_RT[42]));
// reaction 186:  HNO + O2 <=> HO2 + NO
k_f = 22000
           * exp(-(1509.64999741416) * invT);
qf[200] *= k_f;
qr[200] *= k_f * exp(-(-g_RT[3] + g_RT[8] - g_RT[14] + g_RT[21]));
// reaction 187:  HCO + HNO <=> CH2O + NO
k_f = 600000
           * exp(-(1006.43333160944) * invT);
qf[201] *= k_f;
qr[201] *= k_f * exp(-(-g_RT[3] + g_RT[17] - g_RT[18] + g_RT[21]));
// reaction 188:  HON + M <=> H + NO + M
k_f = 51000000000000
           * exp((-1.73) * tc[0] - (8074.11140283673) * invT);
Corr  = mixture + sc[6] + (-0.3)*sc[10] + (6)*sc[15];
qf[26] *= Corr * k_f;
qr[26] *= Corr * k_f * exp(-(-g_RT[3] - g_RT[11] + g_RT[22])) * (refCinv);
// reaction 189:  H + HON <=> H + HNO
k_f = 20000000
           ;
qf[202] *= k_f;
qr[202] *= k_f * exp(-(g_RT[11] - g_RT[11] - g_RT[21] + g_RT[22]));
// reaction 190:  H + HON <=> NH + OH
k_f = 20000000
           ;
qf[203] *= k_f;
qr[203] *= k_f * exp(-(g_RT[11] - g_RT[13] + g_RT[22] - g_RT[28]));
// reaction 191:  HON + O <=> NO + OH
k_f = 70000000
           ;
qf[204] *= k_f;
qr[204] *= k_f * exp(-(-g_RT[3] + g_RT[12] - g_RT[13] + g_RT[22]));
// reaction 192:  HON + OH <=> H + HONO
k_f = 40000000
           ;
qf[205] *= k_f;
qr[205] *= k_f * exp(-(-g_RT[11] + g_RT[13] + g_RT[22] - g_RT[23]));
// reaction 193:  HON + O2 <=> NO2 + OH
k_f = 1000000
           * exp(-(2499.98039571785) * invT);
qf[206] *= k_f;
qr[206] *= k_f * exp(-(g_RT[8] - g_RT[13] - g_RT[19] + g_RT[22]));
// reaction 194:  HCO + NO <=> CO + HNO
k_f = 70000000
           * exp((-0.4) * tc[0]);
qf[207] *= k_f;
qr[207] *= k_f * exp(-(g_RT[3] - g_RT[5] + g_RT[17] - g_RT[21]));
// reaction 195:  H + HONO <=> HNO + OH
k_f = 56000
           * exp((0.86) * tc[0] - (2516.0833290236) * invT);
qf[208] *= k_f;
qr[208] *= k_f * exp(-(g_RT[11] - g_RT[13] - g_RT[21] + g_RT[23]));
// reaction 196:  H + HONO <=> H2O + NO
k_f = 8.1
           * exp((1.89) * tc[0] - (1937.38416334817) * invT);
qf[209] *= k_f;
qr[209] *= k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[15] + g_RT[23]));
// reaction 197:  NO2 + O (+M) <=> NO3 (+M)
k_f = 13000000
           ;
Corr  = mixture + (0.5)*sc[8] + (9)*sc[15] + (0.5)*sc[45];
redP = Corr / k_f * 1e+16 
           * exp(-4.08  * tc[0] - (1242.94516453766) *invT);
Corr = redP / (1. + redP);
qf[9] *= Corr * k_f;
qr[9] *= Corr * k_f * exp(-(g_RT[12] + g_RT[19] - g_RT[43])) * (refC);
// reaction 198:  2 NO2 <=> NO + NO3
k_f = 9600
           * exp((0.73) * tc[0] - (10517.2283153186) * invT);
qf[210] *= k_f;
qr[210] *= k_f * exp(-(-g_RT[3] + 2.000000*g_RT[19] - g_RT[43]));
// reaction 199:  CO + NO2 <=> CO2 + NO
k_f = 90000000
           * exp(-(17008.7233041995) * invT);
qf[211] *= k_f;
qr[211] *= k_f * exp(-(-g_RT[3] + g_RT[5] - g_RT[6] + g_RT[19]));
// reaction 200:  HCO + NO2 <=> CO + NO + OH
k_f = 1.2e+17
           * exp((-3.29) * tc[0] - (1185.07524797011) * invT);
qf[212] *= k_f;
qr[212] *= k_f * exp(-(-g_RT[3] - g_RT[5] - g_RT[13] + g_RT[17] + g_RT[19])) * (refCinv);
// reaction 201:  HCO + NO2 <=> CO2 + H + NO
k_f = 8400000000
           * exp((-0.75) * tc[0] - (971.208165003109) * invT);
qf[213] *= k_f;
qr[213] *= k_f * exp(-(-g_RT[3] - g_RT[6] - g_RT[11] + g_RT[17] + g_RT[19])) * (refCinv);
// reaction 202:  H + NO3 <=> NO2 + OH
k_f = 60000000
           ;
qf[214] *= k_f;
qr[214] *= k_f * exp(-(g_RT[11] - g_RT[13] - g_RT[19] + g_RT[43]));
// reaction 203:  NO3 + O <=> NO2 + O2
k_f = 10000000
           ;
qf[215] *= k_f;
qr[215] *= k_f * exp(-(-g_RT[8] + g_RT[12] - g_RT[19] + g_RT[43]));
// reaction 204:  NO3 + OH <=> HO2 + NO2
k_f = 14000000
           ;
qf[216] *= k_f;
qr[216] *= k_f * exp(-(g_RT[13] - g_RT[14] - g_RT[19] + g_RT[43]));
// reaction 205:  HO2 + NO3 <=> NO2 + O2 + OH
k_f = 1500000
           ;
qf[217] *= k_f;
qr[217] *= k_f * exp(-(-g_RT[8] - g_RT[13] + g_RT[14] - g_RT[19] + g_RT[43])) * (refCinv);
// reaction 206:  NO3 + NO2 <=> NO + O2 + NO2
k_f = 50000
           * exp(-(1479.45699746588) * invT);
qf[27] *= k_f;
qr[27] *= k_f * exp(-(-g_RT[3] - g_RT[8] + g_RT[43])) * (refCinv);
// reaction 207:  NNH <=> H + N2
k_f = 65000000
           ;
qf[218] *= k_f;
qr[218] *= k_f * exp(-(-g_RT[11] + g_RT[26] - g_RT[45])) * (refCinv);
// reaction 208:  H + NNH <=> H2 + N2
k_f = 100000000
           ;
qf[219] *= k_f;
qr[219] *= k_f * exp(-(-g_RT[9] + g_RT[11] + g_RT[26] - g_RT[45]));
// reaction 209:  NNH + O <=> H + N2O
k_f = 100000000
           ;
qf[220] *= k_f;
qr[220] *= k_f * exp(-(-g_RT[4] - g_RT[11] + g_RT[12] + g_RT[26]));
// reaction 210:  NNH + O <=> N2 + OH
k_f = 12000000
           * exp((0.145) * tc[0] - (-109.198016479624) * invT);
qf[221] *= k_f;
qr[221] *= k_f * exp(-(g_RT[12] - g_RT[13] + g_RT[26] - g_RT[45]));
// reaction 211:  NNH + O <=> NH + NO
k_f = 520000
           * exp((0.381) * tc[0] - (-205.81561631413) * invT);
qf[222] *= k_f;
qr[222] *= k_f * exp(-(-g_RT[3] + g_RT[12] + g_RT[26] - g_RT[28]));
// reaction 212:  NNH + OH <=> H2O + N2
k_f = 50000000
           ;
qf[223] *= k_f;
qr[223] *= k_f * exp(-(g_RT[13] - g_RT[15] + g_RT[26] - g_RT[45]));
// reaction 213:  NNH + O2 <=> HO2 + N2
k_f = 200000000
           ;
qf[224] *= k_f;
qr[224] *= k_f * exp(-(g_RT[8] - g_RT[14] + g_RT[26] - g_RT[45]));
// reaction 214:  NNH + O2 <=> H + N2 + O2
k_f = 50000000
           ;
qf[28] *= k_f;
qr[28] *= k_f * exp(-(-g_RT[11] + g_RT[26] - g_RT[45])) * (refCinv);
// reaction 215:  NH + NNH <=> N2 + NH2
k_f = 50000000
           ;
qf[225] *= k_f;
qr[225] *= k_f * exp(-(g_RT[26] - g_RT[27] + g_RT[28] - g_RT[45]));
// reaction 216:  NH2 + NNH <=> N2 + NH3
k_f = 50000000
           ;
qf[226] *= k_f;
qr[226] *= k_f * exp(-(-g_RT[20] + g_RT[26] + g_RT[27] - g_RT[45]));
// reaction 217:  NNH + NO <=> HNO + N2
k_f = 50000000
           ;
qf[227] *= k_f;
qr[227] *= k_f * exp(-(g_RT[3] - g_RT[21] + g_RT[26] - g_RT[45]));
// reaction 218:  CO + N2O <=> CO2 + N2
k_f = 270000
           * exp(-(10183.5956658901) * invT);
qf[228] *= k_f;
qr[228] *= k_f * exp(-(g_RT[4] + g_RT[5] - g_RT[6] - g_RT[45]));
// reaction 219:  NCCN + M <=> 2 CN + M
k_f = 1.1e+28
           * exp((-4.32) * tc[0] - (65457.9206712121) * invT);
Corr  = mixture + (2)*sc[6] + (0.5)*sc[8] + (0.5)*sc[9] + (9)*sc[15] + (0.5)*sc[45];
qf[29] *= Corr * k_f;
qr[29] *= Corr * k_f * exp(-(-2.000000*g_RT[29] + g_RT[31])) * (refCinv);
// reaction 220:  NCCN + O <=> CN + NCO
k_f = 4600000
           * exp(-(4468.56399234591) * invT);
qf[229] *= k_f;
qr[229] *= k_f * exp(-(g_RT[12] - g_RT[29] - g_RT[30] + g_RT[31]));
// reaction 221:  NCCN + OH <=> CN + HOCN
k_f = 190000
           * exp(-(1459.32833083369) * invT);
qf[230] *= k_f;
qr[230] *= k_f * exp(-(g_RT[13] - g_RT[29] + g_RT[31] - g_RT[32]));
// reaction 222:  H + O + M <=> OH* + M
k_f = 15
           * exp(-(3006.7195781832) * invT);
Corr  = mixture + (-0.6)*sc[8] + (-0.65)*sc[10] + (5.5)*sc[15] + (-0.6)*sc[45];
qf[30] *= Corr * k_f;
qr[30] *= Corr * k_f * exp(-(-g_RT[0] + g_RT[11] + g_RT[12])) * (refC);
// reaction 223:  H2O + OH* <=> H2O + OH
k_f = 5930000
           * exp((0.5) * tc[0] - (-432.766332592059) * invT);
qf[231] *= k_f;
qr[231] *= k_f * exp(-(g_RT[0] - g_RT[13] + g_RT[15] - g_RT[15]));
// reaction 224:  H2 + OH* <=> H2 + OH
k_f = 2950000
           * exp((0.5) * tc[0] - (-223.428199617296) * invT);
qf[232] *= k_f;
qr[232] *= k_f * exp(-(g_RT[0] + g_RT[9] - g_RT[9] - g_RT[13]));
// reaction 225:  N2 + OH* <=> N2 + OH
k_f = 108000
           * exp((0.5) * tc[0] - (-624.995098929462) * invT);
qf[233] *= k_f;
qr[233] *= k_f * exp(-(g_RT[0] - g_RT[13] + g_RT[45] - g_RT[45]));
// reaction 226:  OH + OH* <=> 2 OH
k_f = 6010000
           * exp((0.5) * tc[0] - (-384.457532674806) * invT);
qf[234] *= k_f;
qr[234] *= k_f * exp(-(g_RT[0] + g_RT[13] - 2.000000*g_RT[13]));
// reaction 227:  H + OH* <=> H + OH
k_f = 1310000
           * exp((0.5) * tc[0] - (-84.0371831893882) * invT);
qf[235] *= k_f;
qr[235] *= k_f * exp(-(g_RT[0] + g_RT[11] - g_RT[11] - g_RT[13]));
// reaction 228:  AR + OH* <=> AR + OH
k_f = 1690000
           * exp(-(2080.80091310252) * invT);
qf[236] *= k_f;
qr[236] *= k_f * exp(-(g_RT[0] + g_RT[10] - g_RT[10] - g_RT[13]));
// reaction 229:  O2 + OH* <=> O2 + OH
k_f = 2100000
           * exp((0.5) * tc[0] - (-240.537566254656) * invT);
qf[237] *= k_f;
qr[237] *= k_f * exp(-(g_RT[0] + g_RT[8] - g_RT[8] - g_RT[13]));
// reaction 230:  CO2 + OH* <=> CO2 + OH
k_f = 2750000
           * exp((0.5) * tc[0] - (-487.113732498969) * invT);
qf[238] *= k_f;
qr[238] *= k_f * exp(-(g_RT[0] + g_RT[6] - g_RT[6] - g_RT[13]));
// reaction 231:  CO + OH* <=> CO + OH
k_f = 3230000
           * exp((0.5) * tc[0] - (-396.031515988314) * invT);
qf[239] *= k_f;
qr[239] *= k_f * exp(-(g_RT[0] + g_RT[5] - g_RT[5] - g_RT[13]));
// reaction 232:  H + N2O <=> N2 + OH*
k_f = 160000000
           * exp(-(25311.7982899774) * invT);
qf[240] *= k_f;
qr[240] *= k_f * exp(-(-g_RT[0] + g_RT[4] + g_RT[11] - g_RT[45]));
// reaction 233:  N2 + M <=> 2 N + M
k_f = 1890000000000
           * exp((-0.85) * tc[0] - (113198.588972772) * invT);
qf[31] *= k_f;
qr[31] *= k_f * exp(-(-2.000000*g_RT[25] + g_RT[45])) * (refCinv);
// reaction 234:  N + O + M <=> NO + M
k_f = 760
           * exp((-0.1) * tc[0] - (-890.693498474354) * invT);
qf[32] *= k_f;
qr[32] *= k_f * exp(-(-g_RT[3] + g_RT[12] + g_RT[25])) * (refC);
// reaction 235:  HO2 + NO <=> NO2 + OH
k_f = 2100000
           * exp(-(-241.543999586265) * invT);
qf[241] *= k_f;
qr[241] *= k_f * exp(-(g_RT[3] - g_RT[13] + g_RT[14] - g_RT[19]));
// reaction 236:  NO + OH (+M) <=> HONO (+M)
k_f = 1990000
           * exp((-0.05) * tc[0] - (-362.819216045203) * invT);
Corr  = mixture + sc[8] + sc[9] + (9)*sc[15];
redP = Corr / k_f * 508000000000 
           * exp(-2.51  * tc[0] - (-34.017446608399) *invT);
F = redP / (1.0 + redP);
logPred = log10(redP);
logFcent = log10(
    (0.38)*exp(-tc[1] * 0.1)
    + 0.62 * exp(-tc[1] * 1e-05)
    + 0.0);
troe_c = -0.4 - 0.67 * logFcent;
troe_n = 0.75 - 1.27 * logFcent;
troe = (troe_c + logPred) / (troe_n - 0.14*(troe_c + logPred));
F_troe = exp(M_LN10 * logFcent / (1.0 + troe*troe));
Corr = F * F_troe;
qf[5] *= Corr * k_f;
qr[5] *= Corr * k_f * exp(-(g_RT[3] + g_RT[13] - g_RT[23])) * (refC);
// reaction 237:  H2 + NO2 <=> H + HONO
k_f = 0.013
           * exp((2.76) * tc[0] - (14980.7601410065) * invT);
qf[242] *= k_f;
qr[242] *= k_f * exp(-(g_RT[9] - g_RT[11] + g_RT[19] - g_RT[23]));
// reaction 238:  H + NO2 <=> NO + OH
k_f = 131000000
           * exp(-(182.164433021309) * invT);
qf[243] *= k_f;
qr[243] *= k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[13] + g_RT[19]));
// reaction 239:  NO2 + O <=> NO + O2
k_f = 3910000
           * exp(-(-119.765566461523) * invT);
qf[244] *= k_f;
qr[244] *= k_f * exp(-(-g_RT[3] - g_RT[8] + g_RT[12] + g_RT[19]));
// reaction 240:  NO2 + M <=> NO + O + M
k_f = 11000000000
           * exp(-(33212.2999431115) * invT);
qf[33] *= k_f;
qr[33] *= k_f * exp(-(-g_RT[3] - g_RT[12] + g_RT[19])) * (refCinv);
// reaction 241:  2 NO2 <=> 2 NO + O2
k_f = 2000000
           * exp(-(13498.7870602116) * invT);
qf[245] *= k_f;
qr[245] *= k_f * exp(-(-2.000000*g_RT[3] - g_RT[8] + 2.000000*g_RT[19])) * (refCinv);
// reaction 242:  HO2 + NO2 <=> HONO + O2
k_f = 1.91e-06
           * exp((3.32) * tc[0] - (1531.79153070957) * invT);
qf[246] *= k_f;
qr[246] *= k_f * exp(-(-g_RT[8] + g_RT[14] + g_RT[19] - g_RT[23]));
// reaction 243:  NO2 + OH (+M) <=> HONO2 (+M)
k_f = 24100000
           ;
Corr  = mixture;
redP = Corr / k_f * 6.42e+20 
           * exp(-5.49  * tc[0] - (1183.5655979727) *invT);
F = redP / (1.0 + redP);
logPred = log10(redP);
logFcent = log10(
    (0.475)*exp(-tc[1] * 1e+15)
    + 0.525 * exp(-tc[1] * 1e+15)
    + exp(-1e+15 * invT));
troe_c = -0.4 - 0.67 * logFcent;
troe_n = 0.75 - 1.27 * logFcent;
troe = (troe_c + logPred) / (troe_n - 0.14*(troe_c + logPred));
F_troe = exp(M_LN10 * logFcent / (1.0 + troe*troe));
Corr = F * F_troe;
qf[6] *= Corr * k_f;
qr[6] *= Corr * k_f * exp(-(g_RT[13] + g_RT[19] - g_RT[44])) * (refC);
// reaction 244:  NO + NO2 <=> N2O + O2
k_f = 1000000
           * exp(-(30192.9999482832) * invT);
qf[247] *= k_f;
qr[247] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[8] + g_RT[19]));
// reaction 245:  HONO + O <=> NO2 + OH
k_f = 12000000
           * exp(-(3019.29999482832) * invT);
qf[248] *= k_f;
qr[248] *= k_f * exp(-(g_RT[12] - g_RT[13] - g_RT[19] + g_RT[23]));
// reaction 246:  HONO + OH <=> H2O + NO2
k_f = 13000
           * exp((1) * tc[0] - (67.9342498836372) * invT);
qf[249] *= k_f;
qr[249] *= k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[19] + g_RT[23]));
// reaction 247:  2 HONO <=> H2O + NO + NO2
k_f = 3.49e-07
           * exp((3.64) * tc[0] - (6109.0503228693) * invT);
qf[250] *= k_f;
qr[250] *= k_f * exp(-(-g_RT[3] - g_RT[15] - g_RT[19] + 2.000000*g_RT[23])) * (refCinv);
// reaction 248:  HNO + O <=> NO + OH
k_f = 10000000
           ;
qf[251] *= k_f;
qr[251] *= k_f * exp(-(-g_RT[3] + g_RT[12] - g_RT[13] + g_RT[21]));
// reaction 249:  HNO + OH <=> H2O + NO
k_f = 36000000
           ;
qf[252] *= k_f;
qr[252] *= k_f * exp(-(-g_RT[3] + g_RT[13] - g_RT[15] + g_RT[21]));
// reaction 250:  HNO + NO2 <=> HONO + NO
k_f = 0.0442
           * exp((2.6) * tc[0] - (2043.05966316716) * invT);
qf[253] *= k_f;
qr[253] *= k_f * exp(-(-g_RT[3] + g_RT[19] + g_RT[21] - g_RT[23]));
// reaction 251:  2 HNO <=> H2O + N2O
k_f = 3950000
           * exp(-(2516.0833290236) * invT);
qf[254] *= k_f;
qr[254] *= k_f * exp(-(-g_RT[4] - g_RT[15] + 2.000000*g_RT[21]));
// reaction 252:  HNO + NO <=> N2O + OH
k_f = 2000000
           * exp(-(13083.6333109227) * invT);
qf[255] *= k_f;
qr[255] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[13] + g_RT[21]));
// reaction 253:  N + NO2 <=> N2O + O
k_f = 1800000
           ;
qf[256] *= k_f;
qr[256] *= k_f * exp(-(-g_RT[4] - g_RT[12] + g_RT[19] + g_RT[25]));
// reaction 254:  N + O2 <=> NO + O
k_f = 6400
           * exp((1) * tc[0] - (3160.20066125364) * invT);
qf[257] *= k_f;
qr[257] *= k_f * exp(-(-g_RT[3] + g_RT[8] - g_RT[12] + g_RT[25]));
// reaction 255:  N + N2O <=> N2 + NO
k_f = 10000000
           * exp(-(9998.91514953978) * invT);
qf[258] *= k_f;
qr[258] *= k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[25] - g_RT[45]));
// reaction 256:  N2O + NO <=> N2 + NO2
k_f = 0.53
           * exp((2.23) * tc[0] - (23289.3705101082) * invT);
qf[259] *= k_f;
qr[259] *= k_f * exp(-(g_RT[3] + g_RT[4] - g_RT[19] - g_RT[45]));
// reaction 257:  H2NO + M <=> H2 + NO + M
k_f = 7.83e+21
           * exp((-4.29) * tc[0] - (30343.9649480246) * invT);
qf[34] *= k_f;
qr[34] *= k_f * exp(-(-g_RT[3] - g_RT[9] + g_RT[24])) * (refCinv);
// reaction 258:  HO2 + NO + M <=> HONO2 + M
k_f = 2.23
           * exp((-3.5) * tc[0] - (1107.07666477038) * invT);
Corr  = mixture;
qf[35] *= Corr * k_f;
qr[35] *= Corr * k_f * exp(-(g_RT[3] + g_RT[14] - g_RT[44])) * (refC);
// reaction 259:  H + HNO2 <=> H2 + NO2
k_f = 240
           * exp((1.5) * tc[0] - (2559.86317894861) * invT);
qf[260] *= k_f;
qr[260] *= k_f * exp(-(-g_RT[9] + g_RT[11] - g_RT[19] + g_RT[36]));
// reaction 260:  HNO2 + O <=> NO2 + OH
k_f = 170
           * exp((1.5) * tc[0] - (1519.71433073025) * invT);
qf[261] *= k_f;
qr[261] *= k_f * exp(-(g_RT[12] - g_RT[13] - g_RT[19] + g_RT[36]));
// reaction 261:  HNO2 + OH <=> H2O + NO2
k_f = 1.2
           * exp((2) * tc[0] - (-299.917132819613) * invT);
qf[262] *= k_f;
qr[262] *= k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[19] + g_RT[36]));
// reaction 262:  HNO2 <=> HONO
k_f = 1.3e+29
           * exp((-5.47) * tc[0] - (26576.8849878105) * invT);
qf[263] *= k_f;
qr[263] *= k_f * exp(-(-g_RT[23] + g_RT[36]));
// reaction 263:  HONO + NH2 <=> NH3 + NO2
k_f = 7.11e-05
           * exp((3.02) * tc[0] - (-2486.39354574112) * invT);
qf[264] *= k_f;
qr[264] *= k_f * exp(-(-g_RT[19] - g_RT[20] + g_RT[23] + g_RT[27]));
// reaction 264:  HNO + N <=> NH + NO
k_f = 10000000
           * exp(-(1001.40116495139) * invT);
qf[265] *= k_f;
qr[265] *= k_f * exp(-(-g_RT[3] + g_RT[21] + g_RT[25] - g_RT[28]));
// reaction 265:  N2O + O <=> N2 + O2
k_f = 3690000
           * exp(-(8023.28651959045) * invT);
qf[266] *= k_f;
qr[266] *= k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[12] - g_RT[45]));
// reaction 266:  N2O + O <=> 2 NO
k_f = 29000000
           * exp(-(11649.4658133793) * invT);
qf[267] *= k_f;
qr[267] *= k_f * exp(-(-2.000000*g_RT[3] + g_RT[4] + g_RT[12]));
// reaction 267:  NO3 <=> NO + O2
k_f = 2500000
           * exp(-(6098.9859895532) * invT);
qf[268] *= k_f;
qr[268] *= k_f * exp(-(-g_RT[3] - g_RT[8] + g_RT[43])) * (refCinv);
// reaction 268:  2 NO3 <=> 2 NO2 + O2
k_f = 512000
           * exp(-(2450.66516246898) * invT);
qf[269] *= k_f;
qr[269] *= k_f * exp(-(-g_RT[8] - 2.000000*g_RT[19] + 2.000000*g_RT[43])) * (refCinv);
// reaction 269:  N2O4 (+M) <=> 2 NO2 (+M)
k_f = 4.05e+18
           * exp((-1.1) * tc[0] - (6461.3019889326) * invT);
Corr  = mixture + (-0.2)*sc[10] + sc[19] + sc[37];
redP = Corr / k_f * 1.96e+22 
           * exp(-3.8  * tc[0] - (6461.3019889326) *invT);
Corr = redP / (1. + redP);
qf[10] *= Corr * k_f;
qr[10] *= Corr * k_f * exp(-(-2.000000*g_RT[19] + g_RT[37])) * (refCinv);
// reaction 270:  N2O4 + O <=> N2O3 + O2
k_f = 1210000
           ;
qf[270] *= k_f;
qr[270] *= k_f * exp(-(-g_RT[8] + g_RT[12] + g_RT[37] - g_RT[38]));
// reaction 271:  N2O3 + O <=> 2 NO2
k_f = 271000
           ;
qf[271] *= k_f;
qr[271] *= k_f * exp(-(g_RT[12] - 2.000000*g_RT[19] + g_RT[38]));


return;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void  productionRate(amrex::Real * wdot, amrex::Real * sc, amrex::Real T)
{
const amrex::Real tc[5] = { log(T), T, T*T, T*T*T, T*T*T*T };// temperature cache
const amrex::Real invT = 1.0 / tc[1];

// reference concentration: P_atm / (RT) in inverse mol/m^3
const amrex::Real refC = 101325 / 8.31446 * invT;
const amrex::Real refCinv = 1 / refC;

for (int i = 0; i < 52; ++i) {
wdot[i] = 0.0;
}

// compute the mixture concentration
amrex::Real mixture = 0.0;
for (int i = 0; i < 52; ++i) {
mixture += sc[i];
}

// compute the Gibbs free energy
amrex::Real g_RT[52];
gibbs(g_RT, tc);

{
// reaction 1:  H + NO (+M) <=> HNO (+M)
const amrex::Real k_f = 1500000000
           * exp((-0.4) * tc[0]);
amrex::Real Corr = mixture;
const amrex::Real redP = Corr / k_f * 240 
           * exp(0.206 * tc[0] - -779.985831997315 * invT);
const amrex::Real F = redP / (1.0 + redP);
const amrex::Real logPred = log10(redP);
const amrex::Real logFcent = log10(
    0.18 * exp(-tc[1] * 1e+30)
    + 0.82 * exp(-tc[1] * 1e-30)
    + exp(-1e+30 * invT));
const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
const amrex::Real troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
const amrex::Real F_troe = exp(M_LN10 *logFcent / (1.0 + troe * troe));
Corr = F * F_troe;
const amrex::Real qf = Corr * k_f * (sc[3]*sc[11]);
const amrex::Real qr = Corr * k_f * exp(-(g_RT[3] + g_RT[11] - g_RT[21])) * (refC) * (sc[21]);
const amrex::Real qdot = qf - qr;
wdot[3] -= qdot;
wdot[11] -= qdot;
wdot[21] += qdot;
}

{
// reaction 13:  H + O2 (+M) <=> HO2 (+M)
const amrex::Real k_f = 4650000
           * exp((0.44) * tc[0]);
amrex::Real Corr = mixture + (0.9)*sc[5] + (2.8)*sc[6] + (0.3)*sc[9] + (-1)*sc[10] + (9)*sc[15] + (-1)*sc[35] + sc[46] + (2)*sc[47];
const amrex::Real redP = Corr / k_f * 17370000 
           * exp(-1.23 * tc[0]);
const amrex::Real F = redP / (1.0 + redP);
const amrex::Real logPred = log10(redP);
const amrex::Real logFcent = log10(
    0.33 * exp(-tc[1] * 1e+30)
    + 0.67 * exp(-tc[1] * 1e-30)
    + exp(-1e+30 * invT));
const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
const amrex::Real troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
const amrex::Real F_troe = exp(M_LN10 *logFcent / (1.0 + troe * troe));
Corr = F * F_troe;
const amrex::Real qf = Corr * k_f * (sc[8]*sc[11]);
const amrex::Real qr = Corr * k_f * exp(-(g_RT[8] + g_RT[11] - g_RT[14])) * (refC) * (sc[14]);
const amrex::Real qdot = qf - qr;
wdot[8] -= qdot;
wdot[11] -= qdot;
wdot[14] += qdot;
}

{
// reaction 14:  H + O2 (+AR) <=> HO2 (+AR)
const amrex::Real k_f = 4650000
           * exp((0.44) * tc[0]);
amrex::Real Corr = mixture;
const amrex::Real redP = Corr / k_f * 6810000 
           * exp(-1.2 * tc[0]);
const amrex::Real F = redP / (1.0 + redP);
const amrex::Real logPred = log10(redP);
const amrex::Real logFcent = log10(
    0.3 * exp(-tc[1] * 1e+30)
    + 0.7 * exp(-tc[1] * 1e-30)
    + exp(-1e+30 * invT));
const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
const amrex::Real troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
const amrex::Real F_troe = exp(M_LN10 *logFcent / (1.0 + troe * troe));
Corr = F * F_troe;
const amrex::Real qf = Corr * k_f * (sc[8]*sc[10]*sc[11]);
const amrex::Real qr = Corr * k_f * exp(-(g_RT[8] + g_RT[11] - g_RT[14])) * (refC) * (sc[10]*sc[14]);
const amrex::Real qdot = qf - qr;
wdot[8] -= qdot;
wdot[11] -= qdot;
wdot[14] += qdot;
}

{
// reaction 21:  H2O2 (+H2O) <=> 2 OH (+H2O)
const amrex::Real k_f = 2000000000000
           * exp((0.9) * tc[0] - (24531.8124579801) * invT);
amrex::Real Corr = mixture;
const amrex::Real redP = Corr / k_f * 1.865e+19 
           * exp(-2.3 * tc[0] - 24531.8124579801 * invT);
const amrex::Real F = redP / (1.0 + redP);
const amrex::Real logPred = log10(redP);
const amrex::Real logFcent = log10(
    0.49 * exp(-tc[1] * 1e+30)
    + 0.51 * exp(-tc[1] * 1e-30)
    + 0.0);
const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
const amrex::Real troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
const amrex::Real F_troe = exp(M_LN10 *logFcent / (1.0 + troe * troe));
Corr = F * F_troe;
const amrex::Real qf = Corr * k_f * (sc[15]*sc[16]);
const amrex::Real qr = Corr * k_f * exp(-(-2.000000*g_RT[13] + g_RT[16])) * (refCinv) * ((sc[13] * sc[13])*sc[15]);
const amrex::Real qdot = qf - qr;
wdot[13] += 2.000000 * qdot;
wdot[16] -= qdot;
}

{
// reaction 22:  H2O2 (+M) <=> 2 OH (+M)
const amrex::Real k_f = 2000000000000
           * exp((0.9) * tc[0] - (24531.8124579801) * invT);
amrex::Real Corr = mixture + (1.8)*sc[5] + (0.6)*sc[6] + (0.2)*sc[8] + (2.7)*sc[9] + (-1)*sc[15] + (6.7)*sc[16] + (-0.35)*sc[35] + (0.5)*sc[45];
const amrex::Real redP = Corr / k_f * 2.49e+18 
           * exp(-2.3 * tc[0] - 24531.8124579801 * invT);
const amrex::Real F = redP / (1.0 + redP);
const amrex::Real logPred = log10(redP);
const amrex::Real logFcent = log10(
    0.57 * exp(-tc[1] * 1e+30)
    + 0.43 * exp(-tc[1] * 1e-30)
    + 0.0);
const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
const amrex::Real troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
const amrex::Real F_troe = exp(M_LN10 *logFcent / (1.0 + troe * troe));
Corr = F * F_troe;
const amrex::Real qf = Corr * k_f * (sc[16]);
const amrex::Real qr = Corr * k_f * exp(-(-2.000000*g_RT[13] + g_RT[16])) * (refCinv) * ((sc[13] * sc[13]));
const amrex::Real qdot = qf - qr;
wdot[13] += 2.000000 * qdot;
wdot[16] -= qdot;
}

{
// reaction 236:  NO + OH (+M) <=> HONO (+M)
const amrex::Real k_f = 1990000
           * exp((-0.05) * tc[0] - (-362.819216045203) * invT);
amrex::Real Corr = mixture + sc[8] + sc[9] + (9)*sc[15];
const amrex::Real redP = Corr / k_f * 508000000000 
           * exp(-2.51 * tc[0] - -34.017446608399 * invT);
const amrex::Real F = redP / (1.0 + redP);
const amrex::Real logPred = log10(redP);
const amrex::Real logFcent = log10(
    0.38 * exp(-tc[1] * 0.1)
    + 0.62 * exp(-tc[1] * 1e-05)
    + 0.0);
const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
const amrex::Real troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
const amrex::Real F_troe = exp(M_LN10 *logFcent / (1.0 + troe * troe));
Corr = F * F_troe;
const amrex::Real qf = Corr * k_f * (sc[3]*sc[13]);
const amrex::Real qr = Corr * k_f * exp(-(g_RT[3] + g_RT[13] - g_RT[23])) * (refC) * (sc[23]);
const amrex::Real qdot = qf - qr;
wdot[3] -= qdot;
wdot[13] -= qdot;
wdot[23] += qdot;
}

{
// reaction 243:  NO2 + OH (+M) <=> HONO2 (+M)
const amrex::Real k_f = 24100000
           ;
amrex::Real Corr = mixture;
const amrex::Real redP = Corr / k_f * 6.42e+20 
           * exp(-5.49 * tc[0] - 1183.5655979727 * invT);
const amrex::Real F = redP / (1.0 + redP);
const amrex::Real logPred = log10(redP);
const amrex::Real logFcent = log10(
    0.475 * exp(-tc[1] * 1e+15)
    + 0.525 * exp(-tc[1] * 1e+15)
    + exp(-1e+15 * invT));
const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
const amrex::Real troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
const amrex::Real F_troe = exp(M_LN10 *logFcent / (1.0 + troe * troe));
Corr = F * F_troe;
const amrex::Real qf = Corr * k_f * (sc[13]*sc[19]);
const amrex::Real qr = Corr * k_f * exp(-(g_RT[13] + g_RT[19] - g_RT[44])) * (refC) * (sc[44]);
const amrex::Real qdot = qf - qr;
wdot[13] -= qdot;
wdot[19] -= qdot;
wdot[44] += qdot;
}

{
// reaction 28:  CO + O (+M) <=> CO2 (+M)
const amrex::Real k_f = 13620
           * exp(-(1199.66853127845) * invT);
amrex::Real Corr = mixture + (0.75)*sc[5] + (2.6)*sc[6] + sc[9] + (-0.3)*sc[10] + (11)*sc[15] + (-0.3)*sc[35];
const amrex::Real redP = Corr / k_f * 1173000000000 
           * exp(-2.79 * tc[0] - 2108.98104638758 * invT);
Corr = redP / (1.0 + redP);
const amrex::Real qf = Corr * k_f * (sc[5]*sc[12]);
const amrex::Real qr = Corr * k_f * exp(-(g_RT[5] - g_RT[6] + g_RT[12])) * (refC) * (sc[6]);
const amrex::Real qdot = qf - qr;
wdot[5] -= qdot;
wdot[6] += qdot;
wdot[12] -= qdot;
}

{
// reaction 150:  N2O (+M) <=> N2 + O (+M)
const amrex::Real k_f = 99000000000
           * exp(-(29166.4379500416) * invT);
amrex::Real Corr = mixture + (2)*sc[3] + (2.5)*sc[4] + (0.4)*sc[8] + (11)*sc[15] + (0.7)*sc[45];
const amrex::Real redP = Corr / k_f * 662000000 
           * exp(- 28934.9582837714 * invT);
Corr = redP / (1.0 + redP);
const amrex::Real qf = Corr * k_f * (sc[4]);
const amrex::Real qr = Corr * k_f * exp(-(g_RT[4] - g_RT[12] - g_RT[45])) * (refCinv) * (sc[12]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[4] -= qdot;
wdot[12] += qdot;
wdot[45] += qdot;
}

{
// reaction 197:  NO2 + O (+M) <=> NO3 (+M)
const amrex::Real k_f = 13000000
           ;
amrex::Real Corr = mixture + (0.5)*sc[8] + (9)*sc[15] + (0.5)*sc[45];
const amrex::Real redP = Corr / k_f * 1e+16 
           * exp(-4.08 * tc[0] - 1242.94516453766 * invT);
Corr = redP / (1.0 + redP);
const amrex::Real qf = Corr * k_f * (sc[12]*sc[19]);
const amrex::Real qr = Corr * k_f * exp(-(g_RT[12] + g_RT[19] - g_RT[43])) * (refC) * (sc[43]);
const amrex::Real qdot = qf - qr;
wdot[12] -= qdot;
wdot[19] -= qdot;
wdot[43] += qdot;
}

{
// reaction 269:  N2O4 (+M) <=> 2 NO2 (+M)
const amrex::Real k_f = 4.05e+18
           * exp((-1.1) * tc[0] - (6461.3019889326) * invT);
amrex::Real Corr = mixture + (-0.2)*sc[10] + sc[19] + sc[37];
const amrex::Real redP = Corr / k_f * 1.96e+22 
           * exp(-3.8 * tc[0] - 6461.3019889326 * invT);
Corr = redP / (1.0 + redP);
const amrex::Real qf = Corr * k_f * (sc[37]);
const amrex::Real qr = Corr * k_f * exp(-(-2.000000*g_RT[19] + g_RT[37])) * (refCinv) * ((sc[19] * sc[19]));
const amrex::Real qdot = qf - qr;
wdot[19] += 2.000000 * qdot;
wdot[37] -= qdot;
}

{
// reaction 9:  H2 + M <=> 2 H + M
const amrex::Real k_f = 45770000000000
           * exp((-1.4) * tc[0] - (52535.8199100127) * invT);
const amrex::Real Corr = mixture + (0.9)*sc[5] + (2.8)*sc[6] + (1.5)*sc[9] + (11)*sc[15] + (-0.17)*sc[35] + sc[46] + (2)*sc[47];
const amrex::Real qf = Corr * k_f * (sc[9]);
const amrex::Real qr = Corr * k_f * exp(-(g_RT[9] - 2.000000*g_RT[11])) * (refCinv) * ((sc[11] * sc[11]));
const amrex::Real qdot = qf - qr;
wdot[9] -= qdot;
wdot[11] += 2.000000 * qdot;
}

{
// reaction 10:  2 O + M <=> O2 + M
const amrex::Real k_f = 6165
           * exp((-0.5) * tc[0]);
const amrex::Real Corr = mixture + (0.9)*sc[5] + (2.8)*sc[6] + (1.5)*sc[9] + (-0.17)*sc[10] + (11)*sc[15] + (-0.17)*sc[35] + sc[46] + (2)*sc[47];
const amrex::Real qf = Corr * k_f * ((sc[12] * sc[12]));
const amrex::Real qr = Corr * k_f * exp(-(-g_RT[8] + 2.000000*g_RT[12])) * (refC) * (sc[8]);
const amrex::Real qdot = qf - qr;
wdot[8] += qdot;
wdot[12] -= 2.000000 * qdot;
}

{
// reaction 11:  H + O + M <=> OH + M
const amrex::Real k_f = 4714000
           * exp((-1) * tc[0]);
const amrex::Real Corr = mixture + (0.5)*sc[5] + sc[6] + (1.5)*sc[9] + (-0.25)*sc[10] + (11)*sc[15] + (-0.25)*sc[35] + sc[46] + (2)*sc[47];
const amrex::Real qf = Corr * k_f * (sc[11]*sc[12]);
const amrex::Real qr = Corr * k_f * exp(-(g_RT[11] + g_RT[12] - g_RT[13])) * (refC) * (sc[13]);
const amrex::Real qdot = qf - qr;
wdot[11] -= qdot;
wdot[12] -= qdot;
wdot[13] += qdot;
}

{
// reaction 12:  H + OH + M <=> H2O + M
const amrex::Real k_f = 35000000000
           * exp((-2) * tc[0]);
const amrex::Real Corr = mixture + (-0.27)*sc[9] + (-0.62)*sc[10] + (2.65)*sc[15] + sc[46] + (2)*sc[47];
const amrex::Real qf = Corr * k_f * (sc[11]*sc[13]);
const amrex::Real qr = Corr * k_f * exp(-(g_RT[11] + g_RT[13] - g_RT[15])) * (refC) * (sc[15]);
const amrex::Real qdot = qf - qr;
wdot[11] -= qdot;
wdot[13] -= qdot;
wdot[15] += qdot;
}

{
// reaction 33:  HCO + M <=> CO + H + M
const amrex::Real k_f = 570000
           * exp((0.66) * tc[0] - (7482.83182051618) * invT);
const amrex::Real Corr = mixture + (0.5)*sc[5] + sc[6] + sc[9] + (11)*sc[15] + sc[46] + (2)*sc[47];
const amrex::Real qf = Corr * k_f * (sc[17]);
const amrex::Real qr = Corr * k_f * exp(-(-g_RT[5] - g_RT[11] + g_RT[17])) * (refCinv) * (sc[5]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[5] += qdot;
wdot[11] += qdot;
wdot[17] -= qdot;
}

{
// reaction 43:  HCN + M <=> CN + H + M
const amrex::Real k_f = 3.4e+29
           * exp((-5.13) * tc[0] - (66927.8165520277) * invT);
const amrex::Real Corr = mixture + (0.5)*sc[8] + (9)*sc[15] + (-1)*sc[45];
const amrex::Real qf = Corr * k_f * (sc[1]);
const amrex::Real qr = Corr * k_f * exp(-(g_RT[1] - g_RT[11] - g_RT[29])) * (refCinv) * (sc[11]*sc[29]);
const amrex::Real qdot = qf - qr;
wdot[1] -= qdot;
wdot[11] += qdot;
wdot[29] += qdot;
}

{
// reaction 44:  HCN + N2 <=> CN + H + N2
const amrex::Real k_f = 3.6e+20
           * exp((-2.6) * tc[0] - (62846.7293923514) * invT);
const amrex::Real qf = k_f * (sc[1]*sc[45]);
const amrex::Real qr = k_f * exp(-(g_RT[1] - g_RT[11] - g_RT[29])) * (refCinv) * (sc[11]*sc[29]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[1] -= qdot;
wdot[11] += qdot;
wdot[29] += qdot;
}

{
// reaction 45:  HCN + M <=> HNC + M
const amrex::Real k_f = 1.6e+20
           * exp((-3.23) * tc[0] - (27475.6299529377) * invT);
const amrex::Real Corr = mixture + sc[6] + (-0.3)*sc[10] + (6)*sc[15];
const amrex::Real qf = Corr * k_f * (sc[1]);
const amrex::Real qr = Corr * k_f * exp(-(g_RT[1] - g_RT[7])) * (sc[7]);
const amrex::Real qdot = qf - qr;
wdot[1] -= qdot;
wdot[7] += qdot;
}

{
// reaction 76:  HNCO + M <=> CO + NH + M
const amrex::Real k_f = 11000000000
           * exp(-(43276.6332592059) * invT);
const amrex::Real Corr = mixture + (0.5)*sc[45];
const amrex::Real qf = Corr * k_f * (sc[2]);
const amrex::Real qr = Corr * k_f * exp(-(g_RT[2] - g_RT[5] - g_RT[28])) * (refCinv) * (sc[5]*sc[28]);
const amrex::Real qdot = qf - qr;
wdot[2] -= qdot;
wdot[5] += qdot;
wdot[28] += qdot;
}

{
// reaction 98:  HCNO + OH <=> H + NCO + OH
const amrex::Real k_f = 4500000
           ;
const amrex::Real qf = k_f * (sc[13]*sc[33]);
const amrex::Real qr = k_f * exp(-(-g_RT[11] - g_RT[30] + g_RT[33])) * (refCinv) * (sc[11]*sc[13]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[11] += qdot;
wdot[30] += qdot;
wdot[33] -= qdot;
}

{
// reaction 101:  NCO + M <=> CO + N + M
const amrex::Real k_f = 220000000
           * exp(-(27198.8607867451) * invT);
const amrex::Real Corr = mixture + (0.5)*sc[45];
const amrex::Real qf = Corr * k_f * (sc[30]);
const amrex::Real qr = Corr * k_f * exp(-(-g_RT[5] - g_RT[25] + g_RT[30])) * (refCinv) * (sc[5]*sc[25]);
const amrex::Real qdot = qf - qr;
wdot[5] += qdot;
wdot[25] += qdot;
wdot[30] -= qdot;
}

{
// reaction 132:  NH3 + M <=> H + NH2 + M
const amrex::Real k_f = 22000000000
           * exp(-(47035.6617527671) * invT);
const amrex::Real Corr = mixture;
const amrex::Real qf = Corr * k_f * (sc[20]);
const amrex::Real qr = Corr * k_f * exp(-(-g_RT[11] + g_RT[20] - g_RT[27])) * (refCinv) * (sc[11]*sc[27]);
const amrex::Real qdot = qf - qr;
wdot[11] += qdot;
wdot[20] -= qdot;
wdot[27] += qdot;
}

{
// reaction 165:  H2NO + M <=> H + HNO + M
const amrex::Real k_f = 2.8e+18
           * exp((-2.83) * tc[0] - (32666.3098607134) * invT);
const amrex::Real Corr = mixture + (9)*sc[15];
const amrex::Real qf = Corr * k_f * (sc[24]);
const amrex::Real qr = Corr * k_f * exp(-(-g_RT[11] - g_RT[21] + g_RT[24])) * (refCinv) * (sc[11]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[11] += qdot;
wdot[21] += qdot;
wdot[24] -= qdot;
}

{
// reaction 166:  H2NO + M <=> HNOH + M
const amrex::Real k_f = 1.1e+23
           * exp((-4) * tc[0] - (22141.5332954077) * invT);
const amrex::Real Corr = mixture + (9)*sc[15];
const amrex::Real qf = Corr * k_f * (sc[24]);
const amrex::Real qr = Corr * k_f * exp(-(g_RT[24] - g_RT[42])) * (sc[42]);
const amrex::Real qdot = qf - qr;
wdot[24] -= qdot;
wdot[42] += qdot;
}

{
// reaction 176:  HNOH + M <=> H + HNO + M
const amrex::Real k_f = 2e+18
           * exp((-2.84) * tc[0] - (29656.5709825354) * invT);
const amrex::Real Corr = mixture + (9)*sc[15];
const amrex::Real qf = Corr * k_f * (sc[42]);
const amrex::Real qr = Corr * k_f * exp(-(-g_RT[11] - g_RT[21] + g_RT[42])) * (refCinv) * (sc[11]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[11] += qdot;
wdot[21] += qdot;
wdot[42] -= qdot;
}

{
// reaction 188:  HON + M <=> H + NO + M
const amrex::Real k_f = 51000000000000
           * exp((-1.73) * tc[0] - (8074.11140283673) * invT);
const amrex::Real Corr = mixture + sc[6] + (-0.3)*sc[10] + (6)*sc[15];
const amrex::Real qf = Corr * k_f * (sc[22]);
const amrex::Real qr = Corr * k_f * exp(-(-g_RT[3] - g_RT[11] + g_RT[22])) * (refCinv) * (sc[3]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[11] += qdot;
wdot[22] -= qdot;
}

{
// reaction 206:  NO3 + NO2 <=> NO + O2 + NO2
const amrex::Real k_f = 50000
           * exp(-(1479.45699746588) * invT);
const amrex::Real qf = k_f * (sc[19]*sc[43]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] - g_RT[8] + g_RT[43])) * (refCinv) * (sc[3]*sc[8]*sc[19]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[8] += qdot;
wdot[43] -= qdot;
}

{
// reaction 214:  NNH + O2 <=> H + N2 + O2
const amrex::Real k_f = 50000000
           ;
const amrex::Real qf = k_f * (sc[8]*sc[26]);
const amrex::Real qr = k_f * exp(-(-g_RT[11] + g_RT[26] - g_RT[45])) * (refCinv) * (sc[8]*sc[11]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[11] += qdot;
wdot[26] -= qdot;
wdot[45] += qdot;
}

{
// reaction 219:  NCCN + M <=> 2 CN + M
const amrex::Real k_f = 1.1e+28
           * exp((-4.32) * tc[0] - (65457.9206712121) * invT);
const amrex::Real Corr = mixture + (2)*sc[6] + (0.5)*sc[8] + (0.5)*sc[9] + (9)*sc[15] + (0.5)*sc[45];
const amrex::Real qf = Corr * k_f * (sc[31]);
const amrex::Real qr = Corr * k_f * exp(-(-2.000000*g_RT[29] + g_RT[31])) * (refCinv) * ((sc[29] * sc[29]));
const amrex::Real qdot = qf - qr;
wdot[29] += 2.000000 * qdot;
wdot[31] -= qdot;
}

{
// reaction 222:  H + O + M <=> OH* + M
const amrex::Real k_f = 15
           * exp(-(3006.7195781832) * invT);
const amrex::Real Corr = mixture + (-0.6)*sc[8] + (-0.65)*sc[10] + (5.5)*sc[15] + (-0.6)*sc[45];
const amrex::Real qf = Corr * k_f * (sc[11]*sc[12]);
const amrex::Real qr = Corr * k_f * exp(-(-g_RT[0] + g_RT[11] + g_RT[12])) * (refC) * (sc[0]);
const amrex::Real qdot = qf - qr;
wdot[0] += qdot;
wdot[11] -= qdot;
wdot[12] -= qdot;
}

{
// reaction 233:  N2 + M <=> 2 N + M
const amrex::Real k_f = 1890000000000
           * exp((-0.85) * tc[0] - (113198.588972772) * invT);
const amrex::Real Corr = mixture + (15.25)*sc[15];
const amrex::Real qf = Corr * k_f * (sc[45]);
const amrex::Real qr = Corr * k_f * exp(-(-2.000000*g_RT[25] + g_RT[45])) * (refCinv) * ((sc[25] * sc[25]));
const amrex::Real qdot = qf - qr;
wdot[25] += 2.000000 * qdot;
wdot[45] -= qdot;
}

{
// reaction 234:  N + O + M <=> NO + M
const amrex::Real k_f = 760
           * exp((-0.1) * tc[0] - (-890.693498474354) * invT);
const amrex::Real Corr = mixture + (15.25)*sc[15];
const amrex::Real qf = Corr * k_f * (sc[12]*sc[25]);
const amrex::Real qr = Corr * k_f * exp(-(-g_RT[3] + g_RT[12] + g_RT[25])) * (refC) * (sc[3]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[12] -= qdot;
wdot[25] -= qdot;
}

{
// reaction 240:  NO2 + M <=> NO + O + M
const amrex::Real k_f = 11000000000
           * exp(-(33212.2999431115) * invT);
const amrex::Real Corr = mixture + (15.25)*sc[15];
const amrex::Real qf = Corr * k_f * (sc[19]);
const amrex::Real qr = Corr * k_f * exp(-(-g_RT[3] - g_RT[12] + g_RT[19])) * (refCinv) * (sc[3]*sc[12]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[12] += qdot;
wdot[19] -= qdot;
}

{
// reaction 257:  H2NO + M <=> H2 + NO + M
const amrex::Real k_f = 7.83e+21
           * exp((-4.29) * tc[0] - (30343.9649480246) * invT);
const amrex::Real Corr = mixture + (9)*sc[15];
const amrex::Real qf = Corr * k_f * (sc[24]);
const amrex::Real qr = Corr * k_f * exp(-(-g_RT[3] - g_RT[9] + g_RT[24])) * (refCinv) * (sc[3]*sc[9]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[9] += qdot;
wdot[24] -= qdot;
}

{
// reaction 258:  HO2 + NO + M <=> HONO2 + M
const amrex::Real k_f = 2.23
           * exp((-3.5) * tc[0] - (1107.07666477038) * invT);
const amrex::Real Corr = mixture;
const amrex::Real qf = Corr * k_f * (sc[3]*sc[14]);
const amrex::Real qr = Corr * k_f * exp(-(g_RT[3] + g_RT[14] - g_RT[44])) * (refC) * (sc[44]);
const amrex::Real qdot = qf - qr;
wdot[3] -= qdot;
wdot[14] -= qdot;
wdot[44] += qdot;
}

{
// reaction 0:  H + N2O <=> N2 + OH
const amrex::Real k_f = 50000000
           * exp(-(7648.89332023174) * invT);
const amrex::Real qf = k_f * (sc[4]*sc[11]);
const amrex::Real qr = k_f * exp(-(g_RT[4] + g_RT[11] - g_RT[13] - g_RT[45])) * (sc[13]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[4] -= qdot;
wdot[11] -= qdot;
wdot[13] += qdot;
wdot[45] += qdot;
}

{
// reaction 2:  N + NO <=> N2 + O
const amrex::Real k_f = 21000000
           ;
const amrex::Real qf = k_f * (sc[3]*sc[25]);
const amrex::Real qr = k_f * exp(-(g_RT[3] - g_RT[12] + g_RT[25] - g_RT[45])) * (sc[12]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[3] -= qdot;
wdot[12] += qdot;
wdot[25] -= qdot;
wdot[45] += qdot;
}

{
// reaction 3:  H + HNO <=> H2 + NO
const amrex::Real k_f = 440000
           * exp((0.7) * tc[0] - (327.090832773068) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[21]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] - g_RT[9] + g_RT[11] + g_RT[21])) * (sc[3]*sc[9]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[9] += qdot;
wdot[11] -= qdot;
wdot[21] -= qdot;
}

{
// reaction 4:  H + N2O <=> NH + NO
const amrex::Real k_f = 6.7e+16
           * exp((-2.16) * tc[0] - (18697.0152179744) * invT);
const amrex::Real qf = k_f * (sc[4]*sc[11]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[11] - g_RT[28])) * (sc[3]*sc[28]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[4] -= qdot;
wdot[11] -= qdot;
wdot[28] += qdot;
}

{
// reaction 5:  H + O2 <=> O + OH
const amrex::Real k_f = 104000000
           * exp(-(7692.16995349094) * invT);
const amrex::Real qf = k_f * (sc[8]*sc[11]);
const amrex::Real qr = k_f * exp(-(g_RT[8] + g_RT[11] - g_RT[12] - g_RT[13])) * (sc[12]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[8] -= qdot;
wdot[11] -= qdot;
wdot[12] += qdot;
wdot[13] += qdot;
}

{
// reaction 6:  H2 + O <=> H + OH
const amrex::Real k_f = 0.0509
           * exp((2.67) * tc[0] - (3166.2392612433) * invT);
const amrex::Real qf = k_f * (sc[9]*sc[12]);
const amrex::Real qr = k_f * exp(-(g_RT[9] - g_RT[11] + g_RT[12] - g_RT[13])) * (sc[11]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[9] -= qdot;
wdot[11] += qdot;
wdot[12] -= qdot;
wdot[13] += qdot;
}

{
// reaction 7:  H2 + OH <=> H + H2O
const amrex::Real k_f = 43800000
           * exp(-(3517.48449397499) * invT);
const amrex::Real qf = k_f * (sc[9]*sc[13]);
const amrex::Real qr = k_f * exp(-(g_RT[9] - g_RT[11] + g_RT[13] - g_RT[15])) * (sc[11]*sc[15]);
const amrex::Real qdot = qf - qr;
wdot[9] -= qdot;
wdot[11] += qdot;
wdot[13] -= qdot;
wdot[15] += qdot;
}

{
// reaction 8:  H2O + O <=> 2 OH
const amrex::Real k_f = 2.97
           * exp((2.02) * tc[0] - (6743.10332178324) * invT);
const amrex::Real qf = k_f * (sc[12]*sc[15]);
const amrex::Real qr = k_f * exp(-(g_RT[12] - 2.000000*g_RT[13] + g_RT[15])) * ((sc[13] * sc[13]));
const amrex::Real qdot = qf - qr;
wdot[12] -= qdot;
wdot[13] += 2.000000 * qdot;
wdot[15] -= qdot;
}

{
// reaction 15:  H + HO2 <=> 2 OH
const amrex::Real k_f = 70790000
           * exp(-(148.448916412392) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[14]);
const amrex::Real qr = k_f * exp(-(g_RT[11] - 2.000000*g_RT[13] + g_RT[14])) * ((sc[13] * sc[13]));
const amrex::Real qdot = qf - qr;
wdot[11] -= qdot;
wdot[13] += 2.000000 * qdot;
wdot[14] -= qdot;
}

{
// reaction 16:  H2 + O2 <=> H + HO2
const amrex::Real k_f = 0.5176
           * exp((2.433) * tc[0] - (26923.0980538841) * invT);
const amrex::Real qf = k_f * (sc[8]*sc[9]);
const amrex::Real qr = k_f * exp(-(g_RT[8] + g_RT[9] - g_RT[11] - g_RT[14])) * (sc[11]*sc[14]);
const amrex::Real qdot = qf - qr;
wdot[8] -= qdot;
wdot[9] -= qdot;
wdot[11] += qdot;
wdot[14] += qdot;
}

{
// reaction 17:  HO2 + O <=> O2 + OH
const amrex::Real k_f = 32500000
           ;
const amrex::Real qf = k_f * (sc[12]*sc[14]);
const amrex::Real qr = k_f * exp(-(-g_RT[8] + g_RT[12] - g_RT[13] + g_RT[14])) * (sc[8]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[8] += qdot;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[14] -= qdot;
}

{
// reaction 18:  HO2 + OH <=> H2O + O2
const amrex::Real k_f = 24560000
           * exp(-(-250.098682904946) * invT);
const amrex::Real qf = k_f * (sc[13]*sc[14]);
const amrex::Real qr = k_f * exp(-(-g_RT[8] + g_RT[13] + g_RT[14] - g_RT[15])) * (sc[8]*sc[15]);
const amrex::Real qdot = qf - qr;
wdot[8] += qdot;
wdot[13] -= qdot;
wdot[14] -= qdot;
wdot[15] += qdot;
}

{
// reaction 19:  2 HO2 <=> H2O2 + O2
const amrex::Real k_f = 130000
           * exp(-(-820.243165261693) * invT);
const amrex::Real qf = k_f * ((sc[14] * sc[14]));
const amrex::Real qr = k_f * exp(-(-g_RT[8] + 2.000000*g_RT[14] - g_RT[16])) * (sc[8]*sc[16]);
const amrex::Real qdot = qf - qr;
wdot[8] += qdot;
wdot[14] -= 2.000000 * qdot;
wdot[16] += qdot;
}

{
// reaction 20:  2 HO2 <=> H2O2 + O2
const amrex::Real k_f = 365800000
           * exp(-(6038.59998965664) * invT);
const amrex::Real qf = k_f * ((sc[14] * sc[14]));
const amrex::Real qr = k_f * exp(-(-g_RT[8] + 2.000000*g_RT[14] - g_RT[16])) * (sc[8]*sc[16]);
const amrex::Real qdot = qf - qr;
wdot[8] += qdot;
wdot[14] -= 2.000000 * qdot;
wdot[16] += qdot;
}

{
// reaction 23:  H + H2O2 <=> H2O + OH
const amrex::Real k_f = 24100000
           * exp(-(1997.77016324474) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[16]);
const amrex::Real qr = k_f * exp(-(g_RT[11] - g_RT[13] - g_RT[15] + g_RT[16])) * (sc[13]*sc[15]);
const amrex::Real qdot = qf - qr;
wdot[11] -= qdot;
wdot[13] += qdot;
wdot[15] += qdot;
wdot[16] -= qdot;
}

{
// reaction 24:  H + H2O2 <=> H2 + HO2
const amrex::Real k_f = 21500
           * exp((1) * tc[0] - (3019.29999482832) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[16]);
const amrex::Real qr = k_f * exp(-(-g_RT[9] + g_RT[11] - g_RT[14] + g_RT[16])) * (sc[9]*sc[14]);
const amrex::Real qdot = qf - qr;
wdot[9] += qdot;
wdot[11] -= qdot;
wdot[14] += qdot;
wdot[16] -= qdot;
}

{
// reaction 25:  H2O2 + O <=> HO2 + OH
const amrex::Real k_f = 9.55
           * exp((2) * tc[0] - (1997.77016324474) * invT);
const amrex::Real qf = k_f * (sc[12]*sc[16]);
const amrex::Real qr = k_f * exp(-(g_RT[12] - g_RT[13] - g_RT[14] + g_RT[16])) * (sc[13]*sc[14]);
const amrex::Real qdot = qf - qr;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[14] += qdot;
wdot[16] -= qdot;
}

{
// reaction 26:  H2O2 + OH <=> H2O + HO2
const amrex::Real k_f = 1740000
           * exp(-(160.022899725901) * invT);
const amrex::Real qf = k_f * (sc[13]*sc[16]);
const amrex::Real qr = k_f * exp(-(g_RT[13] - g_RT[14] - g_RT[15] + g_RT[16])) * (sc[14]*sc[15]);
const amrex::Real qdot = qf - qr;
wdot[13] -= qdot;
wdot[14] += qdot;
wdot[15] += qdot;
wdot[16] -= qdot;
}

{
// reaction 27:  H2O2 + OH <=> H2O + HO2
const amrex::Real k_f = 75900000
           * exp(-(3657.88194373451) * invT);
const amrex::Real qf = k_f * (sc[13]*sc[16]);
const amrex::Real qr = k_f * exp(-(g_RT[13] - g_RT[14] - g_RT[15] + g_RT[16])) * (sc[14]*sc[15]);
const amrex::Real qdot = qf - qr;
wdot[13] -= qdot;
wdot[14] += qdot;
wdot[15] += qdot;
wdot[16] -= qdot;
}

{
// reaction 29:  CO + O2 <=> CO2 + O
const amrex::Real k_f = 1119000
           * exp(-(24003.4349588851) * invT);
const amrex::Real qf = k_f * (sc[5]*sc[8]);
const amrex::Real qr = k_f * exp(-(g_RT[5] - g_RT[6] + g_RT[8] - g_RT[12])) * (sc[6]*sc[12]);
const amrex::Real qdot = qf - qr;
wdot[5] -= qdot;
wdot[6] += qdot;
wdot[8] -= qdot;
wdot[12] += qdot;
}

{
// reaction 30:  CO + OH <=> CO2 + H
const amrex::Real k_f = 0.07015
           * exp((2.053) * tc[0] - (-178.994168026739) * invT);
const amrex::Real qf = k_f * (sc[5]*sc[13]);
const amrex::Real qr = k_f * exp(-(g_RT[5] - g_RT[6] - g_RT[11] + g_RT[13])) * (sc[6]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[5] -= qdot;
wdot[6] += qdot;
wdot[11] += qdot;
wdot[13] -= qdot;
}

{
// reaction 31:  CO + OH <=> CO2 + H
const amrex::Real k_f = 5757000
           * exp((-0.664) * tc[0] - (166.967289714006) * invT);
const amrex::Real qf = k_f * (sc[5]*sc[13]);
const amrex::Real qr = k_f * exp(-(g_RT[5] - g_RT[6] - g_RT[11] + g_RT[13])) * (sc[6]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[5] -= qdot;
wdot[6] += qdot;
wdot[11] += qdot;
wdot[13] -= qdot;
}

{
// reaction 32:  CO + HO2 <=> CO2 + OH
const amrex::Real k_f = 0.157
           * exp((2.18) * tc[0] - (9027.70698453667) * invT);
const amrex::Real qf = k_f * (sc[5]*sc[14]);
const amrex::Real qr = k_f * exp(-(g_RT[5] - g_RT[6] - g_RT[13] + g_RT[14])) * (sc[6]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[5] -= qdot;
wdot[6] += qdot;
wdot[13] += qdot;
wdot[14] -= qdot;
}

{
// reaction 34:  HCO + O2 <=> CO + HO2
const amrex::Real k_f = 7580000
           * exp(-(206.318832979935) * invT);
const amrex::Real qf = k_f * (sc[8]*sc[17]);
const amrex::Real qr = k_f * exp(-(-g_RT[5] + g_RT[8] - g_RT[14] + g_RT[17])) * (sc[5]*sc[14]);
const amrex::Real qdot = qf - qr;
wdot[5] += qdot;
wdot[8] -= qdot;
wdot[14] += qdot;
wdot[17] -= qdot;
}

{
// reaction 35:  H + HCO <=> CO + H2
const amrex::Real k_f = 73400000
           ;
const amrex::Real qf = k_f * (sc[11]*sc[17]);
const amrex::Real qr = k_f * exp(-(-g_RT[5] - g_RT[9] + g_RT[11] + g_RT[17])) * (sc[5]*sc[9]);
const amrex::Real qdot = qf - qr;
wdot[5] += qdot;
wdot[9] += qdot;
wdot[11] -= qdot;
wdot[17] -= qdot;
}

{
// reaction 36:  HCO + O <=> CO + OH
const amrex::Real k_f = 30200000
           ;
const amrex::Real qf = k_f * (sc[12]*sc[17]);
const amrex::Real qr = k_f * exp(-(-g_RT[5] + g_RT[12] - g_RT[13] + g_RT[17])) * (sc[5]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[5] += qdot;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[17] -= qdot;
}

{
// reaction 37:  HCO + O <=> CO2 + H
const amrex::Real k_f = 30000000
           ;
const amrex::Real qf = k_f * (sc[12]*sc[17]);
const amrex::Real qr = k_f * exp(-(-g_RT[6] - g_RT[11] + g_RT[12] + g_RT[17])) * (sc[6]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[6] += qdot;
wdot[11] += qdot;
wdot[12] -= qdot;
wdot[17] -= qdot;
}

{
// reaction 38:  HCO + OH <=> CO + H2O
const amrex::Real k_f = 102000000
           ;
const amrex::Real qf = k_f * (sc[13]*sc[17]);
const amrex::Real qr = k_f * exp(-(-g_RT[5] + g_RT[13] - g_RT[15] + g_RT[17])) * (sc[5]*sc[15]);
const amrex::Real qdot = qf - qr;
wdot[5] += qdot;
wdot[13] -= qdot;
wdot[15] += qdot;
wdot[17] -= qdot;
}

{
// reaction 39:  HCO + HO2 => CO2 + H + OH
const amrex::Real k_f = 30000000
           ;
const amrex::Real qf = k_f * (sc[14]*sc[17]);
const amrex::Real qr = 0.0;
const amrex::Real qdot = qf - qr;
wdot[6] += qdot;
wdot[11] += qdot;
wdot[13] += qdot;
wdot[14] -= qdot;
wdot[17] -= qdot;
}

{
// reaction 40:  2 HCO => 2 CO + H2
const amrex::Real k_f = 3000000
           ;
const amrex::Real qf = k_f * ((sc[17] * sc[17]));
const amrex::Real qr = 0.0;
const amrex::Real qdot = qf - qr;
wdot[5] += 2.000000 * qdot;
wdot[9] += qdot;
wdot[17] -= 2.000000 * qdot;
}

{
// reaction 41:  CH2O + O2 <=> HCO + HO2
const amrex::Real k_f = 8070000000
           * exp(-(26881.8342872881) * invT);
const amrex::Real qf = k_f * (sc[8]*sc[18]);
const amrex::Real qr = k_f * exp(-(g_RT[8] - g_RT[14] - g_RT[17] + g_RT[18])) * (sc[14]*sc[17]);
const amrex::Real qdot = qf - qr;
wdot[8] -= qdot;
wdot[14] += qdot;
wdot[17] += qdot;
wdot[18] -= qdot;
}

{
// reaction 42:  2 HCO <=> CH2O + CO
const amrex::Real k_f = 18000000
           ;
const amrex::Real qf = k_f * ((sc[17] * sc[17]));
const amrex::Real qr = k_f * exp(-(-g_RT[5] + 2.000000*g_RT[17] - g_RT[18])) * (sc[5]*sc[18]);
const amrex::Real qdot = qf - qr;
wdot[5] += qdot;
wdot[17] -= 2.000000 * qdot;
wdot[18] += qdot;
}

{
// reaction 46:  CN + H2 <=> H + HCN
const amrex::Real k_f = 0.11
           * exp((2.6) * tc[0] - (960.137398355405) * invT);
const amrex::Real qf = k_f * (sc[9]*sc[29]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] + g_RT[9] - g_RT[11] + g_RT[29])) * (sc[1]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[9] -= qdot;
wdot[11] += qdot;
wdot[29] -= qdot;
}

{
// reaction 47:  HCN + O <=> H + NCO
const amrex::Real k_f = 0.014
           * exp((2.64) * tc[0] - (2506.0189957075) * invT);
const amrex::Real qf = k_f * (sc[1]*sc[12]);
const amrex::Real qr = k_f * exp(-(g_RT[1] - g_RT[11] + g_RT[12] - g_RT[30])) * (sc[11]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[1] -= qdot;
wdot[11] += qdot;
wdot[12] -= qdot;
wdot[30] += qdot;
}

{
// reaction 48:  HCN + O <=> CN + OH
const amrex::Real k_f = 42000
           * exp((0.4) * tc[0] - (10398.9723988545) * invT);
const amrex::Real qf = k_f * (sc[1]*sc[12]);
const amrex::Real qr = k_f * exp(-(g_RT[1] + g_RT[12] - g_RT[13] - g_RT[29])) * (sc[13]*sc[29]);
const amrex::Real qdot = qf - qr;
wdot[1] -= qdot;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[29] += qdot;
}

{
// reaction 49:  HCN + O <=> CO + NH
const amrex::Real k_f = 0.0035
           * exp((2.64) * tc[0] - (2506.0189957075) * invT);
const amrex::Real qf = k_f * (sc[1]*sc[12]);
const amrex::Real qr = k_f * exp(-(g_RT[1] - g_RT[5] + g_RT[12] - g_RT[28])) * (sc[5]*sc[28]);
const amrex::Real qdot = qf - qr;
wdot[1] -= qdot;
wdot[5] += qdot;
wdot[12] -= qdot;
wdot[28] += qdot;
}

{
// reaction 50:  HCN + OH <=> CN + H2O
const amrex::Real k_f = 3.9
           * exp((1.83) * tc[0] - (5183.13165778861) * invT);
const amrex::Real qf = k_f * (sc[1]*sc[13]);
const amrex::Real qr = k_f * exp(-(g_RT[1] + g_RT[13] - g_RT[15] - g_RT[29])) * (sc[15]*sc[29]);
const amrex::Real qdot = qf - qr;
wdot[1] -= qdot;
wdot[13] -= qdot;
wdot[15] += qdot;
wdot[29] += qdot;
}

{
// reaction 51:  HCN + OH <=> H + HOCN
const amrex::Real k_f = 0.059
           * exp((2.4) * tc[0] - (6290.208322559) * invT);
const amrex::Real qf = k_f * (sc[1]*sc[13]);
const amrex::Real qr = k_f * exp(-(g_RT[1] - g_RT[11] + g_RT[13] - g_RT[32])) * (sc[11]*sc[32]);
const amrex::Real qdot = qf - qr;
wdot[1] -= qdot;
wdot[11] += qdot;
wdot[13] -= qdot;
wdot[32] += qdot;
}

{
// reaction 52:  HCN + OH <=> H + HNCO
const amrex::Real k_f = 2e-09
           * exp((4) * tc[0] - (503.21666580472) * invT);
const amrex::Real qf = k_f * (sc[1]*sc[13]);
const amrex::Real qr = k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[11] + g_RT[13])) * (sc[2]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[1] -= qdot;
wdot[2] += qdot;
wdot[11] += qdot;
wdot[13] -= qdot;
}

{
// reaction 53:  HCN + OH <=> CO + NH2
const amrex::Real k_f = 7.8e-10
           * exp((4) * tc[0] - (2012.86666321888) * invT);
const amrex::Real qf = k_f * (sc[1]*sc[13]);
const amrex::Real qr = k_f * exp(-(g_RT[1] - g_RT[5] + g_RT[13] - g_RT[27])) * (sc[5]*sc[27]);
const amrex::Real qdot = qf - qr;
wdot[1] -= qdot;
wdot[5] += qdot;
wdot[13] -= qdot;
wdot[27] += qdot;
}

{
// reaction 54:  HCN + O2 <=> CN + HO2
const amrex::Real k_f = 30000000
           * exp(-(37791.5716019344) * invT);
const amrex::Real qf = k_f * (sc[1]*sc[8]);
const amrex::Real qr = k_f * exp(-(g_RT[1] + g_RT[8] - g_RT[14] - g_RT[29])) * (sc[14]*sc[29]);
const amrex::Real qdot = qf - qr;
wdot[1] -= qdot;
wdot[8] -= qdot;
wdot[14] += qdot;
wdot[29] += qdot;
}

{
// reaction 55:  CN + HCN <=> H + NCCN
const amrex::Real k_f = 15
           * exp((1.71) * tc[0] - (769.921498681221) * invT);
const amrex::Real qf = k_f * (sc[1]*sc[29]);
const amrex::Real qr = k_f * exp(-(g_RT[1] - g_RT[11] + g_RT[29] - g_RT[31])) * (sc[11]*sc[31]);
const amrex::Real qdot = qf - qr;
wdot[1] -= qdot;
wdot[11] += qdot;
wdot[29] -= qdot;
wdot[31] += qdot;
}

{
// reaction 56:  H + HNC <=> H + HCN
const amrex::Real k_f = 78000000
           * exp(-(1811.57999689699) * invT);
const amrex::Real qf = k_f * (sc[7]*sc[11]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] + g_RT[7] + g_RT[11] - g_RT[11])) * (sc[1]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[7] -= qdot;
wdot[11] -= qdot;
wdot[11] += qdot;
}

{
// reaction 57:  HNC + O <=> CO + NH
const amrex::Real k_f = 4600000
           * exp(-(1107.07666477038) * invT);
const amrex::Real qf = k_f * (sc[7]*sc[12]);
const amrex::Real qr = k_f * exp(-(-g_RT[5] + g_RT[7] + g_RT[12] - g_RT[28])) * (sc[5]*sc[28]);
const amrex::Real qdot = qf - qr;
wdot[5] += qdot;
wdot[7] -= qdot;
wdot[12] -= qdot;
wdot[28] += qdot;
}

{
// reaction 58:  HNC + OH <=> H + HNCO
const amrex::Real k_f = 28000000
           * exp(-(1861.90166347746) * invT);
const amrex::Real qf = k_f * (sc[7]*sc[13]);
const amrex::Real qr = k_f * exp(-(-g_RT[2] + g_RT[7] - g_RT[11] + g_RT[13])) * (sc[2]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[2] += qdot;
wdot[7] -= qdot;
wdot[11] += qdot;
wdot[13] -= qdot;
}

{
// reaction 59:  CN + HNC <=> H + NCCN
const amrex::Real k_f = 10000000
           ;
const amrex::Real qf = k_f * (sc[7]*sc[29]);
const amrex::Real qr = k_f * exp(-(g_RT[7] - g_RT[11] + g_RT[29] - g_RT[31])) * (sc[11]*sc[31]);
const amrex::Real qdot = qf - qr;
wdot[7] -= qdot;
wdot[11] += qdot;
wdot[29] -= qdot;
wdot[31] += qdot;
}

{
// reaction 60:  CN + O <=> CO + N
const amrex::Real k_f = 1900000
           * exp((0.46) * tc[0] - (363.825649376812) * invT);
const amrex::Real qf = k_f * (sc[12]*sc[29]);
const amrex::Real qr = k_f * exp(-(-g_RT[5] + g_RT[12] - g_RT[25] + g_RT[29])) * (sc[5]*sc[25]);
const amrex::Real qdot = qf - qr;
wdot[5] += qdot;
wdot[12] -= qdot;
wdot[25] += qdot;
wdot[29] -= qdot;
}

{
// reaction 61:  CN + OH <=> H + NCO
const amrex::Real k_f = 1000000000
           * exp((-0.437) * tc[0]);
const amrex::Real qf = k_f * (sc[13]*sc[29]);
const amrex::Real qr = k_f * exp(-(-g_RT[11] + g_RT[13] + g_RT[29] - g_RT[30])) * (sc[11]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[11] += qdot;
wdot[13] -= qdot;
wdot[29] -= qdot;
wdot[30] += qdot;
}

{
// reaction 62:  CN + O2 <=> NCO + O
const amrex::Real k_f = 7200000
           * exp(-(-209.841349640568) * invT);
const amrex::Real qf = k_f * (sc[8]*sc[29]);
const amrex::Real qr = k_f * exp(-(g_RT[8] - g_RT[12] + g_RT[29] - g_RT[30])) * (sc[12]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[8] -= qdot;
wdot[12] += qdot;
wdot[29] -= qdot;
wdot[30] += qdot;
}

{
// reaction 63:  CN + O2 <=> NCO + O
const amrex::Real k_f = -280000000000
           * exp((-2) * tc[0]);
const amrex::Real qf = k_f * (sc[8]*sc[29]);
const amrex::Real qr = k_f * exp(-(g_RT[8] - g_RT[12] + g_RT[29] - g_RT[30])) * (sc[12]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[8] -= qdot;
wdot[12] += qdot;
wdot[29] -= qdot;
wdot[30] += qdot;
}

{
// reaction 64:  CN + O2 <=> CO + NO
const amrex::Real k_f = 280000000000
           * exp((-2) * tc[0]);
const amrex::Real qf = k_f * (sc[8]*sc[29]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] - g_RT[5] + g_RT[8] + g_RT[29])) * (sc[3]*sc[5]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[5] += qdot;
wdot[8] -= qdot;
wdot[29] -= qdot;
}

{
// reaction 65:  CN + CO2 <=> CO + NCO
const amrex::Real k_f = 3.7
           * exp((2.16) * tc[0] - (13536.528310147) * invT);
const amrex::Real qf = k_f * (sc[6]*sc[29]);
const amrex::Real qr = k_f * exp(-(-g_RT[5] + g_RT[6] + g_RT[29] - g_RT[30])) * (sc[5]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[5] += qdot;
wdot[6] -= qdot;
wdot[29] -= qdot;
wdot[30] += qdot;
}

{
// reaction 66:  CH2O + CN <=> HCN + HCO
const amrex::Real k_f = 42000000
           ;
const amrex::Real qf = k_f * (sc[18]*sc[29]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] - g_RT[17] + g_RT[18] + g_RT[29])) * (sc[1]*sc[17]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[17] += qdot;
wdot[18] -= qdot;
wdot[29] -= qdot;
}

{
// reaction 67:  CN + NO <=> N + NCO
const amrex::Real k_f = 96000000
           * exp(-(21185.4216303787) * invT);
const amrex::Real qf = k_f * (sc[3]*sc[29]);
const amrex::Real qr = k_f * exp(-(g_RT[3] - g_RT[25] + g_RT[29] - g_RT[30])) * (sc[25]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[3] -= qdot;
wdot[25] += qdot;
wdot[29] -= qdot;
wdot[30] += qdot;
}

{
// reaction 68:  CN + NO2 <=> NCO + NO
const amrex::Real k_f = 5300000000
           * exp((-0.752) * tc[0] - (173.106533036824) * invT);
const amrex::Real qf = k_f * (sc[19]*sc[29]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[19] + g_RT[29] - g_RT[30])) * (sc[3]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[19] -= qdot;
wdot[29] -= qdot;
wdot[30] += qdot;
}

{
// reaction 69:  CN + NO2 <=> CO + N2O
const amrex::Real k_f = 490000000
           * exp((-0.752) * tc[0] - (173.106533036824) * invT);
const amrex::Real qf = k_f * (sc[19]*sc[29]);
const amrex::Real qr = k_f * exp(-(-g_RT[4] - g_RT[5] + g_RT[19] + g_RT[29])) * (sc[4]*sc[5]);
const amrex::Real qdot = qf - qr;
wdot[4] += qdot;
wdot[5] += qdot;
wdot[19] -= qdot;
wdot[29] -= qdot;
}

{
// reaction 70:  CN + NO2 <=> CO2 + N2
const amrex::Real k_f = 370000000
           * exp((-0.752) * tc[0] - (173.106533036824) * invT);
const amrex::Real qf = k_f * (sc[19]*sc[29]);
const amrex::Real qr = k_f * exp(-(-g_RT[6] + g_RT[19] + g_RT[29] - g_RT[45])) * (sc[6]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[6] += qdot;
wdot[19] -= qdot;
wdot[29] -= qdot;
wdot[45] += qdot;
}

{
// reaction 71:  CN + HNO <=> HCN + NO
const amrex::Real k_f = 18000000
           ;
const amrex::Real qf = k_f * (sc[21]*sc[29]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] - g_RT[3] + g_RT[21] + g_RT[29])) * (sc[1]*sc[3]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[3] += qdot;
wdot[21] -= qdot;
wdot[29] -= qdot;
}

{
// reaction 72:  CN + HONO <=> HCN + NO2
const amrex::Real k_f = 12000000
           ;
const amrex::Real qf = k_f * (sc[23]*sc[29]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] - g_RT[19] + g_RT[23] + g_RT[29])) * (sc[1]*sc[19]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[19] += qdot;
wdot[23] -= qdot;
wdot[29] -= qdot;
}

{
// reaction 73:  CN + N2O <=> NCN + NO
const amrex::Real k_f = 0.0038
           * exp((2.6) * tc[0] - (1861.90166347746) * invT);
const amrex::Real qf = k_f * (sc[4]*sc[29]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[29] - g_RT[34])) * (sc[3]*sc[34]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[4] -= qdot;
wdot[29] -= qdot;
wdot[34] += qdot;
}

{
// reaction 74:  CN + HNCO <=> HCN + NCO
const amrex::Real k_f = 10000000
           ;
const amrex::Real qf = k_f * (sc[2]*sc[29]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[29] - g_RT[30])) * (sc[1]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[2] -= qdot;
wdot[29] -= qdot;
wdot[30] += qdot;
}

{
// reaction 75:  CN + NCO <=> CO + NCN
const amrex::Real k_f = 18000000
           ;
const amrex::Real qf = k_f * (sc[29]*sc[30]);
const amrex::Real qr = k_f * exp(-(-g_RT[5] + g_RT[29] + g_RT[30] - g_RT[34])) * (sc[5]*sc[34]);
const amrex::Real qdot = qf - qr;
wdot[5] += qdot;
wdot[29] -= qdot;
wdot[30] -= qdot;
wdot[34] += qdot;
}

{
// reaction 77:  H + HNCO <=> CO + NH2
const amrex::Real k_f = 0.036
           * exp((2.49) * tc[0] - (1180.04308131207) * invT);
const amrex::Real qf = k_f * (sc[2]*sc[11]);
const amrex::Real qr = k_f * exp(-(g_RT[2] - g_RT[5] + g_RT[11] - g_RT[27])) * (sc[5]*sc[27]);
const amrex::Real qdot = qf - qr;
wdot[2] -= qdot;
wdot[5] += qdot;
wdot[11] -= qdot;
wdot[27] += qdot;
}

{
// reaction 78:  H + HNCO <=> H2 + NCO
const amrex::Real k_f = 90
           * exp((1.66) * tc[0] - (6994.7116546856) * invT);
const amrex::Real qf = k_f * (sc[2]*sc[11]);
const amrex::Real qr = k_f * exp(-(g_RT[2] - g_RT[9] + g_RT[11] - g_RT[30])) * (sc[9]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[2] -= qdot;
wdot[9] += qdot;
wdot[11] -= qdot;
wdot[30] += qdot;
}

{
// reaction 79:  HNCO + O <=> NCO + OH
const amrex::Real k_f = 2.2
           * exp((2.11) * tc[0] - (5751.76649014795) * invT);
const amrex::Real qf = k_f * (sc[2]*sc[12]);
const amrex::Real qr = k_f * exp(-(g_RT[2] + g_RT[12] - g_RT[13] - g_RT[30])) * (sc[13]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[2] -= qdot;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[30] += qdot;
}

{
// reaction 80:  HNCO + O <=> CO2 + NH
const amrex::Real k_f = 96
           * exp((1.41) * tc[0] - (4287.40599265621) * invT);
const amrex::Real qf = k_f * (sc[2]*sc[12]);
const amrex::Real qr = k_f * exp(-(g_RT[2] - g_RT[6] + g_RT[12] - g_RT[28])) * (sc[6]*sc[28]);
const amrex::Real qdot = qf - qr;
wdot[2] -= qdot;
wdot[6] += qdot;
wdot[12] -= qdot;
wdot[28] += qdot;
}

{
// reaction 81:  HNCO + O <=> CO + HNO
const amrex::Real k_f = 150
           * exp((1.57) * tc[0] - (22147.5718953973) * invT);
const amrex::Real qf = k_f * (sc[2]*sc[12]);
const amrex::Real qr = k_f * exp(-(g_RT[2] - g_RT[5] + g_RT[12] - g_RT[21])) * (sc[5]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[2] -= qdot;
wdot[5] += qdot;
wdot[12] -= qdot;
wdot[21] += qdot;
}

{
// reaction 82:  HNCO + OH <=> H2O + NCO
const amrex::Real k_f = 36
           * exp((1.5) * tc[0] - (1811.57999689699) * invT);
const amrex::Real qf = k_f * (sc[2]*sc[13]);
const amrex::Real qr = k_f * exp(-(g_RT[2] + g_RT[13] - g_RT[15] - g_RT[30])) * (sc[15]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[2] -= qdot;
wdot[13] -= qdot;
wdot[15] += qdot;
wdot[30] += qdot;
}

{
// reaction 83:  HNCO + HO2 <=> H2O2 + NCO
const amrex::Real k_f = 300000
           * exp(-(11070.7666477038) * invT);
const amrex::Real qf = k_f * (sc[2]*sc[14]);
const amrex::Real qr = k_f * exp(-(g_RT[2] + g_RT[14] - g_RT[16] - g_RT[30])) * (sc[16]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[2] -= qdot;
wdot[14] -= qdot;
wdot[16] += qdot;
wdot[30] += qdot;
}

{
// reaction 84:  HNCO + O2 <=> CO2 + HNO
const amrex::Real k_f = 1000000
           * exp(-(17612.5833031652) * invT);
const amrex::Real qf = k_f * (sc[2]*sc[8]);
const amrex::Real qr = k_f * exp(-(g_RT[2] - g_RT[6] + g_RT[8] - g_RT[21])) * (sc[6]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[2] -= qdot;
wdot[6] += qdot;
wdot[8] -= qdot;
wdot[21] += qdot;
}

{
// reaction 85:  HNCO + NH <=> NCO + NH2
const amrex::Real k_f = 30000000
           * exp(-(11926.2349795719) * invT);
const amrex::Real qf = k_f * (sc[2]*sc[28]);
const amrex::Real qr = k_f * exp(-(g_RT[2] - g_RT[27] + g_RT[28] - g_RT[30])) * (sc[27]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[2] -= qdot;
wdot[27] += qdot;
wdot[28] -= qdot;
wdot[30] += qdot;
}

{
// reaction 86:  H + HOCN <=> H + HNCO
const amrex::Real k_f = 310
           * exp((0.84) * tc[0] - (964.666348347648) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[32]);
const amrex::Real qr = k_f * exp(-(-g_RT[2] + g_RT[11] - g_RT[11] + g_RT[32])) * (sc[2]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[2] += qdot;
wdot[11] -= qdot;
wdot[11] += qdot;
wdot[32] -= qdot;
}

{
// reaction 87:  H + HOCN <=> CO + NH2
const amrex::Real k_f = 120
           * exp((0.61) * tc[0] - (1044.6777982106) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[32]);
const amrex::Real qr = k_f * exp(-(-g_RT[5] + g_RT[11] - g_RT[27] + g_RT[32])) * (sc[5]*sc[27]);
const amrex::Real qdot = qf - qr;
wdot[5] += qdot;
wdot[11] -= qdot;
wdot[27] += qdot;
wdot[32] -= qdot;
}

{
// reaction 88:  H + HOCN <=> H2 + NCO
const amrex::Real k_f = 240
           * exp((1.5) * tc[0] - (3329.78467762983) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[32]);
const amrex::Real qr = k_f * exp(-(-g_RT[9] + g_RT[11] - g_RT[30] + g_RT[32])) * (sc[9]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[9] += qdot;
wdot[11] -= qdot;
wdot[30] += qdot;
wdot[32] -= qdot;
}

{
// reaction 89:  HOCN + O <=> NCO + OH
const amrex::Real k_f = 170
           * exp((1.5) * tc[0] - (2079.79447977091) * invT);
const amrex::Real qf = k_f * (sc[12]*sc[32]);
const amrex::Real qr = k_f * exp(-(g_RT[12] - g_RT[13] - g_RT[30] + g_RT[32])) * (sc[13]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[30] += qdot;
wdot[32] -= qdot;
}

{
// reaction 90:  HOCN + OH <=> H2O + NCO
const amrex::Real k_f = 1.2
           * exp((2) * tc[0] - (-124.79773311957) * invT);
const amrex::Real qf = k_f * (sc[13]*sc[32]);
const amrex::Real qr = k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[30] + g_RT[32])) * (sc[15]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[13] -= qdot;
wdot[15] += qdot;
wdot[30] += qdot;
wdot[32] -= qdot;
}

{
// reaction 91:  HOCN + NH2 <=> NCO + NH3
const amrex::Real k_f = 0.92
           * exp((1.94) * tc[0] - (1834.72796352401) * invT);
const amrex::Real qf = k_f * (sc[27]*sc[32]);
const amrex::Real qr = k_f * exp(-(-g_RT[20] + g_RT[27] - g_RT[30] + g_RT[32])) * (sc[20]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[20] += qdot;
wdot[27] -= qdot;
wdot[30] += qdot;
wdot[32] -= qdot;
}

{
// reaction 92:  HCNO <=> HCN + O
const amrex::Real k_f = 4.2e+31
           * exp((-6.12) * tc[0] - (30801.8921139069) * invT);
const amrex::Real qf = k_f * (sc[33]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] - g_RT[12] + g_RT[33])) * (refCinv) * (sc[1]*sc[12]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[12] += qdot;
wdot[33] -= qdot;
}

{
// reaction 93:  H + HCNO <=> HCN + OH
const amrex::Real k_f = 72000
           * exp((0.841) * tc[0] - (4333.70192591025) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[33]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] + g_RT[11] - g_RT[13] + g_RT[33])) * (sc[1]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[11] -= qdot;
wdot[13] += qdot;
wdot[33] -= qdot;
}

{
// reaction 94:  HCNO + O <=> HCO + NO
const amrex::Real k_f = 63000000
           ;
const amrex::Real qf = k_f * (sc[12]*sc[33]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[12] - g_RT[17] + g_RT[33])) * (sc[3]*sc[17]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[12] -= qdot;
wdot[17] += qdot;
wdot[33] -= qdot;
}

{
// reaction 95:  HCNO + OH <=> CH2O + NO
const amrex::Real k_f = 1000000
           ;
const amrex::Real qf = k_f * (sc[13]*sc[33]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[13] - g_RT[18] + g_RT[33])) * (sc[3]*sc[18]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[13] -= qdot;
wdot[18] += qdot;
wdot[33] -= qdot;
}

{
// reaction 96:  HCNO + O <=> NCO + OH
const amrex::Real k_f = 7000000
           ;
const amrex::Real qf = k_f * (sc[12]*sc[33]);
const amrex::Real qr = k_f * exp(-(g_RT[12] - g_RT[13] - g_RT[30] + g_RT[33])) * (sc[13]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[30] += qdot;
wdot[33] -= qdot;
}

{
// reaction 97:  HCNO + OH <=> CO + H2 + NO
const amrex::Real k_f = 6500000
           ;
const amrex::Real qf = k_f * (sc[13]*sc[33]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] - g_RT[5] - g_RT[9] + g_RT[13] + g_RT[33])) * (refCinv) * (sc[3]*sc[5]*sc[9]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[5] += qdot;
wdot[9] += qdot;
wdot[13] -= qdot;
wdot[33] -= qdot;
}

{
// reaction 99:  HCNO + OH <=> H2O + NCO
const amrex::Real k_f = 3500000
           ;
const amrex::Real qf = k_f * (sc[13]*sc[33]);
const amrex::Real qr = k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[30] + g_RT[33])) * (sc[15]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[13] -= qdot;
wdot[15] += qdot;
wdot[30] += qdot;
wdot[33] -= qdot;
}

{
// reaction 100:  HCNO + OH <=> HCO + HNO
const amrex::Real k_f = 4500000
           ;
const amrex::Real qf = k_f * (sc[13]*sc[33]);
const amrex::Real qr = k_f * exp(-(g_RT[13] - g_RT[17] - g_RT[21] + g_RT[33])) * (sc[17]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[13] -= qdot;
wdot[17] += qdot;
wdot[21] += qdot;
wdot[33] -= qdot;
}

{
// reaction 102:  H + NCO <=> CO + NH
const amrex::Real k_f = 72000000
           * exp(-(503.21666580472) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[30]);
const amrex::Real qr = k_f * exp(-(-g_RT[5] + g_RT[11] - g_RT[28] + g_RT[30])) * (sc[5]*sc[28]);
const amrex::Real qdot = qf - qr;
wdot[5] += qdot;
wdot[11] -= qdot;
wdot[28] += qdot;
wdot[30] -= qdot;
}

{
// reaction 103:  NCO + O <=> CO + NO
const amrex::Real k_f = 2000000000
           * exp((-0.5) * tc[0]);
const amrex::Real qf = k_f * (sc[12]*sc[30]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] - g_RT[5] + g_RT[12] + g_RT[30])) * (sc[3]*sc[5]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[5] += qdot;
wdot[12] -= qdot;
wdot[30] -= qdot;
}

{
// reaction 104:  NCO + OH <=> CO + HON
const amrex::Real k_f = 5300000
           * exp((-0.07) * tc[0] - (2579.48862891499) * invT);
const amrex::Real qf = k_f * (sc[13]*sc[30]);
const amrex::Real qr = k_f * exp(-(-g_RT[5] + g_RT[13] - g_RT[22] + g_RT[30])) * (sc[5]*sc[22]);
const amrex::Real qdot = qf - qr;
wdot[5] += qdot;
wdot[13] -= qdot;
wdot[22] += qdot;
wdot[30] -= qdot;
}

{
// reaction 105:  NCO + OH <=> CO + H + NO
const amrex::Real k_f = 8300000
           * exp((-0.05) * tc[0] - (9079.03508444875) * invT);
const amrex::Real qf = k_f * (sc[13]*sc[30]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] - g_RT[5] - g_RT[11] + g_RT[13] + g_RT[30])) * (refCinv) * (sc[3]*sc[5]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[5] += qdot;
wdot[11] += qdot;
wdot[13] -= qdot;
wdot[30] -= qdot;
}

{
// reaction 106:  HO2 + NCO <=> HNCO + O2
const amrex::Real k_f = 20000000
           ;
const amrex::Real qf = k_f * (sc[14]*sc[30]);
const amrex::Real qr = k_f * exp(-(-g_RT[2] - g_RT[8] + g_RT[14] + g_RT[30])) * (sc[2]*sc[8]);
const amrex::Real qdot = qf - qr;
wdot[2] += qdot;
wdot[8] += qdot;
wdot[14] -= qdot;
wdot[30] -= qdot;
}

{
// reaction 107:  NCO + O2 <=> CO2 + NO
const amrex::Real k_f = 2000000
           * exp(-(10064.3333160944) * invT);
const amrex::Real qf = k_f * (sc[8]*sc[30]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] - g_RT[6] + g_RT[8] + g_RT[30])) * (sc[3]*sc[6]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[6] += qdot;
wdot[8] -= qdot;
wdot[30] -= qdot;
}

{
// reaction 108:  HCO + NCO <=> CO + HNCO
const amrex::Real k_f = 36000000
           ;
const amrex::Real qf = k_f * (sc[17]*sc[30]);
const amrex::Real qr = k_f * exp(-(-g_RT[2] - g_RT[5] + g_RT[17] + g_RT[30])) * (sc[2]*sc[5]);
const amrex::Real qdot = qf - qr;
wdot[2] += qdot;
wdot[5] += qdot;
wdot[17] -= qdot;
wdot[30] -= qdot;
}

{
// reaction 109:  CH2O + NCO <=> HCO + HNCO
const amrex::Real k_f = 6000000
           ;
const amrex::Real qf = k_f * (sc[18]*sc[30]);
const amrex::Real qr = k_f * exp(-(-g_RT[2] - g_RT[17] + g_RT[18] + g_RT[30])) * (sc[2]*sc[17]);
const amrex::Real qdot = qf - qr;
wdot[2] += qdot;
wdot[17] += qdot;
wdot[18] -= qdot;
wdot[30] -= qdot;
}

{
// reaction 110:  NCO + NO <=> CO + N2O
const amrex::Real k_f = 40000000000000
           * exp((-2.19) * tc[0] - (877.106648497626) * invT);
const amrex::Real qf = k_f * (sc[3]*sc[30]);
const amrex::Real qr = k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[5] + g_RT[30])) * (sc[4]*sc[5]);
const amrex::Real qdot = qf - qr;
wdot[3] -= qdot;
wdot[4] += qdot;
wdot[5] += qdot;
wdot[30] -= qdot;
}

{
// reaction 111:  NCO + NO <=> CO2 + N2
const amrex::Real k_f = 1.5e+15
           * exp((-2.74) * tc[0] - (917.867198427809) * invT);
const amrex::Real qf = k_f * (sc[3]*sc[30]);
const amrex::Real qr = k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[30] - g_RT[45])) * (sc[6]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[3] -= qdot;
wdot[6] += qdot;
wdot[30] -= qdot;
wdot[45] += qdot;
}

{
// reaction 112:  NCO + NO2 <=> CO + 2 NO
const amrex::Real k_f = 250000
           * exp(-(355.774182723937) * invT);
const amrex::Real qf = k_f * (sc[19]*sc[30]);
const amrex::Real qr = k_f * exp(-(-2.000000*g_RT[3] - g_RT[5] + g_RT[19] + g_RT[30])) * (refCinv) * ((sc[3] * sc[3])*sc[5]);
const amrex::Real qdot = qf - qr;
wdot[3] += 2.000000 * qdot;
wdot[5] += qdot;
wdot[19] -= qdot;
wdot[30] -= qdot;
}

{
// reaction 113:  NCO + NO2 <=> CO2 + N2O
const amrex::Real k_f = 3000000
           * exp(-(-355.774182723937) * invT);
const amrex::Real qf = k_f * (sc[19]*sc[30]);
const amrex::Real qr = k_f * exp(-(-g_RT[4] - g_RT[6] + g_RT[19] + g_RT[30])) * (sc[4]*sc[6]);
const amrex::Real qdot = qf - qr;
wdot[4] += qdot;
wdot[6] += qdot;
wdot[19] -= qdot;
wdot[30] -= qdot;
}

{
// reaction 114:  HNO + NCO <=> HNCO + NO
const amrex::Real k_f = 18000000
           ;
const amrex::Real qf = k_f * (sc[21]*sc[30]);
const amrex::Real qr = k_f * exp(-(-g_RT[2] - g_RT[3] + g_RT[21] + g_RT[30])) * (sc[2]*sc[3]);
const amrex::Real qdot = qf - qr;
wdot[2] += qdot;
wdot[3] += qdot;
wdot[21] -= qdot;
wdot[30] -= qdot;
}

{
// reaction 115:  HONO + NCO <=> HNCO + NO2
const amrex::Real k_f = 3600000
           ;
const amrex::Real qf = k_f * (sc[23]*sc[30]);
const amrex::Real qr = k_f * exp(-(-g_RT[2] - g_RT[19] + g_RT[23] + g_RT[30])) * (sc[2]*sc[19]);
const amrex::Real qdot = qf - qr;
wdot[2] += qdot;
wdot[19] += qdot;
wdot[23] -= qdot;
wdot[30] -= qdot;
}

{
// reaction 116:  N + NCO <=> CO + N2
const amrex::Real k_f = 20000000
           ;
const amrex::Real qf = k_f * (sc[25]*sc[30]);
const amrex::Real qr = k_f * exp(-(-g_RT[5] + g_RT[25] + g_RT[30] - g_RT[45])) * (sc[5]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[5] += qdot;
wdot[25] -= qdot;
wdot[30] -= qdot;
wdot[45] += qdot;
}

{
// reaction 117:  NCO + NH3 <=> HNCO + NH2
const amrex::Real k_f = 0.028
           * exp((2.48) * tc[0] - (493.152332488625) * invT);
const amrex::Real qf = k_f * (sc[20]*sc[30]);
const amrex::Real qr = k_f * exp(-(-g_RT[2] + g_RT[20] - g_RT[27] + g_RT[30])) * (sc[2]*sc[27]);
const amrex::Real qdot = qf - qr;
wdot[2] += qdot;
wdot[20] -= qdot;
wdot[27] += qdot;
wdot[30] -= qdot;
}

{
// reaction 118:  2 NCO <=> 2 CO + N2
const amrex::Real k_f = 18000000
           ;
const amrex::Real qf = k_f * ((sc[30] * sc[30]));
const amrex::Real qr = k_f * exp(-(-2.000000*g_RT[5] + 2.000000*g_RT[30] - g_RT[45])) * (refCinv) * ((sc[5] * sc[5])*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[5] += 2.000000 * qdot;
wdot[30] -= 2.000000 * qdot;
wdot[45] += qdot;
}

{
// reaction 119:  H2CN <=> H + HCN
const amrex::Real k_f = 4e+28
           * exp((-6.03) * tc[0] - (15044.6686575637) * invT);
const amrex::Real qf = k_f * (sc[40]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] - g_RT[11] + g_RT[40])) * (refCinv) * (sc[1]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[11] += qdot;
wdot[40] -= qdot;
}

{
// reaction 120:  H + H2CN <=> H2 + HCN
const amrex::Real k_f = 240
           * exp((1.5) * tc[0] - (-449.875699229419) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[40]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] - g_RT[9] + g_RT[11] + g_RT[40])) * (sc[1]*sc[9]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[9] += qdot;
wdot[11] -= qdot;
wdot[40] -= qdot;
}

{
// reaction 121:  H2CN + O <=> HCN + OH
const amrex::Real k_f = 170
           * exp((1.5) * tc[0] - (-449.875699229419) * invT);
const amrex::Real qf = k_f * (sc[12]*sc[40]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] + g_RT[12] - g_RT[13] + g_RT[40])) * (sc[1]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[40] -= qdot;
}

{
// reaction 122:  H2CN + OH <=> H2O + HCN
const amrex::Real k_f = 15000000000000
           * exp((-2.18) * tc[0] - (1089.96729813302) * invT);
const amrex::Real qf = k_f * (sc[13]*sc[40]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] + g_RT[13] - g_RT[15] + g_RT[40])) * (sc[1]*sc[15]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[13] -= qdot;
wdot[15] += qdot;
wdot[40] -= qdot;
}

{
// reaction 123:  H2CN + OH <=> H2O + HCN
const amrex::Real k_f = 1.2
           * exp((2) * tc[0] - (-599.834265639226) * invT);
const amrex::Real qf = k_f * (sc[13]*sc[40]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] + g_RT[13] - g_RT[15] + g_RT[40])) * (sc[1]*sc[15]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[13] -= qdot;
wdot[15] += qdot;
wdot[40] -= qdot;
}

{
// reaction 124:  H2CN + O2 <=> CH2O + NO
const amrex::Real k_f = 3000000
           * exp(-(2999.67454486193) * invT);
const amrex::Real qf = k_f * (sc[8]*sc[40]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[8] - g_RT[18] + g_RT[40])) * (sc[3]*sc[18]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[8] -= qdot;
wdot[18] += qdot;
wdot[40] -= qdot;
}

{
// reaction 125:  H2CN + NH2 <=> HCN + NH3
const amrex::Real k_f = 0.92
           * exp((1.94) * tc[0] - (-579.705599007037) * invT);
const amrex::Real qf = k_f * (sc[27]*sc[40]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] - g_RT[20] + g_RT[27] + g_RT[40])) * (sc[1]*sc[20]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[20] += qdot;
wdot[27] -= qdot;
wdot[40] -= qdot;
}

{
// reaction 126:  HCNH <=> H + HCN
const amrex::Real k_f = 6.1e+28
           * exp((-5.69) * tc[0] - (12213.5716957464) * invT);
const amrex::Real qf = k_f * (sc[41]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] - g_RT[11] + g_RT[41])) * (refCinv) * (sc[1]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[11] += qdot;
wdot[41] -= qdot;
}

{
// reaction 127:  H + HCNH <=> H + H2CN
const amrex::Real k_f = 20000000
           ;
const amrex::Real qf = k_f * (sc[11]*sc[41]);
const amrex::Real qr = k_f * exp(-(g_RT[11] - g_RT[11] - g_RT[40] + g_RT[41])) * (sc[11]*sc[40]);
const amrex::Real qdot = qf - qr;
wdot[11] -= qdot;
wdot[11] += qdot;
wdot[40] += qdot;
wdot[41] -= qdot;
}

{
// reaction 128:  H + HCNH <=> H2 + HCN
const amrex::Real k_f = 240
           * exp((1.5) * tc[0] - (-449.875699229419) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[41]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] - g_RT[9] + g_RT[11] + g_RT[41])) * (sc[1]*sc[9]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[9] += qdot;
wdot[11] -= qdot;
wdot[41] -= qdot;
}

{
// reaction 129:  HCNH + O <=> H + HNCO
const amrex::Real k_f = 70000000
           ;
const amrex::Real qf = k_f * (sc[12]*sc[41]);
const amrex::Real qr = k_f * exp(-(-g_RT[2] - g_RT[11] + g_RT[12] + g_RT[41])) * (sc[2]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[2] += qdot;
wdot[11] += qdot;
wdot[12] -= qdot;
wdot[41] -= qdot;
}

{
// reaction 130:  HCNH + O <=> HCN + OH
const amrex::Real k_f = 170
           * exp((1.5) * tc[0] - (-449.875699229419) * invT);
const amrex::Real qf = k_f * (sc[12]*sc[41]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] + g_RT[12] - g_RT[13] + g_RT[41])) * (sc[1]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[41] -= qdot;
}

{
// reaction 131:  HCNH + OH <=> H2O + HCN
const amrex::Real k_f = 1.2
           * exp((2) * tc[0] - (-599.834265639226) * invT);
const amrex::Real qf = k_f * (sc[13]*sc[41]);
const amrex::Real qr = k_f * exp(-(-g_RT[1] + g_RT[13] - g_RT[15] + g_RT[41])) * (sc[1]*sc[15]);
const amrex::Real qdot = qf - qr;
wdot[1] += qdot;
wdot[13] -= qdot;
wdot[15] += qdot;
wdot[41] -= qdot;
}

{
// reaction 133:  H + NH3 <=> H2 + NH2
const amrex::Real k_f = 0.64
           * exp((2.39) * tc[0] - (5118.2167078998) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[20]);
const amrex::Real qr = k_f * exp(-(-g_RT[9] + g_RT[11] + g_RT[20] - g_RT[27])) * (sc[9]*sc[27]);
const amrex::Real qdot = qf - qr;
wdot[9] += qdot;
wdot[11] -= qdot;
wdot[20] -= qdot;
wdot[27] += qdot;
}

{
// reaction 134:  NH3 + O <=> NH2 + OH
const amrex::Real k_f = 9.4
           * exp((1.94) * tc[0] - (3250.77966109849) * invT);
const amrex::Real qf = k_f * (sc[12]*sc[20]);
const amrex::Real qr = k_f * exp(-(g_RT[12] - g_RT[13] + g_RT[20] - g_RT[27])) * (sc[13]*sc[27]);
const amrex::Real qdot = qf - qr;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[20] -= qdot;
wdot[27] += qdot;
}

{
// reaction 135:  NH3 + OH <=> H2O + NH2
const amrex::Real k_f = 2
           * exp((2.04) * tc[0] - (284.820632845471) * invT);
const amrex::Real qf = k_f * (sc[13]*sc[20]);
const amrex::Real qr = k_f * exp(-(g_RT[13] - g_RT[15] + g_RT[20] - g_RT[27])) * (sc[15]*sc[27]);
const amrex::Real qdot = qf - qr;
wdot[13] -= qdot;
wdot[15] += qdot;
wdot[20] -= qdot;
wdot[27] += qdot;
}

{
// reaction 136:  HO2 + NH3 <=> H2O2 + NH2
const amrex::Real k_f = 300000
           * exp(-(11070.7666477038) * invT);
const amrex::Real qf = k_f * (sc[14]*sc[20]);
const amrex::Real qr = k_f * exp(-(g_RT[14] - g_RT[16] + g_RT[20] - g_RT[27])) * (sc[16]*sc[27]);
const amrex::Real qdot = qf - qr;
wdot[14] -= qdot;
wdot[16] += qdot;
wdot[20] -= qdot;
wdot[27] += qdot;
}

{
// reaction 137:  H + NH2 <=> H2 + NH
const amrex::Real k_f = 40000000
           * exp(-(1836.74083018723) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[27]);
const amrex::Real qr = k_f * exp(-(-g_RT[9] + g_RT[11] + g_RT[27] - g_RT[28])) * (sc[9]*sc[28]);
const amrex::Real qdot = qf - qr;
wdot[9] += qdot;
wdot[11] -= qdot;
wdot[27] -= qdot;
wdot[28] += qdot;
}

{
// reaction 138:  NH2 + O <=> H + HNO
const amrex::Real k_f = 660000000
           * exp((-0.5) * tc[0]);
const amrex::Real qf = k_f * (sc[12]*sc[27]);
const amrex::Real qr = k_f * exp(-(-g_RT[11] + g_RT[12] - g_RT[21] + g_RT[27])) * (sc[11]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[11] += qdot;
wdot[12] -= qdot;
wdot[21] += qdot;
wdot[27] -= qdot;
}

{
// reaction 139:  NH2 + O <=> NH + OH
const amrex::Real k_f = 6800000
           ;
const amrex::Real qf = k_f * (sc[12]*sc[27]);
const amrex::Real qr = k_f * exp(-(g_RT[12] - g_RT[13] + g_RT[27] - g_RT[28])) * (sc[13]*sc[28]);
const amrex::Real qdot = qf - qr;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[27] -= qdot;
wdot[28] += qdot;
}

{
// reaction 140:  NH2 + OH <=> H2O + NH
const amrex::Real k_f = 4
           * exp((2) * tc[0] - (503.21666580472) * invT);
const amrex::Real qf = k_f * (sc[13]*sc[27]);
const amrex::Real qr = k_f * exp(-(g_RT[13] - g_RT[15] + g_RT[27] - g_RT[28])) * (sc[15]*sc[28]);
const amrex::Real qdot = qf - qr;
wdot[13] -= qdot;
wdot[15] += qdot;
wdot[27] -= qdot;
wdot[28] += qdot;
}

{
// reaction 141:  HO2 + NH2 <=> H2NO + OH
const amrex::Real k_f = 50000000
           ;
const amrex::Real qf = k_f * (sc[14]*sc[27]);
const amrex::Real qr = k_f * exp(-(-g_RT[13] + g_RT[14] - g_RT[24] + g_RT[27])) * (sc[13]*sc[24]);
const amrex::Real qdot = qf - qr;
wdot[13] += qdot;
wdot[14] -= qdot;
wdot[24] += qdot;
wdot[27] -= qdot;
}

{
// reaction 142:  HO2 + NH2 <=> NH3 + O2
const amrex::Real k_f = 0.92
           * exp((1.94) * tc[0] - (-579.705599007037) * invT);
const amrex::Real qf = k_f * (sc[14]*sc[27]);
const amrex::Real qr = k_f * exp(-(-g_RT[8] + g_RT[14] - g_RT[20] + g_RT[27])) * (sc[8]*sc[20]);
const amrex::Real qdot = qf - qr;
wdot[8] += qdot;
wdot[14] -= qdot;
wdot[20] += qdot;
wdot[27] -= qdot;
}

{
// reaction 143:  NH2 + O2 <=> H2NO + O
const amrex::Real k_f = 250000
           * exp((0.48) * tc[0] - (14888.1682744984) * invT);
const amrex::Real qf = k_f * (sc[8]*sc[27]);
const amrex::Real qr = k_f * exp(-(g_RT[8] - g_RT[12] - g_RT[24] + g_RT[27])) * (sc[12]*sc[24]);
const amrex::Real qdot = qf - qr;
wdot[8] -= qdot;
wdot[12] += qdot;
wdot[24] += qdot;
wdot[27] -= qdot;
}

{
// reaction 144:  NH2 + O2 <=> HNO + OH
const amrex::Real k_f = 62
           * exp((1.23) * tc[0] - (17662.9049697457) * invT);
const amrex::Real qf = k_f * (sc[8]*sc[27]);
const amrex::Real qr = k_f * exp(-(g_RT[8] - g_RT[13] - g_RT[21] + g_RT[27])) * (sc[13]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[8] -= qdot;
wdot[13] += qdot;
wdot[21] += qdot;
wdot[27] -= qdot;
}

{
// reaction 145:  2 NH2 <=> NH + NH3
const amrex::Real k_f = 50000000
           * exp(-(5032.1666580472) * invT);
const amrex::Real qf = k_f * ((sc[27] * sc[27]));
const amrex::Real qr = k_f * exp(-(-g_RT[20] + 2.000000*g_RT[27] - g_RT[28])) * (sc[20]*sc[28]);
const amrex::Real qdot = qf - qr;
wdot[20] += qdot;
wdot[27] -= 2.000000 * qdot;
wdot[28] += qdot;
}

{
// reaction 146:  NH + NH2 <=> N + NH3
const amrex::Real k_f = 0.92
           * exp((1.94) * tc[0] - (1229.86153122673) * invT);
const amrex::Real qf = k_f * (sc[27]*sc[28]);
const amrex::Real qr = k_f * exp(-(-g_RT[20] - g_RT[25] + g_RT[27] + g_RT[28])) * (sc[20]*sc[25]);
const amrex::Real qdot = qf - qr;
wdot[20] += qdot;
wdot[25] += qdot;
wdot[27] -= qdot;
wdot[28] -= qdot;
}

{
// reaction 147:  N + NH2 <=> 2 H + N2
const amrex::Real k_f = 70000000
           ;
const amrex::Real qf = k_f * (sc[25]*sc[27]);
const amrex::Real qr = k_f * exp(-(-2.000000*g_RT[11] + g_RT[25] + g_RT[27] - g_RT[45])) * (refCinv) * ((sc[11] * sc[11])*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[11] += 2.000000 * qdot;
wdot[25] -= qdot;
wdot[27] -= qdot;
wdot[45] += qdot;
}

{
// reaction 148:  NH2 + NO <=> H2O + N2
const amrex::Real k_f = 280000000000000
           * exp((-2.654) * tc[0] - (633.046565582337) * invT);
const amrex::Real qf = k_f * (sc[3]*sc[27]);
const amrex::Real qr = k_f * exp(-(g_RT[3] - g_RT[15] + g_RT[27] - g_RT[45])) * (sc[15]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[3] -= qdot;
wdot[15] += qdot;
wdot[27] -= qdot;
wdot[45] += qdot;
}

{
// reaction 149:  NH + O <=> H + NO
const amrex::Real k_f = 92000000
           ;
const amrex::Real qf = k_f * (sc[12]*sc[28]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] - g_RT[11] + g_RT[12] + g_RT[28])) * (sc[3]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[11] += qdot;
wdot[12] -= qdot;
wdot[28] -= qdot;
}

{
// reaction 151:  N2O + OH <=> HO2 + N2
const amrex::Real k_f = 2000000
           * exp(-(20128.6666321888) * invT);
const amrex::Real qf = k_f * (sc[4]*sc[13]);
const amrex::Real qr = k_f * exp(-(g_RT[4] + g_RT[13] - g_RT[14] - g_RT[45])) * (sc[14]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[4] -= qdot;
wdot[13] -= qdot;
wdot[14] += qdot;
wdot[45] += qdot;
}

{
// reaction 152:  NH2 + NO <=> NNH + OH
const amrex::Real k_f = 31000000
           * exp((-0.48) * tc[0] - (593.795665649569) * invT);
const amrex::Real qf = k_f * (sc[3]*sc[27]);
const amrex::Real qr = k_f * exp(-(g_RT[3] - g_RT[13] - g_RT[26] + g_RT[27])) * (sc[13]*sc[26]);
const amrex::Real qdot = qf - qr;
wdot[3] -= qdot;
wdot[13] += qdot;
wdot[26] += qdot;
wdot[27] -= qdot;
}

{
// reaction 153:  N + OH <=> H + NO
const amrex::Real k_f = 38000000
           ;
const amrex::Real qf = k_f * (sc[13]*sc[25]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] - g_RT[11] + g_RT[13] + g_RT[25])) * (sc[3]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[11] += qdot;
wdot[13] -= qdot;
wdot[25] -= qdot;
}

{
// reaction 154:  NH2 + NO2 <=> H2O + N2O
const amrex::Real k_f = 16000000000
           * exp((-1.44) * tc[0] - (134.862066435665) * invT);
const amrex::Real qf = k_f * (sc[19]*sc[27]);
const amrex::Real qr = k_f * exp(-(-g_RT[4] - g_RT[15] + g_RT[19] + g_RT[27])) * (sc[4]*sc[15]);
const amrex::Real qdot = qf - qr;
wdot[4] += qdot;
wdot[15] += qdot;
wdot[19] -= qdot;
wdot[27] -= qdot;
}

{
// reaction 155:  NH2 + NO2 <=> H2NO + NO
const amrex::Real k_f = 65000000000
           * exp((-1.44) * tc[0] - (134.862066435665) * invT);
const amrex::Real qf = k_f * (sc[19]*sc[27]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[19] - g_RT[24] + g_RT[27])) * (sc[3]*sc[24]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[19] -= qdot;
wdot[24] += qdot;
wdot[27] -= qdot;
}

{
// reaction 156:  H + NH <=> H2 + N
const amrex::Real k_f = 100000000
           ;
const amrex::Real qf = k_f * (sc[11]*sc[28]);
const amrex::Real qr = k_f * exp(-(-g_RT[9] + g_RT[11] - g_RT[25] + g_RT[28])) * (sc[9]*sc[25]);
const amrex::Real qdot = qf - qr;
wdot[9] += qdot;
wdot[11] -= qdot;
wdot[25] += qdot;
wdot[28] -= qdot;
}

{
// reaction 157:  NH + OH <=> H + HNO
const amrex::Real k_f = 20000000
           ;
const amrex::Real qf = k_f * (sc[13]*sc[28]);
const amrex::Real qr = k_f * exp(-(-g_RT[11] + g_RT[13] - g_RT[21] + g_RT[28])) * (sc[11]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[11] += qdot;
wdot[13] -= qdot;
wdot[21] += qdot;
wdot[28] -= qdot;
}

{
// reaction 158:  NH + OH <=> H2O + N
const amrex::Real k_f = 500000
           * exp((0.5) * tc[0] - (1006.43333160944) * invT);
const amrex::Real qf = k_f * (sc[13]*sc[28]);
const amrex::Real qr = k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[25] + g_RT[28])) * (sc[15]*sc[25]);
const amrex::Real qdot = qf - qr;
wdot[13] -= qdot;
wdot[15] += qdot;
wdot[25] += qdot;
wdot[28] -= qdot;
}

{
// reaction 159:  NH + O2 <=> HNO + O
const amrex::Real k_f = 0.46
           * exp((2) * tc[0] - (3270.90832773068) * invT);
const amrex::Real qf = k_f * (sc[8]*sc[28]);
const amrex::Real qr = k_f * exp(-(g_RT[8] - g_RT[12] - g_RT[21] + g_RT[28])) * (sc[12]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[8] -= qdot;
wdot[12] += qdot;
wdot[21] += qdot;
wdot[28] -= qdot;
}

{
// reaction 160:  NH + O2 <=> NO + OH
const amrex::Real k_f = 76000
           * exp(-(769.921498681221) * invT);
const amrex::Real qf = k_f * (sc[8]*sc[28]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[8] - g_RT[13] + g_RT[28])) * (sc[3]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[8] -= qdot;
wdot[13] += qdot;
wdot[28] -= qdot;
}

{
// reaction 161:  2 NH <=> 2 H + N2
const amrex::Real k_f = 25000000
           ;
const amrex::Real qf = k_f * ((sc[28] * sc[28]));
const amrex::Real qr = k_f * exp(-(-2.000000*g_RT[11] + 2.000000*g_RT[28] - g_RT[45])) * (refCinv) * ((sc[11] * sc[11])*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[11] += 2.000000 * qdot;
wdot[28] -= 2.000000 * qdot;
wdot[45] += qdot;
}

{
// reaction 162:  N + NH <=> H + N2
const amrex::Real k_f = 30000000
           ;
const amrex::Real qf = k_f * (sc[25]*sc[28]);
const amrex::Real qr = k_f * exp(-(-g_RT[11] + g_RT[25] + g_RT[28] - g_RT[45])) * (sc[11]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[11] += qdot;
wdot[25] -= qdot;
wdot[28] -= qdot;
wdot[45] += qdot;
}

{
// reaction 163:  NH + NO <=> N2 + OH
const amrex::Real k_f = 22000000
           * exp((-0.23) * tc[0]);
const amrex::Real qf = k_f * (sc[3]*sc[28]);
const amrex::Real qr = k_f * exp(-(g_RT[3] - g_RT[13] + g_RT[28] - g_RT[45])) * (sc[13]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[3] -= qdot;
wdot[13] += qdot;
wdot[28] -= qdot;
wdot[45] += qdot;
}

{
// reaction 164:  NH + NO2 <=> N2O + OH
const amrex::Real k_f = 10000000
           ;
const amrex::Real qf = k_f * (sc[19]*sc[28]);
const amrex::Real qr = k_f * exp(-(-g_RT[4] - g_RT[13] + g_RT[19] + g_RT[28])) * (sc[4]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[4] += qdot;
wdot[13] += qdot;
wdot[19] -= qdot;
wdot[28] -= qdot;
}

{
// reaction 167:  H + H2NO <=> H2 + HNO
const amrex::Real k_f = 30
           * exp((2) * tc[0] - (1006.43333160944) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[24]);
const amrex::Real qr = k_f * exp(-(-g_RT[9] + g_RT[11] - g_RT[21] + g_RT[24])) * (sc[9]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[9] += qdot;
wdot[11] -= qdot;
wdot[21] += qdot;
wdot[24] -= qdot;
}

{
// reaction 168:  H + H2NO <=> NH2 + OH
const amrex::Real k_f = 50000000
           ;
const amrex::Real qf = k_f * (sc[11]*sc[24]);
const amrex::Real qr = k_f * exp(-(g_RT[11] - g_RT[13] + g_RT[24] - g_RT[27])) * (sc[13]*sc[27]);
const amrex::Real qdot = qf - qr;
wdot[11] -= qdot;
wdot[13] += qdot;
wdot[24] -= qdot;
wdot[27] += qdot;
}

{
// reaction 169:  H2NO + O <=> HNO + OH
const amrex::Real k_f = 30
           * exp((2) * tc[0] - (1006.43333160944) * invT);
const amrex::Real qf = k_f * (sc[12]*sc[24]);
const amrex::Real qr = k_f * exp(-(g_RT[12] - g_RT[13] - g_RT[21] + g_RT[24])) * (sc[13]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[21] += qdot;
wdot[24] -= qdot;
}

{
// reaction 170:  H2NO + OH <=> H2O + HNO
const amrex::Real k_f = 20
           * exp((2) * tc[0] - (503.21666580472) * invT);
const amrex::Real qf = k_f * (sc[13]*sc[24]);
const amrex::Real qr = k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[21] + g_RT[24])) * (sc[15]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[13] -= qdot;
wdot[15] += qdot;
wdot[21] += qdot;
wdot[24] -= qdot;
}

{
// reaction 171:  H2NO + HO2 <=> H2O2 + HNO
const amrex::Real k_f = 0.029
           * exp((2.69) * tc[0] - (805.146665287552) * invT);
const amrex::Real qf = k_f * (sc[14]*sc[24]);
const amrex::Real qr = k_f * exp(-(g_RT[14] - g_RT[16] - g_RT[21] + g_RT[24])) * (sc[16]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[14] -= qdot;
wdot[16] += qdot;
wdot[21] += qdot;
wdot[24] -= qdot;
}

{
// reaction 172:  H2NO + O2 <=> HNO + HO2
const amrex::Real k_f = 3000000
           * exp(-(12580.416645118) * invT);
const amrex::Real qf = k_f * (sc[8]*sc[24]);
const amrex::Real qr = k_f * exp(-(g_RT[8] - g_RT[14] - g_RT[21] + g_RT[24])) * (sc[14]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[8] -= qdot;
wdot[14] += qdot;
wdot[21] += qdot;
wdot[24] -= qdot;
}

{
// reaction 173:  H2NO + NO <=> 2 HNO
const amrex::Real k_f = 0.02
           * exp((2) * tc[0] - (6541.81665546136) * invT);
const amrex::Real qf = k_f * (sc[3]*sc[24]);
const amrex::Real qr = k_f * exp(-(g_RT[3] - 2.000000*g_RT[21] + g_RT[24])) * ((sc[21] * sc[21]));
const amrex::Real qdot = qf - qr;
wdot[3] -= qdot;
wdot[21] += 2.000000 * qdot;
wdot[24] -= qdot;
}

{
// reaction 174:  H2NO + NH2 <=> HNO + NH3
const amrex::Real k_f = 3000000
           * exp(-(503.21666580472) * invT);
const amrex::Real qf = k_f * (sc[24]*sc[27]);
const amrex::Real qr = k_f * exp(-(-g_RT[20] - g_RT[21] + g_RT[24] + g_RT[27])) * (sc[20]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[20] += qdot;
wdot[21] += qdot;
wdot[24] -= qdot;
wdot[27] -= qdot;
}

{
// reaction 175:  H2NO + NO2 <=> HNO + HONO
const amrex::Real k_f = 600000
           * exp(-(1006.43333160944) * invT);
const amrex::Real qf = k_f * (sc[19]*sc[24]);
const amrex::Real qr = k_f * exp(-(g_RT[19] - g_RT[21] - g_RT[23] + g_RT[24])) * (sc[21]*sc[23]);
const amrex::Real qdot = qf - qr;
wdot[19] -= qdot;
wdot[21] += qdot;
wdot[23] += qdot;
wdot[24] -= qdot;
}

{
// reaction 177:  H + HNOH <=> NH2 + OH
const amrex::Real k_f = 40000000
           ;
const amrex::Real qf = k_f * (sc[11]*sc[42]);
const amrex::Real qr = k_f * exp(-(g_RT[11] - g_RT[13] - g_RT[27] + g_RT[42])) * (sc[13]*sc[27]);
const amrex::Real qdot = qf - qr;
wdot[11] -= qdot;
wdot[13] += qdot;
wdot[27] += qdot;
wdot[42] -= qdot;
}

{
// reaction 178:  H + HNOH <=> H2 + HNO
const amrex::Real k_f = 480
           * exp((1.5) * tc[0] - (190.215899674184) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[42]);
const amrex::Real qr = k_f * exp(-(-g_RT[9] + g_RT[11] - g_RT[21] + g_RT[42])) * (sc[9]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[9] += qdot;
wdot[11] -= qdot;
wdot[21] += qdot;
wdot[42] -= qdot;
}

{
// reaction 179:  HNOH + O <=> HNO + OH
const amrex::Real k_f = 70000000
           ;
const amrex::Real qf = k_f * (sc[12]*sc[42]);
const amrex::Real qr = k_f * exp(-(g_RT[12] - g_RT[13] - g_RT[21] + g_RT[42])) * (sc[13]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[21] += qdot;
wdot[42] -= qdot;
}

{
// reaction 180:  HNOH + O <=> HNO + OH
const amrex::Real k_f = 330
           * exp((1.5) * tc[0] - (-180.15156635809) * invT);
const amrex::Real qf = k_f * (sc[12]*sc[42]);
const amrex::Real qr = k_f * exp(-(g_RT[12] - g_RT[13] - g_RT[21] + g_RT[42])) * (sc[13]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[21] += qdot;
wdot[42] -= qdot;
}

{
// reaction 181:  HNOH + OH <=> H2O + HNO
const amrex::Real k_f = 2.4
           * exp((2) * tc[0] - (-599.834265639226) * invT);
const amrex::Real qf = k_f * (sc[13]*sc[42]);
const amrex::Real qr = k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[21] + g_RT[42])) * (sc[15]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[13] -= qdot;
wdot[15] += qdot;
wdot[21] += qdot;
wdot[42] -= qdot;
}

{
// reaction 182:  HNOH + HO2 <=> H2O2 + HNO
const amrex::Real k_f = 0.029
           * exp((2.69) * tc[0] - (-805.146665287552) * invT);
const amrex::Real qf = k_f * (sc[14]*sc[42]);
const amrex::Real qr = k_f * exp(-(g_RT[14] - g_RT[16] - g_RT[21] + g_RT[42])) * (sc[16]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[14] -= qdot;
wdot[16] += qdot;
wdot[21] += qdot;
wdot[42] -= qdot;
}

{
// reaction 183:  HNOH + O2 <=> HNO + HO2
const amrex::Real k_f = 3000000
           * exp(-(12580.416645118) * invT);
const amrex::Real qf = k_f * (sc[8]*sc[42]);
const amrex::Real qr = k_f * exp(-(g_RT[8] - g_RT[14] - g_RT[21] + g_RT[42])) * (sc[14]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[8] -= qdot;
wdot[14] += qdot;
wdot[21] += qdot;
wdot[42] -= qdot;
}

{
// reaction 184:  HNOH + NH2 <=> HNO + NH3
const amrex::Real k_f = 1.8
           * exp((1.94) * tc[0] - (-579.705599007037) * invT);
const amrex::Real qf = k_f * (sc[27]*sc[42]);
const amrex::Real qr = k_f * exp(-(-g_RT[20] - g_RT[21] + g_RT[27] + g_RT[42])) * (sc[20]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[20] += qdot;
wdot[21] += qdot;
wdot[27] -= qdot;
wdot[42] -= qdot;
}

{
// reaction 185:  HNOH + NO2 <=> HNO + HONO
const amrex::Real k_f = 600000
           * exp(-(1006.43333160944) * invT);
const amrex::Real qf = k_f * (sc[19]*sc[42]);
const amrex::Real qr = k_f * exp(-(g_RT[19] - g_RT[21] - g_RT[23] + g_RT[42])) * (sc[21]*sc[23]);
const amrex::Real qdot = qf - qr;
wdot[19] -= qdot;
wdot[21] += qdot;
wdot[23] += qdot;
wdot[42] -= qdot;
}

{
// reaction 186:  HNO + O2 <=> HO2 + NO
const amrex::Real k_f = 22000
           * exp(-(1509.64999741416) * invT);
const amrex::Real qf = k_f * (sc[8]*sc[21]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[8] - g_RT[14] + g_RT[21])) * (sc[3]*sc[14]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[8] -= qdot;
wdot[14] += qdot;
wdot[21] -= qdot;
}

{
// reaction 187:  HCO + HNO <=> CH2O + NO
const amrex::Real k_f = 600000
           * exp(-(1006.43333160944) * invT);
const amrex::Real qf = k_f * (sc[17]*sc[21]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[17] - g_RT[18] + g_RT[21])) * (sc[3]*sc[18]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[17] -= qdot;
wdot[18] += qdot;
wdot[21] -= qdot;
}

{
// reaction 189:  H + HON <=> H + HNO
const amrex::Real k_f = 20000000
           ;
const amrex::Real qf = k_f * (sc[11]*sc[22]);
const amrex::Real qr = k_f * exp(-(g_RT[11] - g_RT[11] - g_RT[21] + g_RT[22])) * (sc[11]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[11] -= qdot;
wdot[11] += qdot;
wdot[21] += qdot;
wdot[22] -= qdot;
}

{
// reaction 190:  H + HON <=> NH + OH
const amrex::Real k_f = 20000000
           ;
const amrex::Real qf = k_f * (sc[11]*sc[22]);
const amrex::Real qr = k_f * exp(-(g_RT[11] - g_RT[13] + g_RT[22] - g_RT[28])) * (sc[13]*sc[28]);
const amrex::Real qdot = qf - qr;
wdot[11] -= qdot;
wdot[13] += qdot;
wdot[22] -= qdot;
wdot[28] += qdot;
}

{
// reaction 191:  HON + O <=> NO + OH
const amrex::Real k_f = 70000000
           ;
const amrex::Real qf = k_f * (sc[12]*sc[22]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[12] - g_RT[13] + g_RT[22])) * (sc[3]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[22] -= qdot;
}

{
// reaction 192:  HON + OH <=> H + HONO
const amrex::Real k_f = 40000000
           ;
const amrex::Real qf = k_f * (sc[13]*sc[22]);
const amrex::Real qr = k_f * exp(-(-g_RT[11] + g_RT[13] + g_RT[22] - g_RT[23])) * (sc[11]*sc[23]);
const amrex::Real qdot = qf - qr;
wdot[11] += qdot;
wdot[13] -= qdot;
wdot[22] -= qdot;
wdot[23] += qdot;
}

{
// reaction 193:  HON + O2 <=> NO2 + OH
const amrex::Real k_f = 1000000
           * exp(-(2499.98039571785) * invT);
const amrex::Real qf = k_f * (sc[8]*sc[22]);
const amrex::Real qr = k_f * exp(-(g_RT[8] - g_RT[13] - g_RT[19] + g_RT[22])) * (sc[13]*sc[19]);
const amrex::Real qdot = qf - qr;
wdot[8] -= qdot;
wdot[13] += qdot;
wdot[19] += qdot;
wdot[22] -= qdot;
}

{
// reaction 194:  HCO + NO <=> CO + HNO
const amrex::Real k_f = 70000000
           * exp((-0.4) * tc[0]);
const amrex::Real qf = k_f * (sc[3]*sc[17]);
const amrex::Real qr = k_f * exp(-(g_RT[3] - g_RT[5] + g_RT[17] - g_RT[21])) * (sc[5]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[3] -= qdot;
wdot[5] += qdot;
wdot[17] -= qdot;
wdot[21] += qdot;
}

{
// reaction 195:  H + HONO <=> HNO + OH
const amrex::Real k_f = 56000
           * exp((0.86) * tc[0] - (2516.0833290236) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[23]);
const amrex::Real qr = k_f * exp(-(g_RT[11] - g_RT[13] - g_RT[21] + g_RT[23])) * (sc[13]*sc[21]);
const amrex::Real qdot = qf - qr;
wdot[11] -= qdot;
wdot[13] += qdot;
wdot[21] += qdot;
wdot[23] -= qdot;
}

{
// reaction 196:  H + HONO <=> H2O + NO
const amrex::Real k_f = 8.1
           * exp((1.89) * tc[0] - (1937.38416334817) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[23]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[15] + g_RT[23])) * (sc[3]*sc[15]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[11] -= qdot;
wdot[15] += qdot;
wdot[23] -= qdot;
}

{
// reaction 198:  2 NO2 <=> NO + NO3
const amrex::Real k_f = 9600
           * exp((0.73) * tc[0] - (10517.2283153186) * invT);
const amrex::Real qf = k_f * ((sc[19] * sc[19]));
const amrex::Real qr = k_f * exp(-(-g_RT[3] + 2.000000*g_RT[19] - g_RT[43])) * (sc[3]*sc[43]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[19] -= 2.000000 * qdot;
wdot[43] += qdot;
}

{
// reaction 199:  CO + NO2 <=> CO2 + NO
const amrex::Real k_f = 90000000
           * exp(-(17008.7233041995) * invT);
const amrex::Real qf = k_f * (sc[5]*sc[19]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[5] - g_RT[6] + g_RT[19])) * (sc[3]*sc[6]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[5] -= qdot;
wdot[6] += qdot;
wdot[19] -= qdot;
}

{
// reaction 200:  HCO + NO2 <=> CO + NO + OH
const amrex::Real k_f = 1.2e+17
           * exp((-3.29) * tc[0] - (1185.07524797011) * invT);
const amrex::Real qf = k_f * (sc[17]*sc[19]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] - g_RT[5] - g_RT[13] + g_RT[17] + g_RT[19])) * (refCinv) * (sc[3]*sc[5]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[5] += qdot;
wdot[13] += qdot;
wdot[17] -= qdot;
wdot[19] -= qdot;
}

{
// reaction 201:  HCO + NO2 <=> CO2 + H + NO
const amrex::Real k_f = 8400000000
           * exp((-0.75) * tc[0] - (971.208165003109) * invT);
const amrex::Real qf = k_f * (sc[17]*sc[19]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] - g_RT[6] - g_RT[11] + g_RT[17] + g_RT[19])) * (refCinv) * (sc[3]*sc[6]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[6] += qdot;
wdot[11] += qdot;
wdot[17] -= qdot;
wdot[19] -= qdot;
}

{
// reaction 202:  H + NO3 <=> NO2 + OH
const amrex::Real k_f = 60000000
           ;
const amrex::Real qf = k_f * (sc[11]*sc[43]);
const amrex::Real qr = k_f * exp(-(g_RT[11] - g_RT[13] - g_RT[19] + g_RT[43])) * (sc[13]*sc[19]);
const amrex::Real qdot = qf - qr;
wdot[11] -= qdot;
wdot[13] += qdot;
wdot[19] += qdot;
wdot[43] -= qdot;
}

{
// reaction 203:  NO3 + O <=> NO2 + O2
const amrex::Real k_f = 10000000
           ;
const amrex::Real qf = k_f * (sc[12]*sc[43]);
const amrex::Real qr = k_f * exp(-(-g_RT[8] + g_RT[12] - g_RT[19] + g_RT[43])) * (sc[8]*sc[19]);
const amrex::Real qdot = qf - qr;
wdot[8] += qdot;
wdot[12] -= qdot;
wdot[19] += qdot;
wdot[43] -= qdot;
}

{
// reaction 204:  NO3 + OH <=> HO2 + NO2
const amrex::Real k_f = 14000000
           ;
const amrex::Real qf = k_f * (sc[13]*sc[43]);
const amrex::Real qr = k_f * exp(-(g_RT[13] - g_RT[14] - g_RT[19] + g_RT[43])) * (sc[14]*sc[19]);
const amrex::Real qdot = qf - qr;
wdot[13] -= qdot;
wdot[14] += qdot;
wdot[19] += qdot;
wdot[43] -= qdot;
}

{
// reaction 205:  HO2 + NO3 <=> NO2 + O2 + OH
const amrex::Real k_f = 1500000
           ;
const amrex::Real qf = k_f * (sc[14]*sc[43]);
const amrex::Real qr = k_f * exp(-(-g_RT[8] - g_RT[13] + g_RT[14] - g_RT[19] + g_RT[43])) * (refCinv) * (sc[8]*sc[13]*sc[19]);
const amrex::Real qdot = qf - qr;
wdot[8] += qdot;
wdot[13] += qdot;
wdot[14] -= qdot;
wdot[19] += qdot;
wdot[43] -= qdot;
}

{
// reaction 207:  NNH <=> H + N2
const amrex::Real k_f = 65000000
           ;
const amrex::Real qf = k_f * (sc[26]);
const amrex::Real qr = k_f * exp(-(-g_RT[11] + g_RT[26] - g_RT[45])) * (refCinv) * (sc[11]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[11] += qdot;
wdot[26] -= qdot;
wdot[45] += qdot;
}

{
// reaction 208:  H + NNH <=> H2 + N2
const amrex::Real k_f = 100000000
           ;
const amrex::Real qf = k_f * (sc[11]*sc[26]);
const amrex::Real qr = k_f * exp(-(-g_RT[9] + g_RT[11] + g_RT[26] - g_RT[45])) * (sc[9]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[9] += qdot;
wdot[11] -= qdot;
wdot[26] -= qdot;
wdot[45] += qdot;
}

{
// reaction 209:  NNH + O <=> H + N2O
const amrex::Real k_f = 100000000
           ;
const amrex::Real qf = k_f * (sc[12]*sc[26]);
const amrex::Real qr = k_f * exp(-(-g_RT[4] - g_RT[11] + g_RT[12] + g_RT[26])) * (sc[4]*sc[11]);
const amrex::Real qdot = qf - qr;
wdot[4] += qdot;
wdot[11] += qdot;
wdot[12] -= qdot;
wdot[26] -= qdot;
}

{
// reaction 210:  NNH + O <=> N2 + OH
const amrex::Real k_f = 12000000
           * exp((0.145) * tc[0] - (-109.198016479624) * invT);
const amrex::Real qf = k_f * (sc[12]*sc[26]);
const amrex::Real qr = k_f * exp(-(g_RT[12] - g_RT[13] + g_RT[26] - g_RT[45])) * (sc[13]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[26] -= qdot;
wdot[45] += qdot;
}

{
// reaction 211:  NNH + O <=> NH + NO
const amrex::Real k_f = 520000
           * exp((0.381) * tc[0] - (-205.81561631413) * invT);
const amrex::Real qf = k_f * (sc[12]*sc[26]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[12] + g_RT[26] - g_RT[28])) * (sc[3]*sc[28]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[12] -= qdot;
wdot[26] -= qdot;
wdot[28] += qdot;
}

{
// reaction 212:  NNH + OH <=> H2O + N2
const amrex::Real k_f = 50000000
           ;
const amrex::Real qf = k_f * (sc[13]*sc[26]);
const amrex::Real qr = k_f * exp(-(g_RT[13] - g_RT[15] + g_RT[26] - g_RT[45])) * (sc[15]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[13] -= qdot;
wdot[15] += qdot;
wdot[26] -= qdot;
wdot[45] += qdot;
}

{
// reaction 213:  NNH + O2 <=> HO2 + N2
const amrex::Real k_f = 200000000
           ;
const amrex::Real qf = k_f * (sc[8]*sc[26]);
const amrex::Real qr = k_f * exp(-(g_RT[8] - g_RT[14] + g_RT[26] - g_RT[45])) * (sc[14]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[8] -= qdot;
wdot[14] += qdot;
wdot[26] -= qdot;
wdot[45] += qdot;
}

{
// reaction 215:  NH + NNH <=> N2 + NH2
const amrex::Real k_f = 50000000
           ;
const amrex::Real qf = k_f * (sc[26]*sc[28]);
const amrex::Real qr = k_f * exp(-(g_RT[26] - g_RT[27] + g_RT[28] - g_RT[45])) * (sc[27]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[26] -= qdot;
wdot[27] += qdot;
wdot[28] -= qdot;
wdot[45] += qdot;
}

{
// reaction 216:  NH2 + NNH <=> N2 + NH3
const amrex::Real k_f = 50000000
           ;
const amrex::Real qf = k_f * (sc[26]*sc[27]);
const amrex::Real qr = k_f * exp(-(-g_RT[20] + g_RT[26] + g_RT[27] - g_RT[45])) * (sc[20]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[20] += qdot;
wdot[26] -= qdot;
wdot[27] -= qdot;
wdot[45] += qdot;
}

{
// reaction 217:  NNH + NO <=> HNO + N2
const amrex::Real k_f = 50000000
           ;
const amrex::Real qf = k_f * (sc[3]*sc[26]);
const amrex::Real qr = k_f * exp(-(g_RT[3] - g_RT[21] + g_RT[26] - g_RT[45])) * (sc[21]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[3] -= qdot;
wdot[21] += qdot;
wdot[26] -= qdot;
wdot[45] += qdot;
}

{
// reaction 218:  CO + N2O <=> CO2 + N2
const amrex::Real k_f = 270000
           * exp(-(10183.5956658901) * invT);
const amrex::Real qf = k_f * (sc[4]*sc[5]);
const amrex::Real qr = k_f * exp(-(g_RT[4] + g_RT[5] - g_RT[6] - g_RT[45])) * (sc[6]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[4] -= qdot;
wdot[5] -= qdot;
wdot[6] += qdot;
wdot[45] += qdot;
}

{
// reaction 220:  NCCN + O <=> CN + NCO
const amrex::Real k_f = 4600000
           * exp(-(4468.56399234591) * invT);
const amrex::Real qf = k_f * (sc[12]*sc[31]);
const amrex::Real qr = k_f * exp(-(g_RT[12] - g_RT[29] - g_RT[30] + g_RT[31])) * (sc[29]*sc[30]);
const amrex::Real qdot = qf - qr;
wdot[12] -= qdot;
wdot[29] += qdot;
wdot[30] += qdot;
wdot[31] -= qdot;
}

{
// reaction 221:  NCCN + OH <=> CN + HOCN
const amrex::Real k_f = 190000
           * exp(-(1459.32833083369) * invT);
const amrex::Real qf = k_f * (sc[13]*sc[31]);
const amrex::Real qr = k_f * exp(-(g_RT[13] - g_RT[29] + g_RT[31] - g_RT[32])) * (sc[29]*sc[32]);
const amrex::Real qdot = qf - qr;
wdot[13] -= qdot;
wdot[29] += qdot;
wdot[31] -= qdot;
wdot[32] += qdot;
}

{
// reaction 223:  H2O + OH* <=> H2O + OH
const amrex::Real k_f = 5930000
           * exp((0.5) * tc[0] - (-432.766332592059) * invT);
const amrex::Real qf = k_f * (sc[0]*sc[15]);
const amrex::Real qr = k_f * exp(-(g_RT[0] - g_RT[13] + g_RT[15] - g_RT[15])) * (sc[13]*sc[15]);
const amrex::Real qdot = qf - qr;
wdot[0] -= qdot;
wdot[13] += qdot;
wdot[15] -= qdot;
wdot[15] += qdot;
}

{
// reaction 224:  H2 + OH* <=> H2 + OH
const amrex::Real k_f = 2950000
           * exp((0.5) * tc[0] - (-223.428199617296) * invT);
const amrex::Real qf = k_f * (sc[0]*sc[9]);
const amrex::Real qr = k_f * exp(-(g_RT[0] + g_RT[9] - g_RT[9] - g_RT[13])) * (sc[9]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[0] -= qdot;
wdot[9] -= qdot;
wdot[9] += qdot;
wdot[13] += qdot;
}

{
// reaction 225:  N2 + OH* <=> N2 + OH
const amrex::Real k_f = 108000
           * exp((0.5) * tc[0] - (-624.995098929462) * invT);
const amrex::Real qf = k_f * (sc[0]*sc[45]);
const amrex::Real qr = k_f * exp(-(g_RT[0] - g_RT[13] + g_RT[45] - g_RT[45])) * (sc[13]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[0] -= qdot;
wdot[13] += qdot;
wdot[45] -= qdot;
wdot[45] += qdot;
}

{
// reaction 226:  OH + OH* <=> 2 OH
const amrex::Real k_f = 6010000
           * exp((0.5) * tc[0] - (-384.457532674806) * invT);
const amrex::Real qf = k_f * (sc[0]*sc[13]);
const amrex::Real qr = k_f * exp(-(g_RT[0] + g_RT[13] - 2.000000*g_RT[13])) * ((sc[13] * sc[13]));
const amrex::Real qdot = qf - qr;
wdot[0] -= qdot;
wdot[13] -= qdot;
wdot[13] += qdot;
wdot[13] -= 2.000000 * qdot;
wdot[13] += 2.000000 * qdot;
}

{
// reaction 227:  H + OH* <=> H + OH
const amrex::Real k_f = 1310000
           * exp((0.5) * tc[0] - (-84.0371831893882) * invT);
const amrex::Real qf = k_f * (sc[0]*sc[11]);
const amrex::Real qr = k_f * exp(-(g_RT[0] + g_RT[11] - g_RT[11] - g_RT[13])) * (sc[11]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[0] -= qdot;
wdot[11] -= qdot;
wdot[11] += qdot;
wdot[13] += qdot;
}

{
// reaction 228:  AR + OH* <=> AR + OH
const amrex::Real k_f = 1690000
           * exp(-(2080.80091310252) * invT);
const amrex::Real qf = k_f * (sc[0]*sc[10]);
const amrex::Real qr = k_f * exp(-(g_RT[0] + g_RT[10] - g_RT[10] - g_RT[13])) * (sc[10]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[0] -= qdot;
wdot[10] -= qdot;
wdot[10] += qdot;
wdot[13] += qdot;
}

{
// reaction 229:  O2 + OH* <=> O2 + OH
const amrex::Real k_f = 2100000
           * exp((0.5) * tc[0] - (-240.537566254656) * invT);
const amrex::Real qf = k_f * (sc[0]*sc[8]);
const amrex::Real qr = k_f * exp(-(g_RT[0] + g_RT[8] - g_RT[8] - g_RT[13])) * (sc[8]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[0] -= qdot;
wdot[8] -= qdot;
wdot[8] += qdot;
wdot[13] += qdot;
}

{
// reaction 230:  CO2 + OH* <=> CO2 + OH
const amrex::Real k_f = 2750000
           * exp((0.5) * tc[0] - (-487.113732498969) * invT);
const amrex::Real qf = k_f * (sc[0]*sc[6]);
const amrex::Real qr = k_f * exp(-(g_RT[0] + g_RT[6] - g_RT[6] - g_RT[13])) * (sc[6]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[0] -= qdot;
wdot[6] -= qdot;
wdot[6] += qdot;
wdot[13] += qdot;
}

{
// reaction 231:  CO + OH* <=> CO + OH
const amrex::Real k_f = 3230000
           * exp((0.5) * tc[0] - (-396.031515988314) * invT);
const amrex::Real qf = k_f * (sc[0]*sc[5]);
const amrex::Real qr = k_f * exp(-(g_RT[0] + g_RT[5] - g_RT[5] - g_RT[13])) * (sc[5]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[0] -= qdot;
wdot[5] -= qdot;
wdot[5] += qdot;
wdot[13] += qdot;
}

{
// reaction 232:  H + N2O <=> N2 + OH*
const amrex::Real k_f = 160000000
           * exp(-(25311.7982899774) * invT);
const amrex::Real qf = k_f * (sc[4]*sc[11]);
const amrex::Real qr = k_f * exp(-(-g_RT[0] + g_RT[4] + g_RT[11] - g_RT[45])) * (sc[0]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[0] += qdot;
wdot[4] -= qdot;
wdot[11] -= qdot;
wdot[45] += qdot;
}

{
// reaction 235:  HO2 + NO <=> NO2 + OH
const amrex::Real k_f = 2100000
           * exp(-(-241.543999586265) * invT);
const amrex::Real qf = k_f * (sc[3]*sc[14]);
const amrex::Real qr = k_f * exp(-(g_RT[3] - g_RT[13] + g_RT[14] - g_RT[19])) * (sc[13]*sc[19]);
const amrex::Real qdot = qf - qr;
wdot[3] -= qdot;
wdot[13] += qdot;
wdot[14] -= qdot;
wdot[19] += qdot;
}

{
// reaction 237:  H2 + NO2 <=> H + HONO
const amrex::Real k_f = 0.013
           * exp((2.76) * tc[0] - (14980.7601410065) * invT);
const amrex::Real qf = k_f * (sc[9]*sc[19]);
const amrex::Real qr = k_f * exp(-(g_RT[9] - g_RT[11] + g_RT[19] - g_RT[23])) * (sc[11]*sc[23]);
const amrex::Real qdot = qf - qr;
wdot[9] -= qdot;
wdot[11] += qdot;
wdot[19] -= qdot;
wdot[23] += qdot;
}

{
// reaction 238:  H + NO2 <=> NO + OH
const amrex::Real k_f = 131000000
           * exp(-(182.164433021309) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[19]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[11] - g_RT[13] + g_RT[19])) * (sc[3]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[11] -= qdot;
wdot[13] += qdot;
wdot[19] -= qdot;
}

{
// reaction 239:  NO2 + O <=> NO + O2
const amrex::Real k_f = 3910000
           * exp(-(-119.765566461523) * invT);
const amrex::Real qf = k_f * (sc[12]*sc[19]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] - g_RT[8] + g_RT[12] + g_RT[19])) * (sc[3]*sc[8]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[8] += qdot;
wdot[12] -= qdot;
wdot[19] -= qdot;
}

{
// reaction 241:  2 NO2 <=> 2 NO + O2
const amrex::Real k_f = 2000000
           * exp(-(13498.7870602116) * invT);
const amrex::Real qf = k_f * ((sc[19] * sc[19]));
const amrex::Real qr = k_f * exp(-(-2.000000*g_RT[3] - g_RT[8] + 2.000000*g_RT[19])) * (refCinv) * ((sc[3] * sc[3])*sc[8]);
const amrex::Real qdot = qf - qr;
wdot[3] += 2.000000 * qdot;
wdot[8] += qdot;
wdot[19] -= 2.000000 * qdot;
}

{
// reaction 242:  HO2 + NO2 <=> HONO + O2
const amrex::Real k_f = 1.91e-06
           * exp((3.32) * tc[0] - (1531.79153070957) * invT);
const amrex::Real qf = k_f * (sc[14]*sc[19]);
const amrex::Real qr = k_f * exp(-(-g_RT[8] + g_RT[14] + g_RT[19] - g_RT[23])) * (sc[8]*sc[23]);
const amrex::Real qdot = qf - qr;
wdot[8] += qdot;
wdot[14] -= qdot;
wdot[19] -= qdot;
wdot[23] += qdot;
}

{
// reaction 244:  NO + NO2 <=> N2O + O2
const amrex::Real k_f = 1000000
           * exp(-(30192.9999482832) * invT);
const amrex::Real qf = k_f * (sc[3]*sc[19]);
const amrex::Real qr = k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[8] + g_RT[19])) * (sc[4]*sc[8]);
const amrex::Real qdot = qf - qr;
wdot[3] -= qdot;
wdot[4] += qdot;
wdot[8] += qdot;
wdot[19] -= qdot;
}

{
// reaction 245:  HONO + O <=> NO2 + OH
const amrex::Real k_f = 12000000
           * exp(-(3019.29999482832) * invT);
const amrex::Real qf = k_f * (sc[12]*sc[23]);
const amrex::Real qr = k_f * exp(-(g_RT[12] - g_RT[13] - g_RT[19] + g_RT[23])) * (sc[13]*sc[19]);
const amrex::Real qdot = qf - qr;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[19] += qdot;
wdot[23] -= qdot;
}

{
// reaction 246:  HONO + OH <=> H2O + NO2
const amrex::Real k_f = 13000
           * exp((1) * tc[0] - (67.9342498836372) * invT);
const amrex::Real qf = k_f * (sc[13]*sc[23]);
const amrex::Real qr = k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[19] + g_RT[23])) * (sc[15]*sc[19]);
const amrex::Real qdot = qf - qr;
wdot[13] -= qdot;
wdot[15] += qdot;
wdot[19] += qdot;
wdot[23] -= qdot;
}

{
// reaction 247:  2 HONO <=> H2O + NO + NO2
const amrex::Real k_f = 3.49e-07
           * exp((3.64) * tc[0] - (6109.0503228693) * invT);
const amrex::Real qf = k_f * ((sc[23] * sc[23]));
const amrex::Real qr = k_f * exp(-(-g_RT[3] - g_RT[15] - g_RT[19] + 2.000000*g_RT[23])) * (refCinv) * (sc[3]*sc[15]*sc[19]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[15] += qdot;
wdot[19] += qdot;
wdot[23] -= 2.000000 * qdot;
}

{
// reaction 248:  HNO + O <=> NO + OH
const amrex::Real k_f = 10000000
           ;
const amrex::Real qf = k_f * (sc[12]*sc[21]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[12] - g_RT[13] + g_RT[21])) * (sc[3]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[21] -= qdot;
}

{
// reaction 249:  HNO + OH <=> H2O + NO
const amrex::Real k_f = 36000000
           ;
const amrex::Real qf = k_f * (sc[13]*sc[21]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[13] - g_RT[15] + g_RT[21])) * (sc[3]*sc[15]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[13] -= qdot;
wdot[15] += qdot;
wdot[21] -= qdot;
}

{
// reaction 250:  HNO + NO2 <=> HONO + NO
const amrex::Real k_f = 0.0442
           * exp((2.6) * tc[0] - (2043.05966316716) * invT);
const amrex::Real qf = k_f * (sc[19]*sc[21]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[19] + g_RT[21] - g_RT[23])) * (sc[3]*sc[23]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[19] -= qdot;
wdot[21] -= qdot;
wdot[23] += qdot;
}

{
// reaction 251:  2 HNO <=> H2O + N2O
const amrex::Real k_f = 3950000
           * exp(-(2516.0833290236) * invT);
const amrex::Real qf = k_f * ((sc[21] * sc[21]));
const amrex::Real qr = k_f * exp(-(-g_RT[4] - g_RT[15] + 2.000000*g_RT[21])) * (sc[4]*sc[15]);
const amrex::Real qdot = qf - qr;
wdot[4] += qdot;
wdot[15] += qdot;
wdot[21] -= 2.000000 * qdot;
}

{
// reaction 252:  HNO + NO <=> N2O + OH
const amrex::Real k_f = 2000000
           * exp(-(13083.6333109227) * invT);
const amrex::Real qf = k_f * (sc[3]*sc[21]);
const amrex::Real qr = k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[13] + g_RT[21])) * (sc[4]*sc[13]);
const amrex::Real qdot = qf - qr;
wdot[3] -= qdot;
wdot[4] += qdot;
wdot[13] += qdot;
wdot[21] -= qdot;
}

{
// reaction 253:  N + NO2 <=> N2O + O
const amrex::Real k_f = 1800000
           ;
const amrex::Real qf = k_f * (sc[19]*sc[25]);
const amrex::Real qr = k_f * exp(-(-g_RT[4] - g_RT[12] + g_RT[19] + g_RT[25])) * (sc[4]*sc[12]);
const amrex::Real qdot = qf - qr;
wdot[4] += qdot;
wdot[12] += qdot;
wdot[19] -= qdot;
wdot[25] -= qdot;
}

{
// reaction 254:  N + O2 <=> NO + O
const amrex::Real k_f = 6400
           * exp((1) * tc[0] - (3160.20066125364) * invT);
const amrex::Real qf = k_f * (sc[8]*sc[25]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[8] - g_RT[12] + g_RT[25])) * (sc[3]*sc[12]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[8] -= qdot;
wdot[12] += qdot;
wdot[25] -= qdot;
}

{
// reaction 255:  N + N2O <=> N2 + NO
const amrex::Real k_f = 10000000
           * exp(-(9998.91514953978) * invT);
const amrex::Real qf = k_f * (sc[4]*sc[25]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[25] - g_RT[45])) * (sc[3]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[4] -= qdot;
wdot[25] -= qdot;
wdot[45] += qdot;
}

{
// reaction 256:  N2O + NO <=> N2 + NO2
const amrex::Real k_f = 0.53
           * exp((2.23) * tc[0] - (23289.3705101082) * invT);
const amrex::Real qf = k_f * (sc[3]*sc[4]);
const amrex::Real qr = k_f * exp(-(g_RT[3] + g_RT[4] - g_RT[19] - g_RT[45])) * (sc[19]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[3] -= qdot;
wdot[4] -= qdot;
wdot[19] += qdot;
wdot[45] += qdot;
}

{
// reaction 259:  H + HNO2 <=> H2 + NO2
const amrex::Real k_f = 240
           * exp((1.5) * tc[0] - (2559.86317894861) * invT);
const amrex::Real qf = k_f * (sc[11]*sc[36]);
const amrex::Real qr = k_f * exp(-(-g_RT[9] + g_RT[11] - g_RT[19] + g_RT[36])) * (sc[9]*sc[19]);
const amrex::Real qdot = qf - qr;
wdot[9] += qdot;
wdot[11] -= qdot;
wdot[19] += qdot;
wdot[36] -= qdot;
}

{
// reaction 260:  HNO2 + O <=> NO2 + OH
const amrex::Real k_f = 170
           * exp((1.5) * tc[0] - (1519.71433073025) * invT);
const amrex::Real qf = k_f * (sc[12]*sc[36]);
const amrex::Real qr = k_f * exp(-(g_RT[12] - g_RT[13] - g_RT[19] + g_RT[36])) * (sc[13]*sc[19]);
const amrex::Real qdot = qf - qr;
wdot[12] -= qdot;
wdot[13] += qdot;
wdot[19] += qdot;
wdot[36] -= qdot;
}

{
// reaction 261:  HNO2 + OH <=> H2O + NO2
const amrex::Real k_f = 1.2
           * exp((2) * tc[0] - (-299.917132819613) * invT);
const amrex::Real qf = k_f * (sc[13]*sc[36]);
const amrex::Real qr = k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[19] + g_RT[36])) * (sc[15]*sc[19]);
const amrex::Real qdot = qf - qr;
wdot[13] -= qdot;
wdot[15] += qdot;
wdot[19] += qdot;
wdot[36] -= qdot;
}

{
// reaction 262:  HNO2 <=> HONO
const amrex::Real k_f = 1.3e+29
           * exp((-5.47) * tc[0] - (26576.8849878105) * invT);
const amrex::Real qf = k_f * (sc[36]);
const amrex::Real qr = k_f * exp(-(-g_RT[23] + g_RT[36])) * (sc[23]);
const amrex::Real qdot = qf - qr;
wdot[23] += qdot;
wdot[36] -= qdot;
}

{
// reaction 263:  HONO + NH2 <=> NH3 + NO2
const amrex::Real k_f = 7.11e-05
           * exp((3.02) * tc[0] - (-2486.39354574112) * invT);
const amrex::Real qf = k_f * (sc[23]*sc[27]);
const amrex::Real qr = k_f * exp(-(-g_RT[19] - g_RT[20] + g_RT[23] + g_RT[27])) * (sc[19]*sc[20]);
const amrex::Real qdot = qf - qr;
wdot[19] += qdot;
wdot[20] += qdot;
wdot[23] -= qdot;
wdot[27] -= qdot;
}

{
// reaction 264:  HNO + N <=> NH + NO
const amrex::Real k_f = 10000000
           * exp(-(1001.40116495139) * invT);
const amrex::Real qf = k_f * (sc[21]*sc[25]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] + g_RT[21] + g_RT[25] - g_RT[28])) * (sc[3]*sc[28]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[21] -= qdot;
wdot[25] -= qdot;
wdot[28] += qdot;
}

{
// reaction 265:  N2O + O <=> N2 + O2
const amrex::Real k_f = 3690000
           * exp(-(8023.28651959045) * invT);
const amrex::Real qf = k_f * (sc[4]*sc[12]);
const amrex::Real qr = k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[12] - g_RT[45])) * (sc[8]*sc[45]);
const amrex::Real qdot = qf - qr;
wdot[4] -= qdot;
wdot[8] += qdot;
wdot[12] -= qdot;
wdot[45] += qdot;
}

{
// reaction 266:  N2O + O <=> 2 NO
const amrex::Real k_f = 29000000
           * exp(-(11649.4658133793) * invT);
const amrex::Real qf = k_f * (sc[4]*sc[12]);
const amrex::Real qr = k_f * exp(-(-2.000000*g_RT[3] + g_RT[4] + g_RT[12])) * ((sc[3] * sc[3]));
const amrex::Real qdot = qf - qr;
wdot[3] += 2.000000 * qdot;
wdot[4] -= qdot;
wdot[12] -= qdot;
}

{
// reaction 267:  NO3 <=> NO + O2
const amrex::Real k_f = 2500000
           * exp(-(6098.9859895532) * invT);
const amrex::Real qf = k_f * (sc[43]);
const amrex::Real qr = k_f * exp(-(-g_RT[3] - g_RT[8] + g_RT[43])) * (refCinv) * (sc[3]*sc[8]);
const amrex::Real qdot = qf - qr;
wdot[3] += qdot;
wdot[8] += qdot;
wdot[43] -= qdot;
}

{
// reaction 268:  2 NO3 <=> 2 NO2 + O2
const amrex::Real k_f = 512000
           * exp(-(2450.66516246898) * invT);
const amrex::Real qf = k_f * ((sc[43] * sc[43]));
const amrex::Real qr = k_f * exp(-(-g_RT[8] - 2.000000*g_RT[19] + 2.000000*g_RT[43])) * (refCinv) * (sc[8]*(sc[19] * sc[19]));
const amrex::Real qdot = qf - qr;
wdot[8] += qdot;
wdot[19] += 2.000000 * qdot;
wdot[43] -= 2.000000 * qdot;
}

{
// reaction 270:  N2O4 + O <=> N2O3 + O2
const amrex::Real k_f = 1210000
           ;
const amrex::Real qf = k_f * (sc[12]*sc[37]);
const amrex::Real qr = k_f * exp(-(-g_RT[8] + g_RT[12] + g_RT[37] - g_RT[38])) * (sc[8]*sc[38]);
const amrex::Real qdot = qf - qr;
wdot[8] += qdot;
wdot[12] -= qdot;
wdot[37] -= qdot;
wdot[38] += qdot;
}

{
// reaction 271:  N2O3 + O <=> 2 NO2
const amrex::Real k_f = 271000
           ;
const amrex::Real qf = k_f * (sc[12]*sc[38]);
const amrex::Real qr = k_f * exp(-(g_RT[12] - 2.000000*g_RT[19] + g_RT[38])) * ((sc[19] * sc[19]));
const amrex::Real qdot = qf - qr;
wdot[12] -= qdot;
wdot[19] += 2.000000 * qdot;
wdot[38] -= qdot;
}


return;
}


// compute the production rate for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKWC(amrex::Real *  T, amrex::Real *  C,  amrex::Real *  wdot)
{
int id; // loop counter

// convert to SI
for (id = 0; id < 52; ++id) {
C[id] *= 1.0e6;
}

// convert to chemkin units
productionRate(wdot, C, *T);

// convert to chemkin units
for (id = 0; id < 52; ++id) {
C[id] *= 1.0e-6;
wdot[id] *= 1.0e-6;
}
}

// Returns the molar production rate of species
// Given P, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKWYP(amrex::Real *  P, amrex::Real *  T, amrex::Real *  y,  amrex::Real *  wdot)
{
int id; // loop counter
amrex::Real c[52]; // temporary storage
amrex::Real YOW = 0; 
amrex::Real PWORT; 
amrex::Real imw[52];

get_imw(imw);

// Compute inverse of mean molecular wt first
YOW += y[0]*imw[0]; // OH*
YOW += y[1]*imw[1]; // HCN
YOW += y[2]*imw[2]; // HNCO
YOW += y[3]*imw[3]; // NO
YOW += y[4]*imw[4]; // N2O
YOW += y[5]*imw[5]; // CO
YOW += y[6]*imw[6]; // CO2
YOW += y[7]*imw[7]; // HNC
YOW += y[8]*imw[8]; // O2
YOW += y[9]*imw[9]; // H2
YOW += y[10]*imw[10]; // AR
YOW += y[11]*imw[11]; // H
YOW += y[12]*imw[12]; // O
YOW += y[13]*imw[13]; // OH
YOW += y[14]*imw[14]; // HO2
YOW += y[15]*imw[15]; // H2O
YOW += y[16]*imw[16]; // H2O2
YOW += y[17]*imw[17]; // HCO
YOW += y[18]*imw[18]; // CH2O
YOW += y[19]*imw[19]; // NO2
YOW += y[20]*imw[20]; // NH3
YOW += y[21]*imw[21]; // HNO
YOW += y[22]*imw[22]; // HON
YOW += y[23]*imw[23]; // HONO
YOW += y[24]*imw[24]; // H2NO
YOW += y[25]*imw[25]; // N
YOW += y[26]*imw[26]; // NNH
YOW += y[27]*imw[27]; // NH2
YOW += y[28]*imw[28]; // NH
YOW += y[29]*imw[29]; // CN
YOW += y[30]*imw[30]; // NCO
YOW += y[31]*imw[31]; // NCCN
YOW += y[32]*imw[32]; // HOCN
YOW += y[33]*imw[33]; // HCNO
YOW += y[34]*imw[34]; // NCN
YOW += y[35]*imw[35]; // HE
YOW += y[36]*imw[36]; // HNO2
YOW += y[37]*imw[37]; // N2O4
YOW += y[38]*imw[38]; // N2O3
YOW += y[39]*imw[39]; // CH
YOW += y[40]*imw[40]; // H2CN
YOW += y[41]*imw[41]; // HCNH
YOW += y[42]*imw[42]; // HNOH
YOW += y[43]*imw[43]; // NO3
YOW += y[44]*imw[44]; // HONO2
YOW += y[45]*imw[45]; // N2
YOW += y[46]*imw[46]; // CH4
YOW += y[47]*imw[47]; // C2H6
YOW += y[48]*imw[48]; // N2H4
YOW += y[49]*imw[49]; // N2H3
YOW += y[50]*imw[50]; // N2H2
YOW += y[51]*imw[51]; // H2NN
// PW/RT (see Eq. 7)
PWORT = (*P)/(YOW * 8.31446261815324e+07 * (*T)); 
// multiply by 1e6 so c goes to SI
PWORT *= 1e6; 
// Now compute conversion (and go to SI)
c[0] = PWORT * y[0]*imw[0]; 
c[1] = PWORT * y[1]*imw[1]; 
c[2] = PWORT * y[2]*imw[2]; 
c[3] = PWORT * y[3]*imw[3]; 
c[4] = PWORT * y[4]*imw[4]; 
c[5] = PWORT * y[5]*imw[5]; 
c[6] = PWORT * y[6]*imw[6]; 
c[7] = PWORT * y[7]*imw[7]; 
c[8] = PWORT * y[8]*imw[8]; 
c[9] = PWORT * y[9]*imw[9]; 
c[10] = PWORT * y[10]*imw[10]; 
c[11] = PWORT * y[11]*imw[11]; 
c[12] = PWORT * y[12]*imw[12]; 
c[13] = PWORT * y[13]*imw[13]; 
c[14] = PWORT * y[14]*imw[14]; 
c[15] = PWORT * y[15]*imw[15]; 
c[16] = PWORT * y[16]*imw[16]; 
c[17] = PWORT * y[17]*imw[17]; 
c[18] = PWORT * y[18]*imw[18]; 
c[19] = PWORT * y[19]*imw[19]; 
c[20] = PWORT * y[20]*imw[20]; 
c[21] = PWORT * y[21]*imw[21]; 
c[22] = PWORT * y[22]*imw[22]; 
c[23] = PWORT * y[23]*imw[23]; 
c[24] = PWORT * y[24]*imw[24]; 
c[25] = PWORT * y[25]*imw[25]; 
c[26] = PWORT * y[26]*imw[26]; 
c[27] = PWORT * y[27]*imw[27]; 
c[28] = PWORT * y[28]*imw[28]; 
c[29] = PWORT * y[29]*imw[29]; 
c[30] = PWORT * y[30]*imw[30]; 
c[31] = PWORT * y[31]*imw[31]; 
c[32] = PWORT * y[32]*imw[32]; 
c[33] = PWORT * y[33]*imw[33]; 
c[34] = PWORT * y[34]*imw[34]; 
c[35] = PWORT * y[35]*imw[35]; 
c[36] = PWORT * y[36]*imw[36]; 
c[37] = PWORT * y[37]*imw[37]; 
c[38] = PWORT * y[38]*imw[38]; 
c[39] = PWORT * y[39]*imw[39]; 
c[40] = PWORT * y[40]*imw[40]; 
c[41] = PWORT * y[41]*imw[41]; 
c[42] = PWORT * y[42]*imw[42]; 
c[43] = PWORT * y[43]*imw[43]; 
c[44] = PWORT * y[44]*imw[44]; 
c[45] = PWORT * y[45]*imw[45]; 
c[46] = PWORT * y[46]*imw[46]; 
c[47] = PWORT * y[47]*imw[47]; 
c[48] = PWORT * y[48]*imw[48]; 
c[49] = PWORT * y[49]*imw[49]; 
c[50] = PWORT * y[50]*imw[50]; 
c[51] = PWORT * y[51]*imw[51]; 

// convert to chemkin units
productionRate(wdot, c, *T);

// convert to chemkin units
for (id = 0; id < 52; ++id) {
wdot[id] *= 1.0e-6;
}
}

// Returns the molar production rate of species
// Given P, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKWXP(amrex::Real *  P, amrex::Real *  T, amrex::Real *  x,  amrex::Real *  wdot)
{
int id; // loop counter
amrex::Real c[52]; // temporary storage
amrex::Real PORT = 1e6 * (*P)/(8.31446261815324e+07 * (*T)); // 1e6 * P/RT so c goes to SI units

// Compute conversion, see Eq 10
for (id = 0; id < 52; ++id) {
c[id] = x[id]*PORT;
}

// convert to chemkin units
productionRate(wdot, c, *T);

// convert to chemkin units
for (id = 0; id < 52; ++id) {
wdot[id] *= 1.0e-6;
}
}

// Returns the molar production rate of species
// Given rho, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKWYR(amrex::Real *  rho, amrex::Real *  T, amrex::Real *  y,  amrex::Real *  wdot)
{
int id; // loop counter
amrex::Real c[52]; // temporary storage
amrex::Real imw[52];

get_imw(imw);

// See Eq 8 with an extra 1e6 so c goes to SI
c[0] = 1e6 * (*rho) * y[0]*imw[0]; 
c[1] = 1e6 * (*rho) * y[1]*imw[1]; 
c[2] = 1e6 * (*rho) * y[2]*imw[2]; 
c[3] = 1e6 * (*rho) * y[3]*imw[3]; 
c[4] = 1e6 * (*rho) * y[4]*imw[4]; 
c[5] = 1e6 * (*rho) * y[5]*imw[5]; 
c[6] = 1e6 * (*rho) * y[6]*imw[6]; 
c[7] = 1e6 * (*rho) * y[7]*imw[7]; 
c[8] = 1e6 * (*rho) * y[8]*imw[8]; 
c[9] = 1e6 * (*rho) * y[9]*imw[9]; 
c[10] = 1e6 * (*rho) * y[10]*imw[10]; 
c[11] = 1e6 * (*rho) * y[11]*imw[11]; 
c[12] = 1e6 * (*rho) * y[12]*imw[12]; 
c[13] = 1e6 * (*rho) * y[13]*imw[13]; 
c[14] = 1e6 * (*rho) * y[14]*imw[14]; 
c[15] = 1e6 * (*rho) * y[15]*imw[15]; 
c[16] = 1e6 * (*rho) * y[16]*imw[16]; 
c[17] = 1e6 * (*rho) * y[17]*imw[17]; 
c[18] = 1e6 * (*rho) * y[18]*imw[18]; 
c[19] = 1e6 * (*rho) * y[19]*imw[19]; 
c[20] = 1e6 * (*rho) * y[20]*imw[20]; 
c[21] = 1e6 * (*rho) * y[21]*imw[21]; 
c[22] = 1e6 * (*rho) * y[22]*imw[22]; 
c[23] = 1e6 * (*rho) * y[23]*imw[23]; 
c[24] = 1e6 * (*rho) * y[24]*imw[24]; 
c[25] = 1e6 * (*rho) * y[25]*imw[25]; 
c[26] = 1e6 * (*rho) * y[26]*imw[26]; 
c[27] = 1e6 * (*rho) * y[27]*imw[27]; 
c[28] = 1e6 * (*rho) * y[28]*imw[28]; 
c[29] = 1e6 * (*rho) * y[29]*imw[29]; 
c[30] = 1e6 * (*rho) * y[30]*imw[30]; 
c[31] = 1e6 * (*rho) * y[31]*imw[31]; 
c[32] = 1e6 * (*rho) * y[32]*imw[32]; 
c[33] = 1e6 * (*rho) * y[33]*imw[33]; 
c[34] = 1e6 * (*rho) * y[34]*imw[34]; 
c[35] = 1e6 * (*rho) * y[35]*imw[35]; 
c[36] = 1e6 * (*rho) * y[36]*imw[36]; 
c[37] = 1e6 * (*rho) * y[37]*imw[37]; 
c[38] = 1e6 * (*rho) * y[38]*imw[38]; 
c[39] = 1e6 * (*rho) * y[39]*imw[39]; 
c[40] = 1e6 * (*rho) * y[40]*imw[40]; 
c[41] = 1e6 * (*rho) * y[41]*imw[41]; 
c[42] = 1e6 * (*rho) * y[42]*imw[42]; 
c[43] = 1e6 * (*rho) * y[43]*imw[43]; 
c[44] = 1e6 * (*rho) * y[44]*imw[44]; 
c[45] = 1e6 * (*rho) * y[45]*imw[45]; 
c[46] = 1e6 * (*rho) * y[46]*imw[46]; 
c[47] = 1e6 * (*rho) * y[47]*imw[47]; 
c[48] = 1e6 * (*rho) * y[48]*imw[48]; 
c[49] = 1e6 * (*rho) * y[49]*imw[49]; 
c[50] = 1e6 * (*rho) * y[50]*imw[50]; 
c[51] = 1e6 * (*rho) * y[51]*imw[51]; 

// call productionRate
productionRate(wdot, c, *T);

// convert to chemkin units
for (id = 0; id < 52; ++id) {
wdot[id] *= 1.0e-6;
}
}

// Returns the molar production rate of species
// Given rho, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void CKWXR(amrex::Real *  rho, amrex::Real *  T, amrex::Real *  x,  amrex::Real *  wdot)
{
int id; // loop counter
amrex::Real c[52]; // temporary storage
amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
amrex::Real ROW; 
// Compute mean molecular wt first
XW += x[0]*17.007000; // OH*
XW += x[1]*27.026000; // HCN
XW += x[2]*43.025000; // HNCO
XW += x[3]*30.006000; // NO
XW += x[4]*44.013000; // N2O
XW += x[5]*28.010000; // CO
XW += x[6]*44.009000; // CO2
XW += x[7]*27.026000; // HNC
XW += x[8]*31.998000; // O2
XW += x[9]*2.016000; // H2
XW += x[10]*39.950000; // AR
XW += x[11]*1.008000; // H
XW += x[12]*15.999000; // O
XW += x[13]*17.007000; // OH
XW += x[14]*33.006000; // HO2
XW += x[15]*18.015000; // H2O
XW += x[16]*34.014000; // H2O2
XW += x[17]*29.018000; // HCO
XW += x[18]*30.026000; // CH2O
XW += x[19]*46.005000; // NO2
XW += x[20]*17.031000; // NH3
XW += x[21]*31.014000; // HNO
XW += x[22]*31.014000; // HON
XW += x[23]*47.013000; // HONO
XW += x[24]*32.022000; // H2NO
XW += x[25]*14.007000; // N
XW += x[26]*29.022000; // NNH
XW += x[27]*16.023000; // NH2
XW += x[28]*15.015000; // NH
XW += x[29]*26.018000; // CN
XW += x[30]*42.017000; // NCO
XW += x[31]*52.036000; // NCCN
XW += x[32]*43.025000; // HOCN
XW += x[33]*43.025000; // HCNO
XW += x[34]*40.025000; // NCN
XW += x[35]*4.002602; // HE
XW += x[36]*47.013000; // HNO2
XW += x[37]*92.010000; // N2O4
XW += x[38]*76.011000; // N2O3
XW += x[39]*13.019000; // CH
XW += x[40]*28.034000; // H2CN
XW += x[41]*28.034000; // HCNH
XW += x[42]*32.022000; // HNOH
XW += x[43]*62.004000; // NO3
XW += x[44]*63.012000; // HONO2
XW += x[45]*28.014000; // N2
XW += x[46]*16.043000; // CH4
XW += x[47]*30.070000; // C2H6
XW += x[48]*32.046000; // N2H4
XW += x[49]*31.038000; // N2H3
XW += x[50]*30.030000; // N2H2
XW += x[51]*30.030000; // H2NN
// Extra 1e6 factor to take c to SI
ROW = 1e6*(*rho) / XW;

// Compute conversion, see Eq 11
for (id = 0; id < 52; ++id) {
c[id] = x[id]*ROW;
}

// convert to chemkin units
productionRate(wdot, c, *T);

// convert to chemkin units
for (id = 0; id < 52; ++id) {
wdot[id] *= 1.0e-6;
}
}

//  species unit charge number 
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRG(int * kcharge)
{
kcharge[0] = 0;// OH*
kcharge[1] = 0;// HCN
kcharge[2] = 0;// HNCO
kcharge[3] = 0;// NO
kcharge[4] = 0;// N2O
kcharge[5] = 0;// CO
kcharge[6] = 0;// CO2
kcharge[7] = 0;// HNC
kcharge[8] = 0;// O2
kcharge[9] = 0;// H2
kcharge[10] = 0;// AR
kcharge[11] = 0;// H
kcharge[12] = 0;// O
kcharge[13] = 0;// OH
kcharge[14] = 0;// HO2
kcharge[15] = 0;// H2O
kcharge[16] = 0;// H2O2
kcharge[17] = 0;// HCO
kcharge[18] = 0;// CH2O
kcharge[19] = 0;// NO2
kcharge[20] = 0;// NH3
kcharge[21] = 0;// HNO
kcharge[22] = 0;// HON
kcharge[23] = 0;// HONO
kcharge[24] = 0;// H2NO
kcharge[25] = 0;// N
kcharge[26] = 0;// NNH
kcharge[27] = 0;// NH2
kcharge[28] = 0;// NH
kcharge[29] = 0;// CN
kcharge[30] = 0;// NCO
kcharge[31] = 0;// NCCN
kcharge[32] = 0;// HOCN
kcharge[33] = 0;// HCNO
kcharge[34] = 0;// NCN
kcharge[35] = 0;// HE
kcharge[36] = 0;// HNO2
kcharge[37] = 0;// N2O4
kcharge[38] = 0;// N2O3
kcharge[39] = 0;// CH
kcharge[40] = 0;// H2CN
kcharge[41] = 0;// HCNH
kcharge[42] = 0;// HNOH
kcharge[43] = 0;// NO3
kcharge[44] = 0;// HONO2
kcharge[45] = 0;// N2
kcharge[46] = 0;// CH4
kcharge[47] = 0;// C2H6
kcharge[48] = 0;// N2H4
kcharge[49] = 0;// N2H3
kcharge[50] = 0;// N2H2
kcharge[51] = 0;// H2NN
}

//  species charge per unit mass 
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRGMASS(amrex::Real * zk)
{
amrex::Real imw[52];
get_imw(imw);

int kchrg[52];
CKCHRG(kchrg);

for (int id = 0; id < 52; ++id) {
zk[id] = 6.02214076e+23 * 1.60217663e-19 * kchrg[id] * imw[id];
}
}

// compute d(Cp/R)/dT and d(Cv/R)/dT at the given temperature
// tc contains precomputed powers of T, tc[0] = log(T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void dcvpRdT(amrex::Real * species, const amrex::Real *  tc)
{

// temperature
const amrex::Real T = tc[1];

// species with midpoint at T=1000 kelvin
if (T < 1000) {
// species 0: OH*
species[0] =
+1.85091000e-04
-3.35232920e-06 * tc[1]
+7.16160600e-09 * tc[2]
-3.37257680e-12 * tc[3];
// species 1: HCN
species[1] =
+9.03185600e-03
-2.21545400e-05 * tc[1]
+2.39404230e-08 * tc[2]
-9.24456400e-12 * tc[3];
// species 2: HNCO
species[2] =
+6.26365800e-03
+6.25153600e-06 * tc[1]
-2.58756000e-08 * tc[2]
+1.56534880e-11 * tc[3];
// species 3: NO
species[3] =
+1.25306300e-03
-6.60550200e-06 * tc[1]
+1.56534300e-08 * tc[2]
-9.78505200e-12 * tc[3];
// species 4: N2O
species[4] =
+9.49219300e-03
-1.95855500e-05 * tc[1]
+1.87915350e-08 * tc[2]
-7.60730400e-12 * tc[3];
// species 5: CO
species[5] =
-6.10353690e-04
+2.03362860e-06 * tc[1]
+2.72101758e-09 * tc[2]
-3.61769796e-12 * tc[3];
// species 6: CO2
species[6] =
+8.98412990e-03
-1.42441264e-05 * tc[1]
+7.37190240e-09 * tc[2]
-5.71541920e-13 * tc[3];
// species 8: O2
species[8] =
-2.99673416e-03
+1.96946040e-05 * tc[1]
-2.90438853e-08 * tc[2]
+1.29749135e-11 * tc[3];
// species 9: H2
species[9] =
+7.98052075e-03
-3.89563020e-05 * tc[1]
+6.04716282e-08 * tc[2]
-2.95044704e-11 * tc[3];
// species 10: AR
species[10] =
+0.00000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3];
// species 11: H
species[11] =
+0.00000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3];
// species 12: O
species[12] =
-3.27931884e-03
+1.32861279e-05 * tc[1]
-1.83841987e-08 * tc[2]
+8.45063884e-12 * tc[3];
// species 13: OH
species[13] =
-2.40106655e-03
+9.23328066e-06 * tc[1]
-1.16374892e-08 * tc[2]
+5.45278008e-12 * tc[3];
// species 14: HO2
species[14] =
-4.74912097e-03
+4.23165810e-05 * tc[1]
-7.28291742e-08 * tc[2]
+3.71690090e-11 * tc[3];
// species 15: H2O
species[15] =
-2.03640170e-03
+1.30406832e-05 * tc[1]
-1.64637807e-08 * tc[2]
+7.08787200e-12 * tc[3];
// species 16: H2O2
species[16] =
-8.47390622e-04
+3.52808646e-05 * tc[1]
-6.80288832e-08 * tc[2]
+3.63580063e-11 * tc[3];
// species 17: HCO
species[17] =
-3.32075257e-03
+2.80060528e-05 * tc[1]
-4.02719985e-08 * tc[2]
+1.74966483e-11 * tc[3];
// species 18: CH2O
species[18] =
-9.90833322e-03
+7.46439980e-05 * tc[1]
-1.13785571e-07 * tc[2]
+5.27090564e-11 * tc[3];
// species 19: NO2
species[19] =
+7.83850100e-03
-1.61277300e-05 * tc[1]
+1.84851450e-08 * tc[2]
-9.28060000e-12 * tc[3];
// species 20: NH3
species[20] =
+1.01147600e-02
-2.93053000e-05 * tc[1]
+4.34170500e-08 * tc[2]
-2.13140360e-11 * tc[3];
// species 21: HNO
species[21] =
+6.60964600e-03
-1.86004460e-05 * tc[1]
+2.83139400e-08 * tc[2]
-1.50125840e-11 * tc[3];
// species 23: HONO
species[23] =
+1.40992200e-02
-2.73574400e-05 * tc[1]
+2.24963400e-08 * tc[2]
-7.50762000e-12 * tc[3];
// species 25: N
species[25] =
-2.18001800e-05
+1.08410580e-07 * tc[1]
-1.69426800e-10 * tc[2]
+8.39961600e-14 * tc[3];
// species 26: NNH
species[26] =
+2.05358700e-03
+1.43408200e-06 * tc[1]
+1.47640440e-09 * tc[2]
-3.86846800e-12 * tc[3];
// species 27: NH2
species[27] =
+3.29954000e-03
-1.32272000e-05 * tc[1]
+2.57728410e-08 * tc[2]
-1.42881880e-11 * tc[3];
// species 28: NH
species[28] =
+3.11791970e-04
-2.97809680e-06 * tc[1]
+7.44493260e-09 * tc[2]
-4.14278680e-12 * tc[3];
// species 29: CN
species[29] =
-9.53015376e-04
+4.27514296e-06 * tc[1]
-9.15000324e-10 * tc[2]
-1.88207560e-12 * tc[3];
// species 30: NCO
species[30] =
-3.29807700e-03
+4.39263800e-05 * tc[1]
-7.99684200e-08 * tc[2]
+4.10767600e-11 * tc[3];
// species 31: NCCN
species[31] =
+1.19225700e-02
-2.68402800e-05 * tc[1]
+2.75769000e-08 * tc[2]
-1.11157600e-11 * tc[3];
// species 32: HOCN
species[32] =
-1.22497600e-03
+3.15381400e-05 * tc[1]
-5.53423200e-08 * tc[2]
+2.73627600e-11 * tc[3];
// species 33: HCNO
species[33] =
+1.48135600e-02
-2.73759600e-05 * tc[1]
+1.81407150e-08 * tc[2]
-3.50823640e-12 * tc[3];
// species 35: HE
species[35] =
+0.00000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3];
// species 37: N2O4
species[37] =
+2.47470800e-02
-4.34575000e-05 * tc[1]
+2.97813120e-08 * tc[2]
-8.89126800e-12 * tc[3];
// species 38: N2O3
species[38] =
+1.43330962e-02
-3.92417194e-05 * tc[1]
+5.19182205e-08 * tc[2]
-2.58621582e-11 * tc[3];
// species 39: CH
species[39] =
+3.24321600e-04
-3.37995020e-06 * tc[1]
+9.48852600e-09 * tc[2]
-5.62472120e-12 * tc[3];
// species 40: H2CN
species[40] =
+5.69523300e-03
+2.14228000e-06 * tc[1]
-4.86783600e-09 * tc[2]
-9.40443200e-13 * tc[3];
// species 41: HCNH
species[41] =
+6.10338700e-03
+1.54262980e-06 * tc[1]
-6.18928200e-09 * tc[2]
+7.72768000e-13 * tc[3];
// species 43: NO3
species[43] =
+1.87879700e-02
-2.68864200e-05 * tc[1]
+3.82380300e-09 * tc[2]
+5.41624000e-12 * tc[3];
// species 45: N2
species[45] =
-1.23660988e-04
-1.00599887e-06 * tc[1]
+7.30591836e-09 * tc[2]
-5.63524940e-12 * tc[3];
// species 46: CH4
species[46] =
-1.36622009e-02
+9.82907842e-05 * tc[1]
-1.45274030e-07 * tc[2]
+6.66413764e-11 * tc[3];
// species 47: C2H6
species[47] =
-5.50154901e-03
+1.19887692e-04 * tc[1]
-2.12539941e-07 * tc[2]
+1.07474334e-10 * tc[3];
// species 48: N2H4
species[48] =
+2.74973000e-02
-5.79890200e-05 * tc[1]
+5.23572000e-08 * tc[2]
-1.76891280e-11 * tc[3];
// species 49: N2H3
species[49] =
+4.71590700e-03
+2.66973400e-05 * tc[1]
-5.75905500e-08 * tc[2]
+2.99502560e-11 * tc[3];
// species 50: N2H2
species[50] =
+1.30631200e-02
-3.43142400e-05 * tc[1]
+4.81682400e-08 * tc[2]
-2.43745560e-11 * tc[3];
} else {
// species 0: OH*
species[0] =
+1.01397430e-03
-4.55375400e-07 * tc[1]
+6.52404900e-11 * tc[2]
-2.05052200e-15 * tc[3];
// species 1: HCN
species[1] =
+3.92419000e-03
-3.20227600e-06 * tc[1]
+9.48589800e-10 * tc[2]
-9.73140000e-14 * tc[3];
// species 2: HNCO
species[2] =
+4.21433700e-03
-3.29478600e-06 * tc[1]
+9.05526600e-10 * tc[2]
-8.33792000e-14 * tc[3];
// species 3: NO
species[3] =
+1.26913800e-03
-1.00317800e-06 * tc[1]
+2.75078490e-10 * tc[2]
-2.51016760e-14 * tc[3];
// species 4: N2O
species[4] =
+2.87371400e-03
-2.39499200e-06 * tc[1]
+6.75165600e-10 * tc[2]
-6.30134800e-14 * tc[3];
// species 5: CO
species[5] =
+1.35172810e-03
-9.71588100e-07 * tc[1]
+2.36560932e-10 * tc[2]
-1.87922984e-14 * tc[3];
// species 6: CO2
species[6] =
+2.74145690e-03
-1.99179518e-06 * tc[1]
+4.81159980e-10 * tc[2]
-3.66479428e-14 * tc[3];
// species 8: O2
species[8] =
+6.56365811e-04
-2.82299254e-07 * tc[1]
+6.17393805e-11 * tc[2]
-5.19653744e-15 * tc[3];
// species 9: H2
species[9] =
+8.26608026e-04
-2.92804728e-07 * tc[1]
+4.62301242e-11 * tc[2]
-2.75521920e-15 * tc[3];
// species 10: AR
species[10] =
+0.00000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3];
// species 11: H
species[11] =
+0.00000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3];
// species 12: O
species[12] =
-2.73162486e-05
-8.38059040e-09 * tc[1]
+1.48644553e-11 * tc[2]
-1.91821478e-15 * tc[3];
// species 13: OH
species[13] =
+1.10741289e-03
-5.88000418e-07 * tc[1]
+1.26209619e-10 * tc[2]
-9.69159560e-15 * tc[3];
// species 14: HO2
species[14] =
+1.88117627e-03
-6.92554572e-07 * tc[1]
+5.83972647e-11 * tc[2]
+7.05027620e-16 * tc[3];
// species 15: H2O
species[15] =
+2.97318160e-03
-1.54753778e-06 * tc[1]
+2.83300542e-10 * tc[2]
-1.70759964e-14 * tc[3];
// species 16: H2O2
species[16] =
+4.05326003e-03
-2.59689460e-06 * tc[1]
+5.94634200e-10 * tc[2]
-4.55875168e-14 * tc[3];
// species 17: HCO
species[17] =
+2.52279324e-03
-1.34200833e-06 * tc[1]
+3.16847844e-10 * tc[2]
-2.97519304e-14 * tc[3];
// species 18: CH2O
species[18] =
+6.19320560e-03
-4.50112732e-06 * tc[1]
+1.09792698e-09 * tc[2]
-8.80597832e-14 * tc[3];
// species 19: NO2
species[19] =
+2.46242900e-03
-2.08451800e-06 * tc[1]
+5.93070600e-10 * tc[2]
-5.56686800e-14 * tc[3];
// species 20: NH3
species[20] =
+6.05916600e-03
-4.00995400e-06 * tc[1]
+9.40800900e-10 * tc[2]
-7.75326800e-14 * tc[3];
// species 21: HNO
species[21] =
+3.21248600e-03
-2.52067400e-06 * tc[1]
+6.80189400e-10 * tc[2]
-6.14494400e-14 * tc[3];
// species 23: HONO
species[23] =
+4.21806500e-03
-3.29828600e-06 * tc[1]
+8.91563100e-10 * tc[2]
-8.08459200e-14 * tc[3];
// species 25: N
species[25] =
+1.06614600e-04
-1.49306740e-07 * tc[1]
+5.63895600e-11 * tc[2]
-4.10393600e-15 * tc[3];
// species 26: NNH
species[26] =
+1.61438800e-03
-3.26578800e-07 * tc[1]
-2.56795380e-10 * tc[2]
+6.45916400e-14 * tc[3];
// species 27: NH2
species[27] =
+2.93269900e-03
-1.81272000e-06 * tc[1]
+4.85177100e-10 * tc[2]
-4.81680000e-14 * tc[3];
// species 28: NH
species[28] =
+1.32984290e-03
-8.49560940e-07 * tc[1]
+2.35045512e-10 * tc[2]
-2.20177880e-14 * tc[3];
// species 29: CN
species[29] =
+7.46548271e-04
-2.82987274e-07 * tc[1]
+5.60241783e-11 * tc[2]
-5.04128696e-15 * tc[3];
// species 30: NCO
species[30] =
+2.53796600e-03
-2.18961600e-06 * tc[1]
+6.33896100e-10 * tc[2]
-6.02246800e-14 * tc[3];
// species 31: NCCN
species[31] =
+3.98471000e-03
-3.26844000e-06 * tc[1]
+9.11580000e-10 * tc[2]
-8.44400000e-14 * tc[3];
// species 32: HOCN
species[32] =
+4.19183700e-03
-3.23984800e-06 * tc[1]
+8.83086600e-10 * tc[2]
-8.08567600e-14 * tc[3];
// species 33: HCNO
species[33] =
+4.05933300e-03
-3.17755400e-06 * tc[1]
+8.76144300e-10 * tc[2]
-8.09222800e-14 * tc[3];
// species 35: HE
species[35] =
+0.00000000e+00
+0.00000000e+00 * tc[1]
+0.00000000e+00 * tc[2]
+0.00000000e+00 * tc[3];
// species 37: N2O4
species[37] =
+5.97227200e-03
-5.12808800e-06 * tc[1]
+1.47506550e-09 * tc[2]
-1.39638760e-13 * tc[3];
// species 38: N2O3
species[38] =
+3.37756330e-03
-2.63167780e-06 * tc[1]
+6.92286987e-10 * tc[2]
-5.88605068e-14 * tc[3];
// species 39: CH
species[39] =
+1.76536390e-03
-9.22953200e-07 * tc[1]
+1.77869025e-10 * tc[2]
-1.33898004e-14 * tc[3];
// species 40: H2CN
species[40] =
+2.96929100e-03
-5.71117800e-07 * tc[1]
-4.90665000e-10 * tc[2]
+1.21730360e-13 * tc[3];
// species 41: HCNH
species[41] =
+3.33289700e-03
-6.74179400e-07 * tc[1]
-5.70485700e-10 * tc[2]
+1.41273000e-13 * tc[3];
// species 43: NO3
species[43] =
+3.24622800e-03
-2.86322600e-06 * tc[1]
+8.39115900e-10 * tc[2]
-8.05203200e-14 * tc[3];
// species 45: N2
species[45] =
+1.39690040e-03
-9.85263206e-07 * tc[1]
+2.35803059e-10 * tc[2]
-1.84302082e-14 * tc[3];
// species 46: CH4
species[46] =
+1.00263099e-02
-6.63322476e-06 * tc[1]
+1.60944941e-09 * tc[2]
-1.25878703e-13 * tc[3];
// species 47: C2H6
species[47] =
+1.53538802e-02
-1.09407897e-05 * tc[1]
+2.63347963e-09 * tc[2]
-2.09267012e-13 * tc[3];
// species 48: N2H4
species[48] =
+9.59551900e-03
-7.09527800e-06 * tc[1]
+1.83728970e-09 * tc[2]
-1.61191800e-13 * tc[3];
// species 49: N2H3
species[49] =
+7.21427100e-03
-4.99136800e-06 * tc[1]
+1.17616950e-09 * tc[2]
-9.19580000e-14 * tc[3];
// species 50: N2H2
species[50] =
+6.03996800e-03
-4.60770800e-06 * tc[1]
+1.21883670e-09 * tc[2]
-1.08525760e-13 * tc[3];
}

// species with midpoint at T=1500 kelvin
if (T < 1500) {
// species 7: HNC
species[7] =
+5.56134000e-03
-1.18736460e-05 * tc[1]
+1.13469870e-08 * tc[2]
-3.74603680e-12 * tc[3];
// species 24: H2NO
species[24] =
+8.59603500e-03
-1.09420600e-05 * tc[1]
+6.82874700e-09 * tc[2]
-1.85922920e-12 * tc[3];
// species 34: NCN
species[34] =
+9.98167400e-03
-1.98414020e-05 * tc[1]
+1.42767570e-08 * tc[2]
-3.58745040e-12 * tc[3];
// species 36: HNO2
species[36] =
+1.01003600e-02
-9.92923200e-06 * tc[1]
+2.61033600e-09 * tc[2]
-9.29654000e-15 * tc[3];
// species 42: HNOH
species[42] =
+1.06628200e-02
-1.52051780e-05 * tc[1]
+9.24492600e-09 * tc[2]
-2.29059920e-12 * tc[3];
// species 44: HONO2
species[44] =
+2.38232900e-02
-4.41192800e-05 * tc[1]
+3.10214400e-08 * tc[2]
-7.89142800e-12 * tc[3];
} else {
// species 7: HNC
species[7] =
+1.09247600e-03
-2.34173000e-07 * tc[1]
-6.92601600e-11 * tc[2]
+1.58026920e-14 * tc[3];
// species 24: H2NO
species[24] =
+2.29883700e-03
-3.54889200e-07 * tc[1]
-3.31044600e-10 * tc[2]
+7.43904800e-14 * tc[3];
// species 34: NCN
species[34] =
+6.10803400e-04
-2.77945400e-07 * tc[1]
+8.08664700e-12 * tc[2]
+6.67977600e-15 * tc[3];
// species 36: HNO2
species[36] =
+1.99527400e-03
-3.48077400e-07 * tc[1]
-2.90876160e-10 * tc[2]
+6.80592000e-14 * tc[3];
// species 42: HNOH
species[42] =
+1.82106700e-03
-3.74178400e-07 * tc[1]
-2.35334160e-10 * tc[2]
+5.77942000e-14 * tc[3];
// species 44: HONO2
species[44] =
+1.90094800e-03
-6.48004000e-07 * tc[1]
-1.19299170e-10 * tc[2]
+4.40133600e-14 * tc[3];
}

// species with midpoint at T=1671 kelvin
if (T < 1671) {
// species 22: HON
species[22] =
+2.67682939e-03
+1.12360261e-06 * tc[1]
-3.34086837e-09 * tc[2]
+1.13630575e-12 * tc[3];
} else {
// species 22: HON
species[22] =
+2.86062728e-03
-2.04847844e-06 * tc[1]
+4.93389417e-10 * tc[2]
-3.91177446e-14 * tc[3];
}

// species with midpoint at T=1695 kelvin
if (T < 1695) {
// species 51: H2NN
species[51] =
+4.69495999e-03
+1.40396646e-06 * tc[1]
-4.60077114e-09 * tc[2]
+1.51738343e-12 * tc[3];
} else {
// species 51: H2NN
species[51] =
+5.68632569e-03
-3.87966934e-06 * tc[1]
+9.03871503e-10 * tc[2]
-6.99912576e-14 * tc[3];
}
return;
}

// compute an approx to the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void aJacobian_precond(amrex::Real *  J, amrex::Real *  sc, amrex::Real T, const int HP)
{

for (int i=0; i<2809; i++) {
J[i] = 0.0;
}

amrex::Real wdot[52];
for (int k=0; k<52; k++) {
wdot[k] = 0.0;
}

const amrex::Real tc[5] = { log(T), T, T*T, T*T*T, T*T*T*T };// temperature cache
amrex::Real invT = 1.0 / tc[1];
amrex::Real invT2 = invT * invT;

// reference concentration: P_atm / (RT) in inverse mol/m^3
amrex::Real refC = 101325 / 8.31446 / T;
amrex::Real refCinv = 1.0 / refC;

// compute the mixture concentration
amrex::Real mixture = 0.0;
for (int k = 0; k < 52; ++k) {
mixture += sc[k];
}

// compute the Gibbs free energy
amrex::Real g_RT[52];
gibbs(g_RT, tc);

// compute the species enthalpy
amrex::Real h_RT[52];
speciesEnthalpy(h_RT, tc);

amrex::Real phi_f, k_f, k_r, phi_r, Kc, q, q_nocor, Corr, alpha;
amrex::Real dlnkfdT, dlnk0dT, dlnKcdT, dkrdT, dqdT;
amrex::Real dqdci, dcdc_fac, dqdc[52];
amrex::Real Pr, fPr, F, k_0, logPr;
amrex::Real logFcent, troe_c, troe_n, troePr_den, troePr, troe;
amrex::Real Fcent1, Fcent2, Fcent3, Fcent;
amrex::Real dlogFdc, dlogFdn, dlogFdcn_fac;
amrex::Real dlogPrdT, dlogfPrdT, dlogFdT, dlogFcentdT, dlogFdlogPr, dlnCorrdT;
const amrex::Real ln10 = log(10.0);
const amrex::Real log10e = 1.0/log(10.0);
// reaction 1: H + NO (+M) <=> HNO (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture;
// forward
phi_f = sc[3]*sc[11];
k_f = 1500000000
            * exp(-0.4 * tc[0]);
dlnkfdT = -0.4 * invT;
// pressure-fall-off
k_0 = 240000000000000 * exp(0.206 * tc[0] - (-779.985831997315) * invT);
Pr = 1e-12 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = 0.206 * invT + (-779.985831997315) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Troe form
logPr = log10(Pr);
Fcent1 = (1.-0.82)*exp(-T/1e-30);
Fcent2 = 0.82 * exp(-T/1e+30);
Fcent3 = exp(-1e+30 * invT);
Fcent = Fcent1 + Fcent2 + Fcent3;
logFcent = log10(Fcent);
troe_c = -.4 - .67 * logFcent;
troe_n = .75 - 1.27 * logFcent;
troePr_den = 1.0 / (troe_n - .14*(troe_c + logPr));
troePr = (troe_c + logPr) * troePr_den;
troe = 1.0 / (1.0 + troePr*troePr);
F = exp(M_LN10 * logFcent * troe);
dlogFcentdT = log10e/Fcent*( 
    -Fcent1/1e-30
    -Fcent2/1e+30
    + Fcent3*1e+30*invT2
);
dlogFdcn_fac = 2.0 * logFcent * troe*troe * troePr * troePr_den;
dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
dlogFdn = dlogFdcn_fac * troePr;
dlogFdlogPr = dlogFdc;
dlogFdT = dlogFcentdT*(troe - 0.67*dlogFdc - 1.27*dlogFdn) + dlogFdlogPr * dlogPrdT;
// reverse
phi_r = sc[21];
Kc = refCinv * exp(g_RT[3] + g_RT[11] - g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[11]) + (h_RT[21]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[3] -= q;// NO
wdot[11] -= q;// H
wdot[21] += q;// HNO
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = 0.0;
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac + k_f*sc[11];
dqdc[4] = dcdc_fac;
dqdc[5] = dcdc_fac;
dqdc[6] = dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = dcdc_fac;
dqdc[9] = dcdc_fac;
dqdc[10] = dcdc_fac;
dqdc[11] = dcdc_fac + k_f*sc[3];
dqdc[12] = dcdc_fac;
dqdc[13] = dcdc_fac;
dqdc[14] = dcdc_fac;
dqdc[15] = dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac;
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac - k_r;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+3] -= dqdc[k];
J[53*k+11] -= dqdc[k];
J[53*k+21] += dqdc[k];
}
J[2759] -= dqdT;// dwdot[NO]/dT
J[2767] -= dqdT;// dwdot[H]/dT
J[2777] += dqdT;// dwdot[HNO]/dT

// reaction 13: H + O2 (+M) <=> HO2 (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.9 - 1)*sc[5] + ( 3.8 - 1)*sc[6] + ( 1.3 - 1)*sc[9] + ( 0 - 1)*sc[10] + ( 10 - 1)*sc[15] + ( 0 - 1)*sc[35] + sc[46] + ( 3 - 1)*sc[47];
// forward
phi_f = sc[8]*sc[11];
k_f = 4650000
            * exp(0.44 * tc[0]);
dlnkfdT = 0.44 * invT;
// pressure-fall-off
k_0 = 1.737e+19 * exp(-1.23 * tc[0]);
Pr = 1e-12 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -1.23 * invT;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Troe form
logPr = log10(Pr);
Fcent1 = (1.-0.67)*exp(-T/1e-30);
Fcent2 = 0.67 * exp(-T/1e+30);
Fcent3 = exp(-1e+30 * invT);
Fcent = Fcent1 + Fcent2 + Fcent3;
logFcent = log10(Fcent);
troe_c = -.4 - .67 * logFcent;
troe_n = .75 - 1.27 * logFcent;
troePr_den = 1.0 / (troe_n - .14*(troe_c + logPr));
troePr = (troe_c + logPr) * troePr_den;
troe = 1.0 / (1.0 + troePr*troePr);
F = exp(M_LN10 * logFcent * troe);
dlogFcentdT = log10e/Fcent*( 
    -Fcent1/1e-30
    -Fcent2/1e+30
    + Fcent3*1e+30*invT2
);
dlogFdcn_fac = 2.0 * logFcent * troe*troe * troePr * troePr_den;
dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
dlogFdn = dlogFdcn_fac * troePr;
dlogFdlogPr = dlogFdc;
dlogFdT = dlogFcentdT*(troe - 0.67*dlogFdc - 1.27*dlogFdn) + dlogFdlogPr * dlogPrdT;
// reverse
phi_r = sc[14];
Kc = refCinv * exp(g_RT[8] + g_RT[11] - g_RT[14]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[11]) + (h_RT[14]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[8] -= q;// O2
wdot[11] -= q;// H
wdot[14] += q;// HO2
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = 0.0;
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac;
dqdc[4] = dcdc_fac;
dqdc[5] = 1.9*dcdc_fac;
dqdc[6] = 3.8*dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = dcdc_fac + k_f*sc[11];
dqdc[9] = 1.3*dcdc_fac;
dqdc[10] = 0.0;
dqdc[11] = dcdc_fac + k_f*sc[8];
dqdc[12] = dcdc_fac;
dqdc[13] = dcdc_fac;
dqdc[14] = dcdc_fac - k_r;
dqdc[15] = 10*dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac;
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = 0.0;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = dcdc_fac;
dqdc[46] = 2*dcdc_fac;
dqdc[47] = 3*dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+8] -= dqdc[k];
J[53*k+11] -= dqdc[k];
J[53*k+14] += dqdc[k];
}
J[2764] -= dqdT;// dwdot[O2]/dT
J[2767] -= dqdT;// dwdot[H]/dT
J[2770] += dqdT;// dwdot[HO2]/dT

// reaction 14: H + O2 (+AR) <=> HO2 (+AR)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture;
// forward
phi_f = sc[8]*sc[10]*sc[11];
k_f = 4650000
            * exp(0.44 * tc[0]);
dlnkfdT = 0.44 * invT;
// pressure-fall-off
k_0 = 6.81e+18 * exp(-1.2 * tc[0]);
Pr = 1e-12 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -1.2 * invT;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Troe form
logPr = log10(Pr);
Fcent1 = (1.-0.7)*exp(-T/1e-30);
Fcent2 = 0.7 * exp(-T/1e+30);
Fcent3 = exp(-1e+30 * invT);
Fcent = Fcent1 + Fcent2 + Fcent3;
logFcent = log10(Fcent);
troe_c = -.4 - .67 * logFcent;
troe_n = .75 - 1.27 * logFcent;
troePr_den = 1.0 / (troe_n - .14*(troe_c + logPr));
troePr = (troe_c + logPr) * troePr_den;
troe = 1.0 / (1.0 + troePr*troePr);
F = exp(M_LN10 * logFcent * troe);
dlogFcentdT = log10e/Fcent*( 
    -Fcent1/1e-30
    -Fcent2/1e+30
    + Fcent3*1e+30*invT2
);
dlogFdcn_fac = 2.0 * logFcent * troe*troe * troePr * troePr_den;
dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
dlogFdn = dlogFdcn_fac * troePr;
dlogFdlogPr = dlogFdc;
dlogFdT = dlogFcentdT*(troe - 0.67*dlogFdc - 1.27*dlogFdn) + dlogFdlogPr * dlogPrdT;
// reverse
phi_r = sc[10]*sc[14];
Kc = refCinv * exp(g_RT[8] + g_RT[11] - g_RT[14]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[10] + h_RT[11]) + (h_RT[10] + h_RT[14]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[8] -= q;// O2
wdot[11] -= q;// H
wdot[14] += q;// HO2
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = 0.0;
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac;
dqdc[4] = dcdc_fac;
dqdc[5] = dcdc_fac;
dqdc[6] = dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = dcdc_fac + k_f*sc[10]*sc[11];
dqdc[9] = dcdc_fac;
dqdc[10] = dcdc_fac + k_f*sc[8]*sc[11] - k_r*sc[14];
dqdc[11] = dcdc_fac + k_f*sc[8]*sc[10];
dqdc[12] = dcdc_fac;
dqdc[13] = dcdc_fac;
dqdc[14] = dcdc_fac - k_r*sc[10];
dqdc[15] = dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac;
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+8] -= dqdc[k];
J[53*k+11] -= dqdc[k];
J[53*k+14] += dqdc[k];
}
J[2764] -= dqdT;// dwdot[O2]/dT
J[2767] -= dqdT;// dwdot[H]/dT
J[2770] += dqdT;// dwdot[HO2]/dT

// reaction 21: H2O2 (+H2O) <=> 2 OH (+H2O)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture;
// forward
phi_f = sc[15]*sc[16];
k_f = 2000000000000
            * exp(0.9 * tc[0] - (24531.8124579801) * invT);
dlnkfdT = 0.9 * invT + (24531.8124579801) * invT2;
// pressure-fall-off
k_0 = 1.865e+25 * exp(-2.3 * tc[0] - (24531.8124579801) * invT);
Pr = 1e-6 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -2.3 * invT + (24531.8124579801) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Troe form
logPr = log10(Pr);
Fcent1 = (1.-0.51)*exp(-T/1e-30);
Fcent2 = 0.51 * exp(-T/1e+30);
Fcent3 = 0.;
Fcent = Fcent1 + Fcent2 + Fcent3;
logFcent = log10(Fcent);
troe_c = -.4 - .67 * logFcent;
troe_n = .75 - 1.27 * logFcent;
troePr_den = 1.0 / (troe_n - .14*(troe_c + logPr));
troePr = (troe_c + logPr) * troePr_den;
troe = 1.0 / (1.0 + troePr*troePr);
F = exp(M_LN10 * logFcent * troe);
dlogFcentdT = log10e/Fcent*( 
    -Fcent1/1e-30
    -Fcent2/1e+30
);
dlogFdcn_fac = 2.0 * logFcent * troe*troe * troePr * troePr_den;
dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
dlogFdn = dlogFdcn_fac * troePr;
dlogFdlogPr = dlogFdc;
dlogFdT = dlogFcentdT*(troe - 0.67*dlogFdc - 1.27*dlogFdn) + dlogFdlogPr * dlogPrdT;
// reverse
phi_r = (sc[13] * sc[13])*sc[15];
Kc = refC * exp(-2.000000*g_RT[13] + g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[15] + h_RT[16]) + (2.000000*h_RT[13] + h_RT[15]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[13] += 2 * q;// OH
wdot[16] -= q;// H2O2
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = 0.0;
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac;
dqdc[4] = dcdc_fac;
dqdc[5] = dcdc_fac;
dqdc[6] = dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = dcdc_fac;
dqdc[9] = dcdc_fac;
dqdc[10] = dcdc_fac;
dqdc[11] = dcdc_fac;
dqdc[12] = dcdc_fac;
dqdc[13] = dcdc_fac - k_r*2.000000*sc[13]*sc[15];
dqdc[14] = dcdc_fac;
dqdc[15] = dcdc_fac + k_f*sc[16] - k_r*sc[13]*sc[13];
dqdc[16] = dcdc_fac + k_f*sc[15];
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac;
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+13] += 2 * dqdc[k];
J[53*k+16] -= dqdc[k];
}
J[2769] += 2 * dqdT;// dwdot[OH]/dT
J[2772] -= dqdT;// dwdot[H2O2]/dT

// reaction 22: H2O2 (+M) <=> 2 OH (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 2.8 - 1)*sc[5] + ( 1.6 - 1)*sc[6] + ( 1.2 - 1)*sc[8] + ( 3.7 - 1)*sc[9] + ( 0 - 1)*sc[15] + ( 7.7 - 1)*sc[16] + ( 0.65 - 1)*sc[35] + ( 1.5 - 1)*sc[45];
// forward
phi_f = sc[16];
k_f = 2000000000000
            * exp(0.9 * tc[0] - (24531.8124579801) * invT);
dlnkfdT = 0.9 * invT + (24531.8124579801) * invT2;
// pressure-fall-off
k_0 = 2.49e+24 * exp(-2.3 * tc[0] - (24531.8124579801) * invT);
Pr = 1e-6 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -2.3 * invT + (24531.8124579801) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Troe form
logPr = log10(Pr);
Fcent1 = (1.-0.43)*exp(-T/1e-30);
Fcent2 = 0.43 * exp(-T/1e+30);
Fcent3 = 0.;
Fcent = Fcent1 + Fcent2 + Fcent3;
logFcent = log10(Fcent);
troe_c = -.4 - .67 * logFcent;
troe_n = .75 - 1.27 * logFcent;
troePr_den = 1.0 / (troe_n - .14*(troe_c + logPr));
troePr = (troe_c + logPr) * troePr_den;
troe = 1.0 / (1.0 + troePr*troePr);
F = exp(M_LN10 * logFcent * troe);
dlogFcentdT = log10e/Fcent*( 
    -Fcent1/1e-30
    -Fcent2/1e+30
);
dlogFdcn_fac = 2.0 * logFcent * troe*troe * troePr * troePr_den;
dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
dlogFdn = dlogFdcn_fac * troePr;
dlogFdlogPr = dlogFdc;
dlogFdT = dlogFcentdT*(troe - 0.67*dlogFdc - 1.27*dlogFdn) + dlogFdlogPr * dlogPrdT;
// reverse
phi_r = (sc[13] * sc[13]);
Kc = refC * exp(-2.000000*g_RT[13] + g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[16]) + (2.000000*h_RT[13]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[13] += 2 * q;// OH
wdot[16] -= q;// H2O2
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = 0.0;
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac;
dqdc[4] = dcdc_fac;
dqdc[5] = 2.8*dcdc_fac;
dqdc[6] = 1.6*dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = 1.2*dcdc_fac;
dqdc[9] = 3.7*dcdc_fac;
dqdc[10] = dcdc_fac;
dqdc[11] = dcdc_fac;
dqdc[12] = dcdc_fac;
dqdc[13] = dcdc_fac - k_r*2.000000*sc[13];
dqdc[14] = dcdc_fac;
dqdc[15] = 0.0;
dqdc[16] = 7.7*dcdc_fac + k_f;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac;
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = 0.65*dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = 1.5*dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+13] += 2 * dqdc[k];
J[53*k+16] -= dqdc[k];
}
J[2769] += 2 * dqdT;// dwdot[OH]/dT
J[2772] -= dqdT;// dwdot[H2O2]/dT

// reaction 236: NO + OH (+M) <=> HONO (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + sc[8] + sc[9] + ( 10 - 1)*sc[15];
// forward
phi_f = sc[3]*sc[13];
k_f = 1990000
            * exp(-0.05 * tc[0] - (-362.819216045203) * invT);
dlnkfdT = -0.05 * invT + (-362.819216045203) * invT2;
// pressure-fall-off
k_0 = 5.08e+23 * exp(-2.51 * tc[0] - (-34.017446608399) * invT);
Pr = 1e-12 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -2.51 * invT + (-34.017446608399) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Troe form
logPr = log10(Pr);
Fcent1 = (1.-0.62)*exp(-T/10);
Fcent2 = 0.62 * exp(-T/100000);
Fcent3 = 0.;
Fcent = Fcent1 + Fcent2 + Fcent3;
logFcent = log10(Fcent);
troe_c = -.4 - .67 * logFcent;
troe_n = .75 - 1.27 * logFcent;
troePr_den = 1.0 / (troe_n - .14*(troe_c + logPr));
troePr = (troe_c + logPr) * troePr_den;
troe = 1.0 / (1.0 + troePr*troePr);
F = exp(M_LN10 * logFcent * troe);
dlogFcentdT = log10e/Fcent*( 
    -Fcent1/10
    -Fcent2/100000
);
dlogFdcn_fac = 2.0 * logFcent * troe*troe * troePr * troePr_den;
dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
dlogFdn = dlogFdcn_fac * troePr;
dlogFdlogPr = dlogFdc;
dlogFdT = dlogFcentdT*(troe - 0.67*dlogFdc - 1.27*dlogFdn) + dlogFdlogPr * dlogPrdT;
// reverse
phi_r = sc[23];
Kc = refCinv * exp(g_RT[3] + g_RT[13] - g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[13]) + (h_RT[23]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[3] -= q;// NO
wdot[13] -= q;// OH
wdot[23] += q;// HONO
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = 0.0;
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac + k_f*sc[13];
dqdc[4] = dcdc_fac;
dqdc[5] = dcdc_fac;
dqdc[6] = dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = 2*dcdc_fac;
dqdc[9] = 2*dcdc_fac;
dqdc[10] = dcdc_fac;
dqdc[11] = dcdc_fac;
dqdc[12] = dcdc_fac;
dqdc[13] = dcdc_fac + k_f*sc[3];
dqdc[14] = dcdc_fac;
dqdc[15] = 10*dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac;
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac - k_r;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+3] -= dqdc[k];
J[53*k+13] -= dqdc[k];
J[53*k+23] += dqdc[k];
}
J[2759] -= dqdT;// dwdot[NO]/dT
J[2769] -= dqdT;// dwdot[OH]/dT
J[2779] += dqdT;// dwdot[HONO]/dT

// reaction 243: NO2 + OH (+M) <=> HONO2 (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture;
// forward
phi_f = sc[13]*sc[19];
k_f = 24100000
           ;
dlnkfdT = 0.0;
// pressure-fall-off
k_0 = 6.42e+32 * exp(-5.49 * tc[0] - (1183.5655979727) * invT);
Pr = 1e-12 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -5.49 * invT + (1183.5655979727) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Troe form
logPr = log10(Pr);
Fcent1 = (1.-0.525)*exp(-T/1e-15);
Fcent2 = 0.525 * exp(-T/1e-15);
Fcent3 = exp(-1e+15 * invT);
Fcent = Fcent1 + Fcent2 + Fcent3;
logFcent = log10(Fcent);
troe_c = -.4 - .67 * logFcent;
troe_n = .75 - 1.27 * logFcent;
troePr_den = 1.0 / (troe_n - .14*(troe_c + logPr));
troePr = (troe_c + logPr) * troePr_den;
troe = 1.0 / (1.0 + troePr*troePr);
F = exp(M_LN10 * logFcent * troe);
dlogFcentdT = log10e/Fcent*( 
    -Fcent1/1e-15
    -Fcent2/1e-15
    + Fcent3*1e+15*invT2
);
dlogFdcn_fac = 2.0 * logFcent * troe*troe * troePr * troePr_den;
dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
dlogFdn = dlogFdcn_fac * troePr;
dlogFdlogPr = dlogFdc;
dlogFdT = dlogFcentdT*(troe - 0.67*dlogFdc - 1.27*dlogFdn) + dlogFdlogPr * dlogPrdT;
// reverse
phi_r = sc[44];
Kc = refCinv * exp(g_RT[13] + g_RT[19] - g_RT[44]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[19]) + (h_RT[44]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[13] -= q;// OH
wdot[19] -= q;// NO2
wdot[44] += q;// HONO2
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = 0.0;
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac;
dqdc[4] = dcdc_fac;
dqdc[5] = dcdc_fac;
dqdc[6] = dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = dcdc_fac;
dqdc[9] = dcdc_fac;
dqdc[10] = dcdc_fac;
dqdc[11] = dcdc_fac;
dqdc[12] = dcdc_fac;
dqdc[13] = dcdc_fac + k_f*sc[19];
dqdc[14] = dcdc_fac;
dqdc[15] = dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac + k_f*sc[13];
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac - k_r;
dqdc[45] = dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+13] -= dqdc[k];
J[53*k+19] -= dqdc[k];
J[53*k+44] += dqdc[k];
}
J[2769] -= dqdT;// dwdot[OH]/dT
J[2775] -= dqdT;// dwdot[NO2]/dT
J[2800] += dqdT;// dwdot[HONO2]/dT

// reaction 28: CO + O (+M) <=> CO2 (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.75 - 1)*sc[5] + ( 3.6 - 1)*sc[6] + sc[9] + ( 0.7 - 1)*sc[10] + ( 12 - 1)*sc[15] + ( 0.7 - 1)*sc[35];
// forward
phi_f = sc[5]*sc[12];
k_f = 13620
            * exp(- (1199.66853127845) * invT);
dlnkfdT = (1199.66853127845) * invT2;
// pressure-fall-off
k_0 = 1.173e+24 * exp(-2.79 * tc[0] - (2108.98104638758) * invT);
Pr = 1e-12 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -2.79 * invT + (2108.98104638758) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Lindemann form
F = 1.0;
dlogFdlogPr = 0.0;
dlogFdT = 0.0;
// reverse
phi_r = sc[6];
Kc = refCinv * exp(g_RT[5] - g_RT[6] + g_RT[12]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[5] + h_RT[12]) + (h_RT[6]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[5] -= q;// CO
wdot[6] += q;// CO2
wdot[12] -= q;// O
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = 0.0;
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac;
dqdc[4] = dcdc_fac;
dqdc[5] = 1.75*dcdc_fac + k_f*sc[12];
dqdc[6] = 3.6*dcdc_fac - k_r;
dqdc[7] = dcdc_fac;
dqdc[8] = dcdc_fac;
dqdc[9] = 2*dcdc_fac;
dqdc[10] = 0.7*dcdc_fac;
dqdc[11] = dcdc_fac;
dqdc[12] = dcdc_fac + k_f*sc[5];
dqdc[13] = dcdc_fac;
dqdc[14] = dcdc_fac;
dqdc[15] = 12*dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac;
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = 0.7*dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+5] -= dqdc[k];
J[53*k+6] += dqdc[k];
J[53*k+12] -= dqdc[k];
}
J[2761] -= dqdT;// dwdot[CO]/dT
J[2762] += dqdT;// dwdot[CO2]/dT
J[2768] -= dqdT;// dwdot[O]/dT

// reaction 150: N2O (+M) <=> N2 + O (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 3 - 1)*sc[3] + ( 3.5 - 1)*sc[4] + ( 1.4 - 1)*sc[8] + ( 12 - 1)*sc[15] + ( 1.7 - 1)*sc[45];
// forward
phi_f = sc[4];
k_f = 99000000000
            * exp(- (29166.4379500416) * invT);
dlnkfdT = (29166.4379500416) * invT2;
// pressure-fall-off
k_0 = 662000000000000 * exp(-(28934.9582837714) * invT);
Pr = 1e-6 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = (28934.9582837714) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Lindemann form
F = 1.0;
dlogFdlogPr = 0.0;
dlogFdT = 0.0;
// reverse
phi_r = sc[12]*sc[45];
Kc = refC * exp(g_RT[4] - g_RT[12] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4]) + (h_RT[12] + h_RT[45]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[4] -= q;// N2O
wdot[12] += q;// O
wdot[45] += q;// N2
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = 0.0;
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = 3*dcdc_fac;
dqdc[4] = 3.5*dcdc_fac + k_f;
dqdc[5] = dcdc_fac;
dqdc[6] = dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = 1.4*dcdc_fac;
dqdc[9] = dcdc_fac;
dqdc[10] = dcdc_fac;
dqdc[11] = dcdc_fac;
dqdc[12] = dcdc_fac - k_r*sc[45];
dqdc[13] = dcdc_fac;
dqdc[14] = dcdc_fac;
dqdc[15] = 12*dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac;
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = 1.7*dcdc_fac - k_r*sc[12];
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+4] -= dqdc[k];
J[53*k+12] += dqdc[k];
J[53*k+45] += dqdc[k];
}
J[2760] -= dqdT;// dwdot[N2O]/dT
J[2768] += dqdT;// dwdot[O]/dT
J[2801] += dqdT;// dwdot[N2]/dT

// reaction 197: NO2 + O (+M) <=> NO3 (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.5 - 1)*sc[8] + ( 10 - 1)*sc[15] + ( 1.5 - 1)*sc[45];
// forward
phi_f = sc[12]*sc[19];
k_f = 13000000
           ;
dlnkfdT = 0.0;
// pressure-fall-off
k_0 = 1e+28 * exp(-4.08 * tc[0] - (1242.94516453766) * invT);
Pr = 1e-12 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -4.08 * invT + (1242.94516453766) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Lindemann form
F = 1.0;
dlogFdlogPr = 0.0;
dlogFdT = 0.0;
// reverse
phi_r = sc[43];
Kc = refCinv * exp(g_RT[12] + g_RT[19] - g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[19]) + (h_RT[43]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[12] -= q;// O
wdot[19] -= q;// NO2
wdot[43] += q;// NO3
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = 0.0;
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac;
dqdc[4] = dcdc_fac;
dqdc[5] = dcdc_fac;
dqdc[6] = dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = 1.5*dcdc_fac;
dqdc[9] = dcdc_fac;
dqdc[10] = dcdc_fac;
dqdc[11] = dcdc_fac;
dqdc[12] = dcdc_fac + k_f*sc[19];
dqdc[13] = dcdc_fac;
dqdc[14] = dcdc_fac;
dqdc[15] = 10*dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac + k_f*sc[12];
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac - k_r;
dqdc[44] = dcdc_fac;
dqdc[45] = 1.5*dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+12] -= dqdc[k];
J[53*k+19] -= dqdc[k];
J[53*k+43] += dqdc[k];
}
J[2768] -= dqdT;// dwdot[O]/dT
J[2775] -= dqdT;// dwdot[NO2]/dT
J[2799] += dqdT;// dwdot[NO3]/dT

// reaction 269: N2O4 (+M) <=> 2 NO2 (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 0.8 - 1)*sc[10] + sc[19] + sc[37];
// forward
phi_f = sc[37];
k_f = 4.05e+18
            * exp(-1.1 * tc[0] - (6461.3019889326) * invT);
dlnkfdT = -1.1 * invT + (6461.3019889326) * invT2;
// pressure-fall-off
k_0 = 1.96e+28 * exp(-3.8 * tc[0] - (6461.3019889326) * invT);
Pr = 1e-6 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -3.8 * invT + (6461.3019889326) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Lindemann form
F = 1.0;
dlogFdlogPr = 0.0;
dlogFdT = 0.0;
// reverse
phi_r = (sc[19] * sc[19]);
Kc = refC * exp(-2.000000*g_RT[19] + g_RT[37]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[37]) + (2.000000*h_RT[19]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[19] += 2 * q;// NO2
wdot[37] -= q;// N2O4
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = 0.0;
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac;
dqdc[4] = dcdc_fac;
dqdc[5] = dcdc_fac;
dqdc[6] = dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = dcdc_fac;
dqdc[9] = dcdc_fac;
dqdc[10] = 0.8*dcdc_fac;
dqdc[11] = dcdc_fac;
dqdc[12] = dcdc_fac;
dqdc[13] = dcdc_fac;
dqdc[14] = dcdc_fac;
dqdc[15] = dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = 2*dcdc_fac - k_r*2.000000*sc[19];
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = 2*dcdc_fac + k_f;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+19] += 2 * dqdc[k];
J[53*k+37] -= dqdc[k];
}
J[2775] += 2 * dqdT;// dwdot[NO2]/dT
J[2793] -= dqdT;// dwdot[N2O4]/dT

// reaction 9: H2 + M <=> 2 H + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.9 - 1)*sc[5] + ( 3.8 - 1)*sc[6] + ( 2.5 - 1)*sc[9] + ( 12 - 1)*sc[15] + ( 0.83 - 1)*sc[35] + sc[46] + ( 3 - 1)*sc[47];
// forward
phi_f = sc[9];
k_f = 45770000000000
            * exp(-1.4 * tc[0] - (52535.8199100127) * invT);
dlnkfdT = -1.4 * invT + (52535.8199100127) * invT2;
// reverse
phi_r = (sc[11] * sc[11]);
Kc = refC * exp(g_RT[9] - 2.000000*g_RT[11]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[9]) + (2.000000*h_RT[11]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] -= q;// H2
wdot[11] += 2 * q;// H
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = 1.9*q_nocor;
dqdc[6] = 3.8*q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = 2.5*q_nocor + k_f;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor - k_r*2.000000*sc[11];
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 12*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = 0.83*q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = 2*q_nocor;
dqdc[47] = 3*q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+9] -= dqdc[k];
J[53*k+11] += 2 * dqdc[k];
}
J[2765] -= dqdT;// dwdot[H2]/dT
J[2767] += 2 * dqdT;// dwdot[H]/dT

// reaction 10: 2 O + M <=> O2 + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.9 - 1)*sc[5] + ( 3.8 - 1)*sc[6] + ( 2.5 - 1)*sc[9] + ( 0.83 - 1)*sc[10] + ( 12 - 1)*sc[15] + ( 0.83 - 1)*sc[35] + sc[46] + ( 3 - 1)*sc[47];
// forward
phi_f = (sc[12] * sc[12]);
k_f = 6165
            * exp(-0.5 * tc[0]);
dlnkfdT = -0.5 * invT;
// reverse
phi_r = sc[8];
Kc = refCinv * exp(-g_RT[8] + 2.000000*g_RT[12]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[12]) + (h_RT[8]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[12] -= 2 * q;// O
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = 1.9*q_nocor;
dqdc[6] = 3.8*q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor - k_r;
dqdc[9] = 2.5*q_nocor;
dqdc[10] = 0.83*q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor + k_f*2.000000*sc[12];
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 12*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = 0.83*q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = 2*q_nocor;
dqdc[47] = 3*q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+8] += dqdc[k];
J[53*k+12] += -2 * dqdc[k];
}
J[2764] += dqdT;// dwdot[O2]/dT
J[2768] += -2 * dqdT;// dwdot[O]/dT

// reaction 11: H + O + M <=> OH + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.5 - 1)*sc[5] + sc[6] + ( 2.5 - 1)*sc[9] + ( 0.75 - 1)*sc[10] + ( 12 - 1)*sc[15] + ( 0.75 - 1)*sc[35] + sc[46] + ( 3 - 1)*sc[47];
// forward
phi_f = sc[11]*sc[12];
k_f = 4714000
            * exp(-1 * tc[0]);
dlnkfdT = -1 * invT;
// reverse
phi_r = sc[13];
Kc = refCinv * exp(g_RT[11] + g_RT[12] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[12]) + (h_RT[13]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[12] -= q;// O
wdot[13] += q;// OH
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = 1.5*q_nocor;
dqdc[6] = 2*q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = 2.5*q_nocor;
dqdc[10] = 0.75*q_nocor;
dqdc[11] = q_nocor + k_f*sc[12];
dqdc[12] = q_nocor + k_f*sc[11];
dqdc[13] = q_nocor - k_r;
dqdc[14] = q_nocor;
dqdc[15] = 12*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = 0.75*q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = 2*q_nocor;
dqdc[47] = 3*q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+11] -= dqdc[k];
J[53*k+12] -= dqdc[k];
J[53*k+13] += dqdc[k];
}
J[2767] -= dqdT;// dwdot[H]/dT
J[2768] -= dqdT;// dwdot[O]/dT
J[2769] += dqdT;// dwdot[OH]/dT

// reaction 12: H + OH + M <=> H2O + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 0.73 - 1)*sc[9] + ( 0.38 - 1)*sc[10] + ( 3.65 - 1)*sc[15] + sc[46] + ( 3 - 1)*sc[47];
// forward
phi_f = sc[11]*sc[13];
k_f = 35000000000
            * exp(-2 * tc[0]);
dlnkfdT = -2 * invT;
// reverse
phi_r = sc[15];
Kc = refCinv * exp(g_RT[11] + g_RT[13] - g_RT[15]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[13]) + (h_RT[15]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[13] -= q;// OH
wdot[15] += q;// H2O
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = 0.73*q_nocor;
dqdc[10] = 0.38*q_nocor;
dqdc[11] = q_nocor + k_f*sc[13];
dqdc[12] = q_nocor;
dqdc[13] = q_nocor + k_f*sc[11];
dqdc[14] = q_nocor;
dqdc[15] = 3.65*q_nocor - k_r;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = 2*q_nocor;
dqdc[47] = 3*q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+11] -= dqdc[k];
J[53*k+13] -= dqdc[k];
J[53*k+15] += dqdc[k];
}
J[2767] -= dqdT;// dwdot[H]/dT
J[2769] -= dqdT;// dwdot[OH]/dT
J[2771] += dqdT;// dwdot[H2O]/dT

// reaction 33: HCO + M <=> CO + H + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.5 - 1)*sc[5] + sc[6] + sc[9] + ( 12 - 1)*sc[15] + sc[46] + ( 3 - 1)*sc[47];
// forward
phi_f = sc[17];
k_f = 570000
            * exp(0.66 * tc[0] - (7482.83182051618) * invT);
dlnkfdT = 0.66 * invT + (7482.83182051618) * invT2;
// reverse
phi_r = sc[5]*sc[11];
Kc = refC * exp(-g_RT[5] - g_RT[11] + g_RT[17]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[17]) + (h_RT[5] + h_RT[11]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[11] += q;// H
wdot[17] -= q;// HCO
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = 1.5*q_nocor - k_r*sc[11];
dqdc[6] = 2*q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = 2*q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor - k_r*sc[5];
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 12*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor + k_f;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = 2*q_nocor;
dqdc[47] = 3*q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+5] += dqdc[k];
J[53*k+11] += dqdc[k];
J[53*k+17] -= dqdc[k];
}
J[2761] += dqdT;// dwdot[CO]/dT
J[2767] += dqdT;// dwdot[H]/dT
J[2773] -= dqdT;// dwdot[HCO]/dT

// reaction 43: HCN + M <=> CN + H + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.5 - 1)*sc[8] + ( 10 - 1)*sc[15] + ( 0 - 1)*sc[45];
// forward
phi_f = sc[1];
k_f = 3.4e+29
            * exp(-5.13 * tc[0] - (66927.8165520277) * invT);
dlnkfdT = -5.13 * invT + (66927.8165520277) * invT2;
// reverse
phi_r = sc[11]*sc[29];
Kc = refC * exp(g_RT[1] - g_RT[11] - g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1]) + (h_RT[11] + h_RT[29]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[11] += q;// H
wdot[29] += q;// CN
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor + k_f;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = 1.5*q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor - k_r*sc[29];
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 10*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor - k_r*sc[11];
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = 0.0;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+1] -= dqdc[k];
J[53*k+11] += dqdc[k];
J[53*k+29] += dqdc[k];
}
J[2757] -= dqdT;// dwdot[HCN]/dT
J[2767] += dqdT;// dwdot[H]/dT
J[2785] += dqdT;// dwdot[CN]/dT

// reaction 44: HCN + N2 <=> CN + H + N2
// a third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[45];
k_f = 3.6e+20
            * exp(-2.6 * tc[0] - (62846.7293923514) * invT);
dlnkfdT = -2.6 * invT + (62846.7293923514) * invT2;
// reverse
phi_r = sc[11]*sc[29]*sc[45];
Kc = refC * exp(g_RT[1] - g_RT[11] - g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[45]) + (h_RT[11] + h_RT[29] + h_RT[45]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[11] += q;// H
wdot[29] += q;// CN
// d()/d[HCN]
dqdci =  + k_f*sc[45];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[64] += dqdci;               // dwdot[H]/d[HCN]
J[82] += dqdci;               // dwdot[CN]/d[HCN]
// d()/d[H]
dqdci =  - k_r*sc[29]*sc[45];
J[584] -= dqdci;              // dwdot[HCN]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[612] += dqdci;              // dwdot[CN]/d[H]
// d()/d[CN]
dqdci =  - k_r*sc[11]*sc[45];
J[1538] -= dqdci;             // dwdot[HCN]/d[CN]
J[1548] += dqdci;             // dwdot[H]/d[CN]
J[1566] += dqdci;             // dwdot[CN]/d[CN]
// d()/d[N2]
dqdci =  + k_f*sc[1] - k_r*sc[11]*sc[29];
J[2386] -= dqdci;             // dwdot[HCN]/d[N2]
J[2396] += dqdci;             // dwdot[H]/d[N2]
J[2414] += dqdci;             // dwdot[CN]/d[N2]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2785] += dqdT;              // dwdot[CN]/dT

// reaction 45: HCN + M <=> HNC + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + sc[6] + ( 0.7 - 1)*sc[10] + ( 7 - 1)*sc[15];
// forward
phi_f = sc[1];
k_f = 1.6e+20
            * exp(-3.23 * tc[0] - (27475.6299529377) * invT);
dlnkfdT = -3.23 * invT + (27475.6299529377) * invT2;
// reverse
phi_r = sc[7];
Kc = exp(g_RT[1] - g_RT[7]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1]) + (h_RT[7]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[7] += q;// HNC
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor + k_f;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = 2*q_nocor;
dqdc[7] = q_nocor - k_r;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = 0.7*q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 7*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+1] -= dqdc[k];
J[53*k+7] += dqdc[k];
}
J[2757] -= dqdT;// dwdot[HCN]/dT
J[2763] += dqdT;// dwdot[HNC]/dT

// reaction 76: HNCO + M <=> CO + NH + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.5 - 1)*sc[45];
// forward
phi_f = sc[2];
k_f = 11000000000
            * exp(- (43276.6332592059) * invT);
dlnkfdT = (43276.6332592059) * invT2;
// reverse
phi_r = sc[5]*sc[28];
Kc = refC * exp(g_RT[2] - g_RT[5] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2]) + (h_RT[5] + h_RT[28]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[5] += q;// CO
wdot[28] += q;// NH
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor + k_f;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor - k_r*sc[28];
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor - k_r*sc[5];
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = 1.5*q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+2] -= dqdc[k];
J[53*k+5] += dqdc[k];
J[53*k+28] += dqdc[k];
}
J[2758] -= dqdT;// dwdot[HNCO]/dT
J[2761] += dqdT;// dwdot[CO]/dT
J[2784] += dqdT;// dwdot[NH]/dT

// reaction 98: HCNO + OH <=> H + NCO + OH
// a third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[33];
k_f = 4500000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[11]*sc[13]*sc[30];
Kc = refC * exp(-g_RT[11] - g_RT[30] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[33]) + (h_RT[11] + h_RT[13] + h_RT[30]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[30] += q;// NCO
wdot[33] -= q;// HCNO
// d()/d[H]
dqdci =  - k_r*sc[13]*sc[30];
J[594] += dqdci;              // dwdot[H]/d[H]
J[613] += dqdci;              // dwdot[NCO]/d[H]
J[616] -= dqdci;              // dwdot[HCNO]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[33] - k_r*sc[11]*sc[30];
J[700] += dqdci;              // dwdot[H]/d[OH]
J[719] += dqdci;              // dwdot[NCO]/d[OH]
J[722] -= dqdci;              // dwdot[HCNO]/d[OH]
// d()/d[NCO]
dqdci =  - k_r*sc[11]*sc[13];
J[1601] += dqdci;             // dwdot[H]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
J[1623] -= dqdci;             // dwdot[HCNO]/d[NCO]
// d()/d[HCNO]
dqdci =  + k_f*sc[13];
J[1760] += dqdci;             // dwdot[H]/d[HCNO]
J[1779] += dqdci;             // dwdot[NCO]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 101: NCO + M <=> CO + N + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.5 - 1)*sc[45];
// forward
phi_f = sc[30];
k_f = 220000000
            * exp(- (27198.8607867451) * invT);
dlnkfdT = (27198.8607867451) * invT2;
// reverse
phi_r = sc[5]*sc[25];
Kc = refC * exp(-g_RT[5] - g_RT[25] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[30]) + (h_RT[5] + h_RT[25]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[25] += q;// N
wdot[30] -= q;// NCO
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor - k_r*sc[25];
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor - k_r*sc[5];
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor + k_f;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = 1.5*q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+5] += dqdc[k];
J[53*k+25] += dqdc[k];
J[53*k+30] -= dqdc[k];
}
J[2761] += dqdT;// dwdot[CO]/dT
J[2781] += dqdT;// dwdot[N]/dT
J[2786] -= dqdT;// dwdot[NCO]/dT

// reaction 132: NH3 + M <=> H + NH2 + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture;
// forward
phi_f = sc[20];
k_f = 22000000000
            * exp(- (47035.6617527671) * invT);
dlnkfdT = (47035.6617527671) * invT2;
// reverse
phi_r = sc[11]*sc[27];
Kc = refC * exp(-g_RT[11] + g_RT[20] - g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[20]) + (h_RT[11] + h_RT[27]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[20] -= q;// NH3
wdot[27] += q;// NH2
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor - k_r*sc[27];
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor + k_f;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor - k_r*sc[11];
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+11] += dqdc[k];
J[53*k+20] -= dqdc[k];
J[53*k+27] += dqdc[k];
}
J[2767] += dqdT;// dwdot[H]/dT
J[2776] -= dqdT;// dwdot[NH3]/dT
J[2783] += dqdT;// dwdot[NH2]/dT

// reaction 165: H2NO + M <=> H + HNO + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 10 - 1)*sc[15];
// forward
phi_f = sc[24];
k_f = 2.8e+18
            * exp(-2.83 * tc[0] - (32666.3098607134) * invT);
dlnkfdT = -2.83 * invT + (32666.3098607134) * invT2;
// reverse
phi_r = sc[11]*sc[21];
Kc = refC * exp(-g_RT[11] - g_RT[21] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[24]) + (h_RT[11] + h_RT[21]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[21] += q;// HNO
wdot[24] -= q;// H2NO
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor - k_r*sc[21];
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 10*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor - k_r*sc[11];
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor + k_f;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+11] += dqdc[k];
J[53*k+21] += dqdc[k];
J[53*k+24] -= dqdc[k];
}
J[2767] += dqdT;// dwdot[H]/dT
J[2777] += dqdT;// dwdot[HNO]/dT
J[2780] -= dqdT;// dwdot[H2NO]/dT

// reaction 166: H2NO + M <=> HNOH + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 10 - 1)*sc[15];
// forward
phi_f = sc[24];
k_f = 1.1e+23
            * exp(-4 * tc[0] - (22141.5332954077) * invT);
dlnkfdT = -4 * invT + (22141.5332954077) * invT2;
// reverse
phi_r = sc[42];
Kc = exp(g_RT[24] - g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[24]) + (h_RT[42]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[24] -= q;// H2NO
wdot[42] += q;// HNOH
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 10*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor + k_f;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor - k_r;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+24] -= dqdc[k];
J[53*k+42] += dqdc[k];
}
J[2780] -= dqdT;// dwdot[H2NO]/dT
J[2798] += dqdT;// dwdot[HNOH]/dT

// reaction 176: HNOH + M <=> H + HNO + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 10 - 1)*sc[15];
// forward
phi_f = sc[42];
k_f = 2e+18
            * exp(-2.84 * tc[0] - (29656.5709825354) * invT);
dlnkfdT = -2.84 * invT + (29656.5709825354) * invT2;
// reverse
phi_r = sc[11]*sc[21];
Kc = refC * exp(-g_RT[11] - g_RT[21] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[42]) + (h_RT[11] + h_RT[21]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[21] += q;// HNO
wdot[42] -= q;// HNOH
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor - k_r*sc[21];
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 10*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor - k_r*sc[11];
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor + k_f;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+11] += dqdc[k];
J[53*k+21] += dqdc[k];
J[53*k+42] -= dqdc[k];
}
J[2767] += dqdT;// dwdot[H]/dT
J[2777] += dqdT;// dwdot[HNO]/dT
J[2798] -= dqdT;// dwdot[HNOH]/dT

// reaction 188: HON + M <=> H + NO + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + sc[6] + ( 0.7 - 1)*sc[10] + ( 7 - 1)*sc[15];
// forward
phi_f = sc[22];
k_f = 51000000000000
            * exp(-1.73 * tc[0] - (8074.11140283673) * invT);
dlnkfdT = -1.73 * invT + (8074.11140283673) * invT2;
// reverse
phi_r = sc[3]*sc[11];
Kc = refC * exp(-g_RT[3] - g_RT[11] + g_RT[22]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[22]) + (h_RT[3] + h_RT[11]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[11] += q;// H
wdot[22] -= q;// HON
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor - k_r*sc[11];
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = 2*q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = 0.7*q_nocor;
dqdc[11] = q_nocor - k_r*sc[3];
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 7*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor + k_f;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+3] += dqdc[k];
J[53*k+11] += dqdc[k];
J[53*k+22] -= dqdc[k];
}
J[2759] += dqdT;// dwdot[NO]/dT
J[2767] += dqdT;// dwdot[H]/dT
J[2778] -= dqdT;// dwdot[HON]/dT

// reaction 206: NO3 + NO2 <=> NO + O2 + NO2
// a third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[43];
k_f = 50000
            * exp(- (1479.45699746588) * invT);
dlnkfdT = (1479.45699746588) * invT2;
// reverse
phi_r = sc[3]*sc[8]*sc[19];
Kc = refC * exp(-g_RT[3] - g_RT[8] + g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[43]) + (h_RT[3] + h_RT[8] + h_RT[19]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[8] += q;// O2
wdot[43] -= q;// NO3
// d()/d[NO]
dqdci =  - k_r*sc[8]*sc[19];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[167] += dqdci;              // dwdot[O2]/d[NO]
J[202] -= dqdci;              // dwdot[NO3]/d[NO]
// d()/d[O2]
dqdci =  - k_r*sc[3]*sc[19];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[467] -= dqdci;              // dwdot[NO3]/d[O2]
// d()/d[NO2]
dqdci =  + k_f*sc[43] - k_r*sc[3]*sc[8];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1015] += dqdci;             // dwdot[O2]/d[NO2]
J[1050] -= dqdci;             // dwdot[NO3]/d[NO2]
// d()/d[NO3]
dqdci =  + k_f*sc[19];
J[2282] += dqdci;             // dwdot[NO]/d[NO3]
J[2287] += dqdci;             // dwdot[O2]/d[NO3]
J[2322] -= dqdci;             // dwdot[NO3]/d[NO3]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2799] -= dqdT;              // dwdot[NO3]/dT

// reaction 214: NNH + O2 <=> H + N2 + O2
// a third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[26];
k_f = 50000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[8]*sc[11]*sc[45];
Kc = refC * exp(-g_RT[11] + g_RT[26] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[26]) + (h_RT[8] + h_RT[11] + h_RT[45]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[26] -= q;// NNH
wdot[45] += q;// N2
// d()/d[O2]
dqdci =  + k_f*sc[26] - k_r*sc[11]*sc[45];
J[435] += dqdci;              // dwdot[H]/d[O2]
J[450] -= dqdci;              // dwdot[NNH]/d[O2]
J[469] += dqdci;              // dwdot[N2]/d[O2]
// d()/d[H]
dqdci =  - k_r*sc[8]*sc[45];
J[594] += dqdci;              // dwdot[H]/d[H]
J[609] -= dqdci;              // dwdot[NNH]/d[H]
J[628] += dqdci;              // dwdot[N2]/d[H]
// d()/d[NNH]
dqdci =  + k_f*sc[8];
J[1389] += dqdci;             // dwdot[H]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[N2]
dqdci =  - k_r*sc[8]*sc[11];
J[2396] += dqdci;             // dwdot[H]/d[N2]
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 219: NCCN + M <=> 2 CN + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 3 - 1)*sc[6] + ( 1.5 - 1)*sc[8] + ( 1.5 - 1)*sc[9] + ( 10 - 1)*sc[15] + ( 1.5 - 1)*sc[45];
// forward
phi_f = sc[31];
k_f = 1.1e+28
            * exp(-4.32 * tc[0] - (65457.9206712121) * invT);
dlnkfdT = -4.32 * invT + (65457.9206712121) * invT2;
// reverse
phi_r = (sc[29] * sc[29]);
Kc = refC * exp(-2.000000*g_RT[29] + g_RT[31]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[31]) + (2.000000*h_RT[29]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[29] += 2 * q;// CN
wdot[31] -= q;// NCCN
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = 3*q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = 1.5*q_nocor;
dqdc[9] = 1.5*q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 10*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor - k_r*2.000000*sc[29];
dqdc[30] = q_nocor;
dqdc[31] = q_nocor + k_f;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = 1.5*q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+29] += 2 * dqdc[k];
J[53*k+31] -= dqdc[k];
}
J[2785] += 2 * dqdT;// dwdot[CN]/dT
J[2787] -= dqdT;// dwdot[NCCN]/dT

// reaction 222: H + O + M <=> OH* + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 0.4 - 1)*sc[8] + ( 0.35 - 1)*sc[10] + ( 6.5 - 1)*sc[15] + ( 0.4 - 1)*sc[45];
// forward
phi_f = sc[11]*sc[12];
k_f = 15
            * exp(- (3006.7195781832) * invT);
dlnkfdT = (3006.7195781832) * invT2;
// reverse
phi_r = sc[0];
Kc = refCinv * exp(-g_RT[0] + g_RT[11] + g_RT[12]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[12]) + (h_RT[0]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] += q;// OH*
wdot[11] -= q;// H
wdot[12] -= q;// O
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor - k_r;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = 0.4*q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = 0.35*q_nocor;
dqdc[11] = q_nocor + k_f*sc[12];
dqdc[12] = q_nocor + k_f*sc[11];
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 6.5*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = 0.4*q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+0] += dqdc[k];
J[53*k+11] -= dqdc[k];
J[53*k+12] -= dqdc[k];
}
J[2756] += dqdT;// dwdot[OH*]/dT
J[2767] -= dqdT;// dwdot[H]/dT
J[2768] -= dqdT;// dwdot[O]/dT

// reaction 233: N2 + M <=> 2 N + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 16.25 - 1)*sc[15];
// forward
phi_f = sc[45];
k_f = 1890000000000
            * exp(-0.85 * tc[0] - (113198.588972772) * invT);
dlnkfdT = -0.85 * invT + (113198.588972772) * invT2;
// reverse
phi_r = (sc[25] * sc[25]);
Kc = refC * exp(-2.000000*g_RT[25] + g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[45]) + (2.000000*h_RT[25]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[25] += 2 * q;// N
wdot[45] -= q;// N2
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 16.25*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor - k_r*2.000000*sc[25];
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor + k_f;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+25] += 2 * dqdc[k];
J[53*k+45] -= dqdc[k];
}
J[2781] += 2 * dqdT;// dwdot[N]/dT
J[2801] -= dqdT;// dwdot[N2]/dT

// reaction 234: N + O + M <=> NO + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 16.25 - 1)*sc[15];
// forward
phi_f = sc[12]*sc[25];
k_f = 760
            * exp(-0.1 * tc[0] - (-890.693498474354) * invT);
dlnkfdT = -0.1 * invT + (-890.693498474354) * invT2;
// reverse
phi_r = sc[3];
Kc = refCinv * exp(-g_RT[3] + g_RT[12] + g_RT[25]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[25]) + (h_RT[3]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[12] -= q;// O
wdot[25] -= q;// N
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor - k_r;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor + k_f*sc[25];
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 16.25*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor + k_f*sc[12];
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+3] += dqdc[k];
J[53*k+12] -= dqdc[k];
J[53*k+25] -= dqdc[k];
}
J[2759] += dqdT;// dwdot[NO]/dT
J[2768] -= dqdT;// dwdot[O]/dT
J[2781] -= dqdT;// dwdot[N]/dT

// reaction 240: NO2 + M <=> NO + O + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 16.25 - 1)*sc[15];
// forward
phi_f = sc[19];
k_f = 11000000000
            * exp(- (33212.2999431115) * invT);
dlnkfdT = (33212.2999431115) * invT2;
// reverse
phi_r = sc[3]*sc[12];
Kc = refC * exp(-g_RT[3] - g_RT[12] + g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19]) + (h_RT[3] + h_RT[12]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[12] += q;// O
wdot[19] -= q;// NO2
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor - k_r*sc[12];
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor - k_r*sc[3];
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 16.25*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor + k_f;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+3] += dqdc[k];
J[53*k+12] += dqdc[k];
J[53*k+19] -= dqdc[k];
}
J[2759] += dqdT;// dwdot[NO]/dT
J[2768] += dqdT;// dwdot[O]/dT
J[2775] -= dqdT;// dwdot[NO2]/dT

// reaction 257: H2NO + M <=> H2 + NO + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 10 - 1)*sc[15];
// forward
phi_f = sc[24];
k_f = 7.83e+21
            * exp(-4.29 * tc[0] - (30343.9649480246) * invT);
dlnkfdT = -4.29 * invT + (30343.9649480246) * invT2;
// reverse
phi_r = sc[3]*sc[9];
Kc = refC * exp(-g_RT[3] - g_RT[9] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[24]) + (h_RT[3] + h_RT[9]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[9] += q;// H2
wdot[24] -= q;// H2NO
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor - k_r*sc[9];
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor - k_r*sc[3];
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 10*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor + k_f;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+3] += dqdc[k];
J[53*k+9] += dqdc[k];
J[53*k+24] -= dqdc[k];
}
J[2759] += dqdT;// dwdot[NO]/dT
J[2765] += dqdT;// dwdot[H2]/dT
J[2780] -= dqdT;// dwdot[H2NO]/dT

// reaction 258: HO2 + NO + M <=> HONO2 + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture;
// forward
phi_f = sc[3]*sc[14];
k_f = 2.23
            * exp(-3.5 * tc[0] - (1107.07666477038) * invT);
dlnkfdT = -3.5 * invT + (1107.07666477038) * invT2;
// reverse
phi_r = sc[44];
Kc = refCinv * exp(g_RT[3] + g_RT[14] - g_RT[44]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[14]) + (h_RT[44]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[14] -= q;// HO2
wdot[44] += q;// HONO2
// for convenience
k_f *= alpha;
k_r *= alpha;
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor + k_f*sc[14];
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor + k_f*sc[3];
dqdc[15] = q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor - k_r;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+3] -= dqdc[k];
J[53*k+14] -= dqdc[k];
J[53*k+44] += dqdc[k];
}
J[2759] -= dqdT;// dwdot[NO]/dT
J[2770] -= dqdT;// dwdot[HO2]/dT
J[2800] += dqdT;// dwdot[HONO2]/dT

// reaction 0: H + N2O <=> N2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[11];
k_f = 50000000
            * exp(- (7648.89332023174) * invT);
dlnkfdT = (7648.89332023174) * invT2;
// reverse
phi_r = sc[13]*sc[45];
Kc = exp(g_RT[4] + g_RT[11] - g_RT[13] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[11]) + (h_RT[13] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] -= q;// N2O
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[45] += q;// N2
// d()/d[N2O]
dqdci =  + k_f*sc[11];
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[223] -= dqdci;              // dwdot[H]/d[N2O]
J[225] += dqdci;              // dwdot[OH]/d[N2O]
J[257] += dqdci;              // dwdot[N2]/d[N2O]
// d()/d[H]
dqdci =  + k_f*sc[4];
J[587] -= dqdci;              // dwdot[N2O]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[628] += dqdci;              // dwdot[N2]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[45];
J[693] -= dqdci;              // dwdot[N2O]/d[OH]
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[734] += dqdci;              // dwdot[N2]/d[OH]
// d()/d[N2]
dqdci =  - k_r*sc[13];
J[2389] -= dqdci;             // dwdot[N2O]/d[N2]
J[2396] -= dqdci;             // dwdot[H]/d[N2]
J[2398] += dqdci;             // dwdot[OH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 2: N + NO <=> N2 + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[25];
k_f = 21000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[12]*sc[45];
Kc = exp(g_RT[3] - g_RT[12] + g_RT[25] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[25]) + (h_RT[12] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[12] += q;// O
wdot[25] -= q;// N
wdot[45] += q;// N2
// d()/d[NO]
dqdci =  + k_f*sc[25];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[171] += dqdci;              // dwdot[O]/d[NO]
J[184] -= dqdci;              // dwdot[N]/d[NO]
J[204] += dqdci;              // dwdot[N2]/d[NO]
// d()/d[O]
dqdci =  - k_r*sc[45];
J[639] -= dqdci;              // dwdot[NO]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[661] -= dqdci;              // dwdot[N]/d[O]
J[681] += dqdci;              // dwdot[N2]/d[O]
// d()/d[N]
dqdci =  + k_f*sc[3];
J[1328] -= dqdci;             // dwdot[NO]/d[N]
J[1337] += dqdci;             // dwdot[O]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
J[1370] += dqdci;             // dwdot[N2]/d[N]
// d()/d[N2]
dqdci =  - k_r*sc[12];
J[2388] -= dqdci;             // dwdot[NO]/d[N2]
J[2397] += dqdci;             // dwdot[O]/d[N2]
J[2410] -= dqdci;             // dwdot[N]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2781] -= dqdT;              // dwdot[N]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 3: H + HNO <=> H2 + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[21];
k_f = 440000
            * exp(0.7 * tc[0] - (327.090832773068) * invT);
dlnkfdT = 0.7 * invT + (327.090832773068) * invT2;
// reverse
phi_r = sc[3]*sc[9];
Kc = exp(-g_RT[3] - g_RT[9] + g_RT[11] + g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[21]) + (h_RT[3] + h_RT[9]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[21] -= q;// HNO
// d()/d[NO]
dqdci =  - k_r*sc[9];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[168] += dqdci;              // dwdot[H2]/d[NO]
J[170] -= dqdci;              // dwdot[H]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
// d()/d[H2]
dqdci =  - k_r*sc[3];
J[480] += dqdci;              // dwdot[NO]/d[H2]
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[498] -= dqdci;              // dwdot[HNO]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[21];
J[586] += dqdci;              // dwdot[NO]/d[H]
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[604] -= dqdci;              // dwdot[HNO]/d[H]
// d()/d[HNO]
dqdci =  + k_f*sc[11];
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1122] += dqdci;             // dwdot[H2]/d[HNO]
J[1124] -= dqdci;             // dwdot[H]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT

// reaction 4: H + N2O <=> NH + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[11];
k_f = 6.7e+16
            * exp(-2.16 * tc[0] - (18697.0152179744) * invT);
dlnkfdT = -2.16 * invT + (18697.0152179744) * invT2;
// reverse
phi_r = sc[3]*sc[28];
Kc = exp(-g_RT[3] + g_RT[4] + g_RT[11] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[11]) + (h_RT[3] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[4] -= q;// N2O
wdot[11] -= q;// H
wdot[28] += q;// NH
// d()/d[NO]
dqdci =  - k_r*sc[28];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[163] -= dqdci;              // dwdot[N2O]/d[NO]
J[170] -= dqdci;              // dwdot[H]/d[NO]
J[187] += dqdci;              // dwdot[NH]/d[NO]
// d()/d[N2O]
dqdci =  + k_f*sc[11];
J[215] += dqdci;              // dwdot[NO]/d[N2O]
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[223] -= dqdci;              // dwdot[H]/d[N2O]
J[240] += dqdci;              // dwdot[NH]/d[N2O]
// d()/d[H]
dqdci =  + k_f*sc[4];
J[586] += dqdci;              // dwdot[NO]/d[H]
J[587] -= dqdci;              // dwdot[N2O]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[611] += dqdci;              // dwdot[NH]/d[H]
// d()/d[NH]
dqdci =  - k_r*sc[3];
J[1487] += dqdci;             // dwdot[NO]/d[NH]
J[1488] -= dqdci;             // dwdot[N2O]/d[NH]
J[1495] -= dqdci;             // dwdot[H]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 5: H + O2 <=> O + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[11];
k_f = 104000000
            * exp(- (7692.16995349094) * invT);
dlnkfdT = (7692.16995349094) * invT2;
// reverse
phi_r = sc[12]*sc[13];
Kc = exp(g_RT[8] + g_RT[11] - g_RT[12] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[11]) + (h_RT[12] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[11] -= q;// H
wdot[12] += q;// O
wdot[13] += q;// OH
// d()/d[O2]
dqdci =  + k_f*sc[11];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[435] -= dqdci;              // dwdot[H]/d[O2]
J[436] += dqdci;              // dwdot[O]/d[O2]
J[437] += dqdci;              // dwdot[OH]/d[O2]
// d()/d[H]
dqdci =  + k_f*sc[8];
J[591] -= dqdci;              // dwdot[O2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[595] += dqdci;              // dwdot[O]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
// d()/d[O]
dqdci =  - k_r*sc[13];
J[644] -= dqdci;              // dwdot[O2]/d[O]
J[647] -= dqdci;              // dwdot[H]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[12];
J[697] -= dqdci;              // dwdot[O2]/d[OH]
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[701] += dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 6: H2 + O <=> H + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[9]*sc[12];
k_f = 0.0509
            * exp(2.67 * tc[0] - (3166.2392612433) * invT);
dlnkfdT = 2.67 * invT + (3166.2392612433) * invT2;
// reverse
phi_r = sc[11]*sc[13];
Kc = exp(g_RT[9] - g_RT[11] + g_RT[12] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[9] + h_RT[12]) + (h_RT[11] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] -= q;// H2
wdot[11] += q;// H
wdot[12] -= q;// O
wdot[13] += q;// OH
// d()/d[H2]
dqdci =  + k_f*sc[12];
J[486] -= dqdci;              // dwdot[H2]/d[H2]
J[488] += dqdci;              // dwdot[H]/d[H2]
J[489] -= dqdci;              // dwdot[O]/d[H2]
J[490] += dqdci;              // dwdot[OH]/d[H2]
// d()/d[H]
dqdci =  - k_r*sc[13];
J[592] -= dqdci;              // dwdot[H2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[595] -= dqdci;              // dwdot[O]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
// d()/d[O]
dqdci =  + k_f*sc[9];
J[645] -= dqdci;              // dwdot[H2]/d[O]
J[647] += dqdci;              // dwdot[H]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[11];
J[698] -= dqdci;              // dwdot[H2]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2765] -= dqdT;              // dwdot[H2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 7: H2 + OH <=> H + H2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[9]*sc[13];
k_f = 43800000
            * exp(- (3517.48449397499) * invT);
dlnkfdT = (3517.48449397499) * invT2;
// reverse
phi_r = sc[11]*sc[15];
Kc = exp(g_RT[9] - g_RT[11] + g_RT[13] - g_RT[15]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[9] + h_RT[13]) + (h_RT[11] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] -= q;// H2
wdot[11] += q;// H
wdot[13] -= q;// OH
wdot[15] += q;// H2O
// d()/d[H2]
dqdci =  + k_f*sc[13];
J[486] -= dqdci;              // dwdot[H2]/d[H2]
J[488] += dqdci;              // dwdot[H]/d[H2]
J[490] -= dqdci;              // dwdot[OH]/d[H2]
J[492] += dqdci;              // dwdot[H2O]/d[H2]
// d()/d[H]
dqdci =  - k_r*sc[15];
J[592] -= dqdci;              // dwdot[H2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
J[598] += dqdci;              // dwdot[H2O]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[9];
J[698] -= dqdci;              // dwdot[H2]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[11];
J[804] -= dqdci;              // dwdot[H2]/d[H2O]
J[806] += dqdci;              // dwdot[H]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
// d()/dT
J[2765] -= dqdT;              // dwdot[H2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT

// reaction 8: H2O + O <=> 2 OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[15];
k_f = 2.97
            * exp(2.02 * tc[0] - (6743.10332178324) * invT);
dlnkfdT = 2.02 * invT + (6743.10332178324) * invT2;
// reverse
phi_r = (sc[13] * sc[13]);
Kc = exp(g_RT[12] - 2.000000*g_RT[13] + g_RT[15]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[15]) + (2.000000*h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += 2 * q;// OH
wdot[15] -= q;// H2O
// d()/d[O]
dqdci =  + k_f*sc[15];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += 2 * dqdci;          // dwdot[OH]/d[O]
J[651] -= dqdci;              // dwdot[H2O]/d[O]
// d()/d[OH]
dqdci =  - k_r*2.000000*sc[13];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += 2 * dqdci;          // dwdot[OH]/d[OH]
J[704] -= dqdci;              // dwdot[H2O]/d[OH]
// d()/d[H2O]
dqdci =  + k_f*sc[12];
J[807] -= dqdci;              // dwdot[O]/d[H2O]
J[808] += 2 * dqdci;          // dwdot[OH]/d[H2O]
J[810] -= dqdci;              // dwdot[H2O]/d[H2O]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += 2 * dqdT;          // dwdot[OH]/dT
J[2771] -= dqdT;              // dwdot[H2O]/dT

// reaction 15: H + HO2 <=> 2 OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[14];
k_f = 70790000
            * exp(- (148.448916412392) * invT);
dlnkfdT = (148.448916412392) * invT2;
// reverse
phi_r = (sc[13] * sc[13]);
Kc = exp(g_RT[11] - 2.000000*g_RT[13] + g_RT[14]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[14]) + (2.000000*h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[13] += 2 * q;// OH
wdot[14] -= q;// HO2
// d()/d[H]
dqdci =  + k_f*sc[14];
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += 2 * dqdci;          // dwdot[OH]/d[H]
J[597] -= dqdci;              // dwdot[HO2]/d[H]
// d()/d[OH]
dqdci =  - k_r*2.000000*sc[13];
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += 2 * dqdci;          // dwdot[OH]/d[OH]
J[703] -= dqdci;              // dwdot[HO2]/d[OH]
// d()/d[HO2]
dqdci =  + k_f*sc[11];
J[753] -= dqdci;              // dwdot[H]/d[HO2]
J[755] += 2 * dqdci;          // dwdot[OH]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
// d()/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += 2 * dqdT;          // dwdot[OH]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT

// reaction 16: H2 + O2 <=> H + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[9];
k_f = 0.5176
            * exp(2.433 * tc[0] - (26923.0980538841) * invT);
dlnkfdT = 2.433 * invT + (26923.0980538841) * invT2;
// reverse
phi_r = sc[11]*sc[14];
Kc = exp(g_RT[8] + g_RT[9] - g_RT[11] - g_RT[14]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[9]) + (h_RT[11] + h_RT[14]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[9] -= q;// H2
wdot[11] += q;// H
wdot[14] += q;// HO2
// d()/d[O2]
dqdci =  + k_f*sc[9];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[433] -= dqdci;              // dwdot[H2]/d[O2]
J[435] += dqdci;              // dwdot[H]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
// d()/d[H2]
dqdci =  + k_f*sc[8];
J[485] -= dqdci;              // dwdot[O2]/d[H2]
J[486] -= dqdci;              // dwdot[H2]/d[H2]
J[488] += dqdci;              // dwdot[H]/d[H2]
J[491] += dqdci;              // dwdot[HO2]/d[H2]
// d()/d[H]
dqdci =  - k_r*sc[14];
J[591] -= dqdci;              // dwdot[O2]/d[H]
J[592] -= dqdci;              // dwdot[H2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[597] += dqdci;              // dwdot[HO2]/d[H]
// d()/d[HO2]
dqdci =  - k_r*sc[11];
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[751] -= dqdci;              // dwdot[H2]/d[HO2]
J[753] += dqdci;              // dwdot[H]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2765] -= dqdT;              // dwdot[H2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT

// reaction 17: HO2 + O <=> O2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[14];
k_f = 32500000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[8]*sc[13];
Kc = exp(-g_RT[8] + g_RT[12] - g_RT[13] + g_RT[14]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[14]) + (h_RT[8] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[14] -= q;// HO2
// d()/d[O2]
dqdci =  - k_r*sc[13];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[436] -= dqdci;              // dwdot[O]/d[O2]
J[437] += dqdci;              // dwdot[OH]/d[O2]
J[438] -= dqdci;              // dwdot[HO2]/d[O2]
// d()/d[O]
dqdci =  + k_f*sc[14];
J[644] += dqdci;              // dwdot[O2]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[650] -= dqdci;              // dwdot[HO2]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[8];
J[697] += dqdci;              // dwdot[O2]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[703] -= dqdci;              // dwdot[HO2]/d[OH]
// d()/d[HO2]
dqdci =  + k_f*sc[12];
J[750] += dqdci;              // dwdot[O2]/d[HO2]
J[754] -= dqdci;              // dwdot[O]/d[HO2]
J[755] += dqdci;              // dwdot[OH]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT

// reaction 18: HO2 + OH <=> H2O + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[14];
k_f = 24560000
            * exp(- (-250.098682904946) * invT);
dlnkfdT = (-250.098682904946) * invT2;
// reverse
phi_r = sc[8]*sc[15];
Kc = exp(-g_RT[8] + g_RT[13] + g_RT[14] - g_RT[15]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[14]) + (h_RT[8] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[13] -= q;// OH
wdot[14] -= q;// HO2
wdot[15] += q;// H2O
// d()/d[O2]
dqdci =  - k_r*sc[15];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[437] -= dqdci;              // dwdot[OH]/d[O2]
J[438] -= dqdci;              // dwdot[HO2]/d[O2]
J[439] += dqdci;              // dwdot[H2O]/d[O2]
// d()/d[OH]
dqdci =  + k_f*sc[14];
J[697] += dqdci;              // dwdot[O2]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[703] -= dqdci;              // dwdot[HO2]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
// d()/d[HO2]
dqdci =  + k_f*sc[13];
J[750] += dqdci;              // dwdot[O2]/d[HO2]
J[755] -= dqdci;              // dwdot[OH]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[757] += dqdci;              // dwdot[H2O]/d[HO2]
// d()/d[H2O]
dqdci =  - k_r*sc[8];
J[803] += dqdci;              // dwdot[O2]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[809] -= dqdci;              // dwdot[HO2]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT

// reaction 19: 2 HO2 <=> H2O2 + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[14] * sc[14]);
k_f = 130000
            * exp(- (-820.243165261693) * invT);
dlnkfdT = (-820.243165261693) * invT2;
// reverse
phi_r = sc[8]*sc[16];
Kc = exp(-g_RT[8] + 2.000000*g_RT[14] - g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[14]) + (h_RT[8] + h_RT[16]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[14] -= 2 * q;// HO2
wdot[16] += q;// H2O2
// d()/d[O2]
dqdci =  - k_r*sc[16];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[438] += -2 * dqdci;         // dwdot[HO2]/d[O2]
J[440] += dqdci;              // dwdot[H2O2]/d[O2]
// d()/d[HO2]
dqdci =  + k_f*2.000000*sc[14];
J[750] += dqdci;              // dwdot[O2]/d[HO2]
J[756] += -2 * dqdci;         // dwdot[HO2]/d[HO2]
J[758] += dqdci;              // dwdot[H2O2]/d[HO2]
// d()/d[H2O2]
dqdci =  - k_r*sc[8];
J[856] += dqdci;              // dwdot[O2]/d[H2O2]
J[862] += -2 * dqdci;         // dwdot[HO2]/d[H2O2]
J[864] += dqdci;              // dwdot[H2O2]/d[H2O2]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2770] += -2 * dqdT;         // dwdot[HO2]/dT
J[2772] += dqdT;              // dwdot[H2O2]/dT

// reaction 20: 2 HO2 <=> H2O2 + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[14] * sc[14]);
k_f = 365800000
            * exp(- (6038.59998965664) * invT);
dlnkfdT = (6038.59998965664) * invT2;
// reverse
phi_r = sc[8]*sc[16];
Kc = exp(-g_RT[8] + 2.000000*g_RT[14] - g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[14]) + (h_RT[8] + h_RT[16]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[14] -= 2 * q;// HO2
wdot[16] += q;// H2O2
// d()/d[O2]
dqdci =  - k_r*sc[16];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[438] += -2 * dqdci;         // dwdot[HO2]/d[O2]
J[440] += dqdci;              // dwdot[H2O2]/d[O2]
// d()/d[HO2]
dqdci =  + k_f*2.000000*sc[14];
J[750] += dqdci;              // dwdot[O2]/d[HO2]
J[756] += -2 * dqdci;         // dwdot[HO2]/d[HO2]
J[758] += dqdci;              // dwdot[H2O2]/d[HO2]
// d()/d[H2O2]
dqdci =  - k_r*sc[8];
J[856] += dqdci;              // dwdot[O2]/d[H2O2]
J[862] += -2 * dqdci;         // dwdot[HO2]/d[H2O2]
J[864] += dqdci;              // dwdot[H2O2]/d[H2O2]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2770] += -2 * dqdT;         // dwdot[HO2]/dT
J[2772] += dqdT;              // dwdot[H2O2]/dT

// reaction 23: H + H2O2 <=> H2O + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[16];
k_f = 24100000
            * exp(- (1997.77016324474) * invT);
dlnkfdT = (1997.77016324474) * invT2;
// reverse
phi_r = sc[13]*sc[15];
Kc = exp(g_RT[11] - g_RT[13] - g_RT[15] + g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[16]) + (h_RT[13] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[15] += q;// H2O
wdot[16] -= q;// H2O2
// d()/d[H]
dqdci =  + k_f*sc[16];
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[598] += dqdci;              // dwdot[H2O]/d[H]
J[599] -= dqdci;              // dwdot[H2O2]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[15];
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[705] -= dqdci;              // dwdot[H2O2]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[13];
J[806] -= dqdci;              // dwdot[H]/d[H2O]
J[808] += dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[811] -= dqdci;              // dwdot[H2O2]/d[H2O]
// d()/d[H2O2]
dqdci =  + k_f*sc[11];
J[859] -= dqdci;              // dwdot[H]/d[H2O2]
J[861] += dqdci;              // dwdot[OH]/d[H2O2]
J[863] += dqdci;              // dwdot[H2O]/d[H2O2]
J[864] -= dqdci;              // dwdot[H2O2]/d[H2O2]
// d()/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2772] -= dqdT;              // dwdot[H2O2]/dT

// reaction 24: H + H2O2 <=> H2 + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[16];
k_f = 21500
            * exp(1 * tc[0] - (3019.29999482832) * invT);
dlnkfdT = 1 * invT + (3019.29999482832) * invT2;
// reverse
phi_r = sc[9]*sc[14];
Kc = exp(-g_RT[9] + g_RT[11] - g_RT[14] + g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[16]) + (h_RT[9] + h_RT[14]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[14] += q;// HO2
wdot[16] -= q;// H2O2
// d()/d[H2]
dqdci =  - k_r*sc[14];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[491] += dqdci;              // dwdot[HO2]/d[H2]
J[493] -= dqdci;              // dwdot[H2O2]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[16];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[597] += dqdci;              // dwdot[HO2]/d[H]
J[599] -= dqdci;              // dwdot[H2O2]/d[H]
// d()/d[HO2]
dqdci =  - k_r*sc[9];
J[751] += dqdci;              // dwdot[H2]/d[HO2]
J[753] -= dqdci;              // dwdot[H]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[758] -= dqdci;              // dwdot[H2O2]/d[HO2]
// d()/d[H2O2]
dqdci =  + k_f*sc[11];
J[857] += dqdci;              // dwdot[H2]/d[H2O2]
J[859] -= dqdci;              // dwdot[H]/d[H2O2]
J[862] += dqdci;              // dwdot[HO2]/d[H2O2]
J[864] -= dqdci;              // dwdot[H2O2]/d[H2O2]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2772] -= dqdT;              // dwdot[H2O2]/dT

// reaction 25: H2O2 + O <=> HO2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[16];
k_f = 9.55
            * exp(2 * tc[0] - (1997.77016324474) * invT);
dlnkfdT = 2 * invT + (1997.77016324474) * invT2;
// reverse
phi_r = sc[13]*sc[14];
Kc = exp(g_RT[12] - g_RT[13] - g_RT[14] + g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[16]) + (h_RT[13] + h_RT[14]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[14] += q;// HO2
wdot[16] -= q;// H2O2
// d()/d[O]
dqdci =  + k_f*sc[16];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[650] += dqdci;              // dwdot[HO2]/d[O]
J[652] -= dqdci;              // dwdot[H2O2]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[14];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[703] += dqdci;              // dwdot[HO2]/d[OH]
J[705] -= dqdci;              // dwdot[H2O2]/d[OH]
// d()/d[HO2]
dqdci =  - k_r*sc[13];
J[754] -= dqdci;              // dwdot[O]/d[HO2]
J[755] += dqdci;              // dwdot[OH]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[758] -= dqdci;              // dwdot[H2O2]/d[HO2]
// d()/d[H2O2]
dqdci =  + k_f*sc[12];
J[860] -= dqdci;              // dwdot[O]/d[H2O2]
J[861] += dqdci;              // dwdot[OH]/d[H2O2]
J[862] += dqdci;              // dwdot[HO2]/d[H2O2]
J[864] -= dqdci;              // dwdot[H2O2]/d[H2O2]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2772] -= dqdT;              // dwdot[H2O2]/dT

// reaction 26: H2O2 + OH <=> H2O + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[16];
k_f = 1740000
            * exp(- (160.022899725901) * invT);
dlnkfdT = (160.022899725901) * invT2;
// reverse
phi_r = sc[14]*sc[15];
Kc = exp(g_RT[13] - g_RT[14] - g_RT[15] + g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[16]) + (h_RT[14] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[14] += q;// HO2
wdot[15] += q;// H2O
wdot[16] -= q;// H2O2
// d()/d[OH]
dqdci =  + k_f*sc[16];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[703] += dqdci;              // dwdot[HO2]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[705] -= dqdci;              // dwdot[H2O2]/d[OH]
// d()/d[HO2]
dqdci =  - k_r*sc[15];
J[755] -= dqdci;              // dwdot[OH]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[757] += dqdci;              // dwdot[H2O]/d[HO2]
J[758] -= dqdci;              // dwdot[H2O2]/d[HO2]
// d()/d[H2O]
dqdci =  - k_r*sc[14];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[809] += dqdci;              // dwdot[HO2]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[811] -= dqdci;              // dwdot[H2O2]/d[H2O]
// d()/d[H2O2]
dqdci =  + k_f*sc[13];
J[861] -= dqdci;              // dwdot[OH]/d[H2O2]
J[862] += dqdci;              // dwdot[HO2]/d[H2O2]
J[863] += dqdci;              // dwdot[H2O]/d[H2O2]
J[864] -= dqdci;              // dwdot[H2O2]/d[H2O2]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2772] -= dqdT;              // dwdot[H2O2]/dT

// reaction 27: H2O2 + OH <=> H2O + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[16];
k_f = 75900000
            * exp(- (3657.88194373451) * invT);
dlnkfdT = (3657.88194373451) * invT2;
// reverse
phi_r = sc[14]*sc[15];
Kc = exp(g_RT[13] - g_RT[14] - g_RT[15] + g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[16]) + (h_RT[14] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[14] += q;// HO2
wdot[15] += q;// H2O
wdot[16] -= q;// H2O2
// d()/d[OH]
dqdci =  + k_f*sc[16];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[703] += dqdci;              // dwdot[HO2]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[705] -= dqdci;              // dwdot[H2O2]/d[OH]
// d()/d[HO2]
dqdci =  - k_r*sc[15];
J[755] -= dqdci;              // dwdot[OH]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[757] += dqdci;              // dwdot[H2O]/d[HO2]
J[758] -= dqdci;              // dwdot[H2O2]/d[HO2]
// d()/d[H2O]
dqdci =  - k_r*sc[14];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[809] += dqdci;              // dwdot[HO2]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[811] -= dqdci;              // dwdot[H2O2]/d[H2O]
// d()/d[H2O2]
dqdci =  + k_f*sc[13];
J[861] -= dqdci;              // dwdot[OH]/d[H2O2]
J[862] += dqdci;              // dwdot[HO2]/d[H2O2]
J[863] += dqdci;              // dwdot[H2O]/d[H2O2]
J[864] -= dqdci;              // dwdot[H2O2]/d[H2O2]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2772] -= dqdT;              // dwdot[H2O2]/dT

// reaction 29: CO + O2 <=> CO2 + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[5]*sc[8];
k_f = 1119000
            * exp(- (24003.4349588851) * invT);
dlnkfdT = (24003.4349588851) * invT2;
// reverse
phi_r = sc[6]*sc[12];
Kc = exp(g_RT[5] - g_RT[6] + g_RT[8] - g_RT[12]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[5] + h_RT[8]) + (h_RT[6] + h_RT[12]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] -= q;// CO
wdot[6] += q;// CO2
wdot[8] -= q;// O2
wdot[12] += q;// O
// d()/d[CO]
dqdci =  + k_f*sc[8];
J[270] -= dqdci;              // dwdot[CO]/d[CO]
J[271] += dqdci;              // dwdot[CO2]/d[CO]
J[273] -= dqdci;              // dwdot[O2]/d[CO]
J[277] += dqdci;              // dwdot[O]/d[CO]
// d()/d[CO2]
dqdci =  - k_r*sc[12];
J[323] -= dqdci;              // dwdot[CO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[326] -= dqdci;              // dwdot[O2]/d[CO2]
J[330] += dqdci;              // dwdot[O]/d[CO2]
// d()/d[O2]
dqdci =  + k_f*sc[5];
J[429] -= dqdci;              // dwdot[CO]/d[O2]
J[430] += dqdci;              // dwdot[CO2]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[436] += dqdci;              // dwdot[O]/d[O2]
// d()/d[O]
dqdci =  - k_r*sc[6];
J[641] -= dqdci;              // dwdot[CO]/d[O]
J[642] += dqdci;              // dwdot[CO2]/d[O]
J[644] -= dqdci;              // dwdot[O2]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
// d()/dT
J[2761] -= dqdT;              // dwdot[CO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2768] += dqdT;              // dwdot[O]/dT

// reaction 30: CO + OH <=> CO2 + H
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[5]*sc[13];
k_f = 0.07015
            * exp(2.053 * tc[0] - (-178.994168026739) * invT);
dlnkfdT = 2.053 * invT + (-178.994168026739) * invT2;
// reverse
phi_r = sc[6]*sc[11];
Kc = exp(g_RT[5] - g_RT[6] - g_RT[11] + g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[5] + h_RT[13]) + (h_RT[6] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] -= q;// CO
wdot[6] += q;// CO2
wdot[11] += q;// H
wdot[13] -= q;// OH
// d()/d[CO]
dqdci =  + k_f*sc[13];
J[270] -= dqdci;              // dwdot[CO]/d[CO]
J[271] += dqdci;              // dwdot[CO2]/d[CO]
J[276] += dqdci;              // dwdot[H]/d[CO]
J[278] -= dqdci;              // dwdot[OH]/d[CO]
// d()/d[CO2]
dqdci =  - k_r*sc[11];
J[323] -= dqdci;              // dwdot[CO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[329] += dqdci;              // dwdot[H]/d[CO2]
J[331] -= dqdci;              // dwdot[OH]/d[CO2]
// d()/d[H]
dqdci =  - k_r*sc[6];
J[588] -= dqdci;              // dwdot[CO]/d[H]
J[589] += dqdci;              // dwdot[CO2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[5];
J[694] -= dqdci;              // dwdot[CO]/d[OH]
J[695] += dqdci;              // dwdot[CO2]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2761] -= dqdT;              // dwdot[CO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT

// reaction 31: CO + OH <=> CO2 + H
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[5]*sc[13];
k_f = 5757000
            * exp(-0.664 * tc[0] - (166.967289714006) * invT);
dlnkfdT = -0.664 * invT + (166.967289714006) * invT2;
// reverse
phi_r = sc[6]*sc[11];
Kc = exp(g_RT[5] - g_RT[6] - g_RT[11] + g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[5] + h_RT[13]) + (h_RT[6] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] -= q;// CO
wdot[6] += q;// CO2
wdot[11] += q;// H
wdot[13] -= q;// OH
// d()/d[CO]
dqdci =  + k_f*sc[13];
J[270] -= dqdci;              // dwdot[CO]/d[CO]
J[271] += dqdci;              // dwdot[CO2]/d[CO]
J[276] += dqdci;              // dwdot[H]/d[CO]
J[278] -= dqdci;              // dwdot[OH]/d[CO]
// d()/d[CO2]
dqdci =  - k_r*sc[11];
J[323] -= dqdci;              // dwdot[CO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[329] += dqdci;              // dwdot[H]/d[CO2]
J[331] -= dqdci;              // dwdot[OH]/d[CO2]
// d()/d[H]
dqdci =  - k_r*sc[6];
J[588] -= dqdci;              // dwdot[CO]/d[H]
J[589] += dqdci;              // dwdot[CO2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[5];
J[694] -= dqdci;              // dwdot[CO]/d[OH]
J[695] += dqdci;              // dwdot[CO2]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2761] -= dqdT;              // dwdot[CO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT

// reaction 32: CO + HO2 <=> CO2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[5]*sc[14];
k_f = 0.157
            * exp(2.18 * tc[0] - (9027.70698453667) * invT);
dlnkfdT = 2.18 * invT + (9027.70698453667) * invT2;
// reverse
phi_r = sc[6]*sc[13];
Kc = exp(g_RT[5] - g_RT[6] - g_RT[13] + g_RT[14]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[5] + h_RT[14]) + (h_RT[6] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] -= q;// CO
wdot[6] += q;// CO2
wdot[13] += q;// OH
wdot[14] -= q;// HO2
// d()/d[CO]
dqdci =  + k_f*sc[14];
J[270] -= dqdci;              // dwdot[CO]/d[CO]
J[271] += dqdci;              // dwdot[CO2]/d[CO]
J[278] += dqdci;              // dwdot[OH]/d[CO]
J[279] -= dqdci;              // dwdot[HO2]/d[CO]
// d()/d[CO2]
dqdci =  - k_r*sc[13];
J[323] -= dqdci;              // dwdot[CO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[331] += dqdci;              // dwdot[OH]/d[CO2]
J[332] -= dqdci;              // dwdot[HO2]/d[CO2]
// d()/d[OH]
dqdci =  - k_r*sc[6];
J[694] -= dqdci;              // dwdot[CO]/d[OH]
J[695] += dqdci;              // dwdot[CO2]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[703] -= dqdci;              // dwdot[HO2]/d[OH]
// d()/d[HO2]
dqdci =  + k_f*sc[5];
J[747] -= dqdci;              // dwdot[CO]/d[HO2]
J[748] += dqdci;              // dwdot[CO2]/d[HO2]
J[755] += dqdci;              // dwdot[OH]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
// d()/dT
J[2761] -= dqdT;              // dwdot[CO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT

// reaction 34: HCO + O2 <=> CO + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[17];
k_f = 7580000
            * exp(- (206.318832979935) * invT);
dlnkfdT = (206.318832979935) * invT2;
// reverse
phi_r = sc[5]*sc[14];
Kc = exp(-g_RT[5] + g_RT[8] - g_RT[14] + g_RT[17]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[17]) + (h_RT[5] + h_RT[14]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[8] -= q;// O2
wdot[14] += q;// HO2
wdot[17] -= q;// HCO
// d()/d[CO]
dqdci =  - k_r*sc[14];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[273] -= dqdci;              // dwdot[O2]/d[CO]
J[279] += dqdci;              // dwdot[HO2]/d[CO]
J[282] -= dqdci;              // dwdot[HCO]/d[CO]
// d()/d[O2]
dqdci =  + k_f*sc[17];
J[429] += dqdci;              // dwdot[CO]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
J[441] -= dqdci;              // dwdot[HCO]/d[O2]
// d()/d[HO2]
dqdci =  - k_r*sc[5];
J[747] += dqdci;              // dwdot[CO]/d[HO2]
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[759] -= dqdci;              // dwdot[HCO]/d[HO2]
// d()/d[HCO]
dqdci =  + k_f*sc[8];
J[906] += dqdci;              // dwdot[CO]/d[HCO]
J[909] -= dqdci;              // dwdot[O2]/d[HCO]
J[915] += dqdci;              // dwdot[HO2]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT

// reaction 35: H + HCO <=> CO + H2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[17];
k_f = 73400000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[5]*sc[9];
Kc = exp(-g_RT[5] - g_RT[9] + g_RT[11] + g_RT[17]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[17]) + (h_RT[5] + h_RT[9]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[17] -= q;// HCO
// d()/d[CO]
dqdci =  - k_r*sc[9];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[274] += dqdci;              // dwdot[H2]/d[CO]
J[276] -= dqdci;              // dwdot[H]/d[CO]
J[282] -= dqdci;              // dwdot[HCO]/d[CO]
// d()/d[H2]
dqdci =  - k_r*sc[5];
J[482] += dqdci;              // dwdot[CO]/d[H2]
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[494] -= dqdci;              // dwdot[HCO]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[17];
J[588] += dqdci;              // dwdot[CO]/d[H]
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[600] -= dqdci;              // dwdot[HCO]/d[H]
// d()/d[HCO]
dqdci =  + k_f*sc[11];
J[906] += dqdci;              // dwdot[CO]/d[HCO]
J[910] += dqdci;              // dwdot[H2]/d[HCO]
J[912] -= dqdci;              // dwdot[H]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT

// reaction 36: HCO + O <=> CO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[17];
k_f = 30200000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[5]*sc[13];
Kc = exp(-g_RT[5] + g_RT[12] - g_RT[13] + g_RT[17]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[17]) + (h_RT[5] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[17] -= q;// HCO
// d()/d[CO]
dqdci =  - k_r*sc[13];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[277] -= dqdci;              // dwdot[O]/d[CO]
J[278] += dqdci;              // dwdot[OH]/d[CO]
J[282] -= dqdci;              // dwdot[HCO]/d[CO]
// d()/d[O]
dqdci =  + k_f*sc[17];
J[641] += dqdci;              // dwdot[CO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[653] -= dqdci;              // dwdot[HCO]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[5];
J[694] += dqdci;              // dwdot[CO]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[706] -= dqdci;              // dwdot[HCO]/d[OH]
// d()/d[HCO]
dqdci =  + k_f*sc[12];
J[906] += dqdci;              // dwdot[CO]/d[HCO]
J[913] -= dqdci;              // dwdot[O]/d[HCO]
J[914] += dqdci;              // dwdot[OH]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT

// reaction 37: HCO + O <=> CO2 + H
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[17];
k_f = 30000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[6]*sc[11];
Kc = exp(-g_RT[6] - g_RT[11] + g_RT[12] + g_RT[17]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[17]) + (h_RT[6] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[6] += q;// CO2
wdot[11] += q;// H
wdot[12] -= q;// O
wdot[17] -= q;// HCO
// d()/d[CO2]
dqdci =  - k_r*sc[11];
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[329] += dqdci;              // dwdot[H]/d[CO2]
J[330] -= dqdci;              // dwdot[O]/d[CO2]
J[335] -= dqdci;              // dwdot[HCO]/d[CO2]
// d()/d[H]
dqdci =  - k_r*sc[6];
J[589] += dqdci;              // dwdot[CO2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[595] -= dqdci;              // dwdot[O]/d[H]
J[600] -= dqdci;              // dwdot[HCO]/d[H]
// d()/d[O]
dqdci =  + k_f*sc[17];
J[642] += dqdci;              // dwdot[CO2]/d[O]
J[647] += dqdci;              // dwdot[H]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[653] -= dqdci;              // dwdot[HCO]/d[O]
// d()/d[HCO]
dqdci =  + k_f*sc[12];
J[907] += dqdci;              // dwdot[CO2]/d[HCO]
J[912] += dqdci;              // dwdot[H]/d[HCO]
J[913] -= dqdci;              // dwdot[O]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
// d()/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT

// reaction 38: HCO + OH <=> CO + H2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[17];
k_f = 102000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[5]*sc[15];
Kc = exp(-g_RT[5] + g_RT[13] - g_RT[15] + g_RT[17]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[17]) + (h_RT[5] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[17] -= q;// HCO
// d()/d[CO]
dqdci =  - k_r*sc[15];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[278] -= dqdci;              // dwdot[OH]/d[CO]
J[280] += dqdci;              // dwdot[H2O]/d[CO]
J[282] -= dqdci;              // dwdot[HCO]/d[CO]
// d()/d[OH]
dqdci =  + k_f*sc[17];
J[694] += dqdci;              // dwdot[CO]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[706] -= dqdci;              // dwdot[HCO]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[5];
J[800] += dqdci;              // dwdot[CO]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[812] -= dqdci;              // dwdot[HCO]/d[H2O]
// d()/d[HCO]
dqdci =  + k_f*sc[13];
J[906] += dqdci;              // dwdot[CO]/d[HCO]
J[914] -= dqdci;              // dwdot[OH]/d[HCO]
J[916] += dqdci;              // dwdot[H2O]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT

// reaction 39: HCO + HO2 => CO2 + H + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[17];
k_f = 30000000
           ;
dlnkfdT = 0.0;
// rate of progress
q = k_f*phi_f;
dqdT = dlnkfdT*k_f*phi_f;
// update wdot
wdot[6] += q;// CO2
wdot[11] += q;// H
wdot[13] += q;// OH
wdot[14] -= q;// HO2
wdot[17] -= q;// HCO
// d()/d[HO2]
dqdci =  + k_f*sc[17];
J[748] += dqdci;              // dwdot[CO2]/d[HO2]
J[753] += dqdci;              // dwdot[H]/d[HO2]
J[755] += dqdci;              // dwdot[OH]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[759] -= dqdci;              // dwdot[HCO]/d[HO2]
// d()/d[HCO]
dqdci =  + k_f*sc[14];
J[907] += dqdci;              // dwdot[CO2]/d[HCO]
J[912] += dqdci;              // dwdot[H]/d[HCO]
J[914] += dqdci;              // dwdot[OH]/d[HCO]
J[915] -= dqdci;              // dwdot[HO2]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
// d()/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT

// reaction 40: 2 HCO => 2 CO + H2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[17] * sc[17]);
k_f = 3000000
           ;
dlnkfdT = 0.0;
// rate of progress
q = k_f*phi_f;
dqdT = dlnkfdT*k_f*phi_f;
// update wdot
wdot[5] += 2 * q;// CO
wdot[9] += q;// H2
wdot[17] -= 2 * q;// HCO
// d()/d[HCO]
dqdci =  + k_f*2.000000*sc[17];
J[906] += 2 * dqdci;          // dwdot[CO]/d[HCO]
J[910] += dqdci;              // dwdot[H2]/d[HCO]
J[918] += -2 * dqdci;         // dwdot[HCO]/d[HCO]
// d()/dT
J[2761] += 2 * dqdT;          // dwdot[CO]/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2773] += -2 * dqdT;         // dwdot[HCO]/dT

// reaction 41: CH2O + O2 <=> HCO + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[18];
k_f = 8070000000
            * exp(- (26881.8342872881) * invT);
dlnkfdT = (26881.8342872881) * invT2;
// reverse
phi_r = sc[14]*sc[17];
Kc = exp(g_RT[8] - g_RT[14] - g_RT[17] + g_RT[18]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[18]) + (h_RT[14] + h_RT[17]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[14] += q;// HO2
wdot[17] += q;// HCO
wdot[18] -= q;// CH2O
// d()/d[O2]
dqdci =  + k_f*sc[18];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
J[441] += dqdci;              // dwdot[HCO]/d[O2]
J[442] -= dqdci;              // dwdot[CH2O]/d[O2]
// d()/d[HO2]
dqdci =  - k_r*sc[17];
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[759] += dqdci;              // dwdot[HCO]/d[HO2]
J[760] -= dqdci;              // dwdot[CH2O]/d[HO2]
// d()/d[HCO]
dqdci =  - k_r*sc[14];
J[909] -= dqdci;              // dwdot[O2]/d[HCO]
J[915] += dqdci;              // dwdot[HO2]/d[HCO]
J[918] += dqdci;              // dwdot[HCO]/d[HCO]
J[919] -= dqdci;              // dwdot[CH2O]/d[HCO]
// d()/d[CH2O]
dqdci =  + k_f*sc[8];
J[962] -= dqdci;              // dwdot[O2]/d[CH2O]
J[968] += dqdci;              // dwdot[HO2]/d[CH2O]
J[971] += dqdci;              // dwdot[HCO]/d[CH2O]
J[972] -= dqdci;              // dwdot[CH2O]/d[CH2O]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2773] += dqdT;              // dwdot[HCO]/dT
J[2774] -= dqdT;              // dwdot[CH2O]/dT

// reaction 42: 2 HCO <=> CH2O + CO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[17] * sc[17]);
k_f = 18000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[5]*sc[18];
Kc = exp(-g_RT[5] + 2.000000*g_RT[17] - g_RT[18]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[17]) + (h_RT[5] + h_RT[18]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[17] -= 2 * q;// HCO
wdot[18] += q;// CH2O
// d()/d[CO]
dqdci =  - k_r*sc[18];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[282] += -2 * dqdci;         // dwdot[HCO]/d[CO]
J[283] += dqdci;              // dwdot[CH2O]/d[CO]
// d()/d[HCO]
dqdci =  + k_f*2.000000*sc[17];
J[906] += dqdci;              // dwdot[CO]/d[HCO]
J[918] += -2 * dqdci;         // dwdot[HCO]/d[HCO]
J[919] += dqdci;              // dwdot[CH2O]/d[HCO]
// d()/d[CH2O]
dqdci =  - k_r*sc[5];
J[959] += dqdci;              // dwdot[CO]/d[CH2O]
J[971] += -2 * dqdci;         // dwdot[HCO]/d[CH2O]
J[972] += dqdci;              // dwdot[CH2O]/d[CH2O]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2773] += -2 * dqdT;         // dwdot[HCO]/dT
J[2774] += dqdT;              // dwdot[CH2O]/dT

// reaction 46: CN + H2 <=> H + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[9]*sc[29];
k_f = 0.11
            * exp(2.6 * tc[0] - (960.137398355405) * invT);
dlnkfdT = 2.6 * invT + (960.137398355405) * invT2;
// reverse
phi_r = sc[1]*sc[11];
Kc = exp(-g_RT[1] + g_RT[9] - g_RT[11] + g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[9] + h_RT[29]) + (h_RT[1] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[9] -= q;// H2
wdot[11] += q;// H
wdot[29] -= q;// CN
// d()/d[HCN]
dqdci =  - k_r*sc[11];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[62] -= dqdci;               // dwdot[H2]/d[HCN]
J[64] += dqdci;               // dwdot[H]/d[HCN]
J[82] -= dqdci;               // dwdot[CN]/d[HCN]
// d()/d[H2]
dqdci =  + k_f*sc[29];
J[478] += dqdci;              // dwdot[HCN]/d[H2]
J[486] -= dqdci;              // dwdot[H2]/d[H2]
J[488] += dqdci;              // dwdot[H]/d[H2]
J[506] -= dqdci;              // dwdot[CN]/d[H2]
// d()/d[H]
dqdci =  - k_r*sc[1];
J[584] += dqdci;              // dwdot[HCN]/d[H]
J[592] -= dqdci;              // dwdot[H2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[612] -= dqdci;              // dwdot[CN]/d[H]
// d()/d[CN]
dqdci =  + k_f*sc[9];
J[1538] += dqdci;             // dwdot[HCN]/d[CN]
J[1546] -= dqdci;             // dwdot[H2]/d[CN]
J[1548] += dqdci;             // dwdot[H]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2765] -= dqdT;              // dwdot[H2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT

// reaction 47: HCN + O <=> H + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[12];
k_f = 0.014
            * exp(2.64 * tc[0] - (2506.0189957075) * invT);
dlnkfdT = 2.64 * invT + (2506.0189957075) * invT2;
// reverse
phi_r = sc[11]*sc[30];
Kc = exp(g_RT[1] - g_RT[11] + g_RT[12] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[12]) + (h_RT[11] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[11] += q;// H
wdot[12] -= q;// O
wdot[30] += q;// NCO
// d()/d[HCN]
dqdci =  + k_f*sc[12];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[64] += dqdci;               // dwdot[H]/d[HCN]
J[65] -= dqdci;               // dwdot[O]/d[HCN]
J[83] += dqdci;               // dwdot[NCO]/d[HCN]
// d()/d[H]
dqdci =  - k_r*sc[30];
J[584] -= dqdci;              // dwdot[HCN]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[595] -= dqdci;              // dwdot[O]/d[H]
J[613] += dqdci;              // dwdot[NCO]/d[H]
// d()/d[O]
dqdci =  + k_f*sc[1];
J[637] -= dqdci;              // dwdot[HCN]/d[O]
J[647] += dqdci;              // dwdot[H]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[666] += dqdci;              // dwdot[NCO]/d[O]
// d()/d[NCO]
dqdci =  - k_r*sc[11];
J[1591] -= dqdci;             // dwdot[HCN]/d[NCO]
J[1601] += dqdci;             // dwdot[H]/d[NCO]
J[1602] -= dqdci;             // dwdot[O]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 48: HCN + O <=> CN + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[12];
k_f = 42000
            * exp(0.4 * tc[0] - (10398.9723988545) * invT);
dlnkfdT = 0.4 * invT + (10398.9723988545) * invT2;
// reverse
phi_r = sc[13]*sc[29];
Kc = exp(g_RT[1] + g_RT[12] - g_RT[13] - g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[12]) + (h_RT[13] + h_RT[29]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[29] += q;// CN
// d()/d[HCN]
dqdci =  + k_f*sc[12];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[65] -= dqdci;               // dwdot[O]/d[HCN]
J[66] += dqdci;               // dwdot[OH]/d[HCN]
J[82] += dqdci;               // dwdot[CN]/d[HCN]
// d()/d[O]
dqdci =  + k_f*sc[1];
J[637] -= dqdci;              // dwdot[HCN]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[665] += dqdci;              // dwdot[CN]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[29];
J[690] -= dqdci;              // dwdot[HCN]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[718] += dqdci;              // dwdot[CN]/d[OH]
// d()/d[CN]
dqdci =  - k_r*sc[13];
J[1538] -= dqdci;             // dwdot[HCN]/d[CN]
J[1549] -= dqdci;             // dwdot[O]/d[CN]
J[1550] += dqdci;             // dwdot[OH]/d[CN]
J[1566] += dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2785] += dqdT;              // dwdot[CN]/dT

// reaction 49: HCN + O <=> CO + NH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[12];
k_f = 0.0035
            * exp(2.64 * tc[0] - (2506.0189957075) * invT);
dlnkfdT = 2.64 * invT + (2506.0189957075) * invT2;
// reverse
phi_r = sc[5]*sc[28];
Kc = exp(g_RT[1] - g_RT[5] + g_RT[12] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[12]) + (h_RT[5] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[5] += q;// CO
wdot[12] -= q;// O
wdot[28] += q;// NH
// d()/d[HCN]
dqdci =  + k_f*sc[12];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[58] += dqdci;               // dwdot[CO]/d[HCN]
J[65] -= dqdci;               // dwdot[O]/d[HCN]
J[81] += dqdci;               // dwdot[NH]/d[HCN]
// d()/d[CO]
dqdci =  - k_r*sc[28];
J[266] -= dqdci;              // dwdot[HCN]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[277] -= dqdci;              // dwdot[O]/d[CO]
J[293] += dqdci;              // dwdot[NH]/d[CO]
// d()/d[O]
dqdci =  + k_f*sc[1];
J[637] -= dqdci;              // dwdot[HCN]/d[O]
J[641] += dqdci;              // dwdot[CO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[664] += dqdci;              // dwdot[NH]/d[O]
// d()/d[NH]
dqdci =  - k_r*sc[5];
J[1485] -= dqdci;             // dwdot[HCN]/d[NH]
J[1489] += dqdci;             // dwdot[CO]/d[NH]
J[1496] -= dqdci;             // dwdot[O]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 50: HCN + OH <=> CN + H2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[13];
k_f = 3.9
            * exp(1.83 * tc[0] - (5183.13165778861) * invT);
dlnkfdT = 1.83 * invT + (5183.13165778861) * invT2;
// reverse
phi_r = sc[15]*sc[29];
Kc = exp(g_RT[1] + g_RT[13] - g_RT[15] - g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[13]) + (h_RT[15] + h_RT[29]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[29] += q;// CN
// d()/d[HCN]
dqdci =  + k_f*sc[13];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[66] -= dqdci;               // dwdot[OH]/d[HCN]
J[68] += dqdci;               // dwdot[H2O]/d[HCN]
J[82] += dqdci;               // dwdot[CN]/d[HCN]
// d()/d[OH]
dqdci =  + k_f*sc[1];
J[690] -= dqdci;              // dwdot[HCN]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[718] += dqdci;              // dwdot[CN]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[29];
J[796] -= dqdci;              // dwdot[HCN]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[824] += dqdci;              // dwdot[CN]/d[H2O]
// d()/d[CN]
dqdci =  - k_r*sc[15];
J[1538] -= dqdci;             // dwdot[HCN]/d[CN]
J[1550] -= dqdci;             // dwdot[OH]/d[CN]
J[1552] += dqdci;             // dwdot[H2O]/d[CN]
J[1566] += dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2785] += dqdT;              // dwdot[CN]/dT

// reaction 51: HCN + OH <=> H + HOCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[13];
k_f = 0.059
            * exp(2.4 * tc[0] - (6290.208322559) * invT);
dlnkfdT = 2.4 * invT + (6290.208322559) * invT2;
// reverse
phi_r = sc[11]*sc[32];
Kc = exp(g_RT[1] - g_RT[11] + g_RT[13] - g_RT[32]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[13]) + (h_RT[11] + h_RT[32]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[11] += q;// H
wdot[13] -= q;// OH
wdot[32] += q;// HOCN
// d()/d[HCN]
dqdci =  + k_f*sc[13];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[64] += dqdci;               // dwdot[H]/d[HCN]
J[66] -= dqdci;               // dwdot[OH]/d[HCN]
J[85] += dqdci;               // dwdot[HOCN]/d[HCN]
// d()/d[H]
dqdci =  - k_r*sc[32];
J[584] -= dqdci;              // dwdot[HCN]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
J[615] += dqdci;              // dwdot[HOCN]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[1];
J[690] -= dqdci;              // dwdot[HCN]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[721] += dqdci;              // dwdot[HOCN]/d[OH]
// d()/d[HOCN]
dqdci =  - k_r*sc[11];
J[1697] -= dqdci;             // dwdot[HCN]/d[HOCN]
J[1707] += dqdci;             // dwdot[H]/d[HOCN]
J[1709] -= dqdci;             // dwdot[OH]/d[HOCN]
J[1728] += dqdci;             // dwdot[HOCN]/d[HOCN]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2788] += dqdT;              // dwdot[HOCN]/dT

// reaction 52: HCN + OH <=> H + HNCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[13];
k_f = 2e-09
            * exp(4 * tc[0] - (503.21666580472) * invT);
dlnkfdT = 4 * invT + (503.21666580472) * invT2;
// reverse
phi_r = sc[2]*sc[11];
Kc = exp(g_RT[1] - g_RT[2] - g_RT[11] + g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[13]) + (h_RT[2] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[2] += q;// HNCO
wdot[11] += q;// H
wdot[13] -= q;// OH
// d()/d[HCN]
dqdci =  + k_f*sc[13];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[55] += dqdci;               // dwdot[HNCO]/d[HCN]
J[64] += dqdci;               // dwdot[H]/d[HCN]
J[66] -= dqdci;               // dwdot[OH]/d[HCN]
// d()/d[HNCO]
dqdci =  - k_r*sc[11];
J[107] -= dqdci;              // dwdot[HCN]/d[HNCO]
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[117] += dqdci;              // dwdot[H]/d[HNCO]
J[119] -= dqdci;              // dwdot[OH]/d[HNCO]
// d()/d[H]
dqdci =  - k_r*sc[2];
J[584] -= dqdci;              // dwdot[HCN]/d[H]
J[585] += dqdci;              // dwdot[HNCO]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[1];
J[690] -= dqdci;              // dwdot[HCN]/d[OH]
J[691] += dqdci;              // dwdot[HNCO]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT

// reaction 53: HCN + OH <=> CO + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[13];
k_f = 7.8e-10
            * exp(4 * tc[0] - (2012.86666321888) * invT);
dlnkfdT = 4 * invT + (2012.86666321888) * invT2;
// reverse
phi_r = sc[5]*sc[27];
Kc = exp(g_RT[1] - g_RT[5] + g_RT[13] - g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[13]) + (h_RT[5] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[5] += q;// CO
wdot[13] -= q;// OH
wdot[27] += q;// NH2
// d()/d[HCN]
dqdci =  + k_f*sc[13];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[58] += dqdci;               // dwdot[CO]/d[HCN]
J[66] -= dqdci;               // dwdot[OH]/d[HCN]
J[80] += dqdci;               // dwdot[NH2]/d[HCN]
// d()/d[CO]
dqdci =  - k_r*sc[27];
J[266] -= dqdci;              // dwdot[HCN]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[278] -= dqdci;              // dwdot[OH]/d[CO]
J[292] += dqdci;              // dwdot[NH2]/d[CO]
// d()/d[OH]
dqdci =  + k_f*sc[1];
J[690] -= dqdci;              // dwdot[HCN]/d[OH]
J[694] += dqdci;              // dwdot[CO]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[716] += dqdci;              // dwdot[NH2]/d[OH]
// d()/d[NH2]
dqdci =  - k_r*sc[5];
J[1432] -= dqdci;             // dwdot[HCN]/d[NH2]
J[1436] += dqdci;             // dwdot[CO]/d[NH2]
J[1444] -= dqdci;             // dwdot[OH]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT

// reaction 54: HCN + O2 <=> CN + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[8];
k_f = 30000000
            * exp(- (37791.5716019344) * invT);
dlnkfdT = (37791.5716019344) * invT2;
// reverse
phi_r = sc[14]*sc[29];
Kc = exp(g_RT[1] + g_RT[8] - g_RT[14] - g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[8]) + (h_RT[14] + h_RT[29]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[8] -= q;// O2
wdot[14] += q;// HO2
wdot[29] += q;// CN
// d()/d[HCN]
dqdci =  + k_f*sc[8];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[61] -= dqdci;               // dwdot[O2]/d[HCN]
J[67] += dqdci;               // dwdot[HO2]/d[HCN]
J[82] += dqdci;               // dwdot[CN]/d[HCN]
// d()/d[O2]
dqdci =  + k_f*sc[1];
J[425] -= dqdci;              // dwdot[HCN]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
J[453] += dqdci;              // dwdot[CN]/d[O2]
// d()/d[HO2]
dqdci =  - k_r*sc[29];
J[743] -= dqdci;              // dwdot[HCN]/d[HO2]
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[771] += dqdci;              // dwdot[CN]/d[HO2]
// d()/d[CN]
dqdci =  - k_r*sc[14];
J[1538] -= dqdci;             // dwdot[HCN]/d[CN]
J[1545] -= dqdci;             // dwdot[O2]/d[CN]
J[1551] += dqdci;             // dwdot[HO2]/d[CN]
J[1566] += dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2785] += dqdT;              // dwdot[CN]/dT

// reaction 55: CN + HCN <=> H + NCCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[29];
k_f = 15
            * exp(1.71 * tc[0] - (769.921498681221) * invT);
dlnkfdT = 1.71 * invT + (769.921498681221) * invT2;
// reverse
phi_r = sc[11]*sc[31];
Kc = exp(g_RT[1] - g_RT[11] + g_RT[29] - g_RT[31]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[29]) + (h_RT[11] + h_RT[31]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[11] += q;// H
wdot[29] -= q;// CN
wdot[31] += q;// NCCN
// d()/d[HCN]
dqdci =  + k_f*sc[29];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[64] += dqdci;               // dwdot[H]/d[HCN]
J[82] -= dqdci;               // dwdot[CN]/d[HCN]
J[84] += dqdci;               // dwdot[NCCN]/d[HCN]
// d()/d[H]
dqdci =  - k_r*sc[31];
J[584] -= dqdci;              // dwdot[HCN]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[612] -= dqdci;              // dwdot[CN]/d[H]
J[614] += dqdci;              // dwdot[NCCN]/d[H]
// d()/d[CN]
dqdci =  + k_f*sc[1];
J[1538] -= dqdci;             // dwdot[HCN]/d[CN]
J[1548] += dqdci;             // dwdot[H]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1568] += dqdci;             // dwdot[NCCN]/d[CN]
// d()/d[NCCN]
dqdci =  - k_r*sc[11];
J[1644] -= dqdci;             // dwdot[HCN]/d[NCCN]
J[1654] += dqdci;             // dwdot[H]/d[NCCN]
J[1672] -= dqdci;             // dwdot[CN]/d[NCCN]
J[1674] += dqdci;             // dwdot[NCCN]/d[NCCN]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2787] += dqdT;              // dwdot[NCCN]/dT

// reaction 56: H + HNC <=> H + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[7]*sc[11];
k_f = 78000000
            * exp(- (1811.57999689699) * invT);
dlnkfdT = (1811.57999689699) * invT2;
// reverse
phi_r = sc[1]*sc[11];
Kc = exp(-g_RT[1] + g_RT[7] + g_RT[11] - g_RT[11]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[7] + h_RT[11]) + (h_RT[1] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[7] -= q;// HNC
// d()/d[HCN]
dqdci =  - k_r*sc[11];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[60] -= dqdci;               // dwdot[HNC]/d[HCN]
// d()/d[HNC]
dqdci =  + k_f*sc[11];
J[372] += dqdci;              // dwdot[HCN]/d[HNC]
J[378] -= dqdci;              // dwdot[HNC]/d[HNC]
// d()/d[H]
dqdci =  + k_f*sc[7] - k_r*sc[1];
J[584] += dqdci;              // dwdot[HCN]/d[H]
J[590] -= dqdci;              // dwdot[HNC]/d[H]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2763] -= dqdT;              // dwdot[HNC]/dT

// reaction 57: HNC + O <=> CO + NH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[7]*sc[12];
k_f = 4600000
            * exp(- (1107.07666477038) * invT);
dlnkfdT = (1107.07666477038) * invT2;
// reverse
phi_r = sc[5]*sc[28];
Kc = exp(-g_RT[5] + g_RT[7] + g_RT[12] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[7] + h_RT[12]) + (h_RT[5] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[7] -= q;// HNC
wdot[12] -= q;// O
wdot[28] += q;// NH
// d()/d[CO]
dqdci =  - k_r*sc[28];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[272] -= dqdci;              // dwdot[HNC]/d[CO]
J[277] -= dqdci;              // dwdot[O]/d[CO]
J[293] += dqdci;              // dwdot[NH]/d[CO]
// d()/d[HNC]
dqdci =  + k_f*sc[12];
J[376] += dqdci;              // dwdot[CO]/d[HNC]
J[378] -= dqdci;              // dwdot[HNC]/d[HNC]
J[383] -= dqdci;              // dwdot[O]/d[HNC]
J[399] += dqdci;              // dwdot[NH]/d[HNC]
// d()/d[O]
dqdci =  + k_f*sc[7];
J[641] += dqdci;              // dwdot[CO]/d[O]
J[643] -= dqdci;              // dwdot[HNC]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[664] += dqdci;              // dwdot[NH]/d[O]
// d()/d[NH]
dqdci =  - k_r*sc[5];
J[1489] += dqdci;             // dwdot[CO]/d[NH]
J[1491] -= dqdci;             // dwdot[HNC]/d[NH]
J[1496] -= dqdci;             // dwdot[O]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2763] -= dqdT;              // dwdot[HNC]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 58: HNC + OH <=> H + HNCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[7]*sc[13];
k_f = 28000000
            * exp(- (1861.90166347746) * invT);
dlnkfdT = (1861.90166347746) * invT2;
// reverse
phi_r = sc[2]*sc[11];
Kc = exp(-g_RT[2] + g_RT[7] - g_RT[11] + g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[7] + h_RT[13]) + (h_RT[2] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[7] -= q;// HNC
wdot[11] += q;// H
wdot[13] -= q;// OH
// d()/d[HNCO]
dqdci =  - k_r*sc[11];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[113] -= dqdci;              // dwdot[HNC]/d[HNCO]
J[117] += dqdci;              // dwdot[H]/d[HNCO]
J[119] -= dqdci;              // dwdot[OH]/d[HNCO]
// d()/d[HNC]
dqdci =  + k_f*sc[13];
J[373] += dqdci;              // dwdot[HNCO]/d[HNC]
J[378] -= dqdci;              // dwdot[HNC]/d[HNC]
J[382] += dqdci;              // dwdot[H]/d[HNC]
J[384] -= dqdci;              // dwdot[OH]/d[HNC]
// d()/d[H]
dqdci =  - k_r*sc[2];
J[585] += dqdci;              // dwdot[HNCO]/d[H]
J[590] -= dqdci;              // dwdot[HNC]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[7];
J[691] += dqdci;              // dwdot[HNCO]/d[OH]
J[696] -= dqdci;              // dwdot[HNC]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2763] -= dqdT;              // dwdot[HNC]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT

// reaction 59: CN + HNC <=> H + NCCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[7]*sc[29];
k_f = 10000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[11]*sc[31];
Kc = exp(g_RT[7] - g_RT[11] + g_RT[29] - g_RT[31]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[7] + h_RT[29]) + (h_RT[11] + h_RT[31]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[7] -= q;// HNC
wdot[11] += q;// H
wdot[29] -= q;// CN
wdot[31] += q;// NCCN
// d()/d[HNC]
dqdci =  + k_f*sc[29];
J[378] -= dqdci;              // dwdot[HNC]/d[HNC]
J[382] += dqdci;              // dwdot[H]/d[HNC]
J[400] -= dqdci;              // dwdot[CN]/d[HNC]
J[402] += dqdci;              // dwdot[NCCN]/d[HNC]
// d()/d[H]
dqdci =  - k_r*sc[31];
J[590] -= dqdci;              // dwdot[HNC]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[612] -= dqdci;              // dwdot[CN]/d[H]
J[614] += dqdci;              // dwdot[NCCN]/d[H]
// d()/d[CN]
dqdci =  + k_f*sc[7];
J[1544] -= dqdci;             // dwdot[HNC]/d[CN]
J[1548] += dqdci;             // dwdot[H]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1568] += dqdci;             // dwdot[NCCN]/d[CN]
// d()/d[NCCN]
dqdci =  - k_r*sc[11];
J[1650] -= dqdci;             // dwdot[HNC]/d[NCCN]
J[1654] += dqdci;             // dwdot[H]/d[NCCN]
J[1672] -= dqdci;             // dwdot[CN]/d[NCCN]
J[1674] += dqdci;             // dwdot[NCCN]/d[NCCN]
// d()/dT
J[2763] -= dqdT;              // dwdot[HNC]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2787] += dqdT;              // dwdot[NCCN]/dT

// reaction 60: CN + O <=> CO + N
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[29];
k_f = 1900000
            * exp(0.46 * tc[0] - (363.825649376812) * invT);
dlnkfdT = 0.46 * invT + (363.825649376812) * invT2;
// reverse
phi_r = sc[5]*sc[25];
Kc = exp(-g_RT[5] + g_RT[12] - g_RT[25] + g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[29]) + (h_RT[5] + h_RT[25]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[12] -= q;// O
wdot[25] += q;// N
wdot[29] -= q;// CN
// d()/d[CO]
dqdci =  - k_r*sc[25];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[277] -= dqdci;              // dwdot[O]/d[CO]
J[290] += dqdci;              // dwdot[N]/d[CO]
J[294] -= dqdci;              // dwdot[CN]/d[CO]
// d()/d[O]
dqdci =  + k_f*sc[29];
J[641] += dqdci;              // dwdot[CO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[661] += dqdci;              // dwdot[N]/d[O]
J[665] -= dqdci;              // dwdot[CN]/d[O]
// d()/d[N]
dqdci =  - k_r*sc[5];
J[1330] += dqdci;             // dwdot[CO]/d[N]
J[1337] -= dqdci;             // dwdot[O]/d[N]
J[1350] += dqdci;             // dwdot[N]/d[N]
J[1354] -= dqdci;             // dwdot[CN]/d[N]
// d()/d[CN]
dqdci =  + k_f*sc[12];
J[1542] += dqdci;             // dwdot[CO]/d[CN]
J[1549] -= dqdci;             // dwdot[O]/d[CN]
J[1562] += dqdci;             // dwdot[N]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2781] += dqdT;              // dwdot[N]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT

// reaction 61: CN + OH <=> H + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[29];
k_f = 1000000000
            * exp(-0.437 * tc[0]);
dlnkfdT = -0.437 * invT;
// reverse
phi_r = sc[11]*sc[30];
Kc = exp(-g_RT[11] + g_RT[13] + g_RT[29] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[29]) + (h_RT[11] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[13] -= q;// OH
wdot[29] -= q;// CN
wdot[30] += q;// NCO
// d()/d[H]
dqdci =  - k_r*sc[30];
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
J[612] -= dqdci;              // dwdot[CN]/d[H]
J[613] += dqdci;              // dwdot[NCO]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[29];
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[718] -= dqdci;              // dwdot[CN]/d[OH]
J[719] += dqdci;              // dwdot[NCO]/d[OH]
// d()/d[CN]
dqdci =  + k_f*sc[13];
J[1548] += dqdci;             // dwdot[H]/d[CN]
J[1550] -= dqdci;             // dwdot[OH]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1567] += dqdci;             // dwdot[NCO]/d[CN]
// d()/d[NCO]
dqdci =  - k_r*sc[11];
J[1601] += dqdci;             // dwdot[H]/d[NCO]
J[1603] -= dqdci;             // dwdot[OH]/d[NCO]
J[1619] -= dqdci;             // dwdot[CN]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 62: CN + O2 <=> NCO + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[29];
k_f = 7200000
            * exp(- (-209.841349640568) * invT);
dlnkfdT = (-209.841349640568) * invT2;
// reverse
phi_r = sc[12]*sc[30];
Kc = exp(g_RT[8] - g_RT[12] + g_RT[29] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[29]) + (h_RT[12] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[12] += q;// O
wdot[29] -= q;// CN
wdot[30] += q;// NCO
// d()/d[O2]
dqdci =  + k_f*sc[29];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[436] += dqdci;              // dwdot[O]/d[O2]
J[453] -= dqdci;              // dwdot[CN]/d[O2]
J[454] += dqdci;              // dwdot[NCO]/d[O2]
// d()/d[O]
dqdci =  - k_r*sc[30];
J[644] -= dqdci;              // dwdot[O2]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[665] -= dqdci;              // dwdot[CN]/d[O]
J[666] += dqdci;              // dwdot[NCO]/d[O]
// d()/d[CN]
dqdci =  + k_f*sc[8];
J[1545] -= dqdci;             // dwdot[O2]/d[CN]
J[1549] += dqdci;             // dwdot[O]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1567] += dqdci;             // dwdot[NCO]/d[CN]
// d()/d[NCO]
dqdci =  - k_r*sc[12];
J[1598] -= dqdci;             // dwdot[O2]/d[NCO]
J[1602] += dqdci;             // dwdot[O]/d[NCO]
J[1619] -= dqdci;             // dwdot[CN]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 63: CN + O2 <=> NCO + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[29];
k_f = -280000000000
            * exp(-2 * tc[0]);
dlnkfdT = -2 * invT;
// reverse
phi_r = sc[12]*sc[30];
Kc = exp(g_RT[8] - g_RT[12] + g_RT[29] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[29]) + (h_RT[12] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[12] += q;// O
wdot[29] -= q;// CN
wdot[30] += q;// NCO
// d()/d[O2]
dqdci =  + k_f*sc[29];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[436] += dqdci;              // dwdot[O]/d[O2]
J[453] -= dqdci;              // dwdot[CN]/d[O2]
J[454] += dqdci;              // dwdot[NCO]/d[O2]
// d()/d[O]
dqdci =  - k_r*sc[30];
J[644] -= dqdci;              // dwdot[O2]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[665] -= dqdci;              // dwdot[CN]/d[O]
J[666] += dqdci;              // dwdot[NCO]/d[O]
// d()/d[CN]
dqdci =  + k_f*sc[8];
J[1545] -= dqdci;             // dwdot[O2]/d[CN]
J[1549] += dqdci;             // dwdot[O]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1567] += dqdci;             // dwdot[NCO]/d[CN]
// d()/d[NCO]
dqdci =  - k_r*sc[12];
J[1598] -= dqdci;             // dwdot[O2]/d[NCO]
J[1602] += dqdci;             // dwdot[O]/d[NCO]
J[1619] -= dqdci;             // dwdot[CN]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 64: CN + O2 <=> CO + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[29];
k_f = 280000000000
            * exp(-2 * tc[0]);
dlnkfdT = -2 * invT;
// reverse
phi_r = sc[3]*sc[5];
Kc = exp(-g_RT[3] - g_RT[5] + g_RT[8] + g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[29]) + (h_RT[3] + h_RT[5]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[5] += q;// CO
wdot[8] -= q;// O2
wdot[29] -= q;// CN
// d()/d[NO]
dqdci =  - k_r*sc[5];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[164] += dqdci;              // dwdot[CO]/d[NO]
J[167] -= dqdci;              // dwdot[O2]/d[NO]
J[188] -= dqdci;              // dwdot[CN]/d[NO]
// d()/d[CO]
dqdci =  - k_r*sc[3];
J[268] += dqdci;              // dwdot[NO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[273] -= dqdci;              // dwdot[O2]/d[CO]
J[294] -= dqdci;              // dwdot[CN]/d[CO]
// d()/d[O2]
dqdci =  + k_f*sc[29];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[429] += dqdci;              // dwdot[CO]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[453] -= dqdci;              // dwdot[CN]/d[O2]
// d()/d[CN]
dqdci =  + k_f*sc[8];
J[1540] += dqdci;             // dwdot[NO]/d[CN]
J[1542] += dqdci;             // dwdot[CO]/d[CN]
J[1545] -= dqdci;             // dwdot[O2]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT

// reaction 65: CN + CO2 <=> CO + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[6]*sc[29];
k_f = 3.7
            * exp(2.16 * tc[0] - (13536.528310147) * invT);
dlnkfdT = 2.16 * invT + (13536.528310147) * invT2;
// reverse
phi_r = sc[5]*sc[30];
Kc = exp(-g_RT[5] + g_RT[6] + g_RT[29] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[6] + h_RT[29]) + (h_RT[5] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[6] -= q;// CO2
wdot[29] -= q;// CN
wdot[30] += q;// NCO
// d()/d[CO]
dqdci =  - k_r*sc[30];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[271] -= dqdci;              // dwdot[CO2]/d[CO]
J[294] -= dqdci;              // dwdot[CN]/d[CO]
J[295] += dqdci;              // dwdot[NCO]/d[CO]
// d()/d[CO2]
dqdci =  + k_f*sc[29];
J[323] += dqdci;              // dwdot[CO]/d[CO2]
J[324] -= dqdci;              // dwdot[CO2]/d[CO2]
J[347] -= dqdci;              // dwdot[CN]/d[CO2]
J[348] += dqdci;              // dwdot[NCO]/d[CO2]
// d()/d[CN]
dqdci =  + k_f*sc[6];
J[1542] += dqdci;             // dwdot[CO]/d[CN]
J[1543] -= dqdci;             // dwdot[CO2]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1567] += dqdci;             // dwdot[NCO]/d[CN]
// d()/d[NCO]
dqdci =  - k_r*sc[5];
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1596] -= dqdci;             // dwdot[CO2]/d[NCO]
J[1619] -= dqdci;             // dwdot[CN]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2762] -= dqdT;              // dwdot[CO2]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 66: CH2O + CN <=> HCN + HCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[18]*sc[29];
k_f = 42000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[1]*sc[17];
Kc = exp(-g_RT[1] - g_RT[17] + g_RT[18] + g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[18] + h_RT[29]) + (h_RT[1] + h_RT[17]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[17] += q;// HCO
wdot[18] -= q;// CH2O
wdot[29] -= q;// CN
// d()/d[HCN]
dqdci =  - k_r*sc[17];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[70] += dqdci;               // dwdot[HCO]/d[HCN]
J[71] -= dqdci;               // dwdot[CH2O]/d[HCN]
J[82] -= dqdci;               // dwdot[CN]/d[HCN]
// d()/d[HCO]
dqdci =  - k_r*sc[1];
J[902] += dqdci;              // dwdot[HCN]/d[HCO]
J[918] += dqdci;              // dwdot[HCO]/d[HCO]
J[919] -= dqdci;              // dwdot[CH2O]/d[HCO]
J[930] -= dqdci;              // dwdot[CN]/d[HCO]
// d()/d[CH2O]
dqdci =  + k_f*sc[29];
J[955] += dqdci;              // dwdot[HCN]/d[CH2O]
J[971] += dqdci;              // dwdot[HCO]/d[CH2O]
J[972] -= dqdci;              // dwdot[CH2O]/d[CH2O]
J[983] -= dqdci;              // dwdot[CN]/d[CH2O]
// d()/d[CN]
dqdci =  + k_f*sc[18];
J[1538] += dqdci;             // dwdot[HCN]/d[CN]
J[1554] += dqdci;             // dwdot[HCO]/d[CN]
J[1555] -= dqdci;             // dwdot[CH2O]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2773] += dqdT;              // dwdot[HCO]/dT
J[2774] -= dqdT;              // dwdot[CH2O]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT

// reaction 67: CN + NO <=> N + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[29];
k_f = 96000000
            * exp(- (21185.4216303787) * invT);
dlnkfdT = (21185.4216303787) * invT2;
// reverse
phi_r = sc[25]*sc[30];
Kc = exp(g_RT[3] - g_RT[25] + g_RT[29] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[29]) + (h_RT[25] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[25] += q;// N
wdot[29] -= q;// CN
wdot[30] += q;// NCO
// d()/d[NO]
dqdci =  + k_f*sc[29];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[184] += dqdci;              // dwdot[N]/d[NO]
J[188] -= dqdci;              // dwdot[CN]/d[NO]
J[189] += dqdci;              // dwdot[NCO]/d[NO]
// d()/d[N]
dqdci =  - k_r*sc[30];
J[1328] -= dqdci;             // dwdot[NO]/d[N]
J[1350] += dqdci;             // dwdot[N]/d[N]
J[1354] -= dqdci;             // dwdot[CN]/d[N]
J[1355] += dqdci;             // dwdot[NCO]/d[N]
// d()/d[CN]
dqdci =  + k_f*sc[3];
J[1540] -= dqdci;             // dwdot[NO]/d[CN]
J[1562] += dqdci;             // dwdot[N]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1567] += dqdci;             // dwdot[NCO]/d[CN]
// d()/d[NCO]
dqdci =  - k_r*sc[25];
J[1593] -= dqdci;             // dwdot[NO]/d[NCO]
J[1615] += dqdci;             // dwdot[N]/d[NCO]
J[1619] -= dqdci;             // dwdot[CN]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2781] += dqdT;              // dwdot[N]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 68: CN + NO2 <=> NCO + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[29];
k_f = 5300000000
            * exp(-0.752 * tc[0] - (173.106533036824) * invT);
dlnkfdT = -0.752 * invT + (173.106533036824) * invT2;
// reverse
phi_r = sc[3]*sc[30];
Kc = exp(-g_RT[3] + g_RT[19] + g_RT[29] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[29]) + (h_RT[3] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[19] -= q;// NO2
wdot[29] -= q;// CN
wdot[30] += q;// NCO
// d()/d[NO]
dqdci =  - k_r*sc[30];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
J[188] -= dqdci;              // dwdot[CN]/d[NO]
J[189] += dqdci;              // dwdot[NCO]/d[NO]
// d()/d[NO2]
dqdci =  + k_f*sc[29];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1036] -= dqdci;             // dwdot[CN]/d[NO2]
J[1037] += dqdci;             // dwdot[NCO]/d[NO2]
// d()/d[CN]
dqdci =  + k_f*sc[19];
J[1540] += dqdci;             // dwdot[NO]/d[CN]
J[1556] -= dqdci;             // dwdot[NO2]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1567] += dqdci;             // dwdot[NCO]/d[CN]
// d()/d[NCO]
dqdci =  - k_r*sc[3];
J[1593] += dqdci;             // dwdot[NO]/d[NCO]
J[1609] -= dqdci;             // dwdot[NO2]/d[NCO]
J[1619] -= dqdci;             // dwdot[CN]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 69: CN + NO2 <=> CO + N2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[29];
k_f = 490000000
            * exp(-0.752 * tc[0] - (173.106533036824) * invT);
dlnkfdT = -0.752 * invT + (173.106533036824) * invT2;
// reverse
phi_r = sc[4]*sc[5];
Kc = exp(-g_RT[4] - g_RT[5] + g_RT[19] + g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[29]) + (h_RT[4] + h_RT[5]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] += q;// N2O
wdot[5] += q;// CO
wdot[19] -= q;// NO2
wdot[29] -= q;// CN
// d()/d[N2O]
dqdci =  - k_r*sc[5];
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[217] += dqdci;              // dwdot[CO]/d[N2O]
J[231] -= dqdci;              // dwdot[NO2]/d[N2O]
J[241] -= dqdci;              // dwdot[CN]/d[N2O]
// d()/d[CO]
dqdci =  - k_r*sc[4];
J[269] += dqdci;              // dwdot[N2O]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[284] -= dqdci;              // dwdot[NO2]/d[CO]
J[294] -= dqdci;              // dwdot[CN]/d[CO]
// d()/d[NO2]
dqdci =  + k_f*sc[29];
J[1011] += dqdci;             // dwdot[N2O]/d[NO2]
J[1012] += dqdci;             // dwdot[CO]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1036] -= dqdci;             // dwdot[CN]/d[NO2]
// d()/d[CN]
dqdci =  + k_f*sc[19];
J[1541] += dqdci;             // dwdot[N2O]/d[CN]
J[1542] += dqdci;             // dwdot[CO]/d[CN]
J[1556] -= dqdci;             // dwdot[NO2]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT

// reaction 70: CN + NO2 <=> CO2 + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[29];
k_f = 370000000
            * exp(-0.752 * tc[0] - (173.106533036824) * invT);
dlnkfdT = -0.752 * invT + (173.106533036824) * invT2;
// reverse
phi_r = sc[6]*sc[45];
Kc = exp(-g_RT[6] + g_RT[19] + g_RT[29] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[29]) + (h_RT[6] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[6] += q;// CO2
wdot[19] -= q;// NO2
wdot[29] -= q;// CN
wdot[45] += q;// N2
// d()/d[CO2]
dqdci =  - k_r*sc[45];
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[337] -= dqdci;              // dwdot[NO2]/d[CO2]
J[347] -= dqdci;              // dwdot[CN]/d[CO2]
J[363] += dqdci;              // dwdot[N2]/d[CO2]
// d()/d[NO2]
dqdci =  + k_f*sc[29];
J[1013] += dqdci;             // dwdot[CO2]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1036] -= dqdci;             // dwdot[CN]/d[NO2]
J[1052] += dqdci;             // dwdot[N2]/d[NO2]
// d()/d[CN]
dqdci =  + k_f*sc[19];
J[1543] += dqdci;             // dwdot[CO2]/d[CN]
J[1556] -= dqdci;             // dwdot[NO2]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1582] += dqdci;             // dwdot[N2]/d[CN]
// d()/d[N2]
dqdci =  - k_r*sc[6];
J[2391] += dqdci;             // dwdot[CO2]/d[N2]
J[2404] -= dqdci;             // dwdot[NO2]/d[N2]
J[2414] -= dqdci;             // dwdot[CN]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 71: CN + HNO <=> HCN + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[21]*sc[29];
k_f = 18000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[1]*sc[3];
Kc = exp(-g_RT[1] - g_RT[3] + g_RT[21] + g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[21] + h_RT[29]) + (h_RT[1] + h_RT[3]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[3] += q;// NO
wdot[21] -= q;// HNO
wdot[29] -= q;// CN
// d()/d[HCN]
dqdci =  - k_r*sc[3];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[56] += dqdci;               // dwdot[NO]/d[HCN]
J[74] -= dqdci;               // dwdot[HNO]/d[HCN]
J[82] -= dqdci;               // dwdot[CN]/d[HCN]
// d()/d[NO]
dqdci =  - k_r*sc[1];
J[160] += dqdci;              // dwdot[HCN]/d[NO]
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
J[188] -= dqdci;              // dwdot[CN]/d[NO]
// d()/d[HNO]
dqdci =  + k_f*sc[29];
J[1114] += dqdci;             // dwdot[HCN]/d[HNO]
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
J[1142] -= dqdci;             // dwdot[CN]/d[HNO]
// d()/d[CN]
dqdci =  + k_f*sc[21];
J[1538] += dqdci;             // dwdot[HCN]/d[CN]
J[1540] += dqdci;             // dwdot[NO]/d[CN]
J[1558] -= dqdci;             // dwdot[HNO]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT

// reaction 72: CN + HONO <=> HCN + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[23]*sc[29];
k_f = 12000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[1]*sc[19];
Kc = exp(-g_RT[1] - g_RT[19] + g_RT[23] + g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[23] + h_RT[29]) + (h_RT[1] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[19] += q;// NO2
wdot[23] -= q;// HONO
wdot[29] -= q;// CN
// d()/d[HCN]
dqdci =  - k_r*sc[19];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[72] += dqdci;               // dwdot[NO2]/d[HCN]
J[76] -= dqdci;               // dwdot[HONO]/d[HCN]
J[82] -= dqdci;               // dwdot[CN]/d[HCN]
// d()/d[NO2]
dqdci =  - k_r*sc[1];
J[1008] += dqdci;             // dwdot[HCN]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1030] -= dqdci;             // dwdot[HONO]/d[NO2]
J[1036] -= dqdci;             // dwdot[CN]/d[NO2]
// d()/d[HONO]
dqdci =  + k_f*sc[29];
J[1220] += dqdci;             // dwdot[HCN]/d[HONO]
J[1238] += dqdci;             // dwdot[NO2]/d[HONO]
J[1242] -= dqdci;             // dwdot[HONO]/d[HONO]
J[1248] -= dqdci;             // dwdot[CN]/d[HONO]
// d()/d[CN]
dqdci =  + k_f*sc[23];
J[1538] += dqdci;             // dwdot[HCN]/d[CN]
J[1556] += dqdci;             // dwdot[NO2]/d[CN]
J[1560] -= dqdci;             // dwdot[HONO]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2779] -= dqdT;              // dwdot[HONO]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT

// reaction 73: CN + N2O <=> NCN + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[29];
k_f = 0.0038
            * exp(2.6 * tc[0] - (1861.90166347746) * invT);
dlnkfdT = 2.6 * invT + (1861.90166347746) * invT2;
// reverse
phi_r = sc[3]*sc[34];
Kc = exp(-g_RT[3] + g_RT[4] + g_RT[29] - g_RT[34]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[29]) + (h_RT[3] + h_RT[34]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[4] -= q;// N2O
wdot[29] -= q;// CN
wdot[34] += q;// NCN
// d()/d[NO]
dqdci =  - k_r*sc[34];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[163] -= dqdci;              // dwdot[N2O]/d[NO]
J[188] -= dqdci;              // dwdot[CN]/d[NO]
J[193] += dqdci;              // dwdot[NCN]/d[NO]
// d()/d[N2O]
dqdci =  + k_f*sc[29];
J[215] += dqdci;              // dwdot[NO]/d[N2O]
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[241] -= dqdci;              // dwdot[CN]/d[N2O]
J[246] += dqdci;              // dwdot[NCN]/d[N2O]
// d()/d[CN]
dqdci =  + k_f*sc[4];
J[1540] += dqdci;             // dwdot[NO]/d[CN]
J[1541] -= dqdci;             // dwdot[N2O]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1571] += dqdci;             // dwdot[NCN]/d[CN]
// d()/d[NCN]
dqdci =  - k_r*sc[3];
J[1805] += dqdci;             // dwdot[NO]/d[NCN]
J[1806] -= dqdci;             // dwdot[N2O]/d[NCN]
J[1831] -= dqdci;             // dwdot[CN]/d[NCN]
J[1836] += dqdci;             // dwdot[NCN]/d[NCN]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2790] += dqdT;              // dwdot[NCN]/dT

// reaction 74: CN + HNCO <=> HCN + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[29];
k_f = 10000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[1]*sc[30];
Kc = exp(-g_RT[1] + g_RT[2] + g_RT[29] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[29]) + (h_RT[1] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[2] -= q;// HNCO
wdot[29] -= q;// CN
wdot[30] += q;// NCO
// d()/d[HCN]
dqdci =  - k_r*sc[30];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[55] -= dqdci;               // dwdot[HNCO]/d[HCN]
J[82] -= dqdci;               // dwdot[CN]/d[HCN]
J[83] += dqdci;               // dwdot[NCO]/d[HCN]
// d()/d[HNCO]
dqdci =  + k_f*sc[29];
J[107] += dqdci;              // dwdot[HCN]/d[HNCO]
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[135] -= dqdci;              // dwdot[CN]/d[HNCO]
J[136] += dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[CN]
dqdci =  + k_f*sc[2];
J[1538] += dqdci;             // dwdot[HCN]/d[CN]
J[1539] -= dqdci;             // dwdot[HNCO]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1567] += dqdci;             // dwdot[NCO]/d[CN]
// d()/d[NCO]
dqdci =  - k_r*sc[1];
J[1591] += dqdci;             // dwdot[HCN]/d[NCO]
J[1592] -= dqdci;             // dwdot[HNCO]/d[NCO]
J[1619] -= dqdci;             // dwdot[CN]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 75: CN + NCO <=> CO + NCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[29]*sc[30];
k_f = 18000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[5]*sc[34];
Kc = exp(-g_RT[5] + g_RT[29] + g_RT[30] - g_RT[34]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[29] + h_RT[30]) + (h_RT[5] + h_RT[34]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[29] -= q;// CN
wdot[30] -= q;// NCO
wdot[34] += q;// NCN
// d()/d[CO]
dqdci =  - k_r*sc[34];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[294] -= dqdci;              // dwdot[CN]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
J[299] += dqdci;              // dwdot[NCN]/d[CO]
// d()/d[CN]
dqdci =  + k_f*sc[30];
J[1542] += dqdci;             // dwdot[CO]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1567] -= dqdci;             // dwdot[NCO]/d[CN]
J[1571] += dqdci;             // dwdot[NCN]/d[CN]
// d()/d[NCO]
dqdci =  + k_f*sc[29];
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1619] -= dqdci;             // dwdot[CN]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
J[1624] += dqdci;             // dwdot[NCN]/d[NCO]
// d()/d[NCN]
dqdci =  - k_r*sc[5];
J[1807] += dqdci;             // dwdot[CO]/d[NCN]
J[1831] -= dqdci;             // dwdot[CN]/d[NCN]
J[1832] -= dqdci;             // dwdot[NCO]/d[NCN]
J[1836] += dqdci;             // dwdot[NCN]/d[NCN]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT
J[2790] += dqdT;              // dwdot[NCN]/dT

// reaction 77: H + HNCO <=> CO + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[11];
k_f = 0.036
            * exp(2.49 * tc[0] - (1180.04308131207) * invT);
dlnkfdT = 2.49 * invT + (1180.04308131207) * invT2;
// reverse
phi_r = sc[5]*sc[27];
Kc = exp(g_RT[2] - g_RT[5] + g_RT[11] - g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[11]) + (h_RT[5] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[5] += q;// CO
wdot[11] -= q;// H
wdot[27] += q;// NH2
// d()/d[HNCO]
dqdci =  + k_f*sc[11];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[111] += dqdci;              // dwdot[CO]/d[HNCO]
J[117] -= dqdci;              // dwdot[H]/d[HNCO]
J[133] += dqdci;              // dwdot[NH2]/d[HNCO]
// d()/d[CO]
dqdci =  - k_r*sc[27];
J[267] -= dqdci;              // dwdot[HNCO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[276] -= dqdci;              // dwdot[H]/d[CO]
J[292] += dqdci;              // dwdot[NH2]/d[CO]
// d()/d[H]
dqdci =  + k_f*sc[2];
J[585] -= dqdci;              // dwdot[HNCO]/d[H]
J[588] += dqdci;              // dwdot[CO]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[610] += dqdci;              // dwdot[NH2]/d[H]
// d()/d[NH2]
dqdci =  - k_r*sc[5];
J[1433] -= dqdci;             // dwdot[HNCO]/d[NH2]
J[1436] += dqdci;             // dwdot[CO]/d[NH2]
J[1442] -= dqdci;             // dwdot[H]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT

// reaction 78: H + HNCO <=> H2 + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[11];
k_f = 90
            * exp(1.66 * tc[0] - (6994.7116546856) * invT);
dlnkfdT = 1.66 * invT + (6994.7116546856) * invT2;
// reverse
phi_r = sc[9]*sc[30];
Kc = exp(g_RT[2] - g_RT[9] + g_RT[11] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[11]) + (h_RT[9] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[30] += q;// NCO
// d()/d[HNCO]
dqdci =  + k_f*sc[11];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[115] += dqdci;              // dwdot[H2]/d[HNCO]
J[117] -= dqdci;              // dwdot[H]/d[HNCO]
J[136] += dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[H2]
dqdci =  - k_r*sc[30];
J[479] -= dqdci;              // dwdot[HNCO]/d[H2]
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[507] += dqdci;              // dwdot[NCO]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[2];
J[585] -= dqdci;              // dwdot[HNCO]/d[H]
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[613] += dqdci;              // dwdot[NCO]/d[H]
// d()/d[NCO]
dqdci =  - k_r*sc[9];
J[1592] -= dqdci;             // dwdot[HNCO]/d[NCO]
J[1599] += dqdci;             // dwdot[H2]/d[NCO]
J[1601] -= dqdci;             // dwdot[H]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 79: HNCO + O <=> NCO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[12];
k_f = 2.2
            * exp(2.11 * tc[0] - (5751.76649014795) * invT);
dlnkfdT = 2.11 * invT + (5751.76649014795) * invT2;
// reverse
phi_r = sc[13]*sc[30];
Kc = exp(g_RT[2] + g_RT[12] - g_RT[13] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[12]) + (h_RT[13] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[30] += q;// NCO
// d()/d[HNCO]
dqdci =  + k_f*sc[12];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[118] -= dqdci;              // dwdot[O]/d[HNCO]
J[119] += dqdci;              // dwdot[OH]/d[HNCO]
J[136] += dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[O]
dqdci =  + k_f*sc[2];
J[638] -= dqdci;              // dwdot[HNCO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[666] += dqdci;              // dwdot[NCO]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[30];
J[691] -= dqdci;              // dwdot[HNCO]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[719] += dqdci;              // dwdot[NCO]/d[OH]
// d()/d[NCO]
dqdci =  - k_r*sc[13];
J[1592] -= dqdci;             // dwdot[HNCO]/d[NCO]
J[1602] -= dqdci;             // dwdot[O]/d[NCO]
J[1603] += dqdci;             // dwdot[OH]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 80: HNCO + O <=> CO2 + NH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[12];
k_f = 96
            * exp(1.41 * tc[0] - (4287.40599265621) * invT);
dlnkfdT = 1.41 * invT + (4287.40599265621) * invT2;
// reverse
phi_r = sc[6]*sc[28];
Kc = exp(g_RT[2] - g_RT[6] + g_RT[12] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[12]) + (h_RT[6] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[6] += q;// CO2
wdot[12] -= q;// O
wdot[28] += q;// NH
// d()/d[HNCO]
dqdci =  + k_f*sc[12];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[112] += dqdci;              // dwdot[CO2]/d[HNCO]
J[118] -= dqdci;              // dwdot[O]/d[HNCO]
J[134] += dqdci;              // dwdot[NH]/d[HNCO]
// d()/d[CO2]
dqdci =  - k_r*sc[28];
J[320] -= dqdci;              // dwdot[HNCO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[330] -= dqdci;              // dwdot[O]/d[CO2]
J[346] += dqdci;              // dwdot[NH]/d[CO2]
// d()/d[O]
dqdci =  + k_f*sc[2];
J[638] -= dqdci;              // dwdot[HNCO]/d[O]
J[642] += dqdci;              // dwdot[CO2]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[664] += dqdci;              // dwdot[NH]/d[O]
// d()/d[NH]
dqdci =  - k_r*sc[6];
J[1486] -= dqdci;             // dwdot[HNCO]/d[NH]
J[1490] += dqdci;             // dwdot[CO2]/d[NH]
J[1496] -= dqdci;             // dwdot[O]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 81: HNCO + O <=> CO + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[12];
k_f = 150
            * exp(1.57 * tc[0] - (22147.5718953973) * invT);
dlnkfdT = 1.57 * invT + (22147.5718953973) * invT2;
// reverse
phi_r = sc[5]*sc[21];
Kc = exp(g_RT[2] - g_RT[5] + g_RT[12] - g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[12]) + (h_RT[5] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[5] += q;// CO
wdot[12] -= q;// O
wdot[21] += q;// HNO
// d()/d[HNCO]
dqdci =  + k_f*sc[12];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[111] += dqdci;              // dwdot[CO]/d[HNCO]
J[118] -= dqdci;              // dwdot[O]/d[HNCO]
J[127] += dqdci;              // dwdot[HNO]/d[HNCO]
// d()/d[CO]
dqdci =  - k_r*sc[21];
J[267] -= dqdci;              // dwdot[HNCO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[277] -= dqdci;              // dwdot[O]/d[CO]
J[286] += dqdci;              // dwdot[HNO]/d[CO]
// d()/d[O]
dqdci =  + k_f*sc[2];
J[638] -= dqdci;              // dwdot[HNCO]/d[O]
J[641] += dqdci;              // dwdot[CO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[657] += dqdci;              // dwdot[HNO]/d[O]
// d()/d[HNO]
dqdci =  - k_r*sc[5];
J[1115] -= dqdci;             // dwdot[HNCO]/d[HNO]
J[1118] += dqdci;             // dwdot[CO]/d[HNO]
J[1125] -= dqdci;             // dwdot[O]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT

// reaction 82: HNCO + OH <=> H2O + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[13];
k_f = 36
            * exp(1.5 * tc[0] - (1811.57999689699) * invT);
dlnkfdT = 1.5 * invT + (1811.57999689699) * invT2;
// reverse
phi_r = sc[15]*sc[30];
Kc = exp(g_RT[2] + g_RT[13] - g_RT[15] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[13]) + (h_RT[15] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[30] += q;// NCO
// d()/d[HNCO]
dqdci =  + k_f*sc[13];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[119] -= dqdci;              // dwdot[OH]/d[HNCO]
J[121] += dqdci;              // dwdot[H2O]/d[HNCO]
J[136] += dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[OH]
dqdci =  + k_f*sc[2];
J[691] -= dqdci;              // dwdot[HNCO]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[719] += dqdci;              // dwdot[NCO]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[30];
J[797] -= dqdci;              // dwdot[HNCO]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[825] += dqdci;              // dwdot[NCO]/d[H2O]
// d()/d[NCO]
dqdci =  - k_r*sc[15];
J[1592] -= dqdci;             // dwdot[HNCO]/d[NCO]
J[1603] -= dqdci;             // dwdot[OH]/d[NCO]
J[1605] += dqdci;             // dwdot[H2O]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 83: HNCO + HO2 <=> H2O2 + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[14];
k_f = 300000
            * exp(- (11070.7666477038) * invT);
dlnkfdT = (11070.7666477038) * invT2;
// reverse
phi_r = sc[16]*sc[30];
Kc = exp(g_RT[2] + g_RT[14] - g_RT[16] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[14]) + (h_RT[16] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[14] -= q;// HO2
wdot[16] += q;// H2O2
wdot[30] += q;// NCO
// d()/d[HNCO]
dqdci =  + k_f*sc[14];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[120] -= dqdci;              // dwdot[HO2]/d[HNCO]
J[122] += dqdci;              // dwdot[H2O2]/d[HNCO]
J[136] += dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[HO2]
dqdci =  + k_f*sc[2];
J[744] -= dqdci;              // dwdot[HNCO]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[758] += dqdci;              // dwdot[H2O2]/d[HO2]
J[772] += dqdci;              // dwdot[NCO]/d[HO2]
// d()/d[H2O2]
dqdci =  - k_r*sc[30];
J[850] -= dqdci;              // dwdot[HNCO]/d[H2O2]
J[862] -= dqdci;              // dwdot[HO2]/d[H2O2]
J[864] += dqdci;              // dwdot[H2O2]/d[H2O2]
J[878] += dqdci;              // dwdot[NCO]/d[H2O2]
// d()/d[NCO]
dqdci =  - k_r*sc[16];
J[1592] -= dqdci;             // dwdot[HNCO]/d[NCO]
J[1604] -= dqdci;             // dwdot[HO2]/d[NCO]
J[1606] += dqdci;             // dwdot[H2O2]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2772] += dqdT;              // dwdot[H2O2]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 84: HNCO + O2 <=> CO2 + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[8];
k_f = 1000000
            * exp(- (17612.5833031652) * invT);
dlnkfdT = (17612.5833031652) * invT2;
// reverse
phi_r = sc[6]*sc[21];
Kc = exp(g_RT[2] - g_RT[6] + g_RT[8] - g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[8]) + (h_RT[6] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[6] += q;// CO2
wdot[8] -= q;// O2
wdot[21] += q;// HNO
// d()/d[HNCO]
dqdci =  + k_f*sc[8];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[112] += dqdci;              // dwdot[CO2]/d[HNCO]
J[114] -= dqdci;              // dwdot[O2]/d[HNCO]
J[127] += dqdci;              // dwdot[HNO]/d[HNCO]
// d()/d[CO2]
dqdci =  - k_r*sc[21];
J[320] -= dqdci;              // dwdot[HNCO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[326] -= dqdci;              // dwdot[O2]/d[CO2]
J[339] += dqdci;              // dwdot[HNO]/d[CO2]
// d()/d[O2]
dqdci =  + k_f*sc[2];
J[426] -= dqdci;              // dwdot[HNCO]/d[O2]
J[430] += dqdci;              // dwdot[CO2]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[445] += dqdci;              // dwdot[HNO]/d[O2]
// d()/d[HNO]
dqdci =  - k_r*sc[6];
J[1115] -= dqdci;             // dwdot[HNCO]/d[HNO]
J[1119] += dqdci;             // dwdot[CO2]/d[HNO]
J[1121] -= dqdci;             // dwdot[O2]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT

// reaction 85: HNCO + NH <=> NCO + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[28];
k_f = 30000000
            * exp(- (11926.2349795719) * invT);
dlnkfdT = (11926.2349795719) * invT2;
// reverse
phi_r = sc[27]*sc[30];
Kc = exp(g_RT[2] - g_RT[27] + g_RT[28] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[28]) + (h_RT[27] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[27] += q;// NH2
wdot[28] -= q;// NH
wdot[30] += q;// NCO
// d()/d[HNCO]
dqdci =  + k_f*sc[28];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[133] += dqdci;              // dwdot[NH2]/d[HNCO]
J[134] -= dqdci;              // dwdot[NH]/d[HNCO]
J[136] += dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[NH2]
dqdci =  - k_r*sc[30];
J[1433] -= dqdci;             // dwdot[HNCO]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
J[1459] -= dqdci;             // dwdot[NH]/d[NH2]
J[1461] += dqdci;             // dwdot[NCO]/d[NH2]
// d()/d[NH]
dqdci =  + k_f*sc[2];
J[1486] -= dqdci;             // dwdot[HNCO]/d[NH]
J[1511] += dqdci;             // dwdot[NH2]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
J[1514] += dqdci;             // dwdot[NCO]/d[NH]
// d()/d[NCO]
dqdci =  - k_r*sc[27];
J[1592] -= dqdci;             // dwdot[HNCO]/d[NCO]
J[1617] += dqdci;             // dwdot[NH2]/d[NCO]
J[1618] -= dqdci;             // dwdot[NH]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 86: H + HOCN <=> H + HNCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[32];
k_f = 310
            * exp(0.84 * tc[0] - (964.666348347648) * invT);
dlnkfdT = 0.84 * invT + (964.666348347648) * invT2;
// reverse
phi_r = sc[2]*sc[11];
Kc = exp(-g_RT[2] + g_RT[11] - g_RT[11] + g_RT[32]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[32]) + (h_RT[2] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[32] -= q;// HOCN
// d()/d[HNCO]
dqdci =  - k_r*sc[11];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[138] -= dqdci;              // dwdot[HOCN]/d[HNCO]
// d()/d[H]
dqdci =  + k_f*sc[32] - k_r*sc[2];
J[585] += dqdci;              // dwdot[HNCO]/d[H]
J[615] -= dqdci;              // dwdot[HOCN]/d[H]
// d()/d[HOCN]
dqdci =  + k_f*sc[11];
J[1698] += dqdci;             // dwdot[HNCO]/d[HOCN]
J[1728] -= dqdci;             // dwdot[HOCN]/d[HOCN]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2788] -= dqdT;              // dwdot[HOCN]/dT

// reaction 87: H + HOCN <=> CO + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[32];
k_f = 120
            * exp(0.61 * tc[0] - (1044.6777982106) * invT);
dlnkfdT = 0.61 * invT + (1044.6777982106) * invT2;
// reverse
phi_r = sc[5]*sc[27];
Kc = exp(-g_RT[5] + g_RT[11] - g_RT[27] + g_RT[32]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[32]) + (h_RT[5] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[11] -= q;// H
wdot[27] += q;// NH2
wdot[32] -= q;// HOCN
// d()/d[CO]
dqdci =  - k_r*sc[27];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[276] -= dqdci;              // dwdot[H]/d[CO]
J[292] += dqdci;              // dwdot[NH2]/d[CO]
J[297] -= dqdci;              // dwdot[HOCN]/d[CO]
// d()/d[H]
dqdci =  + k_f*sc[32];
J[588] += dqdci;              // dwdot[CO]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[610] += dqdci;              // dwdot[NH2]/d[H]
J[615] -= dqdci;              // dwdot[HOCN]/d[H]
// d()/d[NH2]
dqdci =  - k_r*sc[5];
J[1436] += dqdci;             // dwdot[CO]/d[NH2]
J[1442] -= dqdci;             // dwdot[H]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
J[1463] -= dqdci;             // dwdot[HOCN]/d[NH2]
// d()/d[HOCN]
dqdci =  + k_f*sc[11];
J[1701] += dqdci;             // dwdot[CO]/d[HOCN]
J[1707] -= dqdci;             // dwdot[H]/d[HOCN]
J[1723] += dqdci;             // dwdot[NH2]/d[HOCN]
J[1728] -= dqdci;             // dwdot[HOCN]/d[HOCN]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT
J[2788] -= dqdT;              // dwdot[HOCN]/dT

// reaction 88: H + HOCN <=> H2 + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[32];
k_f = 240
            * exp(1.5 * tc[0] - (3329.78467762983) * invT);
dlnkfdT = 1.5 * invT + (3329.78467762983) * invT2;
// reverse
phi_r = sc[9]*sc[30];
Kc = exp(-g_RT[9] + g_RT[11] - g_RT[30] + g_RT[32]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[32]) + (h_RT[9] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[30] += q;// NCO
wdot[32] -= q;// HOCN
// d()/d[H2]
dqdci =  - k_r*sc[30];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[507] += dqdci;              // dwdot[NCO]/d[H2]
J[509] -= dqdci;              // dwdot[HOCN]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[32];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[613] += dqdci;              // dwdot[NCO]/d[H]
J[615] -= dqdci;              // dwdot[HOCN]/d[H]
// d()/d[NCO]
dqdci =  - k_r*sc[9];
J[1599] += dqdci;             // dwdot[H2]/d[NCO]
J[1601] -= dqdci;             // dwdot[H]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
J[1622] -= dqdci;             // dwdot[HOCN]/d[NCO]
// d()/d[HOCN]
dqdci =  + k_f*sc[11];
J[1705] += dqdci;             // dwdot[H2]/d[HOCN]
J[1707] -= dqdci;             // dwdot[H]/d[HOCN]
J[1726] += dqdci;             // dwdot[NCO]/d[HOCN]
J[1728] -= dqdci;             // dwdot[HOCN]/d[HOCN]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT
J[2788] -= dqdT;              // dwdot[HOCN]/dT

// reaction 89: HOCN + O <=> NCO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[32];
k_f = 170
            * exp(1.5 * tc[0] - (2079.79447977091) * invT);
dlnkfdT = 1.5 * invT + (2079.79447977091) * invT2;
// reverse
phi_r = sc[13]*sc[30];
Kc = exp(g_RT[12] - g_RT[13] - g_RT[30] + g_RT[32]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[32]) + (h_RT[13] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[30] += q;// NCO
wdot[32] -= q;// HOCN
// d()/d[O]
dqdci =  + k_f*sc[32];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[666] += dqdci;              // dwdot[NCO]/d[O]
J[668] -= dqdci;              // dwdot[HOCN]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[30];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[719] += dqdci;              // dwdot[NCO]/d[OH]
J[721] -= dqdci;              // dwdot[HOCN]/d[OH]
// d()/d[NCO]
dqdci =  - k_r*sc[13];
J[1602] -= dqdci;             // dwdot[O]/d[NCO]
J[1603] += dqdci;             // dwdot[OH]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
J[1622] -= dqdci;             // dwdot[HOCN]/d[NCO]
// d()/d[HOCN]
dqdci =  + k_f*sc[12];
J[1708] -= dqdci;             // dwdot[O]/d[HOCN]
J[1709] += dqdci;             // dwdot[OH]/d[HOCN]
J[1726] += dqdci;             // dwdot[NCO]/d[HOCN]
J[1728] -= dqdci;             // dwdot[HOCN]/d[HOCN]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT
J[2788] -= dqdT;              // dwdot[HOCN]/dT

// reaction 90: HOCN + OH <=> H2O + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[32];
k_f = 1.2
            * exp(2 * tc[0] - (-124.79773311957) * invT);
dlnkfdT = 2 * invT + (-124.79773311957) * invT2;
// reverse
phi_r = sc[15]*sc[30];
Kc = exp(g_RT[13] - g_RT[15] - g_RT[30] + g_RT[32]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[32]) + (h_RT[15] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[30] += q;// NCO
wdot[32] -= q;// HOCN
// d()/d[OH]
dqdci =  + k_f*sc[32];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[719] += dqdci;              // dwdot[NCO]/d[OH]
J[721] -= dqdci;              // dwdot[HOCN]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[30];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[825] += dqdci;              // dwdot[NCO]/d[H2O]
J[827] -= dqdci;              // dwdot[HOCN]/d[H2O]
// d()/d[NCO]
dqdci =  - k_r*sc[15];
J[1603] -= dqdci;             // dwdot[OH]/d[NCO]
J[1605] += dqdci;             // dwdot[H2O]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
J[1622] -= dqdci;             // dwdot[HOCN]/d[NCO]
// d()/d[HOCN]
dqdci =  + k_f*sc[13];
J[1709] -= dqdci;             // dwdot[OH]/d[HOCN]
J[1711] += dqdci;             // dwdot[H2O]/d[HOCN]
J[1726] += dqdci;             // dwdot[NCO]/d[HOCN]
J[1728] -= dqdci;             // dwdot[HOCN]/d[HOCN]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT
J[2788] -= dqdT;              // dwdot[HOCN]/dT

// reaction 91: HOCN + NH2 <=> NCO + NH3
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[27]*sc[32];
k_f = 0.92
            * exp(1.94 * tc[0] - (1834.72796352401) * invT);
dlnkfdT = 1.94 * invT + (1834.72796352401) * invT2;
// reverse
phi_r = sc[20]*sc[30];
Kc = exp(-g_RT[20] + g_RT[27] - g_RT[30] + g_RT[32]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[27] + h_RT[32]) + (h_RT[20] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[20] += q;// NH3
wdot[27] -= q;// NH2
wdot[30] += q;// NCO
wdot[32] -= q;// HOCN
// d()/d[NH3]
dqdci =  - k_r*sc[30];
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1087] -= dqdci;             // dwdot[NH2]/d[NH3]
J[1090] += dqdci;             // dwdot[NCO]/d[NH3]
J[1092] -= dqdci;             // dwdot[HOCN]/d[NH3]
// d()/d[NH2]
dqdci =  + k_f*sc[32];
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1461] += dqdci;             // dwdot[NCO]/d[NH2]
J[1463] -= dqdci;             // dwdot[HOCN]/d[NH2]
// d()/d[NCO]
dqdci =  - k_r*sc[20];
J[1610] += dqdci;             // dwdot[NH3]/d[NCO]
J[1617] -= dqdci;             // dwdot[NH2]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
J[1622] -= dqdci;             // dwdot[HOCN]/d[NCO]
// d()/d[HOCN]
dqdci =  + k_f*sc[27];
J[1716] += dqdci;             // dwdot[NH3]/d[HOCN]
J[1723] -= dqdci;             // dwdot[NH2]/d[HOCN]
J[1726] += dqdci;             // dwdot[NCO]/d[HOCN]
J[1728] -= dqdci;             // dwdot[HOCN]/d[HOCN]
// d()/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT
J[2788] -= dqdT;              // dwdot[HOCN]/dT

// reaction 92: HCNO <=> HCN + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[33];
k_f = 4.2e+31
            * exp(-6.12 * tc[0] - (30801.8921139069) * invT);
dlnkfdT = -6.12 * invT + (30801.8921139069) * invT2;
// reverse
phi_r = sc[1]*sc[12];
Kc = refC * exp(-g_RT[1] - g_RT[12] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[33]) + (h_RT[1] + h_RT[12]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[12] += q;// O
wdot[33] -= q;// HCNO
// d()/d[HCN]
dqdci =  - k_r*sc[12];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[65] += dqdci;               // dwdot[O]/d[HCN]
J[86] -= dqdci;               // dwdot[HCNO]/d[HCN]
// d()/d[O]
dqdci =  - k_r*sc[1];
J[637] += dqdci;              // dwdot[HCN]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[669] -= dqdci;              // dwdot[HCNO]/d[O]
// d()/d[HCNO]
dqdci =  + k_f;
J[1750] += dqdci;             // dwdot[HCN]/d[HCNO]
J[1761] += dqdci;             // dwdot[O]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 93: H + HCNO <=> HCN + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[33];
k_f = 72000
            * exp(0.841 * tc[0] - (4333.70192591025) * invT);
dlnkfdT = 0.841 * invT + (4333.70192591025) * invT2;
// reverse
phi_r = sc[1]*sc[13];
Kc = exp(-g_RT[1] + g_RT[11] - g_RT[13] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[33]) + (h_RT[1] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[33] -= q;// HCNO
// d()/d[HCN]
dqdci =  - k_r*sc[13];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[64] -= dqdci;               // dwdot[H]/d[HCN]
J[66] += dqdci;               // dwdot[OH]/d[HCN]
J[86] -= dqdci;               // dwdot[HCNO]/d[HCN]
// d()/d[H]
dqdci =  + k_f*sc[33];
J[584] += dqdci;              // dwdot[HCN]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[616] -= dqdci;              // dwdot[HCNO]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[1];
J[690] += dqdci;              // dwdot[HCN]/d[OH]
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[722] -= dqdci;              // dwdot[HCNO]/d[OH]
// d()/d[HCNO]
dqdci =  + k_f*sc[11];
J[1750] += dqdci;             // dwdot[HCN]/d[HCNO]
J[1760] -= dqdci;             // dwdot[H]/d[HCNO]
J[1762] += dqdci;             // dwdot[OH]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 94: HCNO + O <=> HCO + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[33];
k_f = 63000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[3]*sc[17];
Kc = exp(-g_RT[3] + g_RT[12] - g_RT[17] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[33]) + (h_RT[3] + h_RT[17]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[12] -= q;// O
wdot[17] += q;// HCO
wdot[33] -= q;// HCNO
// d()/d[NO]
dqdci =  - k_r*sc[17];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[171] -= dqdci;              // dwdot[O]/d[NO]
J[176] += dqdci;              // dwdot[HCO]/d[NO]
J[192] -= dqdci;              // dwdot[HCNO]/d[NO]
// d()/d[O]
dqdci =  + k_f*sc[33];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[653] += dqdci;              // dwdot[HCO]/d[O]
J[669] -= dqdci;              // dwdot[HCNO]/d[O]
// d()/d[HCO]
dqdci =  - k_r*sc[3];
J[904] += dqdci;              // dwdot[NO]/d[HCO]
J[913] -= dqdci;              // dwdot[O]/d[HCO]
J[918] += dqdci;              // dwdot[HCO]/d[HCO]
J[934] -= dqdci;              // dwdot[HCNO]/d[HCO]
// d()/d[HCNO]
dqdci =  + k_f*sc[12];
J[1752] += dqdci;             // dwdot[NO]/d[HCNO]
J[1761] -= dqdci;             // dwdot[O]/d[HCNO]
J[1766] += dqdci;             // dwdot[HCO]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2773] += dqdT;              // dwdot[HCO]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 95: HCNO + OH <=> CH2O + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[33];
k_f = 1000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[3]*sc[18];
Kc = exp(-g_RT[3] + g_RT[13] - g_RT[18] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[33]) + (h_RT[3] + h_RT[18]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[13] -= q;// OH
wdot[18] += q;// CH2O
wdot[33] -= q;// HCNO
// d()/d[NO]
dqdci =  - k_r*sc[18];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[172] -= dqdci;              // dwdot[OH]/d[NO]
J[177] += dqdci;              // dwdot[CH2O]/d[NO]
J[192] -= dqdci;              // dwdot[HCNO]/d[NO]
// d()/d[OH]
dqdci =  + k_f*sc[33];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[707] += dqdci;              // dwdot[CH2O]/d[OH]
J[722] -= dqdci;              // dwdot[HCNO]/d[OH]
// d()/d[CH2O]
dqdci =  - k_r*sc[3];
J[957] += dqdci;              // dwdot[NO]/d[CH2O]
J[967] -= dqdci;              // dwdot[OH]/d[CH2O]
J[972] += dqdci;              // dwdot[CH2O]/d[CH2O]
J[987] -= dqdci;              // dwdot[HCNO]/d[CH2O]
// d()/d[HCNO]
dqdci =  + k_f*sc[13];
J[1752] += dqdci;             // dwdot[NO]/d[HCNO]
J[1762] -= dqdci;             // dwdot[OH]/d[HCNO]
J[1767] += dqdci;             // dwdot[CH2O]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2774] += dqdT;              // dwdot[CH2O]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 96: HCNO + O <=> NCO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[33];
k_f = 7000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[13]*sc[30];
Kc = exp(g_RT[12] - g_RT[13] - g_RT[30] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[33]) + (h_RT[13] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[30] += q;// NCO
wdot[33] -= q;// HCNO
// d()/d[O]
dqdci =  + k_f*sc[33];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[666] += dqdci;              // dwdot[NCO]/d[O]
J[669] -= dqdci;              // dwdot[HCNO]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[30];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[719] += dqdci;              // dwdot[NCO]/d[OH]
J[722] -= dqdci;              // dwdot[HCNO]/d[OH]
// d()/d[NCO]
dqdci =  - k_r*sc[13];
J[1602] -= dqdci;             // dwdot[O]/d[NCO]
J[1603] += dqdci;             // dwdot[OH]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
J[1623] -= dqdci;             // dwdot[HCNO]/d[NCO]
// d()/d[HCNO]
dqdci =  + k_f*sc[12];
J[1761] -= dqdci;             // dwdot[O]/d[HCNO]
J[1762] += dqdci;             // dwdot[OH]/d[HCNO]
J[1779] += dqdci;             // dwdot[NCO]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 97: HCNO + OH <=> CO + H2 + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[33];
k_f = 6500000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[3]*sc[5]*sc[9];
Kc = refC * exp(-g_RT[3] - g_RT[5] - g_RT[9] + g_RT[13] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[33]) + (h_RT[3] + h_RT[5] + h_RT[9]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[5] += q;// CO
wdot[9] += q;// H2
wdot[13] -= q;// OH
wdot[33] -= q;// HCNO
// d()/d[NO]
dqdci =  - k_r*sc[5]*sc[9];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[164] += dqdci;              // dwdot[CO]/d[NO]
J[168] += dqdci;              // dwdot[H2]/d[NO]
J[172] -= dqdci;              // dwdot[OH]/d[NO]
J[192] -= dqdci;              // dwdot[HCNO]/d[NO]
// d()/d[CO]
dqdci =  - k_r*sc[3]*sc[9];
J[268] += dqdci;              // dwdot[NO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[274] += dqdci;              // dwdot[H2]/d[CO]
J[278] -= dqdci;              // dwdot[OH]/d[CO]
J[298] -= dqdci;              // dwdot[HCNO]/d[CO]
// d()/d[H2]
dqdci =  - k_r*sc[3]*sc[5];
J[480] += dqdci;              // dwdot[NO]/d[H2]
J[482] += dqdci;              // dwdot[CO]/d[H2]
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[490] -= dqdci;              // dwdot[OH]/d[H2]
J[510] -= dqdci;              // dwdot[HCNO]/d[H2]
// d()/d[OH]
dqdci =  + k_f*sc[33];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[694] += dqdci;              // dwdot[CO]/d[OH]
J[698] += dqdci;              // dwdot[H2]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[722] -= dqdci;              // dwdot[HCNO]/d[OH]
// d()/d[HCNO]
dqdci =  + k_f*sc[13];
J[1752] += dqdci;             // dwdot[NO]/d[HCNO]
J[1754] += dqdci;             // dwdot[CO]/d[HCNO]
J[1758] += dqdci;             // dwdot[H2]/d[HCNO]
J[1762] -= dqdci;             // dwdot[OH]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 99: HCNO + OH <=> H2O + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[33];
k_f = 3500000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[15]*sc[30];
Kc = exp(g_RT[13] - g_RT[15] - g_RT[30] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[33]) + (h_RT[15] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[30] += q;// NCO
wdot[33] -= q;// HCNO
// d()/d[OH]
dqdci =  + k_f*sc[33];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[719] += dqdci;              // dwdot[NCO]/d[OH]
J[722] -= dqdci;              // dwdot[HCNO]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[30];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[825] += dqdci;              // dwdot[NCO]/d[H2O]
J[828] -= dqdci;              // dwdot[HCNO]/d[H2O]
// d()/d[NCO]
dqdci =  - k_r*sc[15];
J[1603] -= dqdci;             // dwdot[OH]/d[NCO]
J[1605] += dqdci;             // dwdot[H2O]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
J[1623] -= dqdci;             // dwdot[HCNO]/d[NCO]
// d()/d[HCNO]
dqdci =  + k_f*sc[13];
J[1762] -= dqdci;             // dwdot[OH]/d[HCNO]
J[1764] += dqdci;             // dwdot[H2O]/d[HCNO]
J[1779] += dqdci;             // dwdot[NCO]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 100: HCNO + OH <=> HCO + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[33];
k_f = 4500000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[17]*sc[21];
Kc = exp(g_RT[13] - g_RT[17] - g_RT[21] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[33]) + (h_RT[17] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[17] += q;// HCO
wdot[21] += q;// HNO
wdot[33] -= q;// HCNO
// d()/d[OH]
dqdci =  + k_f*sc[33];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[706] += dqdci;              // dwdot[HCO]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[722] -= dqdci;              // dwdot[HCNO]/d[OH]
// d()/d[HCO]
dqdci =  - k_r*sc[21];
J[914] -= dqdci;              // dwdot[OH]/d[HCO]
J[918] += dqdci;              // dwdot[HCO]/d[HCO]
J[922] += dqdci;              // dwdot[HNO]/d[HCO]
J[934] -= dqdci;              // dwdot[HCNO]/d[HCO]
// d()/d[HNO]
dqdci =  - k_r*sc[17];
J[1126] -= dqdci;             // dwdot[OH]/d[HNO]
J[1130] += dqdci;             // dwdot[HCO]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1146] -= dqdci;             // dwdot[HCNO]/d[HNO]
// d()/d[HCNO]
dqdci =  + k_f*sc[13];
J[1762] -= dqdci;             // dwdot[OH]/d[HCNO]
J[1766] += dqdci;             // dwdot[HCO]/d[HCNO]
J[1770] += dqdci;             // dwdot[HNO]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2773] += dqdT;              // dwdot[HCO]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 102: H + NCO <=> CO + NH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[30];
k_f = 72000000
            * exp(- (503.21666580472) * invT);
dlnkfdT = (503.21666580472) * invT2;
// reverse
phi_r = sc[5]*sc[28];
Kc = exp(-g_RT[5] + g_RT[11] - g_RT[28] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[30]) + (h_RT[5] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[11] -= q;// H
wdot[28] += q;// NH
wdot[30] -= q;// NCO
// d()/d[CO]
dqdci =  - k_r*sc[28];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[276] -= dqdci;              // dwdot[H]/d[CO]
J[293] += dqdci;              // dwdot[NH]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
// d()/d[H]
dqdci =  + k_f*sc[30];
J[588] += dqdci;              // dwdot[CO]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[611] += dqdci;              // dwdot[NH]/d[H]
J[613] -= dqdci;              // dwdot[NCO]/d[H]
// d()/d[NH]
dqdci =  - k_r*sc[5];
J[1489] += dqdci;             // dwdot[CO]/d[NH]
J[1495] -= dqdci;             // dwdot[H]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
J[1514] -= dqdci;             // dwdot[NCO]/d[NH]
// d()/d[NCO]
dqdci =  + k_f*sc[11];
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1601] -= dqdci;             // dwdot[H]/d[NCO]
J[1618] += dqdci;             // dwdot[NH]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2784] += dqdT;              // dwdot[NH]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 103: NCO + O <=> CO + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[30];
k_f = 2000000000
            * exp(-0.5 * tc[0]);
dlnkfdT = -0.5 * invT;
// reverse
phi_r = sc[3]*sc[5];
Kc = exp(-g_RT[3] - g_RT[5] + g_RT[12] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[30]) + (h_RT[3] + h_RT[5]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[5] += q;// CO
wdot[12] -= q;// O
wdot[30] -= q;// NCO
// d()/d[NO]
dqdci =  - k_r*sc[5];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[164] += dqdci;              // dwdot[CO]/d[NO]
J[171] -= dqdci;              // dwdot[O]/d[NO]
J[189] -= dqdci;              // dwdot[NCO]/d[NO]
// d()/d[CO]
dqdci =  - k_r*sc[3];
J[268] += dqdci;              // dwdot[NO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[277] -= dqdci;              // dwdot[O]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
// d()/d[O]
dqdci =  + k_f*sc[30];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[641] += dqdci;              // dwdot[CO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[666] -= dqdci;              // dwdot[NCO]/d[O]
// d()/d[NCO]
dqdci =  + k_f*sc[12];
J[1593] += dqdci;             // dwdot[NO]/d[NCO]
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1602] -= dqdci;             // dwdot[O]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 104: NCO + OH <=> CO + HON
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[30];
k_f = 5300000
            * exp(-0.07 * tc[0] - (2579.48862891499) * invT);
dlnkfdT = -0.07 * invT + (2579.48862891499) * invT2;
// reverse
phi_r = sc[5]*sc[22];
Kc = exp(-g_RT[5] + g_RT[13] - g_RT[22] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[30]) + (h_RT[5] + h_RT[22]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[13] -= q;// OH
wdot[22] += q;// HON
wdot[30] -= q;// NCO
// d()/d[CO]
dqdci =  - k_r*sc[22];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[278] -= dqdci;              // dwdot[OH]/d[CO]
J[287] += dqdci;              // dwdot[HON]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
// d()/d[OH]
dqdci =  + k_f*sc[30];
J[694] += dqdci;              // dwdot[CO]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[711] += dqdci;              // dwdot[HON]/d[OH]
J[719] -= dqdci;              // dwdot[NCO]/d[OH]
// d()/d[HON]
dqdci =  - k_r*sc[5];
J[1171] += dqdci;             // dwdot[CO]/d[HON]
J[1179] -= dqdci;             // dwdot[OH]/d[HON]
J[1188] += dqdci;             // dwdot[HON]/d[HON]
J[1196] -= dqdci;             // dwdot[NCO]/d[HON]
// d()/d[NCO]
dqdci =  + k_f*sc[13];
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1603] -= dqdci;             // dwdot[OH]/d[NCO]
J[1612] += dqdci;             // dwdot[HON]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2778] += dqdT;              // dwdot[HON]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 105: NCO + OH <=> CO + H + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[30];
k_f = 8300000
            * exp(-0.05 * tc[0] - (9079.03508444875) * invT);
dlnkfdT = -0.05 * invT + (9079.03508444875) * invT2;
// reverse
phi_r = sc[3]*sc[5]*sc[11];
Kc = refC * exp(-g_RT[3] - g_RT[5] - g_RT[11] + g_RT[13] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[30]) + (h_RT[3] + h_RT[5] + h_RT[11]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[5] += q;// CO
wdot[11] += q;// H
wdot[13] -= q;// OH
wdot[30] -= q;// NCO
// d()/d[NO]
dqdci =  - k_r*sc[5]*sc[11];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[164] += dqdci;              // dwdot[CO]/d[NO]
J[170] += dqdci;              // dwdot[H]/d[NO]
J[172] -= dqdci;              // dwdot[OH]/d[NO]
J[189] -= dqdci;              // dwdot[NCO]/d[NO]
// d()/d[CO]
dqdci =  - k_r*sc[3]*sc[11];
J[268] += dqdci;              // dwdot[NO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[276] += dqdci;              // dwdot[H]/d[CO]
J[278] -= dqdci;              // dwdot[OH]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
// d()/d[H]
dqdci =  - k_r*sc[3]*sc[5];
J[586] += dqdci;              // dwdot[NO]/d[H]
J[588] += dqdci;              // dwdot[CO]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
J[613] -= dqdci;              // dwdot[NCO]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[30];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[694] += dqdci;              // dwdot[CO]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[719] -= dqdci;              // dwdot[NCO]/d[OH]
// d()/d[NCO]
dqdci =  + k_f*sc[13];
J[1593] += dqdci;             // dwdot[NO]/d[NCO]
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1601] += dqdci;             // dwdot[H]/d[NCO]
J[1603] -= dqdci;             // dwdot[OH]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 106: HO2 + NCO <=> HNCO + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[30];
k_f = 20000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[2]*sc[8];
Kc = exp(-g_RT[2] - g_RT[8] + g_RT[14] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[14] + h_RT[30]) + (h_RT[2] + h_RT[8]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[8] += q;// O2
wdot[14] -= q;// HO2
wdot[30] -= q;// NCO
// d()/d[HNCO]
dqdci =  - k_r*sc[8];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[114] += dqdci;              // dwdot[O2]/d[HNCO]
J[120] -= dqdci;              // dwdot[HO2]/d[HNCO]
J[136] -= dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[O2]
dqdci =  - k_r*sc[2];
J[426] += dqdci;              // dwdot[HNCO]/d[O2]
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[438] -= dqdci;              // dwdot[HO2]/d[O2]
J[454] -= dqdci;              // dwdot[NCO]/d[O2]
// d()/d[HO2]
dqdci =  + k_f*sc[30];
J[744] += dqdci;              // dwdot[HNCO]/d[HO2]
J[750] += dqdci;              // dwdot[O2]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[772] -= dqdci;              // dwdot[NCO]/d[HO2]
// d()/d[NCO]
dqdci =  + k_f*sc[14];
J[1592] += dqdci;             // dwdot[HNCO]/d[NCO]
J[1598] += dqdci;             // dwdot[O2]/d[NCO]
J[1604] -= dqdci;             // dwdot[HO2]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 107: NCO + O2 <=> CO2 + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[30];
k_f = 2000000
            * exp(- (10064.3333160944) * invT);
dlnkfdT = (10064.3333160944) * invT2;
// reverse
phi_r = sc[3]*sc[6];
Kc = exp(-g_RT[3] - g_RT[6] + g_RT[8] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[30]) + (h_RT[3] + h_RT[6]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[6] += q;// CO2
wdot[8] -= q;// O2
wdot[30] -= q;// NCO
// d()/d[NO]
dqdci =  - k_r*sc[6];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[165] += dqdci;              // dwdot[CO2]/d[NO]
J[167] -= dqdci;              // dwdot[O2]/d[NO]
J[189] -= dqdci;              // dwdot[NCO]/d[NO]
// d()/d[CO2]
dqdci =  - k_r*sc[3];
J[321] += dqdci;              // dwdot[NO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[326] -= dqdci;              // dwdot[O2]/d[CO2]
J[348] -= dqdci;              // dwdot[NCO]/d[CO2]
// d()/d[O2]
dqdci =  + k_f*sc[30];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[430] += dqdci;              // dwdot[CO2]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[454] -= dqdci;              // dwdot[NCO]/d[O2]
// d()/d[NCO]
dqdci =  + k_f*sc[8];
J[1593] += dqdci;             // dwdot[NO]/d[NCO]
J[1596] += dqdci;             // dwdot[CO2]/d[NCO]
J[1598] -= dqdci;             // dwdot[O2]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 108: HCO + NCO <=> CO + HNCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[17]*sc[30];
k_f = 36000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[2]*sc[5];
Kc = exp(-g_RT[2] - g_RT[5] + g_RT[17] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[17] + h_RT[30]) + (h_RT[2] + h_RT[5]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[5] += q;// CO
wdot[17] -= q;// HCO
wdot[30] -= q;// NCO
// d()/d[HNCO]
dqdci =  - k_r*sc[5];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[111] += dqdci;              // dwdot[CO]/d[HNCO]
J[123] -= dqdci;              // dwdot[HCO]/d[HNCO]
J[136] -= dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[CO]
dqdci =  - k_r*sc[2];
J[267] += dqdci;              // dwdot[HNCO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[282] -= dqdci;              // dwdot[HCO]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
// d()/d[HCO]
dqdci =  + k_f*sc[30];
J[903] += dqdci;              // dwdot[HNCO]/d[HCO]
J[906] += dqdci;              // dwdot[CO]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
J[931] -= dqdci;              // dwdot[NCO]/d[HCO]
// d()/d[NCO]
dqdci =  + k_f*sc[17];
J[1592] += dqdci;             // dwdot[HNCO]/d[NCO]
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1607] -= dqdci;             // dwdot[HCO]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 109: CH2O + NCO <=> HCO + HNCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[18]*sc[30];
k_f = 6000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[2]*sc[17];
Kc = exp(-g_RT[2] - g_RT[17] + g_RT[18] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[18] + h_RT[30]) + (h_RT[2] + h_RT[17]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[17] += q;// HCO
wdot[18] -= q;// CH2O
wdot[30] -= q;// NCO
// d()/d[HNCO]
dqdci =  - k_r*sc[17];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[123] += dqdci;              // dwdot[HCO]/d[HNCO]
J[124] -= dqdci;              // dwdot[CH2O]/d[HNCO]
J[136] -= dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[HCO]
dqdci =  - k_r*sc[2];
J[903] += dqdci;              // dwdot[HNCO]/d[HCO]
J[918] += dqdci;              // dwdot[HCO]/d[HCO]
J[919] -= dqdci;              // dwdot[CH2O]/d[HCO]
J[931] -= dqdci;              // dwdot[NCO]/d[HCO]
// d()/d[CH2O]
dqdci =  + k_f*sc[30];
J[956] += dqdci;              // dwdot[HNCO]/d[CH2O]
J[971] += dqdci;              // dwdot[HCO]/d[CH2O]
J[972] -= dqdci;              // dwdot[CH2O]/d[CH2O]
J[984] -= dqdci;              // dwdot[NCO]/d[CH2O]
// d()/d[NCO]
dqdci =  + k_f*sc[18];
J[1592] += dqdci;             // dwdot[HNCO]/d[NCO]
J[1607] += dqdci;             // dwdot[HCO]/d[NCO]
J[1608] -= dqdci;             // dwdot[CH2O]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2773] += dqdT;              // dwdot[HCO]/dT
J[2774] -= dqdT;              // dwdot[CH2O]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 110: NCO + NO <=> CO + N2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[30];
k_f = 40000000000000
            * exp(-2.19 * tc[0] - (877.106648497626) * invT);
dlnkfdT = -2.19 * invT + (877.106648497626) * invT2;
// reverse
phi_r = sc[4]*sc[5];
Kc = exp(g_RT[3] - g_RT[4] - g_RT[5] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[30]) + (h_RT[4] + h_RT[5]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[4] += q;// N2O
wdot[5] += q;// CO
wdot[30] -= q;// NCO
// d()/d[NO]
dqdci =  + k_f*sc[30];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[163] += dqdci;              // dwdot[N2O]/d[NO]
J[164] += dqdci;              // dwdot[CO]/d[NO]
J[189] -= dqdci;              // dwdot[NCO]/d[NO]
// d()/d[N2O]
dqdci =  - k_r*sc[5];
J[215] -= dqdci;              // dwdot[NO]/d[N2O]
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[217] += dqdci;              // dwdot[CO]/d[N2O]
J[242] -= dqdci;              // dwdot[NCO]/d[N2O]
// d()/d[CO]
dqdci =  - k_r*sc[4];
J[268] -= dqdci;              // dwdot[NO]/d[CO]
J[269] += dqdci;              // dwdot[N2O]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
// d()/d[NCO]
dqdci =  + k_f*sc[3];
J[1593] -= dqdci;             // dwdot[NO]/d[NCO]
J[1594] += dqdci;             // dwdot[N2O]/d[NCO]
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 111: NCO + NO <=> CO2 + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[30];
k_f = 1.5e+15
            * exp(-2.74 * tc[0] - (917.867198427809) * invT);
dlnkfdT = -2.74 * invT + (917.867198427809) * invT2;
// reverse
phi_r = sc[6]*sc[45];
Kc = exp(g_RT[3] - g_RT[6] + g_RT[30] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[30]) + (h_RT[6] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[6] += q;// CO2
wdot[30] -= q;// NCO
wdot[45] += q;// N2
// d()/d[NO]
dqdci =  + k_f*sc[30];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[165] += dqdci;              // dwdot[CO2]/d[NO]
J[189] -= dqdci;              // dwdot[NCO]/d[NO]
J[204] += dqdci;              // dwdot[N2]/d[NO]
// d()/d[CO2]
dqdci =  - k_r*sc[45];
J[321] -= dqdci;              // dwdot[NO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[348] -= dqdci;              // dwdot[NCO]/d[CO2]
J[363] += dqdci;              // dwdot[N2]/d[CO2]
// d()/d[NCO]
dqdci =  + k_f*sc[3];
J[1593] -= dqdci;             // dwdot[NO]/d[NCO]
J[1596] += dqdci;             // dwdot[CO2]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
J[1635] += dqdci;             // dwdot[N2]/d[NCO]
// d()/d[N2]
dqdci =  - k_r*sc[6];
J[2388] -= dqdci;             // dwdot[NO]/d[N2]
J[2391] += dqdci;             // dwdot[CO2]/d[N2]
J[2415] -= dqdci;             // dwdot[NCO]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 112: NCO + NO2 <=> CO + 2 NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[30];
k_f = 250000
            * exp(- (355.774182723937) * invT);
dlnkfdT = (355.774182723937) * invT2;
// reverse
phi_r = (sc[3] * sc[3])*sc[5];
Kc = refC * exp(-2.000000*g_RT[3] - g_RT[5] + g_RT[19] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[30]) + (2.000000*h_RT[3] + h_RT[5]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += 2 * q;// NO
wdot[5] += q;// CO
wdot[19] -= q;// NO2
wdot[30] -= q;// NCO
// d()/d[NO]
dqdci =  - k_r*2.000000*sc[3]*sc[5];
J[162] += 2 * dqdci;          // dwdot[NO]/d[NO]
J[164] += dqdci;              // dwdot[CO]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
J[189] -= dqdci;              // dwdot[NCO]/d[NO]
// d()/d[CO]
dqdci =  - k_r*sc[3]*sc[3];
J[268] += 2 * dqdci;          // dwdot[NO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[284] -= dqdci;              // dwdot[NO2]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
// d()/d[NO2]
dqdci =  + k_f*sc[30];
J[1010] += 2 * dqdci;         // dwdot[NO]/d[NO2]
J[1012] += dqdci;             // dwdot[CO]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1037] -= dqdci;             // dwdot[NCO]/d[NO2]
// d()/d[NCO]
dqdci =  + k_f*sc[19];
J[1593] += 2 * dqdci;         // dwdot[NO]/d[NCO]
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1609] -= dqdci;             // dwdot[NO2]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2759] += 2 * dqdT;          // dwdot[NO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 113: NCO + NO2 <=> CO2 + N2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[30];
k_f = 3000000
            * exp(- (-355.774182723937) * invT);
dlnkfdT = (-355.774182723937) * invT2;
// reverse
phi_r = sc[4]*sc[6];
Kc = exp(-g_RT[4] - g_RT[6] + g_RT[19] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[30]) + (h_RT[4] + h_RT[6]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] += q;// N2O
wdot[6] += q;// CO2
wdot[19] -= q;// NO2
wdot[30] -= q;// NCO
// d()/d[N2O]
dqdci =  - k_r*sc[6];
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[218] += dqdci;              // dwdot[CO2]/d[N2O]
J[231] -= dqdci;              // dwdot[NO2]/d[N2O]
J[242] -= dqdci;              // dwdot[NCO]/d[N2O]
// d()/d[CO2]
dqdci =  - k_r*sc[4];
J[322] += dqdci;              // dwdot[N2O]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[337] -= dqdci;              // dwdot[NO2]/d[CO2]
J[348] -= dqdci;              // dwdot[NCO]/d[CO2]
// d()/d[NO2]
dqdci =  + k_f*sc[30];
J[1011] += dqdci;             // dwdot[N2O]/d[NO2]
J[1013] += dqdci;             // dwdot[CO2]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1037] -= dqdci;             // dwdot[NCO]/d[NO2]
// d()/d[NCO]
dqdci =  + k_f*sc[19];
J[1594] += dqdci;             // dwdot[N2O]/d[NCO]
J[1596] += dqdci;             // dwdot[CO2]/d[NCO]
J[1609] -= dqdci;             // dwdot[NO2]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 114: HNO + NCO <=> HNCO + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[21]*sc[30];
k_f = 18000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[2]*sc[3];
Kc = exp(-g_RT[2] - g_RT[3] + g_RT[21] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[21] + h_RT[30]) + (h_RT[2] + h_RT[3]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[3] += q;// NO
wdot[21] -= q;// HNO
wdot[30] -= q;// NCO
// d()/d[HNCO]
dqdci =  - k_r*sc[3];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[109] += dqdci;              // dwdot[NO]/d[HNCO]
J[127] -= dqdci;              // dwdot[HNO]/d[HNCO]
J[136] -= dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[NO]
dqdci =  - k_r*sc[2];
J[161] += dqdci;              // dwdot[HNCO]/d[NO]
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
J[189] -= dqdci;              // dwdot[NCO]/d[NO]
// d()/d[HNO]
dqdci =  + k_f*sc[30];
J[1115] += dqdci;             // dwdot[HNCO]/d[HNO]
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
J[1143] -= dqdci;             // dwdot[NCO]/d[HNO]
// d()/d[NCO]
dqdci =  + k_f*sc[21];
J[1592] += dqdci;             // dwdot[HNCO]/d[NCO]
J[1593] += dqdci;             // dwdot[NO]/d[NCO]
J[1611] -= dqdci;             // dwdot[HNO]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 115: HONO + NCO <=> HNCO + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[23]*sc[30];
k_f = 3600000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[2]*sc[19];
Kc = exp(-g_RT[2] - g_RT[19] + g_RT[23] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[23] + h_RT[30]) + (h_RT[2] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[19] += q;// NO2
wdot[23] -= q;// HONO
wdot[30] -= q;// NCO
// d()/d[HNCO]
dqdci =  - k_r*sc[19];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[125] += dqdci;              // dwdot[NO2]/d[HNCO]
J[129] -= dqdci;              // dwdot[HONO]/d[HNCO]
J[136] -= dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[NO2]
dqdci =  - k_r*sc[2];
J[1009] += dqdci;             // dwdot[HNCO]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1030] -= dqdci;             // dwdot[HONO]/d[NO2]
J[1037] -= dqdci;             // dwdot[NCO]/d[NO2]
// d()/d[HONO]
dqdci =  + k_f*sc[30];
J[1221] += dqdci;             // dwdot[HNCO]/d[HONO]
J[1238] += dqdci;             // dwdot[NO2]/d[HONO]
J[1242] -= dqdci;             // dwdot[HONO]/d[HONO]
J[1249] -= dqdci;             // dwdot[NCO]/d[HONO]
// d()/d[NCO]
dqdci =  + k_f*sc[23];
J[1592] += dqdci;             // dwdot[HNCO]/d[NCO]
J[1609] += dqdci;             // dwdot[NO2]/d[NCO]
J[1613] -= dqdci;             // dwdot[HONO]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2779] -= dqdT;              // dwdot[HONO]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 116: N + NCO <=> CO + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[25]*sc[30];
k_f = 20000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[5]*sc[45];
Kc = exp(-g_RT[5] + g_RT[25] + g_RT[30] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[25] + h_RT[30]) + (h_RT[5] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[25] -= q;// N
wdot[30] -= q;// NCO
wdot[45] += q;// N2
// d()/d[CO]
dqdci =  - k_r*sc[45];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[290] -= dqdci;              // dwdot[N]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
J[310] += dqdci;              // dwdot[N2]/d[CO]
// d()/d[N]
dqdci =  + k_f*sc[30];
J[1330] += dqdci;             // dwdot[CO]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
J[1355] -= dqdci;             // dwdot[NCO]/d[N]
J[1370] += dqdci;             // dwdot[N2]/d[N]
// d()/d[NCO]
dqdci =  + k_f*sc[25];
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1615] -= dqdci;             // dwdot[N]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
J[1635] += dqdci;             // dwdot[N2]/d[NCO]
// d()/d[N2]
dqdci =  - k_r*sc[5];
J[2390] += dqdci;             // dwdot[CO]/d[N2]
J[2410] -= dqdci;             // dwdot[N]/d[N2]
J[2415] -= dqdci;             // dwdot[NCO]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2781] -= dqdT;              // dwdot[N]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 117: NCO + NH3 <=> HNCO + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[20]*sc[30];
k_f = 0.028
            * exp(2.48 * tc[0] - (493.152332488625) * invT);
dlnkfdT = 2.48 * invT + (493.152332488625) * invT2;
// reverse
phi_r = sc[2]*sc[27];
Kc = exp(-g_RT[2] + g_RT[20] - g_RT[27] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[20] + h_RT[30]) + (h_RT[2] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[20] -= q;// NH3
wdot[27] += q;// NH2
wdot[30] -= q;// NCO
// d()/d[HNCO]
dqdci =  - k_r*sc[27];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[126] -= dqdci;              // dwdot[NH3]/d[HNCO]
J[133] += dqdci;              // dwdot[NH2]/d[HNCO]
J[136] -= dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[NH3]
dqdci =  + k_f*sc[30];
J[1062] += dqdci;             // dwdot[HNCO]/d[NH3]
J[1080] -= dqdci;             // dwdot[NH3]/d[NH3]
J[1087] += dqdci;             // dwdot[NH2]/d[NH3]
J[1090] -= dqdci;             // dwdot[NCO]/d[NH3]
// d()/d[NH2]
dqdci =  - k_r*sc[2];
J[1433] += dqdci;             // dwdot[HNCO]/d[NH2]
J[1451] -= dqdci;             // dwdot[NH3]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
J[1461] -= dqdci;             // dwdot[NCO]/d[NH2]
// d()/d[NCO]
dqdci =  + k_f*sc[20];
J[1592] += dqdci;             // dwdot[HNCO]/d[NCO]
J[1610] -= dqdci;             // dwdot[NH3]/d[NCO]
J[1617] += dqdci;             // dwdot[NH2]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2776] -= dqdT;              // dwdot[NH3]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 118: 2 NCO <=> 2 CO + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[30] * sc[30]);
k_f = 18000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = (sc[5] * sc[5])*sc[45];
Kc = refC * exp(-2.000000*g_RT[5] + 2.000000*g_RT[30] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[30]) + (2.000000*h_RT[5] + h_RT[45]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += 2 * q;// CO
wdot[30] -= 2 * q;// NCO
wdot[45] += q;// N2
// d()/d[CO]
dqdci =  - k_r*2.000000*sc[5]*sc[45];
J[270] += 2 * dqdci;          // dwdot[CO]/d[CO]
J[295] += -2 * dqdci;         // dwdot[NCO]/d[CO]
J[310] += dqdci;              // dwdot[N2]/d[CO]
// d()/d[NCO]
dqdci =  + k_f*2.000000*sc[30];
J[1595] += 2 * dqdci;         // dwdot[CO]/d[NCO]
J[1620] += -2 * dqdci;        // dwdot[NCO]/d[NCO]
J[1635] += dqdci;             // dwdot[N2]/d[NCO]
// d()/d[N2]
dqdci =  - k_r*sc[5]*sc[5];
J[2390] += 2 * dqdci;         // dwdot[CO]/d[N2]
J[2415] += -2 * dqdci;        // dwdot[NCO]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2761] += 2 * dqdT;          // dwdot[CO]/dT
J[2786] += -2 * dqdT;         // dwdot[NCO]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 119: H2CN <=> H + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[40];
k_f = 4e+28
            * exp(-6.03 * tc[0] - (15044.6686575637) * invT);
dlnkfdT = -6.03 * invT + (15044.6686575637) * invT2;
// reverse
phi_r = sc[1]*sc[11];
Kc = refC * exp(-g_RT[1] - g_RT[11] + g_RT[40]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[40]) + (h_RT[1] + h_RT[11]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[11] += q;// H
wdot[40] -= q;// H2CN
// d()/d[HCN]
dqdci =  - k_r*sc[11];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[64] += dqdci;               // dwdot[H]/d[HCN]
J[93] -= dqdci;               // dwdot[H2CN]/d[HCN]
// d()/d[H]
dqdci =  - k_r*sc[1];
J[584] += dqdci;              // dwdot[HCN]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[623] -= dqdci;              // dwdot[H2CN]/d[H]
// d()/d[H2CN]
dqdci =  + k_f;
J[2121] += dqdci;             // dwdot[HCN]/d[H2CN]
J[2131] += dqdci;             // dwdot[H]/d[H2CN]
J[2160] -= dqdci;             // dwdot[H2CN]/d[H2CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2796] -= dqdT;              // dwdot[H2CN]/dT

// reaction 120: H + H2CN <=> H2 + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[40];
k_f = 240
            * exp(1.5 * tc[0] - (-449.875699229419) * invT);
dlnkfdT = 1.5 * invT + (-449.875699229419) * invT2;
// reverse
phi_r = sc[1]*sc[9];
Kc = exp(-g_RT[1] - g_RT[9] + g_RT[11] + g_RT[40]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[40]) + (h_RT[1] + h_RT[9]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[40] -= q;// H2CN
// d()/d[HCN]
dqdci =  - k_r*sc[9];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[62] += dqdci;               // dwdot[H2]/d[HCN]
J[64] -= dqdci;               // dwdot[H]/d[HCN]
J[93] -= dqdci;               // dwdot[H2CN]/d[HCN]
// d()/d[H2]
dqdci =  - k_r*sc[1];
J[478] += dqdci;              // dwdot[HCN]/d[H2]
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[517] -= dqdci;              // dwdot[H2CN]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[40];
J[584] += dqdci;              // dwdot[HCN]/d[H]
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[623] -= dqdci;              // dwdot[H2CN]/d[H]
// d()/d[H2CN]
dqdci =  + k_f*sc[11];
J[2121] += dqdci;             // dwdot[HCN]/d[H2CN]
J[2129] += dqdci;             // dwdot[H2]/d[H2CN]
J[2131] -= dqdci;             // dwdot[H]/d[H2CN]
J[2160] -= dqdci;             // dwdot[H2CN]/d[H2CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2796] -= dqdT;              // dwdot[H2CN]/dT

// reaction 121: H2CN + O <=> HCN + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[40];
k_f = 170
            * exp(1.5 * tc[0] - (-449.875699229419) * invT);
dlnkfdT = 1.5 * invT + (-449.875699229419) * invT2;
// reverse
phi_r = sc[1]*sc[13];
Kc = exp(-g_RT[1] + g_RT[12] - g_RT[13] + g_RT[40]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[40]) + (h_RT[1] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[40] -= q;// H2CN
// d()/d[HCN]
dqdci =  - k_r*sc[13];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[65] -= dqdci;               // dwdot[O]/d[HCN]
J[66] += dqdci;               // dwdot[OH]/d[HCN]
J[93] -= dqdci;               // dwdot[H2CN]/d[HCN]
// d()/d[O]
dqdci =  + k_f*sc[40];
J[637] += dqdci;              // dwdot[HCN]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[676] -= dqdci;              // dwdot[H2CN]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[1];
J[690] += dqdci;              // dwdot[HCN]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[729] -= dqdci;              // dwdot[H2CN]/d[OH]
// d()/d[H2CN]
dqdci =  + k_f*sc[12];
J[2121] += dqdci;             // dwdot[HCN]/d[H2CN]
J[2132] -= dqdci;             // dwdot[O]/d[H2CN]
J[2133] += dqdci;             // dwdot[OH]/d[H2CN]
J[2160] -= dqdci;             // dwdot[H2CN]/d[H2CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2796] -= dqdT;              // dwdot[H2CN]/dT

// reaction 122: H2CN + OH <=> H2O + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[40];
k_f = 15000000000000
            * exp(-2.18 * tc[0] - (1089.96729813302) * invT);
dlnkfdT = -2.18 * invT + (1089.96729813302) * invT2;
// reverse
phi_r = sc[1]*sc[15];
Kc = exp(-g_RT[1] + g_RT[13] - g_RT[15] + g_RT[40]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[40]) + (h_RT[1] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[40] -= q;// H2CN
// d()/d[HCN]
dqdci =  - k_r*sc[15];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[66] -= dqdci;               // dwdot[OH]/d[HCN]
J[68] += dqdci;               // dwdot[H2O]/d[HCN]
J[93] -= dqdci;               // dwdot[H2CN]/d[HCN]
// d()/d[OH]
dqdci =  + k_f*sc[40];
J[690] += dqdci;              // dwdot[HCN]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[729] -= dqdci;              // dwdot[H2CN]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[1];
J[796] += dqdci;              // dwdot[HCN]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[835] -= dqdci;              // dwdot[H2CN]/d[H2O]
// d()/d[H2CN]
dqdci =  + k_f*sc[13];
J[2121] += dqdci;             // dwdot[HCN]/d[H2CN]
J[2133] -= dqdci;             // dwdot[OH]/d[H2CN]
J[2135] += dqdci;             // dwdot[H2O]/d[H2CN]
J[2160] -= dqdci;             // dwdot[H2CN]/d[H2CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2796] -= dqdT;              // dwdot[H2CN]/dT

// reaction 123: H2CN + OH <=> H2O + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[40];
k_f = 1.2
            * exp(2 * tc[0] - (-599.834265639226) * invT);
dlnkfdT = 2 * invT + (-599.834265639226) * invT2;
// reverse
phi_r = sc[1]*sc[15];
Kc = exp(-g_RT[1] + g_RT[13] - g_RT[15] + g_RT[40]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[40]) + (h_RT[1] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[40] -= q;// H2CN
// d()/d[HCN]
dqdci =  - k_r*sc[15];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[66] -= dqdci;               // dwdot[OH]/d[HCN]
J[68] += dqdci;               // dwdot[H2O]/d[HCN]
J[93] -= dqdci;               // dwdot[H2CN]/d[HCN]
// d()/d[OH]
dqdci =  + k_f*sc[40];
J[690] += dqdci;              // dwdot[HCN]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[729] -= dqdci;              // dwdot[H2CN]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[1];
J[796] += dqdci;              // dwdot[HCN]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[835] -= dqdci;              // dwdot[H2CN]/d[H2O]
// d()/d[H2CN]
dqdci =  + k_f*sc[13];
J[2121] += dqdci;             // dwdot[HCN]/d[H2CN]
J[2133] -= dqdci;             // dwdot[OH]/d[H2CN]
J[2135] += dqdci;             // dwdot[H2O]/d[H2CN]
J[2160] -= dqdci;             // dwdot[H2CN]/d[H2CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2796] -= dqdT;              // dwdot[H2CN]/dT

// reaction 124: H2CN + O2 <=> CH2O + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[40];
k_f = 3000000
            * exp(- (2999.67454486193) * invT);
dlnkfdT = (2999.67454486193) * invT2;
// reverse
phi_r = sc[3]*sc[18];
Kc = exp(-g_RT[3] + g_RT[8] - g_RT[18] + g_RT[40]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[40]) + (h_RT[3] + h_RT[18]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[8] -= q;// O2
wdot[18] += q;// CH2O
wdot[40] -= q;// H2CN
// d()/d[NO]
dqdci =  - k_r*sc[18];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[167] -= dqdci;              // dwdot[O2]/d[NO]
J[177] += dqdci;              // dwdot[CH2O]/d[NO]
J[199] -= dqdci;              // dwdot[H2CN]/d[NO]
// d()/d[O2]
dqdci =  + k_f*sc[40];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[442] += dqdci;              // dwdot[CH2O]/d[O2]
J[464] -= dqdci;              // dwdot[H2CN]/d[O2]
// d()/d[CH2O]
dqdci =  - k_r*sc[3];
J[957] += dqdci;              // dwdot[NO]/d[CH2O]
J[962] -= dqdci;              // dwdot[O2]/d[CH2O]
J[972] += dqdci;              // dwdot[CH2O]/d[CH2O]
J[994] -= dqdci;              // dwdot[H2CN]/d[CH2O]
// d()/d[H2CN]
dqdci =  + k_f*sc[8];
J[2123] += dqdci;             // dwdot[NO]/d[H2CN]
J[2128] -= dqdci;             // dwdot[O2]/d[H2CN]
J[2138] += dqdci;             // dwdot[CH2O]/d[H2CN]
J[2160] -= dqdci;             // dwdot[H2CN]/d[H2CN]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2774] += dqdT;              // dwdot[CH2O]/dT
J[2796] -= dqdT;              // dwdot[H2CN]/dT

// reaction 125: H2CN + NH2 <=> HCN + NH3
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[27]*sc[40];
k_f = 0.92
            * exp(1.94 * tc[0] - (-579.705599007037) * invT);
dlnkfdT = 1.94 * invT + (-579.705599007037) * invT2;
// reverse
phi_r = sc[1]*sc[20];
Kc = exp(-g_RT[1] - g_RT[20] + g_RT[27] + g_RT[40]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[27] + h_RT[40]) + (h_RT[1] + h_RT[20]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[20] += q;// NH3
wdot[27] -= q;// NH2
wdot[40] -= q;// H2CN
// d()/d[HCN]
dqdci =  - k_r*sc[20];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[73] += dqdci;               // dwdot[NH3]/d[HCN]
J[80] -= dqdci;               // dwdot[NH2]/d[HCN]
J[93] -= dqdci;               // dwdot[H2CN]/d[HCN]
// d()/d[NH3]
dqdci =  - k_r*sc[1];
J[1061] += dqdci;             // dwdot[HCN]/d[NH3]
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1087] -= dqdci;             // dwdot[NH2]/d[NH3]
J[1100] -= dqdci;             // dwdot[H2CN]/d[NH3]
// d()/d[NH2]
dqdci =  + k_f*sc[40];
J[1432] += dqdci;             // dwdot[HCN]/d[NH2]
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1471] -= dqdci;             // dwdot[H2CN]/d[NH2]
// d()/d[H2CN]
dqdci =  + k_f*sc[27];
J[2121] += dqdci;             // dwdot[HCN]/d[H2CN]
J[2140] += dqdci;             // dwdot[NH3]/d[H2CN]
J[2147] -= dqdci;             // dwdot[NH2]/d[H2CN]
J[2160] -= dqdci;             // dwdot[H2CN]/d[H2CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2796] -= dqdT;              // dwdot[H2CN]/dT

// reaction 126: HCNH <=> H + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[41];
k_f = 6.1e+28
            * exp(-5.69 * tc[0] - (12213.5716957464) * invT);
dlnkfdT = -5.69 * invT + (12213.5716957464) * invT2;
// reverse
phi_r = sc[1]*sc[11];
Kc = refC * exp(-g_RT[1] - g_RT[11] + g_RT[41]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[41]) + (h_RT[1] + h_RT[11]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[11] += q;// H
wdot[41] -= q;// HCNH
// d()/d[HCN]
dqdci =  - k_r*sc[11];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[64] += dqdci;               // dwdot[H]/d[HCN]
J[94] -= dqdci;               // dwdot[HCNH]/d[HCN]
// d()/d[H]
dqdci =  - k_r*sc[1];
J[584] += dqdci;              // dwdot[HCN]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[624] -= dqdci;              // dwdot[HCNH]/d[H]
// d()/d[HCNH]
dqdci =  + k_f;
J[2174] += dqdci;             // dwdot[HCN]/d[HCNH]
J[2184] += dqdci;             // dwdot[H]/d[HCNH]
J[2214] -= dqdci;             // dwdot[HCNH]/d[HCNH]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2797] -= dqdT;              // dwdot[HCNH]/dT

// reaction 127: H + HCNH <=> H + H2CN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[41];
k_f = 20000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[11]*sc[40];
Kc = exp(g_RT[11] - g_RT[11] - g_RT[40] + g_RT[41]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[41]) + (h_RT[11] + h_RT[40]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[40] += q;// H2CN
wdot[41] -= q;// HCNH
// d()/d[H]
dqdci =  + k_f*sc[41] - k_r*sc[40];
J[623] += dqdci;              // dwdot[H2CN]/d[H]
J[624] -= dqdci;              // dwdot[HCNH]/d[H]
// d()/d[H2CN]
dqdci =  - k_r*sc[11];
J[2160] += dqdci;             // dwdot[H2CN]/d[H2CN]
J[2161] -= dqdci;             // dwdot[HCNH]/d[H2CN]
// d()/d[HCNH]
dqdci =  + k_f*sc[11];
J[2213] += dqdci;             // dwdot[H2CN]/d[HCNH]
J[2214] -= dqdci;             // dwdot[HCNH]/d[HCNH]
// d()/dT
J[2796] += dqdT;              // dwdot[H2CN]/dT
J[2797] -= dqdT;              // dwdot[HCNH]/dT

// reaction 128: H + HCNH <=> H2 + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[41];
k_f = 240
            * exp(1.5 * tc[0] - (-449.875699229419) * invT);
dlnkfdT = 1.5 * invT + (-449.875699229419) * invT2;
// reverse
phi_r = sc[1]*sc[9];
Kc = exp(-g_RT[1] - g_RT[9] + g_RT[11] + g_RT[41]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[41]) + (h_RT[1] + h_RT[9]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[41] -= q;// HCNH
// d()/d[HCN]
dqdci =  - k_r*sc[9];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[62] += dqdci;               // dwdot[H2]/d[HCN]
J[64] -= dqdci;               // dwdot[H]/d[HCN]
J[94] -= dqdci;               // dwdot[HCNH]/d[HCN]
// d()/d[H2]
dqdci =  - k_r*sc[1];
J[478] += dqdci;              // dwdot[HCN]/d[H2]
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[518] -= dqdci;              // dwdot[HCNH]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[41];
J[584] += dqdci;              // dwdot[HCN]/d[H]
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[624] -= dqdci;              // dwdot[HCNH]/d[H]
// d()/d[HCNH]
dqdci =  + k_f*sc[11];
J[2174] += dqdci;             // dwdot[HCN]/d[HCNH]
J[2182] += dqdci;             // dwdot[H2]/d[HCNH]
J[2184] -= dqdci;             // dwdot[H]/d[HCNH]
J[2214] -= dqdci;             // dwdot[HCNH]/d[HCNH]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2797] -= dqdT;              // dwdot[HCNH]/dT

// reaction 129: HCNH + O <=> H + HNCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[41];
k_f = 70000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[2]*sc[11];
Kc = exp(-g_RT[2] - g_RT[11] + g_RT[12] + g_RT[41]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[41]) + (h_RT[2] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[11] += q;// H
wdot[12] -= q;// O
wdot[41] -= q;// HCNH
// d()/d[HNCO]
dqdci =  - k_r*sc[11];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[117] += dqdci;              // dwdot[H]/d[HNCO]
J[118] -= dqdci;              // dwdot[O]/d[HNCO]
J[147] -= dqdci;              // dwdot[HCNH]/d[HNCO]
// d()/d[H]
dqdci =  - k_r*sc[2];
J[585] += dqdci;              // dwdot[HNCO]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[595] -= dqdci;              // dwdot[O]/d[H]
J[624] -= dqdci;              // dwdot[HCNH]/d[H]
// d()/d[O]
dqdci =  + k_f*sc[41];
J[638] += dqdci;              // dwdot[HNCO]/d[O]
J[647] += dqdci;              // dwdot[H]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[677] -= dqdci;              // dwdot[HCNH]/d[O]
// d()/d[HCNH]
dqdci =  + k_f*sc[12];
J[2175] += dqdci;             // dwdot[HNCO]/d[HCNH]
J[2184] += dqdci;             // dwdot[H]/d[HCNH]
J[2185] -= dqdci;             // dwdot[O]/d[HCNH]
J[2214] -= dqdci;             // dwdot[HCNH]/d[HCNH]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2797] -= dqdT;              // dwdot[HCNH]/dT

// reaction 130: HCNH + O <=> HCN + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[41];
k_f = 170
            * exp(1.5 * tc[0] - (-449.875699229419) * invT);
dlnkfdT = 1.5 * invT + (-449.875699229419) * invT2;
// reverse
phi_r = sc[1]*sc[13];
Kc = exp(-g_RT[1] + g_RT[12] - g_RT[13] + g_RT[41]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[41]) + (h_RT[1] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[41] -= q;// HCNH
// d()/d[HCN]
dqdci =  - k_r*sc[13];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[65] -= dqdci;               // dwdot[O]/d[HCN]
J[66] += dqdci;               // dwdot[OH]/d[HCN]
J[94] -= dqdci;               // dwdot[HCNH]/d[HCN]
// d()/d[O]
dqdci =  + k_f*sc[41];
J[637] += dqdci;              // dwdot[HCN]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[677] -= dqdci;              // dwdot[HCNH]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[1];
J[690] += dqdci;              // dwdot[HCN]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[730] -= dqdci;              // dwdot[HCNH]/d[OH]
// d()/d[HCNH]
dqdci =  + k_f*sc[12];
J[2174] += dqdci;             // dwdot[HCN]/d[HCNH]
J[2185] -= dqdci;             // dwdot[O]/d[HCNH]
J[2186] += dqdci;             // dwdot[OH]/d[HCNH]
J[2214] -= dqdci;             // dwdot[HCNH]/d[HCNH]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2797] -= dqdT;              // dwdot[HCNH]/dT

// reaction 131: HCNH + OH <=> H2O + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[41];
k_f = 1.2
            * exp(2 * tc[0] - (-599.834265639226) * invT);
dlnkfdT = 2 * invT + (-599.834265639226) * invT2;
// reverse
phi_r = sc[1]*sc[15];
Kc = exp(-g_RT[1] + g_RT[13] - g_RT[15] + g_RT[41]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[41]) + (h_RT[1] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[41] -= q;// HCNH
// d()/d[HCN]
dqdci =  - k_r*sc[15];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[66] -= dqdci;               // dwdot[OH]/d[HCN]
J[68] += dqdci;               // dwdot[H2O]/d[HCN]
J[94] -= dqdci;               // dwdot[HCNH]/d[HCN]
// d()/d[OH]
dqdci =  + k_f*sc[41];
J[690] += dqdci;              // dwdot[HCN]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[730] -= dqdci;              // dwdot[HCNH]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[1];
J[796] += dqdci;              // dwdot[HCN]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[836] -= dqdci;              // dwdot[HCNH]/d[H2O]
// d()/d[HCNH]
dqdci =  + k_f*sc[13];
J[2174] += dqdci;             // dwdot[HCN]/d[HCNH]
J[2186] -= dqdci;             // dwdot[OH]/d[HCNH]
J[2188] += dqdci;             // dwdot[H2O]/d[HCNH]
J[2214] -= dqdci;             // dwdot[HCNH]/d[HCNH]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2797] -= dqdT;              // dwdot[HCNH]/dT

// reaction 133: H + NH3 <=> H2 + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[20];
k_f = 0.64
            * exp(2.39 * tc[0] - (5118.2167078998) * invT);
dlnkfdT = 2.39 * invT + (5118.2167078998) * invT2;
// reverse
phi_r = sc[9]*sc[27];
Kc = exp(-g_RT[9] + g_RT[11] + g_RT[20] - g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[20]) + (h_RT[9] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[20] -= q;// NH3
wdot[27] += q;// NH2
// d()/d[H2]
dqdci =  - k_r*sc[27];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[497] -= dqdci;              // dwdot[NH3]/d[H2]
J[504] += dqdci;              // dwdot[NH2]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[20];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[603] -= dqdci;              // dwdot[NH3]/d[H]
J[610] += dqdci;              // dwdot[NH2]/d[H]
// d()/d[NH3]
dqdci =  + k_f*sc[11];
J[1069] += dqdci;             // dwdot[H2]/d[NH3]
J[1071] -= dqdci;             // dwdot[H]/d[NH3]
J[1080] -= dqdci;             // dwdot[NH3]/d[NH3]
J[1087] += dqdci;             // dwdot[NH2]/d[NH3]
// d()/d[NH2]
dqdci =  - k_r*sc[9];
J[1440] += dqdci;             // dwdot[H2]/d[NH2]
J[1442] -= dqdci;             // dwdot[H]/d[NH2]
J[1451] -= dqdci;             // dwdot[NH3]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2776] -= dqdT;              // dwdot[NH3]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT

// reaction 134: NH3 + O <=> NH2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[20];
k_f = 9.4
            * exp(1.94 * tc[0] - (3250.77966109849) * invT);
dlnkfdT = 1.94 * invT + (3250.77966109849) * invT2;
// reverse
phi_r = sc[13]*sc[27];
Kc = exp(g_RT[12] - g_RT[13] + g_RT[20] - g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[20]) + (h_RT[13] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[20] -= q;// NH3
wdot[27] += q;// NH2
// d()/d[O]
dqdci =  + k_f*sc[20];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[656] -= dqdci;              // dwdot[NH3]/d[O]
J[663] += dqdci;              // dwdot[NH2]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[27];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[709] -= dqdci;              // dwdot[NH3]/d[OH]
J[716] += dqdci;              // dwdot[NH2]/d[OH]
// d()/d[NH3]
dqdci =  + k_f*sc[12];
J[1072] -= dqdci;             // dwdot[O]/d[NH3]
J[1073] += dqdci;             // dwdot[OH]/d[NH3]
J[1080] -= dqdci;             // dwdot[NH3]/d[NH3]
J[1087] += dqdci;             // dwdot[NH2]/d[NH3]
// d()/d[NH2]
dqdci =  - k_r*sc[13];
J[1443] -= dqdci;             // dwdot[O]/d[NH2]
J[1444] += dqdci;             // dwdot[OH]/d[NH2]
J[1451] -= dqdci;             // dwdot[NH3]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2776] -= dqdT;              // dwdot[NH3]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT

// reaction 135: NH3 + OH <=> H2O + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[20];
k_f = 2
            * exp(2.04 * tc[0] - (284.820632845471) * invT);
dlnkfdT = 2.04 * invT + (284.820632845471) * invT2;
// reverse
phi_r = sc[15]*sc[27];
Kc = exp(g_RT[13] - g_RT[15] + g_RT[20] - g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[20]) + (h_RT[15] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[20] -= q;// NH3
wdot[27] += q;// NH2
// d()/d[OH]
dqdci =  + k_f*sc[20];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[709] -= dqdci;              // dwdot[NH3]/d[OH]
J[716] += dqdci;              // dwdot[NH2]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[27];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[815] -= dqdci;              // dwdot[NH3]/d[H2O]
J[822] += dqdci;              // dwdot[NH2]/d[H2O]
// d()/d[NH3]
dqdci =  + k_f*sc[13];
J[1073] -= dqdci;             // dwdot[OH]/d[NH3]
J[1075] += dqdci;             // dwdot[H2O]/d[NH3]
J[1080] -= dqdci;             // dwdot[NH3]/d[NH3]
J[1087] += dqdci;             // dwdot[NH2]/d[NH3]
// d()/d[NH2]
dqdci =  - k_r*sc[15];
J[1444] -= dqdci;             // dwdot[OH]/d[NH2]
J[1446] += dqdci;             // dwdot[H2O]/d[NH2]
J[1451] -= dqdci;             // dwdot[NH3]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2776] -= dqdT;              // dwdot[NH3]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT

// reaction 136: HO2 + NH3 <=> H2O2 + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[20];
k_f = 300000
            * exp(- (11070.7666477038) * invT);
dlnkfdT = (11070.7666477038) * invT2;
// reverse
phi_r = sc[16]*sc[27];
Kc = exp(g_RT[14] - g_RT[16] + g_RT[20] - g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[14] + h_RT[20]) + (h_RT[16] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[14] -= q;// HO2
wdot[16] += q;// H2O2
wdot[20] -= q;// NH3
wdot[27] += q;// NH2
// d()/d[HO2]
dqdci =  + k_f*sc[20];
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[758] += dqdci;              // dwdot[H2O2]/d[HO2]
J[762] -= dqdci;              // dwdot[NH3]/d[HO2]
J[769] += dqdci;              // dwdot[NH2]/d[HO2]
// d()/d[H2O2]
dqdci =  - k_r*sc[27];
J[862] -= dqdci;              // dwdot[HO2]/d[H2O2]
J[864] += dqdci;              // dwdot[H2O2]/d[H2O2]
J[868] -= dqdci;              // dwdot[NH3]/d[H2O2]
J[875] += dqdci;              // dwdot[NH2]/d[H2O2]
// d()/d[NH3]
dqdci =  + k_f*sc[14];
J[1074] -= dqdci;             // dwdot[HO2]/d[NH3]
J[1076] += dqdci;             // dwdot[H2O2]/d[NH3]
J[1080] -= dqdci;             // dwdot[NH3]/d[NH3]
J[1087] += dqdci;             // dwdot[NH2]/d[NH3]
// d()/d[NH2]
dqdci =  - k_r*sc[16];
J[1445] -= dqdci;             // dwdot[HO2]/d[NH2]
J[1447] += dqdci;             // dwdot[H2O2]/d[NH2]
J[1451] -= dqdci;             // dwdot[NH3]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2772] += dqdT;              // dwdot[H2O2]/dT
J[2776] -= dqdT;              // dwdot[NH3]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT

// reaction 137: H + NH2 <=> H2 + NH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[27];
k_f = 40000000
            * exp(- (1836.74083018723) * invT);
dlnkfdT = (1836.74083018723) * invT2;
// reverse
phi_r = sc[9]*sc[28];
Kc = exp(-g_RT[9] + g_RT[11] + g_RT[27] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[27]) + (h_RT[9] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[27] -= q;// NH2
wdot[28] += q;// NH
// d()/d[H2]
dqdci =  - k_r*sc[28];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[504] -= dqdci;              // dwdot[NH2]/d[H2]
J[505] += dqdci;              // dwdot[NH]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[27];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[610] -= dqdci;              // dwdot[NH2]/d[H]
J[611] += dqdci;              // dwdot[NH]/d[H]
// d()/d[NH2]
dqdci =  + k_f*sc[11];
J[1440] += dqdci;             // dwdot[H2]/d[NH2]
J[1442] -= dqdci;             // dwdot[H]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1459] += dqdci;             // dwdot[NH]/d[NH2]
// d()/d[NH]
dqdci =  - k_r*sc[9];
J[1493] += dqdci;             // dwdot[H2]/d[NH]
J[1495] -= dqdci;             // dwdot[H]/d[NH]
J[1511] -= dqdci;             // dwdot[NH2]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 138: NH2 + O <=> H + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[27];
k_f = 660000000
            * exp(-0.5 * tc[0]);
dlnkfdT = -0.5 * invT;
// reverse
phi_r = sc[11]*sc[21];
Kc = exp(-g_RT[11] + g_RT[12] - g_RT[21] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[27]) + (h_RT[11] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[12] -= q;// O
wdot[21] += q;// HNO
wdot[27] -= q;// NH2
// d()/d[H]
dqdci =  - k_r*sc[21];
J[594] += dqdci;              // dwdot[H]/d[H]
J[595] -= dqdci;              // dwdot[O]/d[H]
J[604] += dqdci;              // dwdot[HNO]/d[H]
J[610] -= dqdci;              // dwdot[NH2]/d[H]
// d()/d[O]
dqdci =  + k_f*sc[27];
J[647] += dqdci;              // dwdot[H]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[657] += dqdci;              // dwdot[HNO]/d[O]
J[663] -= dqdci;              // dwdot[NH2]/d[O]
// d()/d[HNO]
dqdci =  - k_r*sc[11];
J[1124] += dqdci;             // dwdot[H]/d[HNO]
J[1125] -= dqdci;             // dwdot[O]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1140] -= dqdci;             // dwdot[NH2]/d[HNO]
// d()/d[NH2]
dqdci =  + k_f*sc[12];
J[1442] += dqdci;             // dwdot[H]/d[NH2]
J[1443] -= dqdci;             // dwdot[O]/d[NH2]
J[1452] += dqdci;             // dwdot[HNO]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 139: NH2 + O <=> NH + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[27];
k_f = 6800000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[13]*sc[28];
Kc = exp(g_RT[12] - g_RT[13] + g_RT[27] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[27]) + (h_RT[13] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[27] -= q;// NH2
wdot[28] += q;// NH
// d()/d[O]
dqdci =  + k_f*sc[27];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[663] -= dqdci;              // dwdot[NH2]/d[O]
J[664] += dqdci;              // dwdot[NH]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[28];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[716] -= dqdci;              // dwdot[NH2]/d[OH]
J[717] += dqdci;              // dwdot[NH]/d[OH]
// d()/d[NH2]
dqdci =  + k_f*sc[12];
J[1443] -= dqdci;             // dwdot[O]/d[NH2]
J[1444] += dqdci;             // dwdot[OH]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1459] += dqdci;             // dwdot[NH]/d[NH2]
// d()/d[NH]
dqdci =  - k_r*sc[13];
J[1496] -= dqdci;             // dwdot[O]/d[NH]
J[1497] += dqdci;             // dwdot[OH]/d[NH]
J[1511] -= dqdci;             // dwdot[NH2]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 140: NH2 + OH <=> H2O + NH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[27];
k_f = 4
            * exp(2 * tc[0] - (503.21666580472) * invT);
dlnkfdT = 2 * invT + (503.21666580472) * invT2;
// reverse
phi_r = sc[15]*sc[28];
Kc = exp(g_RT[13] - g_RT[15] + g_RT[27] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[27]) + (h_RT[15] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[27] -= q;// NH2
wdot[28] += q;// NH
// d()/d[OH]
dqdci =  + k_f*sc[27];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[716] -= dqdci;              // dwdot[NH2]/d[OH]
J[717] += dqdci;              // dwdot[NH]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[28];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[822] -= dqdci;              // dwdot[NH2]/d[H2O]
J[823] += dqdci;              // dwdot[NH]/d[H2O]
// d()/d[NH2]
dqdci =  + k_f*sc[13];
J[1444] -= dqdci;             // dwdot[OH]/d[NH2]
J[1446] += dqdci;             // dwdot[H2O]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1459] += dqdci;             // dwdot[NH]/d[NH2]
// d()/d[NH]
dqdci =  - k_r*sc[15];
J[1497] -= dqdci;             // dwdot[OH]/d[NH]
J[1499] += dqdci;             // dwdot[H2O]/d[NH]
J[1511] -= dqdci;             // dwdot[NH2]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 141: HO2 + NH2 <=> H2NO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[27];
k_f = 50000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[13]*sc[24];
Kc = exp(-g_RT[13] + g_RT[14] - g_RT[24] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[14] + h_RT[27]) + (h_RT[13] + h_RT[24]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] += q;// OH
wdot[14] -= q;// HO2
wdot[24] += q;// H2NO
wdot[27] -= q;// NH2
// d()/d[OH]
dqdci =  - k_r*sc[24];
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[703] -= dqdci;              // dwdot[HO2]/d[OH]
J[713] += dqdci;              // dwdot[H2NO]/d[OH]
J[716] -= dqdci;              // dwdot[NH2]/d[OH]
// d()/d[HO2]
dqdci =  + k_f*sc[27];
J[755] += dqdci;              // dwdot[OH]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[766] += dqdci;              // dwdot[H2NO]/d[HO2]
J[769] -= dqdci;              // dwdot[NH2]/d[HO2]
// d()/d[H2NO]
dqdci =  - k_r*sc[13];
J[1285] += dqdci;             // dwdot[OH]/d[H2NO]
J[1286] -= dqdci;             // dwdot[HO2]/d[H2NO]
J[1296] += dqdci;             // dwdot[H2NO]/d[H2NO]
J[1299] -= dqdci;             // dwdot[NH2]/d[H2NO]
// d()/d[NH2]
dqdci =  + k_f*sc[14];
J[1444] += dqdci;             // dwdot[OH]/d[NH2]
J[1445] -= dqdci;             // dwdot[HO2]/d[NH2]
J[1455] += dqdci;             // dwdot[H2NO]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2780] += dqdT;              // dwdot[H2NO]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 142: HO2 + NH2 <=> NH3 + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[27];
k_f = 0.92
            * exp(1.94 * tc[0] - (-579.705599007037) * invT);
dlnkfdT = 1.94 * invT + (-579.705599007037) * invT2;
// reverse
phi_r = sc[8]*sc[20];
Kc = exp(-g_RT[8] + g_RT[14] - g_RT[20] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[14] + h_RT[27]) + (h_RT[8] + h_RT[20]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[14] -= q;// HO2
wdot[20] += q;// NH3
wdot[27] -= q;// NH2
// d()/d[O2]
dqdci =  - k_r*sc[20];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[438] -= dqdci;              // dwdot[HO2]/d[O2]
J[444] += dqdci;              // dwdot[NH3]/d[O2]
J[451] -= dqdci;              // dwdot[NH2]/d[O2]
// d()/d[HO2]
dqdci =  + k_f*sc[27];
J[750] += dqdci;              // dwdot[O2]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[762] += dqdci;              // dwdot[NH3]/d[HO2]
J[769] -= dqdci;              // dwdot[NH2]/d[HO2]
// d()/d[NH3]
dqdci =  - k_r*sc[8];
J[1068] += dqdci;             // dwdot[O2]/d[NH3]
J[1074] -= dqdci;             // dwdot[HO2]/d[NH3]
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1087] -= dqdci;             // dwdot[NH2]/d[NH3]
// d()/d[NH2]
dqdci =  + k_f*sc[14];
J[1439] += dqdci;             // dwdot[O2]/d[NH2]
J[1445] -= dqdci;             // dwdot[HO2]/d[NH2]
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 143: NH2 + O2 <=> H2NO + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[27];
k_f = 250000
            * exp(0.48 * tc[0] - (14888.1682744984) * invT);
dlnkfdT = 0.48 * invT + (14888.1682744984) * invT2;
// reverse
phi_r = sc[12]*sc[24];
Kc = exp(g_RT[8] - g_RT[12] - g_RT[24] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[27]) + (h_RT[12] + h_RT[24]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[12] += q;// O
wdot[24] += q;// H2NO
wdot[27] -= q;// NH2
// d()/d[O2]
dqdci =  + k_f*sc[27];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[436] += dqdci;              // dwdot[O]/d[O2]
J[448] += dqdci;              // dwdot[H2NO]/d[O2]
J[451] -= dqdci;              // dwdot[NH2]/d[O2]
// d()/d[O]
dqdci =  - k_r*sc[24];
J[644] -= dqdci;              // dwdot[O2]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[660] += dqdci;              // dwdot[H2NO]/d[O]
J[663] -= dqdci;              // dwdot[NH2]/d[O]
// d()/d[H2NO]
dqdci =  - k_r*sc[12];
J[1280] -= dqdci;             // dwdot[O2]/d[H2NO]
J[1284] += dqdci;             // dwdot[O]/d[H2NO]
J[1296] += dqdci;             // dwdot[H2NO]/d[H2NO]
J[1299] -= dqdci;             // dwdot[NH2]/d[H2NO]
// d()/d[NH2]
dqdci =  + k_f*sc[8];
J[1439] -= dqdci;             // dwdot[O2]/d[NH2]
J[1443] += dqdci;             // dwdot[O]/d[NH2]
J[1455] += dqdci;             // dwdot[H2NO]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2780] += dqdT;              // dwdot[H2NO]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 144: NH2 + O2 <=> HNO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[27];
k_f = 62
            * exp(1.23 * tc[0] - (17662.9049697457) * invT);
dlnkfdT = 1.23 * invT + (17662.9049697457) * invT2;
// reverse
phi_r = sc[13]*sc[21];
Kc = exp(g_RT[8] - g_RT[13] - g_RT[21] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[27]) + (h_RT[13] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[13] += q;// OH
wdot[21] += q;// HNO
wdot[27] -= q;// NH2
// d()/d[O2]
dqdci =  + k_f*sc[27];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[437] += dqdci;              // dwdot[OH]/d[O2]
J[445] += dqdci;              // dwdot[HNO]/d[O2]
J[451] -= dqdci;              // dwdot[NH2]/d[O2]
// d()/d[OH]
dqdci =  - k_r*sc[21];
J[697] -= dqdci;              // dwdot[O2]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[716] -= dqdci;              // dwdot[NH2]/d[OH]
// d()/d[HNO]
dqdci =  - k_r*sc[13];
J[1121] -= dqdci;             // dwdot[O2]/d[HNO]
J[1126] += dqdci;             // dwdot[OH]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1140] -= dqdci;             // dwdot[NH2]/d[HNO]
// d()/d[NH2]
dqdci =  + k_f*sc[8];
J[1439] -= dqdci;             // dwdot[O2]/d[NH2]
J[1444] += dqdci;             // dwdot[OH]/d[NH2]
J[1452] += dqdci;             // dwdot[HNO]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 145: 2 NH2 <=> NH + NH3
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[27] * sc[27]);
k_f = 50000000
            * exp(- (5032.1666580472) * invT);
dlnkfdT = (5032.1666580472) * invT2;
// reverse
phi_r = sc[20]*sc[28];
Kc = exp(-g_RT[20] + 2.000000*g_RT[27] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[27]) + (h_RT[20] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[20] += q;// NH3
wdot[27] -= 2 * q;// NH2
wdot[28] += q;// NH
// d()/d[NH3]
dqdci =  - k_r*sc[28];
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1087] += -2 * dqdci;        // dwdot[NH2]/d[NH3]
J[1088] += dqdci;             // dwdot[NH]/d[NH3]
// d()/d[NH2]
dqdci =  + k_f*2.000000*sc[27];
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1458] += -2 * dqdci;        // dwdot[NH2]/d[NH2]
J[1459] += dqdci;             // dwdot[NH]/d[NH2]
// d()/d[NH]
dqdci =  - k_r*sc[20];
J[1504] += dqdci;             // dwdot[NH3]/d[NH]
J[1511] += -2 * dqdci;        // dwdot[NH2]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2783] += -2 * dqdT;         // dwdot[NH2]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 146: NH + NH2 <=> N + NH3
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[27]*sc[28];
k_f = 0.92
            * exp(1.94 * tc[0] - (1229.86153122673) * invT);
dlnkfdT = 1.94 * invT + (1229.86153122673) * invT2;
// reverse
phi_r = sc[20]*sc[25];
Kc = exp(-g_RT[20] - g_RT[25] + g_RT[27] + g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[27] + h_RT[28]) + (h_RT[20] + h_RT[25]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[20] += q;// NH3
wdot[25] += q;// N
wdot[27] -= q;// NH2
wdot[28] -= q;// NH
// d()/d[NH3]
dqdci =  - k_r*sc[25];
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1085] += dqdci;             // dwdot[N]/d[NH3]
J[1087] -= dqdci;             // dwdot[NH2]/d[NH3]
J[1088] -= dqdci;             // dwdot[NH]/d[NH3]
// d()/d[N]
dqdci =  - k_r*sc[20];
J[1345] += dqdci;             // dwdot[NH3]/d[N]
J[1350] += dqdci;             // dwdot[N]/d[N]
J[1352] -= dqdci;             // dwdot[NH2]/d[N]
J[1353] -= dqdci;             // dwdot[NH]/d[N]
// d()/d[NH2]
dqdci =  + k_f*sc[28];
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1456] += dqdci;             // dwdot[N]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1459] -= dqdci;             // dwdot[NH]/d[NH2]
// d()/d[NH]
dqdci =  + k_f*sc[27];
J[1504] += dqdci;             // dwdot[NH3]/d[NH]
J[1509] += dqdci;             // dwdot[N]/d[NH]
J[1511] -= dqdci;             // dwdot[NH2]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2781] += dqdT;              // dwdot[N]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT

// reaction 147: N + NH2 <=> 2 H + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[25]*sc[27];
k_f = 70000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = (sc[11] * sc[11])*sc[45];
Kc = refC * exp(-2.000000*g_RT[11] + g_RT[25] + g_RT[27] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[25] + h_RT[27]) + (2.000000*h_RT[11] + h_RT[45]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += 2 * q;// H
wdot[25] -= q;// N
wdot[27] -= q;// NH2
wdot[45] += q;// N2
// d()/d[H]
dqdci =  - k_r*2.000000*sc[11]*sc[45];
J[594] += 2 * dqdci;          // dwdot[H]/d[H]
J[608] -= dqdci;              // dwdot[N]/d[H]
J[610] -= dqdci;              // dwdot[NH2]/d[H]
J[628] += dqdci;              // dwdot[N2]/d[H]
// d()/d[N]
dqdci =  + k_f*sc[27];
J[1336] += 2 * dqdci;         // dwdot[H]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
J[1352] -= dqdci;             // dwdot[NH2]/d[N]
J[1370] += dqdci;             // dwdot[N2]/d[N]
// d()/d[NH2]
dqdci =  + k_f*sc[25];
J[1442] += 2 * dqdci;         // dwdot[H]/d[NH2]
J[1456] -= dqdci;             // dwdot[N]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1476] += dqdci;             // dwdot[N2]/d[NH2]
// d()/d[N2]
dqdci =  - k_r*sc[11]*sc[11];
J[2396] += 2 * dqdci;         // dwdot[H]/d[N2]
J[2410] -= dqdci;             // dwdot[N]/d[N2]
J[2412] -= dqdci;             // dwdot[NH2]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2767] += 2 * dqdT;          // dwdot[H]/dT
J[2781] -= dqdT;              // dwdot[N]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 148: NH2 + NO <=> H2O + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[27];
k_f = 280000000000000
            * exp(-2.654 * tc[0] - (633.046565582337) * invT);
dlnkfdT = -2.654 * invT + (633.046565582337) * invT2;
// reverse
phi_r = sc[15]*sc[45];
Kc = exp(g_RT[3] - g_RT[15] + g_RT[27] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[27]) + (h_RT[15] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[15] += q;// H2O
wdot[27] -= q;// NH2
wdot[45] += q;// N2
// d()/d[NO]
dqdci =  + k_f*sc[27];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[174] += dqdci;              // dwdot[H2O]/d[NO]
J[186] -= dqdci;              // dwdot[NH2]/d[NO]
J[204] += dqdci;              // dwdot[N2]/d[NO]
// d()/d[H2O]
dqdci =  - k_r*sc[45];
J[798] -= dqdci;              // dwdot[NO]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[822] -= dqdci;              // dwdot[NH2]/d[H2O]
J[840] += dqdci;              // dwdot[N2]/d[H2O]
// d()/d[NH2]
dqdci =  + k_f*sc[3];
J[1434] -= dqdci;             // dwdot[NO]/d[NH2]
J[1446] += dqdci;             // dwdot[H2O]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1476] += dqdci;             // dwdot[N2]/d[NH2]
// d()/d[N2]
dqdci =  - k_r*sc[15];
J[2388] -= dqdci;             // dwdot[NO]/d[N2]
J[2400] += dqdci;             // dwdot[H2O]/d[N2]
J[2412] -= dqdci;             // dwdot[NH2]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 149: NH + O <=> H + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[28];
k_f = 92000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[3]*sc[11];
Kc = exp(-g_RT[3] - g_RT[11] + g_RT[12] + g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[28]) + (h_RT[3] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[11] += q;// H
wdot[12] -= q;// O
wdot[28] -= q;// NH
// d()/d[NO]
dqdci =  - k_r*sc[11];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[170] += dqdci;              // dwdot[H]/d[NO]
J[171] -= dqdci;              // dwdot[O]/d[NO]
J[187] -= dqdci;              // dwdot[NH]/d[NO]
// d()/d[H]
dqdci =  - k_r*sc[3];
J[586] += dqdci;              // dwdot[NO]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[595] -= dqdci;              // dwdot[O]/d[H]
J[611] -= dqdci;              // dwdot[NH]/d[H]
// d()/d[O]
dqdci =  + k_f*sc[28];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[647] += dqdci;              // dwdot[H]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[664] -= dqdci;              // dwdot[NH]/d[O]
// d()/d[NH]
dqdci =  + k_f*sc[12];
J[1487] += dqdci;             // dwdot[NO]/d[NH]
J[1495] += dqdci;             // dwdot[H]/d[NH]
J[1496] -= dqdci;             // dwdot[O]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT

// reaction 151: N2O + OH <=> HO2 + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[13];
k_f = 2000000
            * exp(- (20128.6666321888) * invT);
dlnkfdT = (20128.6666321888) * invT2;
// reverse
phi_r = sc[14]*sc[45];
Kc = exp(g_RT[4] + g_RT[13] - g_RT[14] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[13]) + (h_RT[14] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] -= q;// N2O
wdot[13] -= q;// OH
wdot[14] += q;// HO2
wdot[45] += q;// N2
// d()/d[N2O]
dqdci =  + k_f*sc[13];
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[225] -= dqdci;              // dwdot[OH]/d[N2O]
J[226] += dqdci;              // dwdot[HO2]/d[N2O]
J[257] += dqdci;              // dwdot[N2]/d[N2O]
// d()/d[OH]
dqdci =  + k_f*sc[4];
J[693] -= dqdci;              // dwdot[N2O]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[703] += dqdci;              // dwdot[HO2]/d[OH]
J[734] += dqdci;              // dwdot[N2]/d[OH]
// d()/d[HO2]
dqdci =  - k_r*sc[45];
J[746] -= dqdci;              // dwdot[N2O]/d[HO2]
J[755] -= dqdci;              // dwdot[OH]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[787] += dqdci;              // dwdot[N2]/d[HO2]
// d()/d[N2]
dqdci =  - k_r*sc[14];
J[2389] -= dqdci;             // dwdot[N2O]/d[N2]
J[2398] -= dqdci;             // dwdot[OH]/d[N2]
J[2399] += dqdci;             // dwdot[HO2]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 152: NH2 + NO <=> NNH + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[27];
k_f = 31000000
            * exp(-0.48 * tc[0] - (593.795665649569) * invT);
dlnkfdT = -0.48 * invT + (593.795665649569) * invT2;
// reverse
phi_r = sc[13]*sc[26];
Kc = exp(g_RT[3] - g_RT[13] - g_RT[26] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[27]) + (h_RT[13] + h_RT[26]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[13] += q;// OH
wdot[26] += q;// NNH
wdot[27] -= q;// NH2
// d()/d[NO]
dqdci =  + k_f*sc[27];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[185] += dqdci;              // dwdot[NNH]/d[NO]
J[186] -= dqdci;              // dwdot[NH2]/d[NO]
// d()/d[OH]
dqdci =  - k_r*sc[26];
J[692] -= dqdci;              // dwdot[NO]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[715] += dqdci;              // dwdot[NNH]/d[OH]
J[716] -= dqdci;              // dwdot[NH2]/d[OH]
// d()/d[NNH]
dqdci =  - k_r*sc[13];
J[1381] -= dqdci;             // dwdot[NO]/d[NNH]
J[1391] += dqdci;             // dwdot[OH]/d[NNH]
J[1404] += dqdci;             // dwdot[NNH]/d[NNH]
J[1405] -= dqdci;             // dwdot[NH2]/d[NNH]
// d()/d[NH2]
dqdci =  + k_f*sc[3];
J[1434] -= dqdci;             // dwdot[NO]/d[NH2]
J[1444] += dqdci;             // dwdot[OH]/d[NH2]
J[1457] += dqdci;             // dwdot[NNH]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2782] += dqdT;              // dwdot[NNH]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 153: N + OH <=> H + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[25];
k_f = 38000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[3]*sc[11];
Kc = exp(-g_RT[3] - g_RT[11] + g_RT[13] + g_RT[25]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[25]) + (h_RT[3] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[11] += q;// H
wdot[13] -= q;// OH
wdot[25] -= q;// N
// d()/d[NO]
dqdci =  - k_r*sc[11];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[170] += dqdci;              // dwdot[H]/d[NO]
J[172] -= dqdci;              // dwdot[OH]/d[NO]
J[184] -= dqdci;              // dwdot[N]/d[NO]
// d()/d[H]
dqdci =  - k_r*sc[3];
J[586] += dqdci;              // dwdot[NO]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
J[608] -= dqdci;              // dwdot[N]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[25];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[714] -= dqdci;              // dwdot[N]/d[OH]
// d()/d[N]
dqdci =  + k_f*sc[13];
J[1328] += dqdci;             // dwdot[NO]/d[N]
J[1336] += dqdci;             // dwdot[H]/d[N]
J[1338] -= dqdci;             // dwdot[OH]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2781] -= dqdT;              // dwdot[N]/dT

// reaction 154: NH2 + NO2 <=> H2O + N2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[27];
k_f = 16000000000
            * exp(-1.44 * tc[0] - (134.862066435665) * invT);
dlnkfdT = -1.44 * invT + (134.862066435665) * invT2;
// reverse
phi_r = sc[4]*sc[15];
Kc = exp(-g_RT[4] - g_RT[15] + g_RT[19] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[27]) + (h_RT[4] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] += q;// N2O
wdot[15] += q;// H2O
wdot[19] -= q;// NO2
wdot[27] -= q;// NH2
// d()/d[N2O]
dqdci =  - k_r*sc[15];
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[227] += dqdci;              // dwdot[H2O]/d[N2O]
J[231] -= dqdci;              // dwdot[NO2]/d[N2O]
J[239] -= dqdci;              // dwdot[NH2]/d[N2O]
// d()/d[H2O]
dqdci =  - k_r*sc[4];
J[799] += dqdci;              // dwdot[N2O]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[814] -= dqdci;              // dwdot[NO2]/d[H2O]
J[822] -= dqdci;              // dwdot[NH2]/d[H2O]
// d()/d[NO2]
dqdci =  + k_f*sc[27];
J[1011] += dqdci;             // dwdot[N2O]/d[NO2]
J[1022] += dqdci;             // dwdot[H2O]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1034] -= dqdci;             // dwdot[NH2]/d[NO2]
// d()/d[NH2]
dqdci =  + k_f*sc[19];
J[1435] += dqdci;             // dwdot[N2O]/d[NH2]
J[1446] += dqdci;             // dwdot[H2O]/d[NH2]
J[1450] -= dqdci;             // dwdot[NO2]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 155: NH2 + NO2 <=> H2NO + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[27];
k_f = 65000000000
            * exp(-1.44 * tc[0] - (134.862066435665) * invT);
dlnkfdT = -1.44 * invT + (134.862066435665) * invT2;
// reverse
phi_r = sc[3]*sc[24];
Kc = exp(-g_RT[3] + g_RT[19] - g_RT[24] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[27]) + (h_RT[3] + h_RT[24]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[19] -= q;// NO2
wdot[24] += q;// H2NO
wdot[27] -= q;// NH2
// d()/d[NO]
dqdci =  - k_r*sc[24];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
J[183] += dqdci;              // dwdot[H2NO]/d[NO]
J[186] -= dqdci;              // dwdot[NH2]/d[NO]
// d()/d[NO2]
dqdci =  + k_f*sc[27];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1031] += dqdci;             // dwdot[H2NO]/d[NO2]
J[1034] -= dqdci;             // dwdot[NH2]/d[NO2]
// d()/d[H2NO]
dqdci =  - k_r*sc[3];
J[1275] += dqdci;             // dwdot[NO]/d[H2NO]
J[1291] -= dqdci;             // dwdot[NO2]/d[H2NO]
J[1296] += dqdci;             // dwdot[H2NO]/d[H2NO]
J[1299] -= dqdci;             // dwdot[NH2]/d[H2NO]
// d()/d[NH2]
dqdci =  + k_f*sc[19];
J[1434] += dqdci;             // dwdot[NO]/d[NH2]
J[1450] -= dqdci;             // dwdot[NO2]/d[NH2]
J[1455] += dqdci;             // dwdot[H2NO]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2780] += dqdT;              // dwdot[H2NO]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 156: H + NH <=> H2 + N
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[28];
k_f = 100000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[9]*sc[25];
Kc = exp(-g_RT[9] + g_RT[11] - g_RT[25] + g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[28]) + (h_RT[9] + h_RT[25]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[25] += q;// N
wdot[28] -= q;// NH
// d()/d[H2]
dqdci =  - k_r*sc[25];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[502] += dqdci;              // dwdot[N]/d[H2]
J[505] -= dqdci;              // dwdot[NH]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[28];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[608] += dqdci;              // dwdot[N]/d[H]
J[611] -= dqdci;              // dwdot[NH]/d[H]
// d()/d[N]
dqdci =  - k_r*sc[9];
J[1334] += dqdci;             // dwdot[H2]/d[N]
J[1336] -= dqdci;             // dwdot[H]/d[N]
J[1350] += dqdci;             // dwdot[N]/d[N]
J[1353] -= dqdci;             // dwdot[NH]/d[N]
// d()/d[NH]
dqdci =  + k_f*sc[11];
J[1493] += dqdci;             // dwdot[H2]/d[NH]
J[1495] -= dqdci;             // dwdot[H]/d[NH]
J[1509] += dqdci;             // dwdot[N]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2781] += dqdT;              // dwdot[N]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT

// reaction 157: NH + OH <=> H + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[28];
k_f = 20000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[11]*sc[21];
Kc = exp(-g_RT[11] + g_RT[13] - g_RT[21] + g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[28]) + (h_RT[11] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[13] -= q;// OH
wdot[21] += q;// HNO
wdot[28] -= q;// NH
// d()/d[H]
dqdci =  - k_r*sc[21];
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
J[604] += dqdci;              // dwdot[HNO]/d[H]
J[611] -= dqdci;              // dwdot[NH]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[28];
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[717] -= dqdci;              // dwdot[NH]/d[OH]
// d()/d[HNO]
dqdci =  - k_r*sc[11];
J[1124] += dqdci;             // dwdot[H]/d[HNO]
J[1126] -= dqdci;             // dwdot[OH]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1141] -= dqdci;             // dwdot[NH]/d[HNO]
// d()/d[NH]
dqdci =  + k_f*sc[13];
J[1495] += dqdci;             // dwdot[H]/d[NH]
J[1497] -= dqdci;             // dwdot[OH]/d[NH]
J[1505] += dqdci;             // dwdot[HNO]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT

// reaction 158: NH + OH <=> H2O + N
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[28];
k_f = 500000
            * exp(0.5 * tc[0] - (1006.43333160944) * invT);
dlnkfdT = 0.5 * invT + (1006.43333160944) * invT2;
// reverse
phi_r = sc[15]*sc[25];
Kc = exp(g_RT[13] - g_RT[15] - g_RT[25] + g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[28]) + (h_RT[15] + h_RT[25]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[25] += q;// N
wdot[28] -= q;// NH
// d()/d[OH]
dqdci =  + k_f*sc[28];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[714] += dqdci;              // dwdot[N]/d[OH]
J[717] -= dqdci;              // dwdot[NH]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[25];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[820] += dqdci;              // dwdot[N]/d[H2O]
J[823] -= dqdci;              // dwdot[NH]/d[H2O]
// d()/d[N]
dqdci =  - k_r*sc[15];
J[1338] -= dqdci;             // dwdot[OH]/d[N]
J[1340] += dqdci;             // dwdot[H2O]/d[N]
J[1350] += dqdci;             // dwdot[N]/d[N]
J[1353] -= dqdci;             // dwdot[NH]/d[N]
// d()/d[NH]
dqdci =  + k_f*sc[13];
J[1497] -= dqdci;             // dwdot[OH]/d[NH]
J[1499] += dqdci;             // dwdot[H2O]/d[NH]
J[1509] += dqdci;             // dwdot[N]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2781] += dqdT;              // dwdot[N]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT

// reaction 159: NH + O2 <=> HNO + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[28];
k_f = 0.46
            * exp(2 * tc[0] - (3270.90832773068) * invT);
dlnkfdT = 2 * invT + (3270.90832773068) * invT2;
// reverse
phi_r = sc[12]*sc[21];
Kc = exp(g_RT[8] - g_RT[12] - g_RT[21] + g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[28]) + (h_RT[12] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[12] += q;// O
wdot[21] += q;// HNO
wdot[28] -= q;// NH
// d()/d[O2]
dqdci =  + k_f*sc[28];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[436] += dqdci;              // dwdot[O]/d[O2]
J[445] += dqdci;              // dwdot[HNO]/d[O2]
J[452] -= dqdci;              // dwdot[NH]/d[O2]
// d()/d[O]
dqdci =  - k_r*sc[21];
J[644] -= dqdci;              // dwdot[O2]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[657] += dqdci;              // dwdot[HNO]/d[O]
J[664] -= dqdci;              // dwdot[NH]/d[O]
// d()/d[HNO]
dqdci =  - k_r*sc[12];
J[1121] -= dqdci;             // dwdot[O2]/d[HNO]
J[1125] += dqdci;             // dwdot[O]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1141] -= dqdci;             // dwdot[NH]/d[HNO]
// d()/d[NH]
dqdci =  + k_f*sc[8];
J[1492] -= dqdci;             // dwdot[O2]/d[NH]
J[1496] += dqdci;             // dwdot[O]/d[NH]
J[1505] += dqdci;             // dwdot[HNO]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT

// reaction 160: NH + O2 <=> NO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[28];
k_f = 76000
            * exp(- (769.921498681221) * invT);
dlnkfdT = (769.921498681221) * invT2;
// reverse
phi_r = sc[3]*sc[13];
Kc = exp(-g_RT[3] + g_RT[8] - g_RT[13] + g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[28]) + (h_RT[3] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[8] -= q;// O2
wdot[13] += q;// OH
wdot[28] -= q;// NH
// d()/d[NO]
dqdci =  - k_r*sc[13];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[167] -= dqdci;              // dwdot[O2]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[187] -= dqdci;              // dwdot[NH]/d[NO]
// d()/d[O2]
dqdci =  + k_f*sc[28];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[437] += dqdci;              // dwdot[OH]/d[O2]
J[452] -= dqdci;              // dwdot[NH]/d[O2]
// d()/d[OH]
dqdci =  - k_r*sc[3];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[697] -= dqdci;              // dwdot[O2]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[717] -= dqdci;              // dwdot[NH]/d[OH]
// d()/d[NH]
dqdci =  + k_f*sc[8];
J[1487] += dqdci;             // dwdot[NO]/d[NH]
J[1492] -= dqdci;             // dwdot[O2]/d[NH]
J[1497] += dqdci;             // dwdot[OH]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT

// reaction 161: 2 NH <=> 2 H + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[28] * sc[28]);
k_f = 25000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = (sc[11] * sc[11])*sc[45];
Kc = refC * exp(-2.000000*g_RT[11] + 2.000000*g_RT[28] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[28]) + (2.000000*h_RT[11] + h_RT[45]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += 2 * q;// H
wdot[28] -= 2 * q;// NH
wdot[45] += q;// N2
// d()/d[H]
dqdci =  - k_r*2.000000*sc[11]*sc[45];
J[594] += 2 * dqdci;          // dwdot[H]/d[H]
J[611] += -2 * dqdci;         // dwdot[NH]/d[H]
J[628] += dqdci;              // dwdot[N2]/d[H]
// d()/d[NH]
dqdci =  + k_f*2.000000*sc[28];
J[1495] += 2 * dqdci;         // dwdot[H]/d[NH]
J[1512] += -2 * dqdci;        // dwdot[NH]/d[NH]
J[1529] += dqdci;             // dwdot[N2]/d[NH]
// d()/d[N2]
dqdci =  - k_r*sc[11]*sc[11];
J[2396] += 2 * dqdci;         // dwdot[H]/d[N2]
J[2413] += -2 * dqdci;        // dwdot[NH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2767] += 2 * dqdT;          // dwdot[H]/dT
J[2784] += -2 * dqdT;         // dwdot[NH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 162: N + NH <=> H + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[25]*sc[28];
k_f = 30000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[11]*sc[45];
Kc = exp(-g_RT[11] + g_RT[25] + g_RT[28] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[25] + h_RT[28]) + (h_RT[11] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[25] -= q;// N
wdot[28] -= q;// NH
wdot[45] += q;// N2
// d()/d[H]
dqdci =  - k_r*sc[45];
J[594] += dqdci;              // dwdot[H]/d[H]
J[608] -= dqdci;              // dwdot[N]/d[H]
J[611] -= dqdci;              // dwdot[NH]/d[H]
J[628] += dqdci;              // dwdot[N2]/d[H]
// d()/d[N]
dqdci =  + k_f*sc[28];
J[1336] += dqdci;             // dwdot[H]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
J[1353] -= dqdci;             // dwdot[NH]/d[N]
J[1370] += dqdci;             // dwdot[N2]/d[N]
// d()/d[NH]
dqdci =  + k_f*sc[25];
J[1495] += dqdci;             // dwdot[H]/d[NH]
J[1509] -= dqdci;             // dwdot[N]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
J[1529] += dqdci;             // dwdot[N2]/d[NH]
// d()/d[N2]
dqdci =  - k_r*sc[11];
J[2396] += dqdci;             // dwdot[H]/d[N2]
J[2410] -= dqdci;             // dwdot[N]/d[N2]
J[2413] -= dqdci;             // dwdot[NH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2781] -= dqdT;              // dwdot[N]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 163: NH + NO <=> N2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[28];
k_f = 22000000
            * exp(-0.23 * tc[0]);
dlnkfdT = -0.23 * invT;
// reverse
phi_r = sc[13]*sc[45];
Kc = exp(g_RT[3] - g_RT[13] + g_RT[28] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[28]) + (h_RT[13] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[13] += q;// OH
wdot[28] -= q;// NH
wdot[45] += q;// N2
// d()/d[NO]
dqdci =  + k_f*sc[28];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[187] -= dqdci;              // dwdot[NH]/d[NO]
J[204] += dqdci;              // dwdot[N2]/d[NO]
// d()/d[OH]
dqdci =  - k_r*sc[45];
J[692] -= dqdci;              // dwdot[NO]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[717] -= dqdci;              // dwdot[NH]/d[OH]
J[734] += dqdci;              // dwdot[N2]/d[OH]
// d()/d[NH]
dqdci =  + k_f*sc[3];
J[1487] -= dqdci;             // dwdot[NO]/d[NH]
J[1497] += dqdci;             // dwdot[OH]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
J[1529] += dqdci;             // dwdot[N2]/d[NH]
// d()/d[N2]
dqdci =  - k_r*sc[13];
J[2388] -= dqdci;             // dwdot[NO]/d[N2]
J[2398] += dqdci;             // dwdot[OH]/d[N2]
J[2413] -= dqdci;             // dwdot[NH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 164: NH + NO2 <=> N2O + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[28];
k_f = 10000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[4]*sc[13];
Kc = exp(-g_RT[4] - g_RT[13] + g_RT[19] + g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[28]) + (h_RT[4] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] += q;// N2O
wdot[13] += q;// OH
wdot[19] -= q;// NO2
wdot[28] -= q;// NH
// d()/d[N2O]
dqdci =  - k_r*sc[13];
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[225] += dqdci;              // dwdot[OH]/d[N2O]
J[231] -= dqdci;              // dwdot[NO2]/d[N2O]
J[240] -= dqdci;              // dwdot[NH]/d[N2O]
// d()/d[OH]
dqdci =  - k_r*sc[4];
J[693] += dqdci;              // dwdot[N2O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[708] -= dqdci;              // dwdot[NO2]/d[OH]
J[717] -= dqdci;              // dwdot[NH]/d[OH]
// d()/d[NO2]
dqdci =  + k_f*sc[28];
J[1011] += dqdci;             // dwdot[N2O]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1035] -= dqdci;             // dwdot[NH]/d[NO2]
// d()/d[NH]
dqdci =  + k_f*sc[19];
J[1488] += dqdci;             // dwdot[N2O]/d[NH]
J[1497] += dqdci;             // dwdot[OH]/d[NH]
J[1503] -= dqdci;             // dwdot[NO2]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT

// reaction 167: H + H2NO <=> H2 + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[24];
k_f = 30
            * exp(2 * tc[0] - (1006.43333160944) * invT);
dlnkfdT = 2 * invT + (1006.43333160944) * invT2;
// reverse
phi_r = sc[9]*sc[21];
Kc = exp(-g_RT[9] + g_RT[11] - g_RT[21] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[24]) + (h_RT[9] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[21] += q;// HNO
wdot[24] -= q;// H2NO
// d()/d[H2]
dqdci =  - k_r*sc[21];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[498] += dqdci;              // dwdot[HNO]/d[H2]
J[501] -= dqdci;              // dwdot[H2NO]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[24];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[604] += dqdci;              // dwdot[HNO]/d[H]
J[607] -= dqdci;              // dwdot[H2NO]/d[H]
// d()/d[HNO]
dqdci =  - k_r*sc[9];
J[1122] += dqdci;             // dwdot[H2]/d[HNO]
J[1124] -= dqdci;             // dwdot[H]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1137] -= dqdci;             // dwdot[H2NO]/d[HNO]
// d()/d[H2NO]
dqdci =  + k_f*sc[11];
J[1281] += dqdci;             // dwdot[H2]/d[H2NO]
J[1283] -= dqdci;             // dwdot[H]/d[H2NO]
J[1293] += dqdci;             // dwdot[HNO]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT

// reaction 168: H + H2NO <=> NH2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[24];
k_f = 50000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[13]*sc[27];
Kc = exp(g_RT[11] - g_RT[13] + g_RT[24] - g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[24]) + (h_RT[13] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[24] -= q;// H2NO
wdot[27] += q;// NH2
// d()/d[H]
dqdci =  + k_f*sc[24];
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[607] -= dqdci;              // dwdot[H2NO]/d[H]
J[610] += dqdci;              // dwdot[NH2]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[27];
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[713] -= dqdci;              // dwdot[H2NO]/d[OH]
J[716] += dqdci;              // dwdot[NH2]/d[OH]
// d()/d[H2NO]
dqdci =  + k_f*sc[11];
J[1283] -= dqdci;             // dwdot[H]/d[H2NO]
J[1285] += dqdci;             // dwdot[OH]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
J[1299] += dqdci;             // dwdot[NH2]/d[H2NO]
// d()/d[NH2]
dqdci =  - k_r*sc[13];
J[1442] -= dqdci;             // dwdot[H]/d[NH2]
J[1444] += dqdci;             // dwdot[OH]/d[NH2]
J[1455] -= dqdci;             // dwdot[H2NO]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT

// reaction 169: H2NO + O <=> HNO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[24];
k_f = 30
            * exp(2 * tc[0] - (1006.43333160944) * invT);
dlnkfdT = 2 * invT + (1006.43333160944) * invT2;
// reverse
phi_r = sc[13]*sc[21];
Kc = exp(g_RT[12] - g_RT[13] - g_RT[21] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[24]) + (h_RT[13] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[21] += q;// HNO
wdot[24] -= q;// H2NO
// d()/d[O]
dqdci =  + k_f*sc[24];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[657] += dqdci;              // dwdot[HNO]/d[O]
J[660] -= dqdci;              // dwdot[H2NO]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[21];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[713] -= dqdci;              // dwdot[H2NO]/d[OH]
// d()/d[HNO]
dqdci =  - k_r*sc[13];
J[1125] -= dqdci;             // dwdot[O]/d[HNO]
J[1126] += dqdci;             // dwdot[OH]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1137] -= dqdci;             // dwdot[H2NO]/d[HNO]
// d()/d[H2NO]
dqdci =  + k_f*sc[12];
J[1284] -= dqdci;             // dwdot[O]/d[H2NO]
J[1285] += dqdci;             // dwdot[OH]/d[H2NO]
J[1293] += dqdci;             // dwdot[HNO]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT

// reaction 170: H2NO + OH <=> H2O + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[24];
k_f = 20
            * exp(2 * tc[0] - (503.21666580472) * invT);
dlnkfdT = 2 * invT + (503.21666580472) * invT2;
// reverse
phi_r = sc[15]*sc[21];
Kc = exp(g_RT[13] - g_RT[15] - g_RT[21] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[24]) + (h_RT[15] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[21] += q;// HNO
wdot[24] -= q;// H2NO
// d()/d[OH]
dqdci =  + k_f*sc[24];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[713] -= dqdci;              // dwdot[H2NO]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[21];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[816] += dqdci;              // dwdot[HNO]/d[H2O]
J[819] -= dqdci;              // dwdot[H2NO]/d[H2O]
// d()/d[HNO]
dqdci =  - k_r*sc[15];
J[1126] -= dqdci;             // dwdot[OH]/d[HNO]
J[1128] += dqdci;             // dwdot[H2O]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1137] -= dqdci;             // dwdot[H2NO]/d[HNO]
// d()/d[H2NO]
dqdci =  + k_f*sc[13];
J[1285] -= dqdci;             // dwdot[OH]/d[H2NO]
J[1287] += dqdci;             // dwdot[H2O]/d[H2NO]
J[1293] += dqdci;             // dwdot[HNO]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT

// reaction 171: H2NO + HO2 <=> H2O2 + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[24];
k_f = 0.029
            * exp(2.69 * tc[0] - (805.146665287552) * invT);
dlnkfdT = 2.69 * invT + (805.146665287552) * invT2;
// reverse
phi_r = sc[16]*sc[21];
Kc = exp(g_RT[14] - g_RT[16] - g_RT[21] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[14] + h_RT[24]) + (h_RT[16] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[14] -= q;// HO2
wdot[16] += q;// H2O2
wdot[21] += q;// HNO
wdot[24] -= q;// H2NO
// d()/d[HO2]
dqdci =  + k_f*sc[24];
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[758] += dqdci;              // dwdot[H2O2]/d[HO2]
J[763] += dqdci;              // dwdot[HNO]/d[HO2]
J[766] -= dqdci;              // dwdot[H2NO]/d[HO2]
// d()/d[H2O2]
dqdci =  - k_r*sc[21];
J[862] -= dqdci;              // dwdot[HO2]/d[H2O2]
J[864] += dqdci;              // dwdot[H2O2]/d[H2O2]
J[869] += dqdci;              // dwdot[HNO]/d[H2O2]
J[872] -= dqdci;              // dwdot[H2NO]/d[H2O2]
// d()/d[HNO]
dqdci =  - k_r*sc[16];
J[1127] -= dqdci;             // dwdot[HO2]/d[HNO]
J[1129] += dqdci;             // dwdot[H2O2]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1137] -= dqdci;             // dwdot[H2NO]/d[HNO]
// d()/d[H2NO]
dqdci =  + k_f*sc[14];
J[1286] -= dqdci;             // dwdot[HO2]/d[H2NO]
J[1288] += dqdci;             // dwdot[H2O2]/d[H2NO]
J[1293] += dqdci;             // dwdot[HNO]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
// d()/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2772] += dqdT;              // dwdot[H2O2]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT

// reaction 172: H2NO + O2 <=> HNO + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[24];
k_f = 3000000
            * exp(- (12580.416645118) * invT);
dlnkfdT = (12580.416645118) * invT2;
// reverse
phi_r = sc[14]*sc[21];
Kc = exp(g_RT[8] - g_RT[14] - g_RT[21] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[24]) + (h_RT[14] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[14] += q;// HO2
wdot[21] += q;// HNO
wdot[24] -= q;// H2NO
// d()/d[O2]
dqdci =  + k_f*sc[24];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
J[445] += dqdci;              // dwdot[HNO]/d[O2]
J[448] -= dqdci;              // dwdot[H2NO]/d[O2]
// d()/d[HO2]
dqdci =  - k_r*sc[21];
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[763] += dqdci;              // dwdot[HNO]/d[HO2]
J[766] -= dqdci;              // dwdot[H2NO]/d[HO2]
// d()/d[HNO]
dqdci =  - k_r*sc[14];
J[1121] -= dqdci;             // dwdot[O2]/d[HNO]
J[1127] += dqdci;             // dwdot[HO2]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1137] -= dqdci;             // dwdot[H2NO]/d[HNO]
// d()/d[H2NO]
dqdci =  + k_f*sc[8];
J[1280] -= dqdci;             // dwdot[O2]/d[H2NO]
J[1286] += dqdci;             // dwdot[HO2]/d[H2NO]
J[1293] += dqdci;             // dwdot[HNO]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT

// reaction 173: H2NO + NO <=> 2 HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[24];
k_f = 0.02
            * exp(2 * tc[0] - (6541.81665546136) * invT);
dlnkfdT = 2 * invT + (6541.81665546136) * invT2;
// reverse
phi_r = (sc[21] * sc[21]);
Kc = exp(g_RT[3] - 2.000000*g_RT[21] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[24]) + (2.000000*h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[21] += 2 * q;// HNO
wdot[24] -= q;// H2NO
// d()/d[NO]
dqdci =  + k_f*sc[24];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[180] += 2 * dqdci;          // dwdot[HNO]/d[NO]
J[183] -= dqdci;              // dwdot[H2NO]/d[NO]
// d()/d[HNO]
dqdci =  - k_r*2.000000*sc[21];
J[1116] -= dqdci;             // dwdot[NO]/d[HNO]
J[1134] += 2 * dqdci;         // dwdot[HNO]/d[HNO]
J[1137] -= dqdci;             // dwdot[H2NO]/d[HNO]
// d()/d[H2NO]
dqdci =  + k_f*sc[3];
J[1275] -= dqdci;             // dwdot[NO]/d[H2NO]
J[1293] += 2 * dqdci;         // dwdot[HNO]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2777] += 2 * dqdT;          // dwdot[HNO]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT

// reaction 174: H2NO + NH2 <=> HNO + NH3
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[24]*sc[27];
k_f = 3000000
            * exp(- (503.21666580472) * invT);
dlnkfdT = (503.21666580472) * invT2;
// reverse
phi_r = sc[20]*sc[21];
Kc = exp(-g_RT[20] - g_RT[21] + g_RT[24] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[24] + h_RT[27]) + (h_RT[20] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[20] += q;// NH3
wdot[21] += q;// HNO
wdot[24] -= q;// H2NO
wdot[27] -= q;// NH2
// d()/d[NH3]
dqdci =  - k_r*sc[21];
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1081] += dqdci;             // dwdot[HNO]/d[NH3]
J[1084] -= dqdci;             // dwdot[H2NO]/d[NH3]
J[1087] -= dqdci;             // dwdot[NH2]/d[NH3]
// d()/d[HNO]
dqdci =  - k_r*sc[20];
J[1133] += dqdci;             // dwdot[NH3]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1137] -= dqdci;             // dwdot[H2NO]/d[HNO]
J[1140] -= dqdci;             // dwdot[NH2]/d[HNO]
// d()/d[H2NO]
dqdci =  + k_f*sc[27];
J[1292] += dqdci;             // dwdot[NH3]/d[H2NO]
J[1293] += dqdci;             // dwdot[HNO]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
J[1299] -= dqdci;             // dwdot[NH2]/d[H2NO]
// d()/d[NH2]
dqdci =  + k_f*sc[24];
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1452] += dqdci;             // dwdot[HNO]/d[NH2]
J[1455] -= dqdci;             // dwdot[H2NO]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 175: H2NO + NO2 <=> HNO + HONO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[24];
k_f = 600000
            * exp(- (1006.43333160944) * invT);
dlnkfdT = (1006.43333160944) * invT2;
// reverse
phi_r = sc[21]*sc[23];
Kc = exp(g_RT[19] - g_RT[21] - g_RT[23] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[24]) + (h_RT[21] + h_RT[23]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[19] -= q;// NO2
wdot[21] += q;// HNO
wdot[23] += q;// HONO
wdot[24] -= q;// H2NO
// d()/d[NO2]
dqdci =  + k_f*sc[24];
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1028] += dqdci;             // dwdot[HNO]/d[NO2]
J[1030] += dqdci;             // dwdot[HONO]/d[NO2]
J[1031] -= dqdci;             // dwdot[H2NO]/d[NO2]
// d()/d[HNO]
dqdci =  - k_r*sc[23];
J[1132] -= dqdci;             // dwdot[NO2]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1136] += dqdci;             // dwdot[HONO]/d[HNO]
J[1137] -= dqdci;             // dwdot[H2NO]/d[HNO]
// d()/d[HONO]
dqdci =  - k_r*sc[21];
J[1238] -= dqdci;             // dwdot[NO2]/d[HONO]
J[1240] += dqdci;             // dwdot[HNO]/d[HONO]
J[1242] += dqdci;             // dwdot[HONO]/d[HONO]
J[1243] -= dqdci;             // dwdot[H2NO]/d[HONO]
// d()/d[H2NO]
dqdci =  + k_f*sc[19];
J[1291] -= dqdci;             // dwdot[NO2]/d[H2NO]
J[1293] += dqdci;             // dwdot[HNO]/d[H2NO]
J[1295] += dqdci;             // dwdot[HONO]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
// d()/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2779] += dqdT;              // dwdot[HONO]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT

// reaction 177: H + HNOH <=> NH2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[42];
k_f = 40000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[13]*sc[27];
Kc = exp(g_RT[11] - g_RT[13] - g_RT[27] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[42]) + (h_RT[13] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[27] += q;// NH2
wdot[42] -= q;// HNOH
// d()/d[H]
dqdci =  + k_f*sc[42];
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[610] += dqdci;              // dwdot[NH2]/d[H]
J[625] -= dqdci;              // dwdot[HNOH]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[27];
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[716] += dqdci;              // dwdot[NH2]/d[OH]
J[731] -= dqdci;              // dwdot[HNOH]/d[OH]
// d()/d[NH2]
dqdci =  - k_r*sc[13];
J[1442] -= dqdci;             // dwdot[H]/d[NH2]
J[1444] += dqdci;             // dwdot[OH]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
J[1473] -= dqdci;             // dwdot[HNOH]/d[NH2]
// d()/d[HNOH]
dqdci =  + k_f*sc[11];
J[2237] -= dqdci;             // dwdot[H]/d[HNOH]
J[2239] += dqdci;             // dwdot[OH]/d[HNOH]
J[2253] += dqdci;             // dwdot[NH2]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 178: H + HNOH <=> H2 + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[42];
k_f = 480
            * exp(1.5 * tc[0] - (190.215899674184) * invT);
dlnkfdT = 1.5 * invT + (190.215899674184) * invT2;
// reverse
phi_r = sc[9]*sc[21];
Kc = exp(-g_RT[9] + g_RT[11] - g_RT[21] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[42]) + (h_RT[9] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[21] += q;// HNO
wdot[42] -= q;// HNOH
// d()/d[H2]
dqdci =  - k_r*sc[21];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[498] += dqdci;              // dwdot[HNO]/d[H2]
J[519] -= dqdci;              // dwdot[HNOH]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[42];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[604] += dqdci;              // dwdot[HNO]/d[H]
J[625] -= dqdci;              // dwdot[HNOH]/d[H]
// d()/d[HNO]
dqdci =  - k_r*sc[9];
J[1122] += dqdci;             // dwdot[H2]/d[HNO]
J[1124] -= dqdci;             // dwdot[H]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1155] -= dqdci;             // dwdot[HNOH]/d[HNO]
// d()/d[HNOH]
dqdci =  + k_f*sc[11];
J[2235] += dqdci;             // dwdot[H2]/d[HNOH]
J[2237] -= dqdci;             // dwdot[H]/d[HNOH]
J[2247] += dqdci;             // dwdot[HNO]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 179: HNOH + O <=> HNO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[42];
k_f = 70000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[13]*sc[21];
Kc = exp(g_RT[12] - g_RT[13] - g_RT[21] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[42]) + (h_RT[13] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[21] += q;// HNO
wdot[42] -= q;// HNOH
// d()/d[O]
dqdci =  + k_f*sc[42];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[657] += dqdci;              // dwdot[HNO]/d[O]
J[678] -= dqdci;              // dwdot[HNOH]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[21];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[731] -= dqdci;              // dwdot[HNOH]/d[OH]
// d()/d[HNO]
dqdci =  - k_r*sc[13];
J[1125] -= dqdci;             // dwdot[O]/d[HNO]
J[1126] += dqdci;             // dwdot[OH]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1155] -= dqdci;             // dwdot[HNOH]/d[HNO]
// d()/d[HNOH]
dqdci =  + k_f*sc[12];
J[2238] -= dqdci;             // dwdot[O]/d[HNOH]
J[2239] += dqdci;             // dwdot[OH]/d[HNOH]
J[2247] += dqdci;             // dwdot[HNO]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 180: HNOH + O <=> HNO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[42];
k_f = 330
            * exp(1.5 * tc[0] - (-180.15156635809) * invT);
dlnkfdT = 1.5 * invT + (-180.15156635809) * invT2;
// reverse
phi_r = sc[13]*sc[21];
Kc = exp(g_RT[12] - g_RT[13] - g_RT[21] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[42]) + (h_RT[13] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[21] += q;// HNO
wdot[42] -= q;// HNOH
// d()/d[O]
dqdci =  + k_f*sc[42];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[657] += dqdci;              // dwdot[HNO]/d[O]
J[678] -= dqdci;              // dwdot[HNOH]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[21];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[731] -= dqdci;              // dwdot[HNOH]/d[OH]
// d()/d[HNO]
dqdci =  - k_r*sc[13];
J[1125] -= dqdci;             // dwdot[O]/d[HNO]
J[1126] += dqdci;             // dwdot[OH]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1155] -= dqdci;             // dwdot[HNOH]/d[HNO]
// d()/d[HNOH]
dqdci =  + k_f*sc[12];
J[2238] -= dqdci;             // dwdot[O]/d[HNOH]
J[2239] += dqdci;             // dwdot[OH]/d[HNOH]
J[2247] += dqdci;             // dwdot[HNO]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 181: HNOH + OH <=> H2O + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[42];
k_f = 2.4
            * exp(2 * tc[0] - (-599.834265639226) * invT);
dlnkfdT = 2 * invT + (-599.834265639226) * invT2;
// reverse
phi_r = sc[15]*sc[21];
Kc = exp(g_RT[13] - g_RT[15] - g_RT[21] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[42]) + (h_RT[15] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[21] += q;// HNO
wdot[42] -= q;// HNOH
// d()/d[OH]
dqdci =  + k_f*sc[42];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[731] -= dqdci;              // dwdot[HNOH]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[21];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[816] += dqdci;              // dwdot[HNO]/d[H2O]
J[837] -= dqdci;              // dwdot[HNOH]/d[H2O]
// d()/d[HNO]
dqdci =  - k_r*sc[15];
J[1126] -= dqdci;             // dwdot[OH]/d[HNO]
J[1128] += dqdci;             // dwdot[H2O]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1155] -= dqdci;             // dwdot[HNOH]/d[HNO]
// d()/d[HNOH]
dqdci =  + k_f*sc[13];
J[2239] -= dqdci;             // dwdot[OH]/d[HNOH]
J[2241] += dqdci;             // dwdot[H2O]/d[HNOH]
J[2247] += dqdci;             // dwdot[HNO]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 182: HNOH + HO2 <=> H2O2 + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[42];
k_f = 0.029
            * exp(2.69 * tc[0] - (-805.146665287552) * invT);
dlnkfdT = 2.69 * invT + (-805.146665287552) * invT2;
// reverse
phi_r = sc[16]*sc[21];
Kc = exp(g_RT[14] - g_RT[16] - g_RT[21] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[14] + h_RT[42]) + (h_RT[16] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[14] -= q;// HO2
wdot[16] += q;// H2O2
wdot[21] += q;// HNO
wdot[42] -= q;// HNOH
// d()/d[HO2]
dqdci =  + k_f*sc[42];
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[758] += dqdci;              // dwdot[H2O2]/d[HO2]
J[763] += dqdci;              // dwdot[HNO]/d[HO2]
J[784] -= dqdci;              // dwdot[HNOH]/d[HO2]
// d()/d[H2O2]
dqdci =  - k_r*sc[21];
J[862] -= dqdci;              // dwdot[HO2]/d[H2O2]
J[864] += dqdci;              // dwdot[H2O2]/d[H2O2]
J[869] += dqdci;              // dwdot[HNO]/d[H2O2]
J[890] -= dqdci;              // dwdot[HNOH]/d[H2O2]
// d()/d[HNO]
dqdci =  - k_r*sc[16];
J[1127] -= dqdci;             // dwdot[HO2]/d[HNO]
J[1129] += dqdci;             // dwdot[H2O2]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1155] -= dqdci;             // dwdot[HNOH]/d[HNO]
// d()/d[HNOH]
dqdci =  + k_f*sc[14];
J[2240] -= dqdci;             // dwdot[HO2]/d[HNOH]
J[2242] += dqdci;             // dwdot[H2O2]/d[HNOH]
J[2247] += dqdci;             // dwdot[HNO]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2772] += dqdT;              // dwdot[H2O2]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 183: HNOH + O2 <=> HNO + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[42];
k_f = 3000000
            * exp(- (12580.416645118) * invT);
dlnkfdT = (12580.416645118) * invT2;
// reverse
phi_r = sc[14]*sc[21];
Kc = exp(g_RT[8] - g_RT[14] - g_RT[21] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[42]) + (h_RT[14] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[14] += q;// HO2
wdot[21] += q;// HNO
wdot[42] -= q;// HNOH
// d()/d[O2]
dqdci =  + k_f*sc[42];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
J[445] += dqdci;              // dwdot[HNO]/d[O2]
J[466] -= dqdci;              // dwdot[HNOH]/d[O2]
// d()/d[HO2]
dqdci =  - k_r*sc[21];
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[763] += dqdci;              // dwdot[HNO]/d[HO2]
J[784] -= dqdci;              // dwdot[HNOH]/d[HO2]
// d()/d[HNO]
dqdci =  - k_r*sc[14];
J[1121] -= dqdci;             // dwdot[O2]/d[HNO]
J[1127] += dqdci;             // dwdot[HO2]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1155] -= dqdci;             // dwdot[HNOH]/d[HNO]
// d()/d[HNOH]
dqdci =  + k_f*sc[8];
J[2234] -= dqdci;             // dwdot[O2]/d[HNOH]
J[2240] += dqdci;             // dwdot[HO2]/d[HNOH]
J[2247] += dqdci;             // dwdot[HNO]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 184: HNOH + NH2 <=> HNO + NH3
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[27]*sc[42];
k_f = 1.8
            * exp(1.94 * tc[0] - (-579.705599007037) * invT);
dlnkfdT = 1.94 * invT + (-579.705599007037) * invT2;
// reverse
phi_r = sc[20]*sc[21];
Kc = exp(-g_RT[20] - g_RT[21] + g_RT[27] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[27] + h_RT[42]) + (h_RT[20] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[20] += q;// NH3
wdot[21] += q;// HNO
wdot[27] -= q;// NH2
wdot[42] -= q;// HNOH
// d()/d[NH3]
dqdci =  - k_r*sc[21];
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1081] += dqdci;             // dwdot[HNO]/d[NH3]
J[1087] -= dqdci;             // dwdot[NH2]/d[NH3]
J[1102] -= dqdci;             // dwdot[HNOH]/d[NH3]
// d()/d[HNO]
dqdci =  - k_r*sc[20];
J[1133] += dqdci;             // dwdot[NH3]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1140] -= dqdci;             // dwdot[NH2]/d[HNO]
J[1155] -= dqdci;             // dwdot[HNOH]/d[HNO]
// d()/d[NH2]
dqdci =  + k_f*sc[42];
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1452] += dqdci;             // dwdot[HNO]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1473] -= dqdci;             // dwdot[HNOH]/d[NH2]
// d()/d[HNOH]
dqdci =  + k_f*sc[27];
J[2246] += dqdci;             // dwdot[NH3]/d[HNOH]
J[2247] += dqdci;             // dwdot[HNO]/d[HNOH]
J[2253] -= dqdci;             // dwdot[NH2]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 185: HNOH + NO2 <=> HNO + HONO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[42];
k_f = 600000
            * exp(- (1006.43333160944) * invT);
dlnkfdT = (1006.43333160944) * invT2;
// reverse
phi_r = sc[21]*sc[23];
Kc = exp(g_RT[19] - g_RT[21] - g_RT[23] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[42]) + (h_RT[21] + h_RT[23]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[19] -= q;// NO2
wdot[21] += q;// HNO
wdot[23] += q;// HONO
wdot[42] -= q;// HNOH
// d()/d[NO2]
dqdci =  + k_f*sc[42];
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1028] += dqdci;             // dwdot[HNO]/d[NO2]
J[1030] += dqdci;             // dwdot[HONO]/d[NO2]
J[1049] -= dqdci;             // dwdot[HNOH]/d[NO2]
// d()/d[HNO]
dqdci =  - k_r*sc[23];
J[1132] -= dqdci;             // dwdot[NO2]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1136] += dqdci;             // dwdot[HONO]/d[HNO]
J[1155] -= dqdci;             // dwdot[HNOH]/d[HNO]
// d()/d[HONO]
dqdci =  - k_r*sc[21];
J[1238] -= dqdci;             // dwdot[NO2]/d[HONO]
J[1240] += dqdci;             // dwdot[HNO]/d[HONO]
J[1242] += dqdci;             // dwdot[HONO]/d[HONO]
J[1261] -= dqdci;             // dwdot[HNOH]/d[HONO]
// d()/d[HNOH]
dqdci =  + k_f*sc[19];
J[2245] -= dqdci;             // dwdot[NO2]/d[HNOH]
J[2247] += dqdci;             // dwdot[HNO]/d[HNOH]
J[2249] += dqdci;             // dwdot[HONO]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2779] += dqdT;              // dwdot[HONO]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 186: HNO + O2 <=> HO2 + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[21];
k_f = 22000
            * exp(- (1509.64999741416) * invT);
dlnkfdT = (1509.64999741416) * invT2;
// reverse
phi_r = sc[3]*sc[14];
Kc = exp(-g_RT[3] + g_RT[8] - g_RT[14] + g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[21]) + (h_RT[3] + h_RT[14]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[8] -= q;// O2
wdot[14] += q;// HO2
wdot[21] -= q;// HNO
// d()/d[NO]
dqdci =  - k_r*sc[14];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[167] -= dqdci;              // dwdot[O2]/d[NO]
J[173] += dqdci;              // dwdot[HO2]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
// d()/d[O2]
dqdci =  + k_f*sc[21];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
J[445] -= dqdci;              // dwdot[HNO]/d[O2]
// d()/d[HO2]
dqdci =  - k_r*sc[3];
J[745] += dqdci;              // dwdot[NO]/d[HO2]
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[763] -= dqdci;              // dwdot[HNO]/d[HO2]
// d()/d[HNO]
dqdci =  + k_f*sc[8];
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1121] -= dqdci;             // dwdot[O2]/d[HNO]
J[1127] += dqdci;             // dwdot[HO2]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT

// reaction 187: HCO + HNO <=> CH2O + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[17]*sc[21];
k_f = 600000
            * exp(- (1006.43333160944) * invT);
dlnkfdT = (1006.43333160944) * invT2;
// reverse
phi_r = sc[3]*sc[18];
Kc = exp(-g_RT[3] + g_RT[17] - g_RT[18] + g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[17] + h_RT[21]) + (h_RT[3] + h_RT[18]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[17] -= q;// HCO
wdot[18] += q;// CH2O
wdot[21] -= q;// HNO
// d()/d[NO]
dqdci =  - k_r*sc[18];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[176] -= dqdci;              // dwdot[HCO]/d[NO]
J[177] += dqdci;              // dwdot[CH2O]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
// d()/d[HCO]
dqdci =  + k_f*sc[21];
J[904] += dqdci;              // dwdot[NO]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
J[919] += dqdci;              // dwdot[CH2O]/d[HCO]
J[922] -= dqdci;              // dwdot[HNO]/d[HCO]
// d()/d[CH2O]
dqdci =  - k_r*sc[3];
J[957] += dqdci;              // dwdot[NO]/d[CH2O]
J[971] -= dqdci;              // dwdot[HCO]/d[CH2O]
J[972] += dqdci;              // dwdot[CH2O]/d[CH2O]
J[975] -= dqdci;              // dwdot[HNO]/d[CH2O]
// d()/d[HNO]
dqdci =  + k_f*sc[17];
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1130] -= dqdci;             // dwdot[HCO]/d[HNO]
J[1131] += dqdci;             // dwdot[CH2O]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT
J[2774] += dqdT;              // dwdot[CH2O]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT

// reaction 189: H + HON <=> H + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[22];
k_f = 20000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[11]*sc[21];
Kc = exp(g_RT[11] - g_RT[11] - g_RT[21] + g_RT[22]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[22]) + (h_RT[11] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[21] += q;// HNO
wdot[22] -= q;// HON
// d()/d[H]
dqdci =  + k_f*sc[22] - k_r*sc[21];
J[604] += dqdci;              // dwdot[HNO]/d[H]
J[605] -= dqdci;              // dwdot[HON]/d[H]
// d()/d[HNO]
dqdci =  - k_r*sc[11];
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1135] -= dqdci;             // dwdot[HON]/d[HNO]
// d()/d[HON]
dqdci =  + k_f*sc[11];
J[1187] += dqdci;             // dwdot[HNO]/d[HON]
J[1188] -= dqdci;             // dwdot[HON]/d[HON]
// d()/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2778] -= dqdT;              // dwdot[HON]/dT

// reaction 190: H + HON <=> NH + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[22];
k_f = 20000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[13]*sc[28];
Kc = exp(g_RT[11] - g_RT[13] + g_RT[22] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[22]) + (h_RT[13] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[22] -= q;// HON
wdot[28] += q;// NH
// d()/d[H]
dqdci =  + k_f*sc[22];
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[605] -= dqdci;              // dwdot[HON]/d[H]
J[611] += dqdci;              // dwdot[NH]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[28];
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[711] -= dqdci;              // dwdot[HON]/d[OH]
J[717] += dqdci;              // dwdot[NH]/d[OH]
// d()/d[HON]
dqdci =  + k_f*sc[11];
J[1177] -= dqdci;             // dwdot[H]/d[HON]
J[1179] += dqdci;             // dwdot[OH]/d[HON]
J[1188] -= dqdci;             // dwdot[HON]/d[HON]
J[1194] += dqdci;             // dwdot[NH]/d[HON]
// d()/d[NH]
dqdci =  - k_r*sc[13];
J[1495] -= dqdci;             // dwdot[H]/d[NH]
J[1497] += dqdci;             // dwdot[OH]/d[NH]
J[1506] -= dqdci;             // dwdot[HON]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2778] -= dqdT;              // dwdot[HON]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 191: HON + O <=> NO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[22];
k_f = 70000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[3]*sc[13];
Kc = exp(-g_RT[3] + g_RT[12] - g_RT[13] + g_RT[22]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[22]) + (h_RT[3] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[22] -= q;// HON
// d()/d[NO]
dqdci =  - k_r*sc[13];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[171] -= dqdci;              // dwdot[O]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[181] -= dqdci;              // dwdot[HON]/d[NO]
// d()/d[O]
dqdci =  + k_f*sc[22];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[658] -= dqdci;              // dwdot[HON]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[3];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[711] -= dqdci;              // dwdot[HON]/d[OH]
// d()/d[HON]
dqdci =  + k_f*sc[12];
J[1169] += dqdci;             // dwdot[NO]/d[HON]
J[1178] -= dqdci;             // dwdot[O]/d[HON]
J[1179] += dqdci;             // dwdot[OH]/d[HON]
J[1188] -= dqdci;             // dwdot[HON]/d[HON]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2778] -= dqdT;              // dwdot[HON]/dT

// reaction 192: HON + OH <=> H + HONO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[22];
k_f = 40000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[11]*sc[23];
Kc = exp(-g_RT[11] + g_RT[13] + g_RT[22] - g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[22]) + (h_RT[11] + h_RT[23]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[13] -= q;// OH
wdot[22] -= q;// HON
wdot[23] += q;// HONO
// d()/d[H]
dqdci =  - k_r*sc[23];
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
J[605] -= dqdci;              // dwdot[HON]/d[H]
J[606] += dqdci;              // dwdot[HONO]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[22];
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[711] -= dqdci;              // dwdot[HON]/d[OH]
J[712] += dqdci;              // dwdot[HONO]/d[OH]
// d()/d[HON]
dqdci =  + k_f*sc[13];
J[1177] += dqdci;             // dwdot[H]/d[HON]
J[1179] -= dqdci;             // dwdot[OH]/d[HON]
J[1188] -= dqdci;             // dwdot[HON]/d[HON]
J[1189] += dqdci;             // dwdot[HONO]/d[HON]
// d()/d[HONO]
dqdci =  - k_r*sc[11];
J[1230] += dqdci;             // dwdot[H]/d[HONO]
J[1232] -= dqdci;             // dwdot[OH]/d[HONO]
J[1241] -= dqdci;             // dwdot[HON]/d[HONO]
J[1242] += dqdci;             // dwdot[HONO]/d[HONO]
// d()/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2778] -= dqdT;              // dwdot[HON]/dT
J[2779] += dqdT;              // dwdot[HONO]/dT

// reaction 193: HON + O2 <=> NO2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[22];
k_f = 1000000
            * exp(- (2499.98039571785) * invT);
dlnkfdT = (2499.98039571785) * invT2;
// reverse
phi_r = sc[13]*sc[19];
Kc = exp(g_RT[8] - g_RT[13] - g_RT[19] + g_RT[22]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[22]) + (h_RT[13] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[13] += q;// OH
wdot[19] += q;// NO2
wdot[22] -= q;// HON
// d()/d[O2]
dqdci =  + k_f*sc[22];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[437] += dqdci;              // dwdot[OH]/d[O2]
J[443] += dqdci;              // dwdot[NO2]/d[O2]
J[446] -= dqdci;              // dwdot[HON]/d[O2]
// d()/d[OH]
dqdci =  - k_r*sc[19];
J[697] -= dqdci;              // dwdot[O2]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
J[711] -= dqdci;              // dwdot[HON]/d[OH]
// d()/d[NO2]
dqdci =  - k_r*sc[13];
J[1015] -= dqdci;             // dwdot[O2]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1029] -= dqdci;             // dwdot[HON]/d[NO2]
// d()/d[HON]
dqdci =  + k_f*sc[8];
J[1174] -= dqdci;             // dwdot[O2]/d[HON]
J[1179] += dqdci;             // dwdot[OH]/d[HON]
J[1185] += dqdci;             // dwdot[NO2]/d[HON]
J[1188] -= dqdci;             // dwdot[HON]/d[HON]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2778] -= dqdT;              // dwdot[HON]/dT

// reaction 194: HCO + NO <=> CO + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[17];
k_f = 70000000
            * exp(-0.4 * tc[0]);
dlnkfdT = -0.4 * invT;
// reverse
phi_r = sc[5]*sc[21];
Kc = exp(g_RT[3] - g_RT[5] + g_RT[17] - g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[17]) + (h_RT[5] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[5] += q;// CO
wdot[17] -= q;// HCO
wdot[21] += q;// HNO
// d()/d[NO]
dqdci =  + k_f*sc[17];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[164] += dqdci;              // dwdot[CO]/d[NO]
J[176] -= dqdci;              // dwdot[HCO]/d[NO]
J[180] += dqdci;              // dwdot[HNO]/d[NO]
// d()/d[CO]
dqdci =  - k_r*sc[21];
J[268] -= dqdci;              // dwdot[NO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[282] -= dqdci;              // dwdot[HCO]/d[CO]
J[286] += dqdci;              // dwdot[HNO]/d[CO]
// d()/d[HCO]
dqdci =  + k_f*sc[3];
J[904] -= dqdci;              // dwdot[NO]/d[HCO]
J[906] += dqdci;              // dwdot[CO]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
J[922] += dqdci;              // dwdot[HNO]/d[HCO]
// d()/d[HNO]
dqdci =  - k_r*sc[5];
J[1116] -= dqdci;             // dwdot[NO]/d[HNO]
J[1118] += dqdci;             // dwdot[CO]/d[HNO]
J[1130] -= dqdci;             // dwdot[HCO]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT

// reaction 195: H + HONO <=> HNO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[23];
k_f = 56000
            * exp(0.86 * tc[0] - (2516.0833290236) * invT);
dlnkfdT = 0.86 * invT + (2516.0833290236) * invT2;
// reverse
phi_r = sc[13]*sc[21];
Kc = exp(g_RT[11] - g_RT[13] - g_RT[21] + g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[23]) + (h_RT[13] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[21] += q;// HNO
wdot[23] -= q;// HONO
// d()/d[H]
dqdci =  + k_f*sc[23];
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[604] += dqdci;              // dwdot[HNO]/d[H]
J[606] -= dqdci;              // dwdot[HONO]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[21];
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[712] -= dqdci;              // dwdot[HONO]/d[OH]
// d()/d[HNO]
dqdci =  - k_r*sc[13];
J[1124] -= dqdci;             // dwdot[H]/d[HNO]
J[1126] += dqdci;             // dwdot[OH]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1136] -= dqdci;             // dwdot[HONO]/d[HNO]
// d()/d[HONO]
dqdci =  + k_f*sc[11];
J[1230] -= dqdci;             // dwdot[H]/d[HONO]
J[1232] += dqdci;             // dwdot[OH]/d[HONO]
J[1240] += dqdci;             // dwdot[HNO]/d[HONO]
J[1242] -= dqdci;             // dwdot[HONO]/d[HONO]
// d()/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2779] -= dqdT;              // dwdot[HONO]/dT

// reaction 196: H + HONO <=> H2O + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[23];
k_f = 8.1
            * exp(1.89 * tc[0] - (1937.38416334817) * invT);
dlnkfdT = 1.89 * invT + (1937.38416334817) * invT2;
// reverse
phi_r = sc[3]*sc[15];
Kc = exp(-g_RT[3] + g_RT[11] - g_RT[15] + g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[23]) + (h_RT[3] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[11] -= q;// H
wdot[15] += q;// H2O
wdot[23] -= q;// HONO
// d()/d[NO]
dqdci =  - k_r*sc[15];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[170] -= dqdci;              // dwdot[H]/d[NO]
J[174] += dqdci;              // dwdot[H2O]/d[NO]
J[182] -= dqdci;              // dwdot[HONO]/d[NO]
// d()/d[H]
dqdci =  + k_f*sc[23];
J[586] += dqdci;              // dwdot[NO]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[598] += dqdci;              // dwdot[H2O]/d[H]
J[606] -= dqdci;              // dwdot[HONO]/d[H]
// d()/d[H2O]
dqdci =  - k_r*sc[3];
J[798] += dqdci;              // dwdot[NO]/d[H2O]
J[806] -= dqdci;              // dwdot[H]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[818] -= dqdci;              // dwdot[HONO]/d[H2O]
// d()/d[HONO]
dqdci =  + k_f*sc[11];
J[1222] += dqdci;             // dwdot[NO]/d[HONO]
J[1230] -= dqdci;             // dwdot[H]/d[HONO]
J[1234] += dqdci;             // dwdot[H2O]/d[HONO]
J[1242] -= dqdci;             // dwdot[HONO]/d[HONO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2779] -= dqdT;              // dwdot[HONO]/dT

// reaction 198: 2 NO2 <=> NO + NO3
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[19] * sc[19]);
k_f = 9600
            * exp(0.73 * tc[0] - (10517.2283153186) * invT);
dlnkfdT = 0.73 * invT + (10517.2283153186) * invT2;
// reverse
phi_r = sc[3]*sc[43];
Kc = exp(-g_RT[3] + 2.000000*g_RT[19] - g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[19]) + (h_RT[3] + h_RT[43]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[19] -= 2 * q;// NO2
wdot[43] += q;// NO3
// d()/d[NO]
dqdci =  - k_r*sc[43];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[178] += -2 * dqdci;         // dwdot[NO2]/d[NO]
J[202] += dqdci;              // dwdot[NO3]/d[NO]
// d()/d[NO2]
dqdci =  + k_f*2.000000*sc[19];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1026] += -2 * dqdci;        // dwdot[NO2]/d[NO2]
J[1050] += dqdci;             // dwdot[NO3]/d[NO2]
// d()/d[NO3]
dqdci =  - k_r*sc[3];
J[2282] += dqdci;             // dwdot[NO]/d[NO3]
J[2298] += -2 * dqdci;        // dwdot[NO2]/d[NO3]
J[2322] += dqdci;             // dwdot[NO3]/d[NO3]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2775] += -2 * dqdT;         // dwdot[NO2]/dT
J[2799] += dqdT;              // dwdot[NO3]/dT

// reaction 199: CO + NO2 <=> CO2 + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[5]*sc[19];
k_f = 90000000
            * exp(- (17008.7233041995) * invT);
dlnkfdT = (17008.7233041995) * invT2;
// reverse
phi_r = sc[3]*sc[6];
Kc = exp(-g_RT[3] + g_RT[5] - g_RT[6] + g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[5] + h_RT[19]) + (h_RT[3] + h_RT[6]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[5] -= q;// CO
wdot[6] += q;// CO2
wdot[19] -= q;// NO2
// d()/d[NO]
dqdci =  - k_r*sc[6];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[164] -= dqdci;              // dwdot[CO]/d[NO]
J[165] += dqdci;              // dwdot[CO2]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
// d()/d[CO]
dqdci =  + k_f*sc[19];
J[268] += dqdci;              // dwdot[NO]/d[CO]
J[270] -= dqdci;              // dwdot[CO]/d[CO]
J[271] += dqdci;              // dwdot[CO2]/d[CO]
J[284] -= dqdci;              // dwdot[NO2]/d[CO]
// d()/d[CO2]
dqdci =  - k_r*sc[3];
J[321] += dqdci;              // dwdot[NO]/d[CO2]
J[323] -= dqdci;              // dwdot[CO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[337] -= dqdci;              // dwdot[NO2]/d[CO2]
// d()/d[NO2]
dqdci =  + k_f*sc[5];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1012] -= dqdci;             // dwdot[CO]/d[NO2]
J[1013] += dqdci;             // dwdot[CO2]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2761] -= dqdT;              // dwdot[CO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT

// reaction 200: HCO + NO2 <=> CO + NO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[17]*sc[19];
k_f = 1.2e+17
            * exp(-3.29 * tc[0] - (1185.07524797011) * invT);
dlnkfdT = -3.29 * invT + (1185.07524797011) * invT2;
// reverse
phi_r = sc[3]*sc[5]*sc[13];
Kc = refC * exp(-g_RT[3] - g_RT[5] - g_RT[13] + g_RT[17] + g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[17] + h_RT[19]) + (h_RT[3] + h_RT[5] + h_RT[13]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[5] += q;// CO
wdot[13] += q;// OH
wdot[17] -= q;// HCO
wdot[19] -= q;// NO2
// d()/d[NO]
dqdci =  - k_r*sc[5]*sc[13];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[164] += dqdci;              // dwdot[CO]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[176] -= dqdci;              // dwdot[HCO]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
// d()/d[CO]
dqdci =  - k_r*sc[3]*sc[13];
J[268] += dqdci;              // dwdot[NO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[278] += dqdci;              // dwdot[OH]/d[CO]
J[282] -= dqdci;              // dwdot[HCO]/d[CO]
J[284] -= dqdci;              // dwdot[NO2]/d[CO]
// d()/d[OH]
dqdci =  - k_r*sc[3]*sc[5];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[694] += dqdci;              // dwdot[CO]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[706] -= dqdci;              // dwdot[HCO]/d[OH]
J[708] -= dqdci;              // dwdot[NO2]/d[OH]
// d()/d[HCO]
dqdci =  + k_f*sc[19];
J[904] += dqdci;              // dwdot[NO]/d[HCO]
J[906] += dqdci;              // dwdot[CO]/d[HCO]
J[914] += dqdci;              // dwdot[OH]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
J[920] -= dqdci;              // dwdot[NO2]/d[HCO]
// d()/d[NO2]
dqdci =  + k_f*sc[17];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1012] += dqdci;             // dwdot[CO]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1024] -= dqdci;             // dwdot[HCO]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT

// reaction 201: HCO + NO2 <=> CO2 + H + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[17]*sc[19];
k_f = 8400000000
            * exp(-0.75 * tc[0] - (971.208165003109) * invT);
dlnkfdT = -0.75 * invT + (971.208165003109) * invT2;
// reverse
phi_r = sc[3]*sc[6]*sc[11];
Kc = refC * exp(-g_RT[3] - g_RT[6] - g_RT[11] + g_RT[17] + g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[17] + h_RT[19]) + (h_RT[3] + h_RT[6] + h_RT[11]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[6] += q;// CO2
wdot[11] += q;// H
wdot[17] -= q;// HCO
wdot[19] -= q;// NO2
// d()/d[NO]
dqdci =  - k_r*sc[6]*sc[11];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[165] += dqdci;              // dwdot[CO2]/d[NO]
J[170] += dqdci;              // dwdot[H]/d[NO]
J[176] -= dqdci;              // dwdot[HCO]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
// d()/d[CO2]
dqdci =  - k_r*sc[3]*sc[11];
J[321] += dqdci;              // dwdot[NO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[329] += dqdci;              // dwdot[H]/d[CO2]
J[335] -= dqdci;              // dwdot[HCO]/d[CO2]
J[337] -= dqdci;              // dwdot[NO2]/d[CO2]
// d()/d[H]
dqdci =  - k_r*sc[3]*sc[6];
J[586] += dqdci;              // dwdot[NO]/d[H]
J[589] += dqdci;              // dwdot[CO2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[600] -= dqdci;              // dwdot[HCO]/d[H]
J[602] -= dqdci;              // dwdot[NO2]/d[H]
// d()/d[HCO]
dqdci =  + k_f*sc[19];
J[904] += dqdci;              // dwdot[NO]/d[HCO]
J[907] += dqdci;              // dwdot[CO2]/d[HCO]
J[912] += dqdci;              // dwdot[H]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
J[920] -= dqdci;              // dwdot[NO2]/d[HCO]
// d()/d[NO2]
dqdci =  + k_f*sc[17];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1013] += dqdci;             // dwdot[CO2]/d[NO2]
J[1018] += dqdci;             // dwdot[H]/d[NO2]
J[1024] -= dqdci;             // dwdot[HCO]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT

// reaction 202: H + NO3 <=> NO2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[43];
k_f = 60000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[13]*sc[19];
Kc = exp(g_RT[11] - g_RT[13] - g_RT[19] + g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[43]) + (h_RT[13] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[19] += q;// NO2
wdot[43] -= q;// NO3
// d()/d[H]
dqdci =  + k_f*sc[43];
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[602] += dqdci;              // dwdot[NO2]/d[H]
J[626] -= dqdci;              // dwdot[NO3]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[19];
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
J[732] -= dqdci;              // dwdot[NO3]/d[OH]
// d()/d[NO2]
dqdci =  - k_r*sc[13];
J[1018] -= dqdci;             // dwdot[H]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1050] -= dqdci;             // dwdot[NO3]/d[NO2]
// d()/d[NO3]
dqdci =  + k_f*sc[11];
J[2290] -= dqdci;             // dwdot[H]/d[NO3]
J[2292] += dqdci;             // dwdot[OH]/d[NO3]
J[2298] += dqdci;             // dwdot[NO2]/d[NO3]
J[2322] -= dqdci;             // dwdot[NO3]/d[NO3]
// d()/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2799] -= dqdT;              // dwdot[NO3]/dT

// reaction 203: NO3 + O <=> NO2 + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[43];
k_f = 10000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[8]*sc[19];
Kc = exp(-g_RT[8] + g_RT[12] - g_RT[19] + g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[43]) + (h_RT[8] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[12] -= q;// O
wdot[19] += q;// NO2
wdot[43] -= q;// NO3
// d()/d[O2]
dqdci =  - k_r*sc[19];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[436] -= dqdci;              // dwdot[O]/d[O2]
J[443] += dqdci;              // dwdot[NO2]/d[O2]
J[467] -= dqdci;              // dwdot[NO3]/d[O2]
// d()/d[O]
dqdci =  + k_f*sc[43];
J[644] += dqdci;              // dwdot[O2]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[655] += dqdci;              // dwdot[NO2]/d[O]
J[679] -= dqdci;              // dwdot[NO3]/d[O]
// d()/d[NO2]
dqdci =  - k_r*sc[8];
J[1015] += dqdci;             // dwdot[O2]/d[NO2]
J[1019] -= dqdci;             // dwdot[O]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1050] -= dqdci;             // dwdot[NO3]/d[NO2]
// d()/d[NO3]
dqdci =  + k_f*sc[12];
J[2287] += dqdci;             // dwdot[O2]/d[NO3]
J[2291] -= dqdci;             // dwdot[O]/d[NO3]
J[2298] += dqdci;             // dwdot[NO2]/d[NO3]
J[2322] -= dqdci;             // dwdot[NO3]/d[NO3]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2799] -= dqdT;              // dwdot[NO3]/dT

// reaction 204: NO3 + OH <=> HO2 + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[43];
k_f = 14000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[14]*sc[19];
Kc = exp(g_RT[13] - g_RT[14] - g_RT[19] + g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[43]) + (h_RT[14] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[14] += q;// HO2
wdot[19] += q;// NO2
wdot[43] -= q;// NO3
// d()/d[OH]
dqdci =  + k_f*sc[43];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[703] += dqdci;              // dwdot[HO2]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
J[732] -= dqdci;              // dwdot[NO3]/d[OH]
// d()/d[HO2]
dqdci =  - k_r*sc[19];
J[755] -= dqdci;              // dwdot[OH]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[761] += dqdci;              // dwdot[NO2]/d[HO2]
J[785] -= dqdci;              // dwdot[NO3]/d[HO2]
// d()/d[NO2]
dqdci =  - k_r*sc[14];
J[1020] -= dqdci;             // dwdot[OH]/d[NO2]
J[1021] += dqdci;             // dwdot[HO2]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1050] -= dqdci;             // dwdot[NO3]/d[NO2]
// d()/d[NO3]
dqdci =  + k_f*sc[13];
J[2292] -= dqdci;             // dwdot[OH]/d[NO3]
J[2293] += dqdci;             // dwdot[HO2]/d[NO3]
J[2298] += dqdci;             // dwdot[NO2]/d[NO3]
J[2322] -= dqdci;             // dwdot[NO3]/d[NO3]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2799] -= dqdT;              // dwdot[NO3]/dT

// reaction 205: HO2 + NO3 <=> NO2 + O2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[43];
k_f = 1500000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[8]*sc[13]*sc[19];
Kc = refC * exp(-g_RT[8] - g_RT[13] + g_RT[14] - g_RT[19] + g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[14] + h_RT[43]) + (h_RT[8] + h_RT[13] + h_RT[19]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[13] += q;// OH
wdot[14] -= q;// HO2
wdot[19] += q;// NO2
wdot[43] -= q;// NO3
// d()/d[O2]
dqdci =  - k_r*sc[13]*sc[19];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[437] += dqdci;              // dwdot[OH]/d[O2]
J[438] -= dqdci;              // dwdot[HO2]/d[O2]
J[443] += dqdci;              // dwdot[NO2]/d[O2]
J[467] -= dqdci;              // dwdot[NO3]/d[O2]
// d()/d[OH]
dqdci =  - k_r*sc[8]*sc[19];
J[697] += dqdci;              // dwdot[O2]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[703] -= dqdci;              // dwdot[HO2]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
J[732] -= dqdci;              // dwdot[NO3]/d[OH]
// d()/d[HO2]
dqdci =  + k_f*sc[43];
J[750] += dqdci;              // dwdot[O2]/d[HO2]
J[755] += dqdci;              // dwdot[OH]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[761] += dqdci;              // dwdot[NO2]/d[HO2]
J[785] -= dqdci;              // dwdot[NO3]/d[HO2]
// d()/d[NO2]
dqdci =  - k_r*sc[8]*sc[13];
J[1015] += dqdci;             // dwdot[O2]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1021] -= dqdci;             // dwdot[HO2]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1050] -= dqdci;             // dwdot[NO3]/d[NO2]
// d()/d[NO3]
dqdci =  + k_f*sc[14];
J[2287] += dqdci;             // dwdot[O2]/d[NO3]
J[2292] += dqdci;             // dwdot[OH]/d[NO3]
J[2293] -= dqdci;             // dwdot[HO2]/d[NO3]
J[2298] += dqdci;             // dwdot[NO2]/d[NO3]
J[2322] -= dqdci;             // dwdot[NO3]/d[NO3]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2799] -= dqdT;              // dwdot[NO3]/dT

// reaction 207: NNH <=> H + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[26];
k_f = 65000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[11]*sc[45];
Kc = refC * exp(-g_RT[11] + g_RT[26] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[26]) + (h_RT[11] + h_RT[45]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[26] -= q;// NNH
wdot[45] += q;// N2
// d()/d[H]
dqdci =  - k_r*sc[45];
J[594] += dqdci;              // dwdot[H]/d[H]
J[609] -= dqdci;              // dwdot[NNH]/d[H]
J[628] += dqdci;              // dwdot[N2]/d[H]
// d()/d[NNH]
dqdci =  + k_f;
J[1389] += dqdci;             // dwdot[H]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[N2]
dqdci =  - k_r*sc[11];
J[2396] += dqdci;             // dwdot[H]/d[N2]
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 208: H + NNH <=> H2 + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[26];
k_f = 100000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[9]*sc[45];
Kc = exp(-g_RT[9] + g_RT[11] + g_RT[26] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[26]) + (h_RT[9] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[26] -= q;// NNH
wdot[45] += q;// N2
// d()/d[H2]
dqdci =  - k_r*sc[45];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[503] -= dqdci;              // dwdot[NNH]/d[H2]
J[522] += dqdci;              // dwdot[N2]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[26];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[609] -= dqdci;              // dwdot[NNH]/d[H]
J[628] += dqdci;              // dwdot[N2]/d[H]
// d()/d[NNH]
dqdci =  + k_f*sc[11];
J[1387] += dqdci;             // dwdot[H2]/d[NNH]
J[1389] -= dqdci;             // dwdot[H]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[N2]
dqdci =  - k_r*sc[9];
J[2394] += dqdci;             // dwdot[H2]/d[N2]
J[2396] -= dqdci;             // dwdot[H]/d[N2]
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 209: NNH + O <=> H + N2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[26];
k_f = 100000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[4]*sc[11];
Kc = exp(-g_RT[4] - g_RT[11] + g_RT[12] + g_RT[26]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[26]) + (h_RT[4] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] += q;// N2O
wdot[11] += q;// H
wdot[12] -= q;// O
wdot[26] -= q;// NNH
// d()/d[N2O]
dqdci =  - k_r*sc[11];
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[223] += dqdci;              // dwdot[H]/d[N2O]
J[224] -= dqdci;              // dwdot[O]/d[N2O]
J[238] -= dqdci;              // dwdot[NNH]/d[N2O]
// d()/d[H]
dqdci =  - k_r*sc[4];
J[587] += dqdci;              // dwdot[N2O]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[595] -= dqdci;              // dwdot[O]/d[H]
J[609] -= dqdci;              // dwdot[NNH]/d[H]
// d()/d[O]
dqdci =  + k_f*sc[26];
J[640] += dqdci;              // dwdot[N2O]/d[O]
J[647] += dqdci;              // dwdot[H]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[662] -= dqdci;              // dwdot[NNH]/d[O]
// d()/d[NNH]
dqdci =  + k_f*sc[12];
J[1382] += dqdci;             // dwdot[N2O]/d[NNH]
J[1389] += dqdci;             // dwdot[H]/d[NNH]
J[1390] -= dqdci;             // dwdot[O]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
// d()/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT

// reaction 210: NNH + O <=> N2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[26];
k_f = 12000000
            * exp(0.145 * tc[0] - (-109.198016479624) * invT);
dlnkfdT = 0.145 * invT + (-109.198016479624) * invT2;
// reverse
phi_r = sc[13]*sc[45];
Kc = exp(g_RT[12] - g_RT[13] + g_RT[26] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[26]) + (h_RT[13] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[26] -= q;// NNH
wdot[45] += q;// N2
// d()/d[O]
dqdci =  + k_f*sc[26];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[662] -= dqdci;              // dwdot[NNH]/d[O]
J[681] += dqdci;              // dwdot[N2]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[45];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[715] -= dqdci;              // dwdot[NNH]/d[OH]
J[734] += dqdci;              // dwdot[N2]/d[OH]
// d()/d[NNH]
dqdci =  + k_f*sc[12];
J[1390] -= dqdci;             // dwdot[O]/d[NNH]
J[1391] += dqdci;             // dwdot[OH]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[N2]
dqdci =  - k_r*sc[13];
J[2397] -= dqdci;             // dwdot[O]/d[N2]
J[2398] += dqdci;             // dwdot[OH]/d[N2]
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 211: NNH + O <=> NH + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[26];
k_f = 520000
            * exp(0.381 * tc[0] - (-205.81561631413) * invT);
dlnkfdT = 0.381 * invT + (-205.81561631413) * invT2;
// reverse
phi_r = sc[3]*sc[28];
Kc = exp(-g_RT[3] + g_RT[12] + g_RT[26] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[26]) + (h_RT[3] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[12] -= q;// O
wdot[26] -= q;// NNH
wdot[28] += q;// NH
// d()/d[NO]
dqdci =  - k_r*sc[28];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[171] -= dqdci;              // dwdot[O]/d[NO]
J[185] -= dqdci;              // dwdot[NNH]/d[NO]
J[187] += dqdci;              // dwdot[NH]/d[NO]
// d()/d[O]
dqdci =  + k_f*sc[26];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[662] -= dqdci;              // dwdot[NNH]/d[O]
J[664] += dqdci;              // dwdot[NH]/d[O]
// d()/d[NNH]
dqdci =  + k_f*sc[12];
J[1381] += dqdci;             // dwdot[NO]/d[NNH]
J[1390] -= dqdci;             // dwdot[O]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1406] += dqdci;             // dwdot[NH]/d[NNH]
// d()/d[NH]
dqdci =  - k_r*sc[3];
J[1487] += dqdci;             // dwdot[NO]/d[NH]
J[1496] -= dqdci;             // dwdot[O]/d[NH]
J[1510] -= dqdci;             // dwdot[NNH]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 212: NNH + OH <=> H2O + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[26];
k_f = 50000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[15]*sc[45];
Kc = exp(g_RT[13] - g_RT[15] + g_RT[26] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[26]) + (h_RT[15] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[26] -= q;// NNH
wdot[45] += q;// N2
// d()/d[OH]
dqdci =  + k_f*sc[26];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[715] -= dqdci;              // dwdot[NNH]/d[OH]
J[734] += dqdci;              // dwdot[N2]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[45];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[821] -= dqdci;              // dwdot[NNH]/d[H2O]
J[840] += dqdci;              // dwdot[N2]/d[H2O]
// d()/d[NNH]
dqdci =  + k_f*sc[13];
J[1391] -= dqdci;             // dwdot[OH]/d[NNH]
J[1393] += dqdci;             // dwdot[H2O]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[N2]
dqdci =  - k_r*sc[15];
J[2398] -= dqdci;             // dwdot[OH]/d[N2]
J[2400] += dqdci;             // dwdot[H2O]/d[N2]
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 213: NNH + O2 <=> HO2 + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[26];
k_f = 200000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[14]*sc[45];
Kc = exp(g_RT[8] - g_RT[14] + g_RT[26] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[26]) + (h_RT[14] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[14] += q;// HO2
wdot[26] -= q;// NNH
wdot[45] += q;// N2
// d()/d[O2]
dqdci =  + k_f*sc[26];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
J[450] -= dqdci;              // dwdot[NNH]/d[O2]
J[469] += dqdci;              // dwdot[N2]/d[O2]
// d()/d[HO2]
dqdci =  - k_r*sc[45];
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[768] -= dqdci;              // dwdot[NNH]/d[HO2]
J[787] += dqdci;              // dwdot[N2]/d[HO2]
// d()/d[NNH]
dqdci =  + k_f*sc[8];
J[1386] -= dqdci;             // dwdot[O2]/d[NNH]
J[1392] += dqdci;             // dwdot[HO2]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[N2]
dqdci =  - k_r*sc[14];
J[2393] -= dqdci;             // dwdot[O2]/d[N2]
J[2399] += dqdci;             // dwdot[HO2]/d[N2]
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 215: NH + NNH <=> N2 + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[26]*sc[28];
k_f = 50000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[27]*sc[45];
Kc = exp(g_RT[26] - g_RT[27] + g_RT[28] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[26] + h_RT[28]) + (h_RT[27] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[26] -= q;// NNH
wdot[27] += q;// NH2
wdot[28] -= q;// NH
wdot[45] += q;// N2
// d()/d[NNH]
dqdci =  + k_f*sc[28];
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1405] += dqdci;             // dwdot[NH2]/d[NNH]
J[1406] -= dqdci;             // dwdot[NH]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[NH2]
dqdci =  - k_r*sc[45];
J[1457] -= dqdci;             // dwdot[NNH]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
J[1459] -= dqdci;             // dwdot[NH]/d[NH2]
J[1476] += dqdci;             // dwdot[N2]/d[NH2]
// d()/d[NH]
dqdci =  + k_f*sc[26];
J[1510] -= dqdci;             // dwdot[NNH]/d[NH]
J[1511] += dqdci;             // dwdot[NH2]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
J[1529] += dqdci;             // dwdot[N2]/d[NH]
// d()/d[N2]
dqdci =  - k_r*sc[27];
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2412] += dqdci;             // dwdot[NH2]/d[N2]
J[2413] -= dqdci;             // dwdot[NH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 216: NH2 + NNH <=> N2 + NH3
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[26]*sc[27];
k_f = 50000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[20]*sc[45];
Kc = exp(-g_RT[20] + g_RT[26] + g_RT[27] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[26] + h_RT[27]) + (h_RT[20] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[20] += q;// NH3
wdot[26] -= q;// NNH
wdot[27] -= q;// NH2
wdot[45] += q;// N2
// d()/d[NH3]
dqdci =  - k_r*sc[45];
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1086] -= dqdci;             // dwdot[NNH]/d[NH3]
J[1087] -= dqdci;             // dwdot[NH2]/d[NH3]
J[1105] += dqdci;             // dwdot[N2]/d[NH3]
// d()/d[NNH]
dqdci =  + k_f*sc[27];
J[1398] += dqdci;             // dwdot[NH3]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1405] -= dqdci;             // dwdot[NH2]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[NH2]
dqdci =  + k_f*sc[26];
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1457] -= dqdci;             // dwdot[NNH]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1476] += dqdci;             // dwdot[N2]/d[NH2]
// d()/d[N2]
dqdci =  - k_r*sc[20];
J[2405] += dqdci;             // dwdot[NH3]/d[N2]
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2412] -= dqdci;             // dwdot[NH2]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 217: NNH + NO <=> HNO + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[26];
k_f = 50000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[21]*sc[45];
Kc = exp(g_RT[3] - g_RT[21] + g_RT[26] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[26]) + (h_RT[21] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[21] += q;// HNO
wdot[26] -= q;// NNH
wdot[45] += q;// N2
// d()/d[NO]
dqdci =  + k_f*sc[26];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[180] += dqdci;              // dwdot[HNO]/d[NO]
J[185] -= dqdci;              // dwdot[NNH]/d[NO]
J[204] += dqdci;              // dwdot[N2]/d[NO]
// d()/d[HNO]
dqdci =  - k_r*sc[45];
J[1116] -= dqdci;             // dwdot[NO]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1139] -= dqdci;             // dwdot[NNH]/d[HNO]
J[1158] += dqdci;             // dwdot[N2]/d[HNO]
// d()/d[NNH]
dqdci =  + k_f*sc[3];
J[1381] -= dqdci;             // dwdot[NO]/d[NNH]
J[1399] += dqdci;             // dwdot[HNO]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[N2]
dqdci =  - k_r*sc[21];
J[2388] -= dqdci;             // dwdot[NO]/d[N2]
J[2406] += dqdci;             // dwdot[HNO]/d[N2]
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 218: CO + N2O <=> CO2 + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[5];
k_f = 270000
            * exp(- (10183.5956658901) * invT);
dlnkfdT = (10183.5956658901) * invT2;
// reverse
phi_r = sc[6]*sc[45];
Kc = exp(g_RT[4] + g_RT[5] - g_RT[6] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[5]) + (h_RT[6] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] -= q;// N2O
wdot[5] -= q;// CO
wdot[6] += q;// CO2
wdot[45] += q;// N2
// d()/d[N2O]
dqdci =  + k_f*sc[5];
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[217] -= dqdci;              // dwdot[CO]/d[N2O]
J[218] += dqdci;              // dwdot[CO2]/d[N2O]
J[257] += dqdci;              // dwdot[N2]/d[N2O]
// d()/d[CO]
dqdci =  + k_f*sc[4];
J[269] -= dqdci;              // dwdot[N2O]/d[CO]
J[270] -= dqdci;              // dwdot[CO]/d[CO]
J[271] += dqdci;              // dwdot[CO2]/d[CO]
J[310] += dqdci;              // dwdot[N2]/d[CO]
// d()/d[CO2]
dqdci =  - k_r*sc[45];
J[322] -= dqdci;              // dwdot[N2O]/d[CO2]
J[323] -= dqdci;              // dwdot[CO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[363] += dqdci;              // dwdot[N2]/d[CO2]
// d()/d[N2]
dqdci =  - k_r*sc[6];
J[2389] -= dqdci;             // dwdot[N2O]/d[N2]
J[2390] -= dqdci;             // dwdot[CO]/d[N2]
J[2391] += dqdci;             // dwdot[CO2]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2761] -= dqdT;              // dwdot[CO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 220: NCCN + O <=> CN + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[31];
k_f = 4600000
            * exp(- (4468.56399234591) * invT);
dlnkfdT = (4468.56399234591) * invT2;
// reverse
phi_r = sc[29]*sc[30];
Kc = exp(g_RT[12] - g_RT[29] - g_RT[30] + g_RT[31]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[31]) + (h_RT[29] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[29] += q;// CN
wdot[30] += q;// NCO
wdot[31] -= q;// NCCN
// d()/d[O]
dqdci =  + k_f*sc[31];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[665] += dqdci;              // dwdot[CN]/d[O]
J[666] += dqdci;              // dwdot[NCO]/d[O]
J[667] -= dqdci;              // dwdot[NCCN]/d[O]
// d()/d[CN]
dqdci =  - k_r*sc[30];
J[1549] -= dqdci;             // dwdot[O]/d[CN]
J[1566] += dqdci;             // dwdot[CN]/d[CN]
J[1567] += dqdci;             // dwdot[NCO]/d[CN]
J[1568] -= dqdci;             // dwdot[NCCN]/d[CN]
// d()/d[NCO]
dqdci =  - k_r*sc[29];
J[1602] -= dqdci;             // dwdot[O]/d[NCO]
J[1619] += dqdci;             // dwdot[CN]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
J[1621] -= dqdci;             // dwdot[NCCN]/d[NCO]
// d()/d[NCCN]
dqdci =  + k_f*sc[12];
J[1655] -= dqdci;             // dwdot[O]/d[NCCN]
J[1672] += dqdci;             // dwdot[CN]/d[NCCN]
J[1673] += dqdci;             // dwdot[NCO]/d[NCCN]
J[1674] -= dqdci;             // dwdot[NCCN]/d[NCCN]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2785] += dqdT;              // dwdot[CN]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT
J[2787] -= dqdT;              // dwdot[NCCN]/dT

// reaction 221: NCCN + OH <=> CN + HOCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[31];
k_f = 190000
            * exp(- (1459.32833083369) * invT);
dlnkfdT = (1459.32833083369) * invT2;
// reverse
phi_r = sc[29]*sc[32];
Kc = exp(g_RT[13] - g_RT[29] + g_RT[31] - g_RT[32]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[31]) + (h_RT[29] + h_RT[32]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[29] += q;// CN
wdot[31] -= q;// NCCN
wdot[32] += q;// HOCN
// d()/d[OH]
dqdci =  + k_f*sc[31];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[718] += dqdci;              // dwdot[CN]/d[OH]
J[720] -= dqdci;              // dwdot[NCCN]/d[OH]
J[721] += dqdci;              // dwdot[HOCN]/d[OH]
// d()/d[CN]
dqdci =  - k_r*sc[32];
J[1550] -= dqdci;             // dwdot[OH]/d[CN]
J[1566] += dqdci;             // dwdot[CN]/d[CN]
J[1568] -= dqdci;             // dwdot[NCCN]/d[CN]
J[1569] += dqdci;             // dwdot[HOCN]/d[CN]
// d()/d[NCCN]
dqdci =  + k_f*sc[13];
J[1656] -= dqdci;             // dwdot[OH]/d[NCCN]
J[1672] += dqdci;             // dwdot[CN]/d[NCCN]
J[1674] -= dqdci;             // dwdot[NCCN]/d[NCCN]
J[1675] += dqdci;             // dwdot[HOCN]/d[NCCN]
// d()/d[HOCN]
dqdci =  - k_r*sc[29];
J[1709] -= dqdci;             // dwdot[OH]/d[HOCN]
J[1725] += dqdci;             // dwdot[CN]/d[HOCN]
J[1727] -= dqdci;             // dwdot[NCCN]/d[HOCN]
J[1728] += dqdci;             // dwdot[HOCN]/d[HOCN]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2785] += dqdT;              // dwdot[CN]/dT
J[2787] -= dqdT;              // dwdot[NCCN]/dT
J[2788] += dqdT;              // dwdot[HOCN]/dT

// reaction 223: H2O + OH* <=> H2O + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[15];
k_f = 5930000
            * exp(0.5 * tc[0] - (-432.766332592059) * invT);
dlnkfdT = 0.5 * invT + (-432.766332592059) * invT2;
// reverse
phi_r = sc[13]*sc[15];
Kc = exp(g_RT[0] - g_RT[13] + g_RT[15] - g_RT[15]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[15]) + (h_RT[13] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[15];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[OH]
dqdci =  - k_r*sc[15];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/d[H2O]
dqdci =  + k_f*sc[0] - k_r*sc[13];
J[795] -= dqdci;              // dwdot[OH*]/d[H2O]
J[808] += dqdci;              // dwdot[OH]/d[H2O]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 224: H2 + OH* <=> H2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[9];
k_f = 2950000
            * exp(0.5 * tc[0] - (-223.428199617296) * invT);
dlnkfdT = 0.5 * invT + (-223.428199617296) * invT2;
// reverse
phi_r = sc[9]*sc[13];
Kc = exp(g_RT[0] + g_RT[9] - g_RT[9] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[9]) + (h_RT[9] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[9];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[H2]
dqdci =  + k_f*sc[0] - k_r*sc[13];
J[477] -= dqdci;              // dwdot[OH*]/d[H2]
J[490] += dqdci;              // dwdot[OH]/d[H2]
// d()/d[OH]
dqdci =  - k_r*sc[9];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 225: N2 + OH* <=> N2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[45];
k_f = 108000
            * exp(0.5 * tc[0] - (-624.995098929462) * invT);
dlnkfdT = 0.5 * invT + (-624.995098929462) * invT2;
// reverse
phi_r = sc[13]*sc[45];
Kc = exp(g_RT[0] - g_RT[13] + g_RT[45] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[45]) + (h_RT[13] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[45];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[OH]
dqdci =  - k_r*sc[45];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/d[N2]
dqdci =  + k_f*sc[0] - k_r*sc[13];
J[2385] -= dqdci;             // dwdot[OH*]/d[N2]
J[2398] += dqdci;             // dwdot[OH]/d[N2]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 226: OH + OH* <=> 2 OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[13];
k_f = 6010000
            * exp(0.5 * tc[0] - (-384.457532674806) * invT);
dlnkfdT = 0.5 * invT + (-384.457532674806) * invT2;
// reverse
phi_r = (sc[13] * sc[13]);
Kc = exp(g_RT[0] + g_RT[13] - 2.000000*g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[13]) + (2.000000*h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[13];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[OH]
dqdci =  + k_f*sc[0] - k_r*2.000000*sc[13];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 227: H + OH* <=> H + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[11];
k_f = 1310000
            * exp(0.5 * tc[0] - (-84.0371831893882) * invT);
dlnkfdT = 0.5 * invT + (-84.0371831893882) * invT2;
// reverse
phi_r = sc[11]*sc[13];
Kc = exp(g_RT[0] + g_RT[11] - g_RT[11] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[11]) + (h_RT[11] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[11];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[H]
dqdci =  + k_f*sc[0] - k_r*sc[13];
J[583] -= dqdci;              // dwdot[OH*]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[11];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 228: AR + OH* <=> AR + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[10];
k_f = 1690000
            * exp(- (2080.80091310252) * invT);
dlnkfdT = (2080.80091310252) * invT2;
// reverse
phi_r = sc[10]*sc[13];
Kc = exp(g_RT[0] + g_RT[10] - g_RT[10] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[10]) + (h_RT[10] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[10];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[AR]
dqdci =  + k_f*sc[0] - k_r*sc[13];
J[530] -= dqdci;              // dwdot[OH*]/d[AR]
J[543] += dqdci;              // dwdot[OH]/d[AR]
// d()/d[OH]
dqdci =  - k_r*sc[10];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 229: O2 + OH* <=> O2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[8];
k_f = 2100000
            * exp(0.5 * tc[0] - (-240.537566254656) * invT);
dlnkfdT = 0.5 * invT + (-240.537566254656) * invT2;
// reverse
phi_r = sc[8]*sc[13];
Kc = exp(g_RT[0] + g_RT[8] - g_RT[8] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[8]) + (h_RT[8] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[8];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[O2]
dqdci =  + k_f*sc[0] - k_r*sc[13];
J[424] -= dqdci;              // dwdot[OH*]/d[O2]
J[437] += dqdci;              // dwdot[OH]/d[O2]
// d()/d[OH]
dqdci =  - k_r*sc[8];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 230: CO2 + OH* <=> CO2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[6];
k_f = 2750000
            * exp(0.5 * tc[0] - (-487.113732498969) * invT);
dlnkfdT = 0.5 * invT + (-487.113732498969) * invT2;
// reverse
phi_r = sc[6]*sc[13];
Kc = exp(g_RT[0] + g_RT[6] - g_RT[6] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[6]) + (h_RT[6] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[6];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[CO2]
dqdci =  + k_f*sc[0] - k_r*sc[13];
J[318] -= dqdci;              // dwdot[OH*]/d[CO2]
J[331] += dqdci;              // dwdot[OH]/d[CO2]
// d()/d[OH]
dqdci =  - k_r*sc[6];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 231: CO + OH* <=> CO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[5];
k_f = 3230000
            * exp(0.5 * tc[0] - (-396.031515988314) * invT);
dlnkfdT = 0.5 * invT + (-396.031515988314) * invT2;
// reverse
phi_r = sc[5]*sc[13];
Kc = exp(g_RT[0] + g_RT[5] - g_RT[5] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[5]) + (h_RT[5] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[5];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[CO]
dqdci =  + k_f*sc[0] - k_r*sc[13];
J[265] -= dqdci;              // dwdot[OH*]/d[CO]
J[278] += dqdci;              // dwdot[OH]/d[CO]
// d()/d[OH]
dqdci =  - k_r*sc[5];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 232: H + N2O <=> N2 + OH*
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[11];
k_f = 160000000
            * exp(- (25311.7982899774) * invT);
dlnkfdT = (25311.7982899774) * invT2;
// reverse
phi_r = sc[0]*sc[45];
Kc = exp(-g_RT[0] + g_RT[4] + g_RT[11] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[11]) + (h_RT[0] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] += q;// OH*
wdot[4] -= q;// N2O
wdot[11] -= q;// H
wdot[45] += q;// N2
// d()/d[OH*]
dqdci =  - k_r*sc[45];
J[0] += dqdci;                // dwdot[OH*]/d[OH*]
J[4] -= dqdci;                // dwdot[N2O]/d[OH*]
J[11] -= dqdci;               // dwdot[H]/d[OH*]
J[45] += dqdci;               // dwdot[N2]/d[OH*]
// d()/d[N2O]
dqdci =  + k_f*sc[11];
J[212] += dqdci;              // dwdot[OH*]/d[N2O]
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[223] -= dqdci;              // dwdot[H]/d[N2O]
J[257] += dqdci;              // dwdot[N2]/d[N2O]
// d()/d[H]
dqdci =  + k_f*sc[4];
J[583] += dqdci;              // dwdot[OH*]/d[H]
J[587] -= dqdci;              // dwdot[N2O]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[628] += dqdci;              // dwdot[N2]/d[H]
// d()/d[N2]
dqdci =  - k_r*sc[0];
J[2385] += dqdci;             // dwdot[OH*]/d[N2]
J[2389] -= dqdci;             // dwdot[N2O]/d[N2]
J[2396] -= dqdci;             // dwdot[H]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2756] += dqdT;              // dwdot[OH*]/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 235: HO2 + NO <=> NO2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[14];
k_f = 2100000
            * exp(- (-241.543999586265) * invT);
dlnkfdT = (-241.543999586265) * invT2;
// reverse
phi_r = sc[13]*sc[19];
Kc = exp(g_RT[3] - g_RT[13] + g_RT[14] - g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[14]) + (h_RT[13] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[13] += q;// OH
wdot[14] -= q;// HO2
wdot[19] += q;// NO2
// d()/d[NO]
dqdci =  + k_f*sc[14];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[173] -= dqdci;              // dwdot[HO2]/d[NO]
J[178] += dqdci;              // dwdot[NO2]/d[NO]
// d()/d[OH]
dqdci =  - k_r*sc[19];
J[692] -= dqdci;              // dwdot[NO]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[703] -= dqdci;              // dwdot[HO2]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
// d()/d[HO2]
dqdci =  + k_f*sc[3];
J[745] -= dqdci;              // dwdot[NO]/d[HO2]
J[755] += dqdci;              // dwdot[OH]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[761] += dqdci;              // dwdot[NO2]/d[HO2]
// d()/d[NO2]
dqdci =  - k_r*sc[13];
J[1010] -= dqdci;             // dwdot[NO]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1021] -= dqdci;             // dwdot[HO2]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT

// reaction 237: H2 + NO2 <=> H + HONO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[9]*sc[19];
k_f = 0.013
            * exp(2.76 * tc[0] - (14980.7601410065) * invT);
dlnkfdT = 2.76 * invT + (14980.7601410065) * invT2;
// reverse
phi_r = sc[11]*sc[23];
Kc = exp(g_RT[9] - g_RT[11] + g_RT[19] - g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[9] + h_RT[19]) + (h_RT[11] + h_RT[23]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] -= q;// H2
wdot[11] += q;// H
wdot[19] -= q;// NO2
wdot[23] += q;// HONO
// d()/d[H2]
dqdci =  + k_f*sc[19];
J[486] -= dqdci;              // dwdot[H2]/d[H2]
J[488] += dqdci;              // dwdot[H]/d[H2]
J[496] -= dqdci;              // dwdot[NO2]/d[H2]
J[500] += dqdci;              // dwdot[HONO]/d[H2]
// d()/d[H]
dqdci =  - k_r*sc[23];
J[592] -= dqdci;              // dwdot[H2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[602] -= dqdci;              // dwdot[NO2]/d[H]
J[606] += dqdci;              // dwdot[HONO]/d[H]
// d()/d[NO2]
dqdci =  + k_f*sc[9];
J[1016] -= dqdci;             // dwdot[H2]/d[NO2]
J[1018] += dqdci;             // dwdot[H]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1030] += dqdci;             // dwdot[HONO]/d[NO2]
// d()/d[HONO]
dqdci =  - k_r*sc[11];
J[1228] -= dqdci;             // dwdot[H2]/d[HONO]
J[1230] += dqdci;             // dwdot[H]/d[HONO]
J[1238] -= dqdci;             // dwdot[NO2]/d[HONO]
J[1242] += dqdci;             // dwdot[HONO]/d[HONO]
// d()/dT
J[2765] -= dqdT;              // dwdot[H2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2779] += dqdT;              // dwdot[HONO]/dT

// reaction 238: H + NO2 <=> NO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[19];
k_f = 131000000
            * exp(- (182.164433021309) * invT);
dlnkfdT = (182.164433021309) * invT2;
// reverse
phi_r = sc[3]*sc[13];
Kc = exp(-g_RT[3] + g_RT[11] - g_RT[13] + g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[19]) + (h_RT[3] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[19] -= q;// NO2
// d()/d[NO]
dqdci =  - k_r*sc[13];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[170] -= dqdci;              // dwdot[H]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
// d()/d[H]
dqdci =  + k_f*sc[19];
J[586] += dqdci;              // dwdot[NO]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[602] -= dqdci;              // dwdot[NO2]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[3];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[708] -= dqdci;              // dwdot[NO2]/d[OH]
// d()/d[NO2]
dqdci =  + k_f*sc[11];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1018] -= dqdci;             // dwdot[H]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT

// reaction 239: NO2 + O <=> NO + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[19];
k_f = 3910000
            * exp(- (-119.765566461523) * invT);
dlnkfdT = (-119.765566461523) * invT2;
// reverse
phi_r = sc[3]*sc[8];
Kc = exp(-g_RT[3] - g_RT[8] + g_RT[12] + g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[19]) + (h_RT[3] + h_RT[8]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[8] += q;// O2
wdot[12] -= q;// O
wdot[19] -= q;// NO2
// d()/d[NO]
dqdci =  - k_r*sc[8];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[167] += dqdci;              // dwdot[O2]/d[NO]
J[171] -= dqdci;              // dwdot[O]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
// d()/d[O2]
dqdci =  - k_r*sc[3];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[436] -= dqdci;              // dwdot[O]/d[O2]
J[443] -= dqdci;              // dwdot[NO2]/d[O2]
// d()/d[O]
dqdci =  + k_f*sc[19];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[644] += dqdci;              // dwdot[O2]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[655] -= dqdci;              // dwdot[NO2]/d[O]
// d()/d[NO2]
dqdci =  + k_f*sc[12];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1015] += dqdci;             // dwdot[O2]/d[NO2]
J[1019] -= dqdci;             // dwdot[O]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT

// reaction 241: 2 NO2 <=> 2 NO + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[19] * sc[19]);
k_f = 2000000
            * exp(- (13498.7870602116) * invT);
dlnkfdT = (13498.7870602116) * invT2;
// reverse
phi_r = (sc[3] * sc[3])*sc[8];
Kc = refC * exp(-2.000000*g_RT[3] - g_RT[8] + 2.000000*g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[19]) + (2.000000*h_RT[3] + h_RT[8]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += 2 * q;// NO
wdot[8] += q;// O2
wdot[19] -= 2 * q;// NO2
// d()/d[NO]
dqdci =  - k_r*2.000000*sc[3]*sc[8];
J[162] += 2 * dqdci;          // dwdot[NO]/d[NO]
J[167] += dqdci;              // dwdot[O2]/d[NO]
J[178] += -2 * dqdci;         // dwdot[NO2]/d[NO]
// d()/d[O2]
dqdci =  - k_r*sc[3]*sc[3];
J[427] += 2 * dqdci;          // dwdot[NO]/d[O2]
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[443] += -2 * dqdci;         // dwdot[NO2]/d[O2]
// d()/d[NO2]
dqdci =  + k_f*2.000000*sc[19];
J[1010] += 2 * dqdci;         // dwdot[NO]/d[NO2]
J[1015] += dqdci;             // dwdot[O2]/d[NO2]
J[1026] += -2 * dqdci;        // dwdot[NO2]/d[NO2]
// d()/dT
J[2759] += 2 * dqdT;          // dwdot[NO]/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2775] += -2 * dqdT;         // dwdot[NO2]/dT

// reaction 242: HO2 + NO2 <=> HONO + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[19];
k_f = 1.91e-06
            * exp(3.32 * tc[0] - (1531.79153070957) * invT);
dlnkfdT = 3.32 * invT + (1531.79153070957) * invT2;
// reverse
phi_r = sc[8]*sc[23];
Kc = exp(-g_RT[8] + g_RT[14] + g_RT[19] - g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[14] + h_RT[19]) + (h_RT[8] + h_RT[23]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[14] -= q;// HO2
wdot[19] -= q;// NO2
wdot[23] += q;// HONO
// d()/d[O2]
dqdci =  - k_r*sc[23];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[438] -= dqdci;              // dwdot[HO2]/d[O2]
J[443] -= dqdci;              // dwdot[NO2]/d[O2]
J[447] += dqdci;              // dwdot[HONO]/d[O2]
// d()/d[HO2]
dqdci =  + k_f*sc[19];
J[750] += dqdci;              // dwdot[O2]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[761] -= dqdci;              // dwdot[NO2]/d[HO2]
J[765] += dqdci;              // dwdot[HONO]/d[HO2]
// d()/d[NO2]
dqdci =  + k_f*sc[14];
J[1015] += dqdci;             // dwdot[O2]/d[NO2]
J[1021] -= dqdci;             // dwdot[HO2]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1030] += dqdci;             // dwdot[HONO]/d[NO2]
// d()/d[HONO]
dqdci =  - k_r*sc[8];
J[1227] += dqdci;             // dwdot[O2]/d[HONO]
J[1233] -= dqdci;             // dwdot[HO2]/d[HONO]
J[1238] -= dqdci;             // dwdot[NO2]/d[HONO]
J[1242] += dqdci;             // dwdot[HONO]/d[HONO]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2779] += dqdT;              // dwdot[HONO]/dT

// reaction 244: NO + NO2 <=> N2O + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[19];
k_f = 1000000
            * exp(- (30192.9999482832) * invT);
dlnkfdT = (30192.9999482832) * invT2;
// reverse
phi_r = sc[4]*sc[8];
Kc = exp(g_RT[3] - g_RT[4] - g_RT[8] + g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[19]) + (h_RT[4] + h_RT[8]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[4] += q;// N2O
wdot[8] += q;// O2
wdot[19] -= q;// NO2
// d()/d[NO]
dqdci =  + k_f*sc[19];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[163] += dqdci;              // dwdot[N2O]/d[NO]
J[167] += dqdci;              // dwdot[O2]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
// d()/d[N2O]
dqdci =  - k_r*sc[8];
J[215] -= dqdci;              // dwdot[NO]/d[N2O]
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[220] += dqdci;              // dwdot[O2]/d[N2O]
J[231] -= dqdci;              // dwdot[NO2]/d[N2O]
// d()/d[O2]
dqdci =  - k_r*sc[4];
J[427] -= dqdci;              // dwdot[NO]/d[O2]
J[428] += dqdci;              // dwdot[N2O]/d[O2]
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[443] -= dqdci;              // dwdot[NO2]/d[O2]
// d()/d[NO2]
dqdci =  + k_f*sc[3];
J[1010] -= dqdci;             // dwdot[NO]/d[NO2]
J[1011] += dqdci;             // dwdot[N2O]/d[NO2]
J[1015] += dqdci;             // dwdot[O2]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT

// reaction 245: HONO + O <=> NO2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[23];
k_f = 12000000
            * exp(- (3019.29999482832) * invT);
dlnkfdT = (3019.29999482832) * invT2;
// reverse
phi_r = sc[13]*sc[19];
Kc = exp(g_RT[12] - g_RT[13] - g_RT[19] + g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[23]) + (h_RT[13] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[19] += q;// NO2
wdot[23] -= q;// HONO
// d()/d[O]
dqdci =  + k_f*sc[23];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[655] += dqdci;              // dwdot[NO2]/d[O]
J[659] -= dqdci;              // dwdot[HONO]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[19];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
J[712] -= dqdci;              // dwdot[HONO]/d[OH]
// d()/d[NO2]
dqdci =  - k_r*sc[13];
J[1019] -= dqdci;             // dwdot[O]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1030] -= dqdci;             // dwdot[HONO]/d[NO2]
// d()/d[HONO]
dqdci =  + k_f*sc[12];
J[1231] -= dqdci;             // dwdot[O]/d[HONO]
J[1232] += dqdci;             // dwdot[OH]/d[HONO]
J[1238] += dqdci;             // dwdot[NO2]/d[HONO]
J[1242] -= dqdci;             // dwdot[HONO]/d[HONO]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2779] -= dqdT;              // dwdot[HONO]/dT

// reaction 246: HONO + OH <=> H2O + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[23];
k_f = 13000
            * exp(1 * tc[0] - (67.9342498836372) * invT);
dlnkfdT = 1 * invT + (67.9342498836372) * invT2;
// reverse
phi_r = sc[15]*sc[19];
Kc = exp(g_RT[13] - g_RT[15] - g_RT[19] + g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[23]) + (h_RT[15] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[19] += q;// NO2
wdot[23] -= q;// HONO
// d()/d[OH]
dqdci =  + k_f*sc[23];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
J[712] -= dqdci;              // dwdot[HONO]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[19];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[814] += dqdci;              // dwdot[NO2]/d[H2O]
J[818] -= dqdci;              // dwdot[HONO]/d[H2O]
// d()/d[NO2]
dqdci =  - k_r*sc[15];
J[1020] -= dqdci;             // dwdot[OH]/d[NO2]
J[1022] += dqdci;             // dwdot[H2O]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1030] -= dqdci;             // dwdot[HONO]/d[NO2]
// d()/d[HONO]
dqdci =  + k_f*sc[13];
J[1232] -= dqdci;             // dwdot[OH]/d[HONO]
J[1234] += dqdci;             // dwdot[H2O]/d[HONO]
J[1238] += dqdci;             // dwdot[NO2]/d[HONO]
J[1242] -= dqdci;             // dwdot[HONO]/d[HONO]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2779] -= dqdT;              // dwdot[HONO]/dT

// reaction 247: 2 HONO <=> H2O + NO + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[23] * sc[23]);
k_f = 3.49e-07
            * exp(3.64 * tc[0] - (6109.0503228693) * invT);
dlnkfdT = 3.64 * invT + (6109.0503228693) * invT2;
// reverse
phi_r = sc[3]*sc[15]*sc[19];
Kc = refC * exp(-g_RT[3] - g_RT[15] - g_RT[19] + 2.000000*g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[23]) + (h_RT[3] + h_RT[15] + h_RT[19]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[15] += q;// H2O
wdot[19] += q;// NO2
wdot[23] -= 2 * q;// HONO
// d()/d[NO]
dqdci =  - k_r*sc[15]*sc[19];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[174] += dqdci;              // dwdot[H2O]/d[NO]
J[178] += dqdci;              // dwdot[NO2]/d[NO]
J[182] += -2 * dqdci;         // dwdot[HONO]/d[NO]
// d()/d[H2O]
dqdci =  - k_r*sc[3]*sc[19];
J[798] += dqdci;              // dwdot[NO]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[814] += dqdci;              // dwdot[NO2]/d[H2O]
J[818] += -2 * dqdci;         // dwdot[HONO]/d[H2O]
// d()/d[NO2]
dqdci =  - k_r*sc[3]*sc[15];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1022] += dqdci;             // dwdot[H2O]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1030] += -2 * dqdci;        // dwdot[HONO]/d[NO2]
// d()/d[HONO]
dqdci =  + k_f*2.000000*sc[23];
J[1222] += dqdci;             // dwdot[NO]/d[HONO]
J[1234] += dqdci;             // dwdot[H2O]/d[HONO]
J[1238] += dqdci;             // dwdot[NO2]/d[HONO]
J[1242] += -2 * dqdci;        // dwdot[HONO]/d[HONO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2779] += -2 * dqdT;         // dwdot[HONO]/dT

// reaction 248: HNO + O <=> NO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[21];
k_f = 10000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[3]*sc[13];
Kc = exp(-g_RT[3] + g_RT[12] - g_RT[13] + g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[21]) + (h_RT[3] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[21] -= q;// HNO
// d()/d[NO]
dqdci =  - k_r*sc[13];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[171] -= dqdci;              // dwdot[O]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
// d()/d[O]
dqdci =  + k_f*sc[21];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[657] -= dqdci;              // dwdot[HNO]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[3];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[710] -= dqdci;              // dwdot[HNO]/d[OH]
// d()/d[HNO]
dqdci =  + k_f*sc[12];
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1125] -= dqdci;             // dwdot[O]/d[HNO]
J[1126] += dqdci;             // dwdot[OH]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT

// reaction 249: HNO + OH <=> H2O + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[21];
k_f = 36000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[3]*sc[15];
Kc = exp(-g_RT[3] + g_RT[13] - g_RT[15] + g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[21]) + (h_RT[3] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[21] -= q;// HNO
// d()/d[NO]
dqdci =  - k_r*sc[15];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[172] -= dqdci;              // dwdot[OH]/d[NO]
J[174] += dqdci;              // dwdot[H2O]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
// d()/d[OH]
dqdci =  + k_f*sc[21];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[710] -= dqdci;              // dwdot[HNO]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[3];
J[798] += dqdci;              // dwdot[NO]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[816] -= dqdci;              // dwdot[HNO]/d[H2O]
// d()/d[HNO]
dqdci =  + k_f*sc[13];
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1126] -= dqdci;             // dwdot[OH]/d[HNO]
J[1128] += dqdci;             // dwdot[H2O]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT

// reaction 250: HNO + NO2 <=> HONO + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[21];
k_f = 0.0442
            * exp(2.6 * tc[0] - (2043.05966316716) * invT);
dlnkfdT = 2.6 * invT + (2043.05966316716) * invT2;
// reverse
phi_r = sc[3]*sc[23];
Kc = exp(-g_RT[3] + g_RT[19] + g_RT[21] - g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[21]) + (h_RT[3] + h_RT[23]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[19] -= q;// NO2
wdot[21] -= q;// HNO
wdot[23] += q;// HONO
// d()/d[NO]
dqdci =  - k_r*sc[23];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
J[182] += dqdci;              // dwdot[HONO]/d[NO]
// d()/d[NO2]
dqdci =  + k_f*sc[21];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1028] -= dqdci;             // dwdot[HNO]/d[NO2]
J[1030] += dqdci;             // dwdot[HONO]/d[NO2]
// d()/d[HNO]
dqdci =  + k_f*sc[19];
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1132] -= dqdci;             // dwdot[NO2]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
J[1136] += dqdci;             // dwdot[HONO]/d[HNO]
// d()/d[HONO]
dqdci =  - k_r*sc[3];
J[1222] += dqdci;             // dwdot[NO]/d[HONO]
J[1238] -= dqdci;             // dwdot[NO2]/d[HONO]
J[1240] -= dqdci;             // dwdot[HNO]/d[HONO]
J[1242] += dqdci;             // dwdot[HONO]/d[HONO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT
J[2779] += dqdT;              // dwdot[HONO]/dT

// reaction 251: 2 HNO <=> H2O + N2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[21] * sc[21]);
k_f = 3950000
            * exp(- (2516.0833290236) * invT);
dlnkfdT = (2516.0833290236) * invT2;
// reverse
phi_r = sc[4]*sc[15];
Kc = exp(-g_RT[4] - g_RT[15] + 2.000000*g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[21]) + (h_RT[4] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] += q;// N2O
wdot[15] += q;// H2O
wdot[21] -= 2 * q;// HNO
// d()/d[N2O]
dqdci =  - k_r*sc[15];
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[227] += dqdci;              // dwdot[H2O]/d[N2O]
J[233] += -2 * dqdci;         // dwdot[HNO]/d[N2O]
// d()/d[H2O]
dqdci =  - k_r*sc[4];
J[799] += dqdci;              // dwdot[N2O]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[816] += -2 * dqdci;         // dwdot[HNO]/d[H2O]
// d()/d[HNO]
dqdci =  + k_f*2.000000*sc[21];
J[1117] += dqdci;             // dwdot[N2O]/d[HNO]
J[1128] += dqdci;             // dwdot[H2O]/d[HNO]
J[1134] += -2 * dqdci;        // dwdot[HNO]/d[HNO]
// d()/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2777] += -2 * dqdT;         // dwdot[HNO]/dT

// reaction 252: HNO + NO <=> N2O + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[21];
k_f = 2000000
            * exp(- (13083.6333109227) * invT);
dlnkfdT = (13083.6333109227) * invT2;
// reverse
phi_r = sc[4]*sc[13];
Kc = exp(g_RT[3] - g_RT[4] - g_RT[13] + g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[21]) + (h_RT[4] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[4] += q;// N2O
wdot[13] += q;// OH
wdot[21] -= q;// HNO
// d()/d[NO]
dqdci =  + k_f*sc[21];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[163] += dqdci;              // dwdot[N2O]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
// d()/d[N2O]
dqdci =  - k_r*sc[13];
J[215] -= dqdci;              // dwdot[NO]/d[N2O]
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[225] += dqdci;              // dwdot[OH]/d[N2O]
J[233] -= dqdci;              // dwdot[HNO]/d[N2O]
// d()/d[OH]
dqdci =  - k_r*sc[4];
J[692] -= dqdci;              // dwdot[NO]/d[OH]
J[693] += dqdci;              // dwdot[N2O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[710] -= dqdci;              // dwdot[HNO]/d[OH]
// d()/d[HNO]
dqdci =  + k_f*sc[3];
J[1116] -= dqdci;             // dwdot[NO]/d[HNO]
J[1117] += dqdci;             // dwdot[N2O]/d[HNO]
J[1126] += dqdci;             // dwdot[OH]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT

// reaction 253: N + NO2 <=> N2O + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[25];
k_f = 1800000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[4]*sc[12];
Kc = exp(-g_RT[4] - g_RT[12] + g_RT[19] + g_RT[25]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[25]) + (h_RT[4] + h_RT[12]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] += q;// N2O
wdot[12] += q;// O
wdot[19] -= q;// NO2
wdot[25] -= q;// N
// d()/d[N2O]
dqdci =  - k_r*sc[12];
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[224] += dqdci;              // dwdot[O]/d[N2O]
J[231] -= dqdci;              // dwdot[NO2]/d[N2O]
J[237] -= dqdci;              // dwdot[N]/d[N2O]
// d()/d[O]
dqdci =  - k_r*sc[4];
J[640] += dqdci;              // dwdot[N2O]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[655] -= dqdci;              // dwdot[NO2]/d[O]
J[661] -= dqdci;              // dwdot[N]/d[O]
// d()/d[NO2]
dqdci =  + k_f*sc[25];
J[1011] += dqdci;             // dwdot[N2O]/d[NO2]
J[1019] += dqdci;             // dwdot[O]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1032] -= dqdci;             // dwdot[N]/d[NO2]
// d()/d[N]
dqdci =  + k_f*sc[19];
J[1329] += dqdci;             // dwdot[N2O]/d[N]
J[1337] += dqdci;             // dwdot[O]/d[N]
J[1344] -= dqdci;             // dwdot[NO2]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
// d()/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2781] -= dqdT;              // dwdot[N]/dT

// reaction 254: N + O2 <=> NO + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[25];
k_f = 6400
            * exp(1 * tc[0] - (3160.20066125364) * invT);
dlnkfdT = 1 * invT + (3160.20066125364) * invT2;
// reverse
phi_r = sc[3]*sc[12];
Kc = exp(-g_RT[3] + g_RT[8] - g_RT[12] + g_RT[25]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[25]) + (h_RT[3] + h_RT[12]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[8] -= q;// O2
wdot[12] += q;// O
wdot[25] -= q;// N
// d()/d[NO]
dqdci =  - k_r*sc[12];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[167] -= dqdci;              // dwdot[O2]/d[NO]
J[171] += dqdci;              // dwdot[O]/d[NO]
J[184] -= dqdci;              // dwdot[N]/d[NO]
// d()/d[O2]
dqdci =  + k_f*sc[25];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[436] += dqdci;              // dwdot[O]/d[O2]
J[449] -= dqdci;              // dwdot[N]/d[O2]
// d()/d[O]
dqdci =  - k_r*sc[3];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[644] -= dqdci;              // dwdot[O2]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[661] -= dqdci;              // dwdot[N]/d[O]
// d()/d[N]
dqdci =  + k_f*sc[8];
J[1328] += dqdci;             // dwdot[NO]/d[N]
J[1333] -= dqdci;             // dwdot[O2]/d[N]
J[1337] += dqdci;             // dwdot[O]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2781] -= dqdT;              // dwdot[N]/dT

// reaction 255: N + N2O <=> N2 + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[25];
k_f = 10000000
            * exp(- (9998.91514953978) * invT);
dlnkfdT = (9998.91514953978) * invT2;
// reverse
phi_r = sc[3]*sc[45];
Kc = exp(-g_RT[3] + g_RT[4] + g_RT[25] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[25]) + (h_RT[3] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[4] -= q;// N2O
wdot[25] -= q;// N
wdot[45] += q;// N2
// d()/d[NO]
dqdci =  - k_r*sc[45];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[163] -= dqdci;              // dwdot[N2O]/d[NO]
J[184] -= dqdci;              // dwdot[N]/d[NO]
J[204] += dqdci;              // dwdot[N2]/d[NO]
// d()/d[N2O]
dqdci =  + k_f*sc[25];
J[215] += dqdci;              // dwdot[NO]/d[N2O]
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[237] -= dqdci;              // dwdot[N]/d[N2O]
J[257] += dqdci;              // dwdot[N2]/d[N2O]
// d()/d[N]
dqdci =  + k_f*sc[4];
J[1328] += dqdci;             // dwdot[NO]/d[N]
J[1329] -= dqdci;             // dwdot[N2O]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
J[1370] += dqdci;             // dwdot[N2]/d[N]
// d()/d[N2]
dqdci =  - k_r*sc[3];
J[2388] += dqdci;             // dwdot[NO]/d[N2]
J[2389] -= dqdci;             // dwdot[N2O]/d[N2]
J[2410] -= dqdci;             // dwdot[N]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2781] -= dqdT;              // dwdot[N]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 256: N2O + NO <=> N2 + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[4];
k_f = 0.53
            * exp(2.23 * tc[0] - (23289.3705101082) * invT);
dlnkfdT = 2.23 * invT + (23289.3705101082) * invT2;
// reverse
phi_r = sc[19]*sc[45];
Kc = exp(g_RT[3] + g_RT[4] - g_RT[19] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[4]) + (h_RT[19] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[4] -= q;// N2O
wdot[19] += q;// NO2
wdot[45] += q;// N2
// d()/d[NO]
dqdci =  + k_f*sc[4];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[163] -= dqdci;              // dwdot[N2O]/d[NO]
J[178] += dqdci;              // dwdot[NO2]/d[NO]
J[204] += dqdci;              // dwdot[N2]/d[NO]
// d()/d[N2O]
dqdci =  + k_f*sc[3];
J[215] -= dqdci;              // dwdot[NO]/d[N2O]
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[231] += dqdci;              // dwdot[NO2]/d[N2O]
J[257] += dqdci;              // dwdot[N2]/d[N2O]
// d()/d[NO2]
dqdci =  - k_r*sc[45];
J[1010] -= dqdci;             // dwdot[NO]/d[NO2]
J[1011] -= dqdci;             // dwdot[N2O]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1052] += dqdci;             // dwdot[N2]/d[NO2]
// d()/d[N2]
dqdci =  - k_r*sc[19];
J[2388] -= dqdci;             // dwdot[NO]/d[N2]
J[2389] -= dqdci;             // dwdot[N2O]/d[N2]
J[2404] += dqdci;             // dwdot[NO2]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 259: H + HNO2 <=> H2 + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[36];
k_f = 240
            * exp(1.5 * tc[0] - (2559.86317894861) * invT);
dlnkfdT = 1.5 * invT + (2559.86317894861) * invT2;
// reverse
phi_r = sc[9]*sc[19];
Kc = exp(-g_RT[9] + g_RT[11] - g_RT[19] + g_RT[36]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[36]) + (h_RT[9] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[19] += q;// NO2
wdot[36] -= q;// HNO2
// d()/d[H2]
dqdci =  - k_r*sc[19];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[496] += dqdci;              // dwdot[NO2]/d[H2]
J[513] -= dqdci;              // dwdot[HNO2]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[36];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[602] += dqdci;              // dwdot[NO2]/d[H]
J[619] -= dqdci;              // dwdot[HNO2]/d[H]
// d()/d[NO2]
dqdci =  - k_r*sc[9];
J[1016] += dqdci;             // dwdot[H2]/d[NO2]
J[1018] -= dqdci;             // dwdot[H]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1043] -= dqdci;             // dwdot[HNO2]/d[NO2]
// d()/d[HNO2]
dqdci =  + k_f*sc[11];
J[1917] += dqdci;             // dwdot[H2]/d[HNO2]
J[1919] -= dqdci;             // dwdot[H]/d[HNO2]
J[1927] += dqdci;             // dwdot[NO2]/d[HNO2]
J[1944] -= dqdci;             // dwdot[HNO2]/d[HNO2]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2792] -= dqdT;              // dwdot[HNO2]/dT

// reaction 260: HNO2 + O <=> NO2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[36];
k_f = 170
            * exp(1.5 * tc[0] - (1519.71433073025) * invT);
dlnkfdT = 1.5 * invT + (1519.71433073025) * invT2;
// reverse
phi_r = sc[13]*sc[19];
Kc = exp(g_RT[12] - g_RT[13] - g_RT[19] + g_RT[36]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[36]) + (h_RT[13] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[19] += q;// NO2
wdot[36] -= q;// HNO2
// d()/d[O]
dqdci =  + k_f*sc[36];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[655] += dqdci;              // dwdot[NO2]/d[O]
J[672] -= dqdci;              // dwdot[HNO2]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[19];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
J[725] -= dqdci;              // dwdot[HNO2]/d[OH]
// d()/d[NO2]
dqdci =  - k_r*sc[13];
J[1019] -= dqdci;             // dwdot[O]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1043] -= dqdci;             // dwdot[HNO2]/d[NO2]
// d()/d[HNO2]
dqdci =  + k_f*sc[12];
J[1920] -= dqdci;             // dwdot[O]/d[HNO2]
J[1921] += dqdci;             // dwdot[OH]/d[HNO2]
J[1927] += dqdci;             // dwdot[NO2]/d[HNO2]
J[1944] -= dqdci;             // dwdot[HNO2]/d[HNO2]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2792] -= dqdT;              // dwdot[HNO2]/dT

// reaction 261: HNO2 + OH <=> H2O + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[36];
k_f = 1.2
            * exp(2 * tc[0] - (-299.917132819613) * invT);
dlnkfdT = 2 * invT + (-299.917132819613) * invT2;
// reverse
phi_r = sc[15]*sc[19];
Kc = exp(g_RT[13] - g_RT[15] - g_RT[19] + g_RT[36]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[36]) + (h_RT[15] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[19] += q;// NO2
wdot[36] -= q;// HNO2
// d()/d[OH]
dqdci =  + k_f*sc[36];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
J[725] -= dqdci;              // dwdot[HNO2]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[19];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[814] += dqdci;              // dwdot[NO2]/d[H2O]
J[831] -= dqdci;              // dwdot[HNO2]/d[H2O]
// d()/d[NO2]
dqdci =  - k_r*sc[15];
J[1020] -= dqdci;             // dwdot[OH]/d[NO2]
J[1022] += dqdci;             // dwdot[H2O]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1043] -= dqdci;             // dwdot[HNO2]/d[NO2]
// d()/d[HNO2]
dqdci =  + k_f*sc[13];
J[1921] -= dqdci;             // dwdot[OH]/d[HNO2]
J[1923] += dqdci;             // dwdot[H2O]/d[HNO2]
J[1927] += dqdci;             // dwdot[NO2]/d[HNO2]
J[1944] -= dqdci;             // dwdot[HNO2]/d[HNO2]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2792] -= dqdT;              // dwdot[HNO2]/dT

// reaction 262: HNO2 <=> HONO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[36];
k_f = 1.3e+29
            * exp(-5.47 * tc[0] - (26576.8849878105) * invT);
dlnkfdT = -5.47 * invT + (26576.8849878105) * invT2;
// reverse
phi_r = sc[23];
Kc = exp(-g_RT[23] + g_RT[36]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[36]) + (h_RT[23]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[23] += q;// HONO
wdot[36] -= q;// HNO2
// d()/d[HONO]
dqdci =  - k_r;
J[1242] += dqdci;             // dwdot[HONO]/d[HONO]
J[1255] -= dqdci;             // dwdot[HNO2]/d[HONO]
// d()/d[HNO2]
dqdci =  + k_f;
J[1931] += dqdci;             // dwdot[HONO]/d[HNO2]
J[1944] -= dqdci;             // dwdot[HNO2]/d[HNO2]
// d()/dT
J[2779] += dqdT;              // dwdot[HONO]/dT
J[2792] -= dqdT;              // dwdot[HNO2]/dT

// reaction 263: HONO + NH2 <=> NH3 + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[23]*sc[27];
k_f = 7.11e-05
            * exp(3.02 * tc[0] - (-2486.39354574112) * invT);
dlnkfdT = 3.02 * invT + (-2486.39354574112) * invT2;
// reverse
phi_r = sc[19]*sc[20];
Kc = exp(-g_RT[19] - g_RT[20] + g_RT[23] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[23] + h_RT[27]) + (h_RT[19] + h_RT[20]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[19] += q;// NO2
wdot[20] += q;// NH3
wdot[23] -= q;// HONO
wdot[27] -= q;// NH2
// d()/d[NO2]
dqdci =  - k_r*sc[20];
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1027] += dqdci;             // dwdot[NH3]/d[NO2]
J[1030] -= dqdci;             // dwdot[HONO]/d[NO2]
J[1034] -= dqdci;             // dwdot[NH2]/d[NO2]
// d()/d[NH3]
dqdci =  - k_r*sc[19];
J[1079] += dqdci;             // dwdot[NO2]/d[NH3]
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1083] -= dqdci;             // dwdot[HONO]/d[NH3]
J[1087] -= dqdci;             // dwdot[NH2]/d[NH3]
// d()/d[HONO]
dqdci =  + k_f*sc[27];
J[1238] += dqdci;             // dwdot[NO2]/d[HONO]
J[1239] += dqdci;             // dwdot[NH3]/d[HONO]
J[1242] -= dqdci;             // dwdot[HONO]/d[HONO]
J[1246] -= dqdci;             // dwdot[NH2]/d[HONO]
// d()/d[NH2]
dqdci =  + k_f*sc[23];
J[1450] += dqdci;             // dwdot[NO2]/d[NH2]
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1454] -= dqdci;             // dwdot[HONO]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2779] -= dqdT;              // dwdot[HONO]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 264: HNO + N <=> NH + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[21]*sc[25];
k_f = 10000000
            * exp(- (1001.40116495139) * invT);
dlnkfdT = (1001.40116495139) * invT2;
// reverse
phi_r = sc[3]*sc[28];
Kc = exp(-g_RT[3] + g_RT[21] + g_RT[25] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[21] + h_RT[25]) + (h_RT[3] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[21] -= q;// HNO
wdot[25] -= q;// N
wdot[28] += q;// NH
// d()/d[NO]
dqdci =  - k_r*sc[28];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
J[184] -= dqdci;              // dwdot[N]/d[NO]
J[187] += dqdci;              // dwdot[NH]/d[NO]
// d()/d[HNO]
dqdci =  + k_f*sc[25];
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
J[1138] -= dqdci;             // dwdot[N]/d[HNO]
J[1141] += dqdci;             // dwdot[NH]/d[HNO]
// d()/d[N]
dqdci =  + k_f*sc[21];
J[1328] += dqdci;             // dwdot[NO]/d[N]
J[1346] -= dqdci;             // dwdot[HNO]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
J[1353] += dqdci;             // dwdot[NH]/d[N]
// d()/d[NH]
dqdci =  - k_r*sc[3];
J[1487] += dqdci;             // dwdot[NO]/d[NH]
J[1505] -= dqdci;             // dwdot[HNO]/d[NH]
J[1509] -= dqdci;             // dwdot[N]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT
J[2781] -= dqdT;              // dwdot[N]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 265: N2O + O <=> N2 + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[12];
k_f = 3690000
            * exp(- (8023.28651959045) * invT);
dlnkfdT = (8023.28651959045) * invT2;
// reverse
phi_r = sc[8]*sc[45];
Kc = exp(g_RT[4] - g_RT[8] + g_RT[12] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[12]) + (h_RT[8] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] -= q;// N2O
wdot[8] += q;// O2
wdot[12] -= q;// O
wdot[45] += q;// N2
// d()/d[N2O]
dqdci =  + k_f*sc[12];
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[220] += dqdci;              // dwdot[O2]/d[N2O]
J[224] -= dqdci;              // dwdot[O]/d[N2O]
J[257] += dqdci;              // dwdot[N2]/d[N2O]
// d()/d[O2]
dqdci =  - k_r*sc[45];
J[428] -= dqdci;              // dwdot[N2O]/d[O2]
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[436] -= dqdci;              // dwdot[O]/d[O2]
J[469] += dqdci;              // dwdot[N2]/d[O2]
// d()/d[O]
dqdci =  + k_f*sc[4];
J[640] -= dqdci;              // dwdot[N2O]/d[O]
J[644] += dqdci;              // dwdot[O2]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[681] += dqdci;              // dwdot[N2]/d[O]
// d()/d[N2]
dqdci =  - k_r*sc[8];
J[2389] -= dqdci;             // dwdot[N2O]/d[N2]
J[2393] += dqdci;             // dwdot[O2]/d[N2]
J[2397] -= dqdci;             // dwdot[O]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 266: N2O + O <=> 2 NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[12];
k_f = 29000000
            * exp(- (11649.4658133793) * invT);
dlnkfdT = (11649.4658133793) * invT2;
// reverse
phi_r = (sc[3] * sc[3]);
Kc = exp(-2.000000*g_RT[3] + g_RT[4] + g_RT[12]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[12]) + (2.000000*h_RT[3]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += 2 * q;// NO
wdot[4] -= q;// N2O
wdot[12] -= q;// O
// d()/d[NO]
dqdci =  - k_r*2.000000*sc[3];
J[162] += 2 * dqdci;          // dwdot[NO]/d[NO]
J[163] -= dqdci;              // dwdot[N2O]/d[NO]
J[171] -= dqdci;              // dwdot[O]/d[NO]
// d()/d[N2O]
dqdci =  + k_f*sc[12];
J[215] += 2 * dqdci;          // dwdot[NO]/d[N2O]
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[224] -= dqdci;              // dwdot[O]/d[N2O]
// d()/d[O]
dqdci =  + k_f*sc[4];
J[639] += 2 * dqdci;          // dwdot[NO]/d[O]
J[640] -= dqdci;              // dwdot[N2O]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
// d()/dT
J[2759] += 2 * dqdT;          // dwdot[NO]/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2768] -= dqdT;              // dwdot[O]/dT

// reaction 267: NO3 <=> NO + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[43];
k_f = 2500000
            * exp(- (6098.9859895532) * invT);
dlnkfdT = (6098.9859895532) * invT2;
// reverse
phi_r = sc[3]*sc[8];
Kc = refC * exp(-g_RT[3] - g_RT[8] + g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[43]) + (h_RT[3] + h_RT[8]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[8] += q;// O2
wdot[43] -= q;// NO3
// d()/d[NO]
dqdci =  - k_r*sc[8];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[167] += dqdci;              // dwdot[O2]/d[NO]
J[202] -= dqdci;              // dwdot[NO3]/d[NO]
// d()/d[O2]
dqdci =  - k_r*sc[3];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[467] -= dqdci;              // dwdot[NO3]/d[O2]
// d()/d[NO3]
dqdci =  + k_f;
J[2282] += dqdci;             // dwdot[NO]/d[NO3]
J[2287] += dqdci;             // dwdot[O2]/d[NO3]
J[2322] -= dqdci;             // dwdot[NO3]/d[NO3]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2799] -= dqdT;              // dwdot[NO3]/dT

// reaction 268: 2 NO3 <=> 2 NO2 + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[43] * sc[43]);
k_f = 512000
            * exp(- (2450.66516246898) * invT);
dlnkfdT = (2450.66516246898) * invT2;
// reverse
phi_r = sc[8]*(sc[19] * sc[19]);
Kc = refC * exp(-g_RT[8] - 2.000000*g_RT[19] + 2.000000*g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[43]) + (h_RT[8] + 2.000000*h_RT[19]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[19] += 2 * q;// NO2
wdot[43] -= 2 * q;// NO3
// d()/d[O2]
dqdci =  - k_r*sc[19]*sc[19];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[443] += 2 * dqdci;          // dwdot[NO2]/d[O2]
J[467] += -2 * dqdci;         // dwdot[NO3]/d[O2]
// d()/d[NO2]
dqdci =  - k_r*sc[8]*2.000000*sc[19];
J[1015] += dqdci;             // dwdot[O2]/d[NO2]
J[1026] += 2 * dqdci;         // dwdot[NO2]/d[NO2]
J[1050] += -2 * dqdci;        // dwdot[NO3]/d[NO2]
// d()/d[NO3]
dqdci =  + k_f*2.000000*sc[43];
J[2287] += dqdci;             // dwdot[O2]/d[NO3]
J[2298] += 2 * dqdci;         // dwdot[NO2]/d[NO3]
J[2322] += -2 * dqdci;        // dwdot[NO3]/d[NO3]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2775] += 2 * dqdT;          // dwdot[NO2]/dT
J[2799] += -2 * dqdT;         // dwdot[NO3]/dT

// reaction 270: N2O4 + O <=> N2O3 + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[37];
k_f = 1210000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[8]*sc[38];
Kc = exp(-g_RT[8] + g_RT[12] + g_RT[37] - g_RT[38]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[37]) + (h_RT[8] + h_RT[38]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[12] -= q;// O
wdot[37] -= q;// N2O4
wdot[38] += q;// N2O3
// d()/d[O2]
dqdci =  - k_r*sc[38];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[436] -= dqdci;              // dwdot[O]/d[O2]
J[461] -= dqdci;              // dwdot[N2O4]/d[O2]
J[462] += dqdci;              // dwdot[N2O3]/d[O2]
// d()/d[O]
dqdci =  + k_f*sc[37];
J[644] += dqdci;              // dwdot[O2]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[673] -= dqdci;              // dwdot[N2O4]/d[O]
J[674] += dqdci;              // dwdot[N2O3]/d[O]
// d()/d[N2O4]
dqdci =  + k_f*sc[12];
J[1969] += dqdci;             // dwdot[O2]/d[N2O4]
J[1973] -= dqdci;             // dwdot[O]/d[N2O4]
J[1998] -= dqdci;             // dwdot[N2O4]/d[N2O4]
J[1999] += dqdci;             // dwdot[N2O3]/d[N2O4]
// d()/d[N2O3]
dqdci =  - k_r*sc[8];
J[2022] += dqdci;             // dwdot[O2]/d[N2O3]
J[2026] -= dqdci;             // dwdot[O]/d[N2O3]
J[2051] -= dqdci;             // dwdot[N2O4]/d[N2O3]
J[2052] += dqdci;             // dwdot[N2O3]/d[N2O3]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2793] -= dqdT;              // dwdot[N2O4]/dT
J[2794] += dqdT;              // dwdot[N2O3]/dT

// reaction 271: N2O3 + O <=> 2 NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[38];
k_f = 271000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = (sc[19] * sc[19]);
Kc = exp(g_RT[12] - 2.000000*g_RT[19] + g_RT[38]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[38]) + (2.000000*h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[19] += 2 * q;// NO2
wdot[38] -= q;// N2O3
// d()/d[O]
dqdci =  + k_f*sc[38];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[655] += 2 * dqdci;          // dwdot[NO2]/d[O]
J[674] -= dqdci;              // dwdot[N2O3]/d[O]
// d()/d[NO2]
dqdci =  - k_r*2.000000*sc[19];
J[1019] -= dqdci;             // dwdot[O]/d[NO2]
J[1026] += 2 * dqdci;         // dwdot[NO2]/d[NO2]
J[1045] -= dqdci;             // dwdot[N2O3]/d[NO2]
// d()/d[N2O3]
dqdci =  + k_f*sc[12];
J[2026] -= dqdci;             // dwdot[O]/d[N2O3]
J[2033] += 2 * dqdci;         // dwdot[NO2]/d[N2O3]
J[2052] -= dqdci;             // dwdot[N2O3]/d[N2O3]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2775] += 2 * dqdT;          // dwdot[NO2]/dT
J[2794] -= dqdT;              // dwdot[N2O3]/dT

amrex::Real c_R[52], dcRdT[52], e_RT[52];
amrex::Real * eh_RT;
if (HP) {
cp_R(c_R, tc);
dcvpRdT(dcRdT, tc);
eh_RT = &h_RT[0];
}
else {
cv_R(c_R, tc);
dcvpRdT(dcRdT, tc);
speciesInternalEnergy(e_RT, tc);
eh_RT = &e_RT[0];
}

amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT=0.0, dehmixdT=0.0;
for (int k = 0; k < 52; ++k) {
cmix += c_R[k]*sc[k];
dcmixdT += dcRdT[k]*sc[k];
ehmix += eh_RT[k]*wdot[k];
dehmixdT += invT*(c_R[k]-eh_RT[k])*wdot[k] + eh_RT[k]*J[2756+k];
}

amrex::Real cmixinv = 1.0/cmix;
amrex::Real tmp1 = ehmix*cmixinv;
amrex::Real tmp3 = cmixinv*T;
amrex::Real tmp2 = tmp1*tmp3;
amrex::Real dehmixdc;
// dTdot/d[X]
for (int k = 0; k < 52; ++k) {
dehmixdc = 0.0;
for (int m = 0; m < 52; ++m) {
dehmixdc += eh_RT[m]*J[k*53+m];
}
J[k*53+52] = tmp2*c_R[k] - tmp3*dehmixdc;
}
// dTdot/dT
J[2808] = -tmp1 + tmp2*dcmixdT - tmp3*dehmixdT;
}

// compute an approx to the reaction Jacobian (for preconditioning)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void DWDOT_SIMPLIFIED(amrex::Real *  J, amrex::Real *  sc, amrex::Real *  Tp, const int * HP)
{
amrex::Real c[52];

for (int k=0; k<52; k++) {
c[k] = 1.e6 * sc[k];
}

aJacobian_precond(J, c, *Tp, *HP);

// dwdot[k]/dT
// dTdot/d[X]
for (int k=0; k<52; k++) {
J[2756+k] *= 1.e-6;
J[k*53+52] *= 1.e6;
}

return;
}


// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void aJacobian(amrex::Real * J, amrex::Real * sc, amrex::Real T, const int consP)
{

for (int i=0; i<2809; i++) {
J[i] = 0.0;
}

amrex::Real wdot[52];
for (int k=0; k<52; k++) {
wdot[k] = 0.0;
}

const amrex::Real tc[5] = { log(T), T, T*T, T*T*T, T*T*T*T };// temperature cache
amrex::Real invT = 1.0 / tc[1];
amrex::Real invT2 = invT * invT;

// reference concentration: P_atm / (RT) in inverse mol/m^3
amrex::Real refC = 101325 / 8.31446 / T;
amrex::Real refCinv = 1.0 / refC;

// compute the mixture concentration
amrex::Real mixture = 0.0;
for (int k = 0; k < 52; ++k) {
mixture += sc[k];
}

// compute the Gibbs free energy
amrex::Real g_RT[52];
gibbs(g_RT, tc);

// compute the species enthalpy
amrex::Real h_RT[52];
speciesEnthalpy(h_RT, tc);

amrex::Real phi_f, k_f, k_r, phi_r, Kc, q, q_nocor, Corr, alpha;
amrex::Real dlnkfdT, dlnk0dT, dlnKcdT, dkrdT, dqdT;
amrex::Real dqdci, dcdc_fac, dqdc[52];
amrex::Real Pr, fPr, F, k_0, logPr;
amrex::Real logFcent, troe_c, troe_n, troePr_den, troePr, troe;
amrex::Real Fcent1, Fcent2, Fcent3, Fcent;
amrex::Real dlogFdc, dlogFdn, dlogFdcn_fac;
amrex::Real dlogPrdT, dlogfPrdT, dlogFdT, dlogFcentdT, dlogFdlogPr, dlnCorrdT;
const amrex::Real ln10 = log(10.0);
const amrex::Real log10e = 1.0/log(10.0);
// reaction 1: H + NO (+M) <=> HNO (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture;
// forward
phi_f = sc[3]*sc[11];
k_f = 1500000000
            * exp(-0.4 * tc[0]);
dlnkfdT = -0.4 * invT;
// pressure-fall-off
k_0 = 240000000000000 * exp(0.206 * tc[0] - (-779.985831997315) * invT);
Pr = 1e-12 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = 0.206 * invT + (-779.985831997315) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Troe form
logPr = log10(Pr);
Fcent1 = (1.-0.82)*exp(-T/1e-30);
Fcent2 = 0.82 * exp(-T/1e+30);
Fcent3 = exp(-1e+30 * invT);
Fcent = Fcent1 + Fcent2 + Fcent3;
logFcent = log10(Fcent);
troe_c = -.4 - .67 * logFcent;
troe_n = .75 - 1.27 * logFcent;
troePr_den = 1.0 / (troe_n - .14*(troe_c + logPr));
troePr = (troe_c + logPr) * troePr_den;
troe = 1.0 / (1.0 + troePr*troePr);
F = exp(M_LN10 * logFcent * troe);
dlogFcentdT = log10e/Fcent*( 
    -Fcent1/1e-30
    -Fcent2/1e+30
    + Fcent3*1e+30*invT2
);
dlogFdcn_fac = 2.0 * logFcent * troe*troe * troePr * troePr_den;
dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
dlogFdn = dlogFdcn_fac * troePr;
dlogFdlogPr = dlogFdc;
dlogFdT = dlogFcentdT*(troe - 0.67*dlogFdc - 1.27*dlogFdn) + dlogFdlogPr * dlogPrdT;
// reverse
phi_r = sc[21];
Kc = refCinv * exp(g_RT[3] + g_RT[11] - g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[11]) + (h_RT[21]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[3] -= q;// NO
wdot[11] -= q;// H
wdot[21] += q;// HNO
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = q/alpha*(1.0/(Pr+1.0) + dlogFdlogPr);
if (consP) {
// d()/d[NO]
dqdci =  + k_f*sc[11];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[170] -= dqdci;              // dwdot[H]/d[NO]
J[180] += dqdci;              // dwdot[HNO]/d[NO]
// d()/d[H]
dqdci =  + k_f*sc[3];
J[586] -= dqdci;              // dwdot[NO]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[604] += dqdci;              // dwdot[HNO]/d[H]
// d()/d[HNO]
dqdci =  - k_r;
J[1116] -= dqdci;             // dwdot[NO]/d[HNO]
J[1124] -= dqdci;             // dwdot[H]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
}
else {
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac + k_f*sc[11];
dqdc[4] = dcdc_fac;
dqdc[5] = dcdc_fac;
dqdc[6] = dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = dcdc_fac;
dqdc[9] = dcdc_fac;
dqdc[10] = dcdc_fac;
dqdc[11] = dcdc_fac + k_f*sc[3];
dqdc[12] = dcdc_fac;
dqdc[13] = dcdc_fac;
dqdc[14] = dcdc_fac;
dqdc[15] = dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac;
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac - k_r;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+3] -= dqdc[k];
J[53*k+11] -= dqdc[k];
J[53*k+21] += dqdc[k];
}
}
J[2759] -= dqdT;// dwdot[NO]/dT
J[2767] -= dqdT;// dwdot[H]/dT
J[2777] += dqdT;// dwdot[HNO]/dT

// reaction 13: H + O2 (+M) <=> HO2 (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.9 - 1)*sc[5] + ( 3.8 - 1)*sc[6] + ( 1.3 - 1)*sc[9] + ( 0 - 1)*sc[10] + ( 10 - 1)*sc[15] + ( 0 - 1)*sc[35] + sc[46] + ( 3 - 1)*sc[47];
// forward
phi_f = sc[8]*sc[11];
k_f = 4650000
            * exp(0.44 * tc[0]);
dlnkfdT = 0.44 * invT;
// pressure-fall-off
k_0 = 1.737e+19 * exp(-1.23 * tc[0]);
Pr = 1e-12 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -1.23 * invT;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Troe form
logPr = log10(Pr);
Fcent1 = (1.-0.67)*exp(-T/1e-30);
Fcent2 = 0.67 * exp(-T/1e+30);
Fcent3 = exp(-1e+30 * invT);
Fcent = Fcent1 + Fcent2 + Fcent3;
logFcent = log10(Fcent);
troe_c = -.4 - .67 * logFcent;
troe_n = .75 - 1.27 * logFcent;
troePr_den = 1.0 / (troe_n - .14*(troe_c + logPr));
troePr = (troe_c + logPr) * troePr_den;
troe = 1.0 / (1.0 + troePr*troePr);
F = exp(M_LN10 * logFcent * troe);
dlogFcentdT = log10e/Fcent*( 
    -Fcent1/1e-30
    -Fcent2/1e+30
    + Fcent3*1e+30*invT2
);
dlogFdcn_fac = 2.0 * logFcent * troe*troe * troePr * troePr_den;
dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
dlogFdn = dlogFdcn_fac * troePr;
dlogFdlogPr = dlogFdc;
dlogFdT = dlogFcentdT*(troe - 0.67*dlogFdc - 1.27*dlogFdn) + dlogFdlogPr * dlogPrdT;
// reverse
phi_r = sc[14];
Kc = refCinv * exp(g_RT[8] + g_RT[11] - g_RT[14]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[11]) + (h_RT[14]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[8] -= q;// O2
wdot[11] -= q;// H
wdot[14] += q;// HO2
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = q/alpha*(1.0/(Pr+1.0) + dlogFdlogPr);
if (consP) {
// d()/d[CO]
dqdci = (1.9 - 1)*dcdc_fac;
J[273] -= dqdci;              // dwdot[O2]/d[CO]
J[276] -= dqdci;              // dwdot[H]/d[CO]
J[279] += dqdci;              // dwdot[HO2]/d[CO]
// d()/d[CO2]
dqdci = (3.8 - 1)*dcdc_fac;
J[326] -= dqdci;              // dwdot[O2]/d[CO2]
J[329] -= dqdci;              // dwdot[H]/d[CO2]
J[332] += dqdci;              // dwdot[HO2]/d[CO2]
// d()/d[O2]
dqdci =  + k_f*sc[11];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[435] -= dqdci;              // dwdot[H]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
// d()/d[H2]
dqdci = (1.3 - 1)*dcdc_fac;
J[485] -= dqdci;              // dwdot[O2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[491] += dqdci;              // dwdot[HO2]/d[H2]
// d()/d[AR]
dqdci = (0 - 1)*dcdc_fac;
J[538] -= dqdci;              // dwdot[O2]/d[AR]
J[541] -= dqdci;              // dwdot[H]/d[AR]
J[544] += dqdci;              // dwdot[HO2]/d[AR]
// d()/d[H]
dqdci =  + k_f*sc[8];
J[591] -= dqdci;              // dwdot[O2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[597] += dqdci;              // dwdot[HO2]/d[H]
// d()/d[HO2]
dqdci =  - k_r;
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[753] -= dqdci;              // dwdot[H]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
// d()/d[H2O]
dqdci = (10 - 1)*dcdc_fac;
J[803] -= dqdci;              // dwdot[O2]/d[H2O]
J[806] -= dqdci;              // dwdot[H]/d[H2O]
J[809] += dqdci;              // dwdot[HO2]/d[H2O]
// d()/d[HE]
dqdci = (0 - 1)*dcdc_fac;
J[1863] -= dqdci;             // dwdot[O2]/d[HE]
J[1866] -= dqdci;             // dwdot[H]/d[HE]
J[1869] += dqdci;             // dwdot[HO2]/d[HE]
// d()/d[CH4]
dqdci = (2 - 1)*dcdc_fac;
J[2446] -= dqdci;             // dwdot[O2]/d[CH4]
J[2449] -= dqdci;             // dwdot[H]/d[CH4]
J[2452] += dqdci;             // dwdot[HO2]/d[CH4]
// d()/d[C2H6]
dqdci = (3 - 1)*dcdc_fac;
J[2499] -= dqdci;             // dwdot[O2]/d[C2H6]
J[2502] -= dqdci;             // dwdot[H]/d[C2H6]
J[2505] += dqdci;             // dwdot[HO2]/d[C2H6]
}
else {
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac;
dqdc[4] = dcdc_fac;
dqdc[5] = 1.9*dcdc_fac;
dqdc[6] = 3.8*dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = dcdc_fac + k_f*sc[11];
dqdc[9] = 1.3*dcdc_fac;
dqdc[11] = dcdc_fac + k_f*sc[8];
dqdc[12] = dcdc_fac;
dqdc[13] = dcdc_fac;
dqdc[14] = dcdc_fac - k_r;
dqdc[15] = 10*dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac;
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = dcdc_fac;
dqdc[46] = 2*dcdc_fac;
dqdc[47] = 3*dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+8] -= dqdc[k];
J[53*k+11] -= dqdc[k];
J[53*k+14] += dqdc[k];
}
}
J[2764] -= dqdT;// dwdot[O2]/dT
J[2767] -= dqdT;// dwdot[H]/dT
J[2770] += dqdT;// dwdot[HO2]/dT

// reaction 14: H + O2 (+AR) <=> HO2 (+AR)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture;
// forward
phi_f = sc[8]*sc[10]*sc[11];
k_f = 4650000
            * exp(0.44 * tc[0]);
dlnkfdT = 0.44 * invT;
// pressure-fall-off
k_0 = 6.81e+18 * exp(-1.2 * tc[0]);
Pr = 1e-12 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -1.2 * invT;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Troe form
logPr = log10(Pr);
Fcent1 = (1.-0.7)*exp(-T/1e-30);
Fcent2 = 0.7 * exp(-T/1e+30);
Fcent3 = exp(-1e+30 * invT);
Fcent = Fcent1 + Fcent2 + Fcent3;
logFcent = log10(Fcent);
troe_c = -.4 - .67 * logFcent;
troe_n = .75 - 1.27 * logFcent;
troePr_den = 1.0 / (troe_n - .14*(troe_c + logPr));
troePr = (troe_c + logPr) * troePr_den;
troe = 1.0 / (1.0 + troePr*troePr);
F = exp(M_LN10 * logFcent * troe);
dlogFcentdT = log10e/Fcent*( 
    -Fcent1/1e-30
    -Fcent2/1e+30
    + Fcent3*1e+30*invT2
);
dlogFdcn_fac = 2.0 * logFcent * troe*troe * troePr * troePr_den;
dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
dlogFdn = dlogFdcn_fac * troePr;
dlogFdlogPr = dlogFdc;
dlogFdT = dlogFcentdT*(troe - 0.67*dlogFdc - 1.27*dlogFdn) + dlogFdlogPr * dlogPrdT;
// reverse
phi_r = sc[10]*sc[14];
Kc = refCinv * exp(g_RT[8] + g_RT[11] - g_RT[14]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[10] + h_RT[11]) + (h_RT[10] + h_RT[14]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[8] -= q;// O2
wdot[11] -= q;// H
wdot[14] += q;// HO2
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = q/alpha*(1.0/(Pr+1.0) + dlogFdlogPr);
if (consP) {
// d()/d[O2]
dqdci =  + k_f*sc[10]*sc[11];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[435] -= dqdci;              // dwdot[H]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
// d()/d[AR]
dqdci = (1 - 1)*dcdc_fac + k_f*sc[8]*sc[11] - k_r*sc[14];
J[538] -= dqdci;              // dwdot[O2]/d[AR]
J[541] -= dqdci;              // dwdot[H]/d[AR]
J[544] += dqdci;              // dwdot[HO2]/d[AR]
// d()/d[H]
dqdci =  + k_f*sc[8]*sc[10];
J[591] -= dqdci;              // dwdot[O2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[597] += dqdci;              // dwdot[HO2]/d[H]
// d()/d[HO2]
dqdci =  - k_r*sc[10];
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[753] -= dqdci;              // dwdot[H]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
}
else {
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac;
dqdc[4] = dcdc_fac;
dqdc[5] = dcdc_fac;
dqdc[6] = dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = dcdc_fac + k_f*sc[10]*sc[11];
dqdc[9] = dcdc_fac;
dqdc[10] = dcdc_fac + k_f*sc[8]*sc[11] - k_r*sc[14];
dqdc[11] = dcdc_fac + k_f*sc[8]*sc[10];
dqdc[12] = dcdc_fac;
dqdc[13] = dcdc_fac;
dqdc[14] = dcdc_fac - k_r*sc[10];
dqdc[15] = dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac;
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+8] -= dqdc[k];
J[53*k+11] -= dqdc[k];
J[53*k+14] += dqdc[k];
}
}
J[2764] -= dqdT;// dwdot[O2]/dT
J[2767] -= dqdT;// dwdot[H]/dT
J[2770] += dqdT;// dwdot[HO2]/dT

// reaction 21: H2O2 (+H2O) <=> 2 OH (+H2O)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture;
// forward
phi_f = sc[15]*sc[16];
k_f = 2000000000000
            * exp(0.9 * tc[0] - (24531.8124579801) * invT);
dlnkfdT = 0.9 * invT + (24531.8124579801) * invT2;
// pressure-fall-off
k_0 = 1.865e+25 * exp(-2.3 * tc[0] - (24531.8124579801) * invT);
Pr = 1e-6 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -2.3 * invT + (24531.8124579801) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Troe form
logPr = log10(Pr);
Fcent1 = (1.-0.51)*exp(-T/1e-30);
Fcent2 = 0.51 * exp(-T/1e+30);
Fcent3 = 0.;
Fcent = Fcent1 + Fcent2 + Fcent3;
logFcent = log10(Fcent);
troe_c = -.4 - .67 * logFcent;
troe_n = .75 - 1.27 * logFcent;
troePr_den = 1.0 / (troe_n - .14*(troe_c + logPr));
troePr = (troe_c + logPr) * troePr_den;
troe = 1.0 / (1.0 + troePr*troePr);
F = exp(M_LN10 * logFcent * troe);
dlogFcentdT = log10e/Fcent*( 
    -Fcent1/1e-30
    -Fcent2/1e+30
);
dlogFdcn_fac = 2.0 * logFcent * troe*troe * troePr * troePr_den;
dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
dlogFdn = dlogFdcn_fac * troePr;
dlogFdlogPr = dlogFdc;
dlogFdT = dlogFcentdT*(troe - 0.67*dlogFdc - 1.27*dlogFdn) + dlogFdlogPr * dlogPrdT;
// reverse
phi_r = (sc[13] * sc[13])*sc[15];
Kc = refC * exp(-2.000000*g_RT[13] + g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[15] + h_RT[16]) + (2.000000*h_RT[13] + h_RT[15]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[13] += 2 * q;// OH
wdot[16] -= q;// H2O2
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = q/alpha*(1.0/(Pr+1.0) + dlogFdlogPr);
if (consP) {
// d()/d[OH]
dqdci =  - k_r*2.000000*sc[13]*sc[15];
J[702] += 2 * dqdci;          // dwdot[OH]/d[OH]
J[705] -= dqdci;              // dwdot[H2O2]/d[OH]
// d()/d[H2O]
dqdci = (1 - 1)*dcdc_fac + k_f*sc[16] - k_r*sc[13]*sc[13];
J[808] += 2 * dqdci;          // dwdot[OH]/d[H2O]
J[811] -= dqdci;              // dwdot[H2O2]/d[H2O]
// d()/d[H2O2]
dqdci =  + k_f*sc[15];
J[861] += 2 * dqdci;          // dwdot[OH]/d[H2O2]
J[864] -= dqdci;              // dwdot[H2O2]/d[H2O2]
}
else {
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac;
dqdc[4] = dcdc_fac;
dqdc[5] = dcdc_fac;
dqdc[6] = dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = dcdc_fac;
dqdc[9] = dcdc_fac;
dqdc[10] = dcdc_fac;
dqdc[11] = dcdc_fac;
dqdc[12] = dcdc_fac;
dqdc[13] = dcdc_fac - k_r*2.000000*sc[13]*sc[15];
dqdc[14] = dcdc_fac;
dqdc[15] = dcdc_fac + k_f*sc[16] - k_r*sc[13]*sc[13];
dqdc[16] = dcdc_fac + k_f*sc[15];
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac;
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+13] += 2 * dqdc[k];
J[53*k+16] -= dqdc[k];
}
}
J[2769] += 2 * dqdT;// dwdot[OH]/dT
J[2772] -= dqdT;// dwdot[H2O2]/dT

// reaction 22: H2O2 (+M) <=> 2 OH (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 2.8 - 1)*sc[5] + ( 1.6 - 1)*sc[6] + ( 1.2 - 1)*sc[8] + ( 3.7 - 1)*sc[9] + ( 0 - 1)*sc[15] + ( 7.7 - 1)*sc[16] + ( 0.65 - 1)*sc[35] + ( 1.5 - 1)*sc[45];
// forward
phi_f = sc[16];
k_f = 2000000000000
            * exp(0.9 * tc[0] - (24531.8124579801) * invT);
dlnkfdT = 0.9 * invT + (24531.8124579801) * invT2;
// pressure-fall-off
k_0 = 2.49e+24 * exp(-2.3 * tc[0] - (24531.8124579801) * invT);
Pr = 1e-6 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -2.3 * invT + (24531.8124579801) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Troe form
logPr = log10(Pr);
Fcent1 = (1.-0.43)*exp(-T/1e-30);
Fcent2 = 0.43 * exp(-T/1e+30);
Fcent3 = 0.;
Fcent = Fcent1 + Fcent2 + Fcent3;
logFcent = log10(Fcent);
troe_c = -.4 - .67 * logFcent;
troe_n = .75 - 1.27 * logFcent;
troePr_den = 1.0 / (troe_n - .14*(troe_c + logPr));
troePr = (troe_c + logPr) * troePr_den;
troe = 1.0 / (1.0 + troePr*troePr);
F = exp(M_LN10 * logFcent * troe);
dlogFcentdT = log10e/Fcent*( 
    -Fcent1/1e-30
    -Fcent2/1e+30
);
dlogFdcn_fac = 2.0 * logFcent * troe*troe * troePr * troePr_den;
dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
dlogFdn = dlogFdcn_fac * troePr;
dlogFdlogPr = dlogFdc;
dlogFdT = dlogFcentdT*(troe - 0.67*dlogFdc - 1.27*dlogFdn) + dlogFdlogPr * dlogPrdT;
// reverse
phi_r = (sc[13] * sc[13]);
Kc = refC * exp(-2.000000*g_RT[13] + g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[16]) + (2.000000*h_RT[13]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[13] += 2 * q;// OH
wdot[16] -= q;// H2O2
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = q/alpha*(1.0/(Pr+1.0) + dlogFdlogPr);
if (consP) {
// d()/d[CO]
dqdci = (2.8 - 1)*dcdc_fac;
J[278] += 2 * dqdci;          // dwdot[OH]/d[CO]
J[281] -= dqdci;              // dwdot[H2O2]/d[CO]
// d()/d[CO2]
dqdci = (1.6 - 1)*dcdc_fac;
J[331] += 2 * dqdci;          // dwdot[OH]/d[CO2]
J[334] -= dqdci;              // dwdot[H2O2]/d[CO2]
// d()/d[O2]
dqdci = (1.2 - 1)*dcdc_fac;
J[437] += 2 * dqdci;          // dwdot[OH]/d[O2]
J[440] -= dqdci;              // dwdot[H2O2]/d[O2]
// d()/d[H2]
dqdci = (3.7 - 1)*dcdc_fac;
J[490] += 2 * dqdci;          // dwdot[OH]/d[H2]
J[493] -= dqdci;              // dwdot[H2O2]/d[H2]
// d()/d[OH]
dqdci =  - k_r*2.000000*sc[13];
J[702] += 2 * dqdci;          // dwdot[OH]/d[OH]
J[705] -= dqdci;              // dwdot[H2O2]/d[OH]
// d()/d[H2O]
dqdci = (0 - 1)*dcdc_fac;
J[808] += 2 * dqdci;          // dwdot[OH]/d[H2O]
J[811] -= dqdci;              // dwdot[H2O2]/d[H2O]
// d()/d[H2O2]
dqdci = (7.7 - 1)*dcdc_fac + k_f;
J[861] += 2 * dqdci;          // dwdot[OH]/d[H2O2]
J[864] -= dqdci;              // dwdot[H2O2]/d[H2O2]
// d()/d[HE]
dqdci = (0.65 - 1)*dcdc_fac;
J[1868] += 2 * dqdci;         // dwdot[OH]/d[HE]
J[1871] -= dqdci;             // dwdot[H2O2]/d[HE]
// d()/d[N2]
dqdci = (1.5 - 1)*dcdc_fac;
J[2398] += 2 * dqdci;         // dwdot[OH]/d[N2]
J[2401] -= dqdci;             // dwdot[H2O2]/d[N2]
}
else {
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac;
dqdc[4] = dcdc_fac;
dqdc[5] = 2.8*dcdc_fac;
dqdc[6] = 1.6*dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = 1.2*dcdc_fac;
dqdc[9] = 3.7*dcdc_fac;
dqdc[10] = dcdc_fac;
dqdc[11] = dcdc_fac;
dqdc[12] = dcdc_fac;
dqdc[13] = dcdc_fac - k_r*2.000000*sc[13];
dqdc[14] = dcdc_fac;
dqdc[16] = 7.7*dcdc_fac + k_f;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac;
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = 0.65*dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = 1.5*dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+13] += 2 * dqdc[k];
J[53*k+16] -= dqdc[k];
}
}
J[2769] += 2 * dqdT;// dwdot[OH]/dT
J[2772] -= dqdT;// dwdot[H2O2]/dT

// reaction 236: NO + OH (+M) <=> HONO (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + sc[8] + sc[9] + ( 10 - 1)*sc[15];
// forward
phi_f = sc[3]*sc[13];
k_f = 1990000
            * exp(-0.05 * tc[0] - (-362.819216045203) * invT);
dlnkfdT = -0.05 * invT + (-362.819216045203) * invT2;
// pressure-fall-off
k_0 = 5.08e+23 * exp(-2.51 * tc[0] - (-34.017446608399) * invT);
Pr = 1e-12 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -2.51 * invT + (-34.017446608399) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Troe form
logPr = log10(Pr);
Fcent1 = (1.-0.62)*exp(-T/10);
Fcent2 = 0.62 * exp(-T/100000);
Fcent3 = 0.;
Fcent = Fcent1 + Fcent2 + Fcent3;
logFcent = log10(Fcent);
troe_c = -.4 - .67 * logFcent;
troe_n = .75 - 1.27 * logFcent;
troePr_den = 1.0 / (troe_n - .14*(troe_c + logPr));
troePr = (troe_c + logPr) * troePr_den;
troe = 1.0 / (1.0 + troePr*troePr);
F = exp(M_LN10 * logFcent * troe);
dlogFcentdT = log10e/Fcent*( 
    -Fcent1/10
    -Fcent2/100000
);
dlogFdcn_fac = 2.0 * logFcent * troe*troe * troePr * troePr_den;
dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
dlogFdn = dlogFdcn_fac * troePr;
dlogFdlogPr = dlogFdc;
dlogFdT = dlogFcentdT*(troe - 0.67*dlogFdc - 1.27*dlogFdn) + dlogFdlogPr * dlogPrdT;
// reverse
phi_r = sc[23];
Kc = refCinv * exp(g_RT[3] + g_RT[13] - g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[13]) + (h_RT[23]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[3] -= q;// NO
wdot[13] -= q;// OH
wdot[23] += q;// HONO
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = q/alpha*(1.0/(Pr+1.0) + dlogFdlogPr);
if (consP) {
// d()/d[NO]
dqdci =  + k_f*sc[13];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[172] -= dqdci;              // dwdot[OH]/d[NO]
J[182] += dqdci;              // dwdot[HONO]/d[NO]
// d()/d[O2]
dqdci = (2 - 1)*dcdc_fac;
J[427] -= dqdci;              // dwdot[NO]/d[O2]
J[437] -= dqdci;              // dwdot[OH]/d[O2]
J[447] += dqdci;              // dwdot[HONO]/d[O2]
// d()/d[H2]
dqdci = (2 - 1)*dcdc_fac;
J[480] -= dqdci;              // dwdot[NO]/d[H2]
J[490] -= dqdci;              // dwdot[OH]/d[H2]
J[500] += dqdci;              // dwdot[HONO]/d[H2]
// d()/d[OH]
dqdci =  + k_f*sc[3];
J[692] -= dqdci;              // dwdot[NO]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[712] += dqdci;              // dwdot[HONO]/d[OH]
// d()/d[H2O]
dqdci = (10 - 1)*dcdc_fac;
J[798] -= dqdci;              // dwdot[NO]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[818] += dqdci;              // dwdot[HONO]/d[H2O]
// d()/d[HONO]
dqdci =  - k_r;
J[1222] -= dqdci;             // dwdot[NO]/d[HONO]
J[1232] -= dqdci;             // dwdot[OH]/d[HONO]
J[1242] += dqdci;             // dwdot[HONO]/d[HONO]
}
else {
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac + k_f*sc[13];
dqdc[4] = dcdc_fac;
dqdc[5] = dcdc_fac;
dqdc[6] = dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = 2*dcdc_fac;
dqdc[9] = 2*dcdc_fac;
dqdc[10] = dcdc_fac;
dqdc[11] = dcdc_fac;
dqdc[12] = dcdc_fac;
dqdc[13] = dcdc_fac + k_f*sc[3];
dqdc[14] = dcdc_fac;
dqdc[15] = 10*dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac;
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac - k_r;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+3] -= dqdc[k];
J[53*k+13] -= dqdc[k];
J[53*k+23] += dqdc[k];
}
}
J[2759] -= dqdT;// dwdot[NO]/dT
J[2769] -= dqdT;// dwdot[OH]/dT
J[2779] += dqdT;// dwdot[HONO]/dT

// reaction 243: NO2 + OH (+M) <=> HONO2 (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture;
// forward
phi_f = sc[13]*sc[19];
k_f = 24100000
           ;
dlnkfdT = 0.0;
// pressure-fall-off
k_0 = 6.42e+32 * exp(-5.49 * tc[0] - (1183.5655979727) * invT);
Pr = 1e-12 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -5.49 * invT + (1183.5655979727) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Troe form
logPr = log10(Pr);
Fcent1 = (1.-0.525)*exp(-T/1e-15);
Fcent2 = 0.525 * exp(-T/1e-15);
Fcent3 = exp(-1e+15 * invT);
Fcent = Fcent1 + Fcent2 + Fcent3;
logFcent = log10(Fcent);
troe_c = -.4 - .67 * logFcent;
troe_n = .75 - 1.27 * logFcent;
troePr_den = 1.0 / (troe_n - .14*(troe_c + logPr));
troePr = (troe_c + logPr) * troePr_den;
troe = 1.0 / (1.0 + troePr*troePr);
F = exp(M_LN10 * logFcent * troe);
dlogFcentdT = log10e/Fcent*( 
    -Fcent1/1e-15
    -Fcent2/1e-15
    + Fcent3*1e+15*invT2
);
dlogFdcn_fac = 2.0 * logFcent * troe*troe * troePr * troePr_den;
dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
dlogFdn = dlogFdcn_fac * troePr;
dlogFdlogPr = dlogFdc;
dlogFdT = dlogFcentdT*(troe - 0.67*dlogFdc - 1.27*dlogFdn) + dlogFdlogPr * dlogPrdT;
// reverse
phi_r = sc[44];
Kc = refCinv * exp(g_RT[13] + g_RT[19] - g_RT[44]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[19]) + (h_RT[44]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[13] -= q;// OH
wdot[19] -= q;// NO2
wdot[44] += q;// HONO2
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = q/alpha*(1.0/(Pr+1.0) + dlogFdlogPr);
if (consP) {
// d()/d[OH]
dqdci =  + k_f*sc[19];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[708] -= dqdci;              // dwdot[NO2]/d[OH]
J[733] += dqdci;              // dwdot[HONO2]/d[OH]
// d()/d[NO2]
dqdci =  + k_f*sc[13];
J[1020] -= dqdci;             // dwdot[OH]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1051] += dqdci;             // dwdot[HONO2]/d[NO2]
// d()/d[HONO2]
dqdci =  - k_r;
J[2345] -= dqdci;             // dwdot[OH]/d[HONO2]
J[2351] -= dqdci;             // dwdot[NO2]/d[HONO2]
J[2376] += dqdci;             // dwdot[HONO2]/d[HONO2]
}
else {
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac;
dqdc[4] = dcdc_fac;
dqdc[5] = dcdc_fac;
dqdc[6] = dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = dcdc_fac;
dqdc[9] = dcdc_fac;
dqdc[10] = dcdc_fac;
dqdc[11] = dcdc_fac;
dqdc[12] = dcdc_fac;
dqdc[13] = dcdc_fac + k_f*sc[19];
dqdc[14] = dcdc_fac;
dqdc[15] = dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac + k_f*sc[13];
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac - k_r;
dqdc[45] = dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+13] -= dqdc[k];
J[53*k+19] -= dqdc[k];
J[53*k+44] += dqdc[k];
}
}
J[2769] -= dqdT;// dwdot[OH]/dT
J[2775] -= dqdT;// dwdot[NO2]/dT
J[2800] += dqdT;// dwdot[HONO2]/dT

// reaction 28: CO + O (+M) <=> CO2 (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.75 - 1)*sc[5] + ( 3.6 - 1)*sc[6] + sc[9] + ( 0.7 - 1)*sc[10] + ( 12 - 1)*sc[15] + ( 0.7 - 1)*sc[35];
// forward
phi_f = sc[5]*sc[12];
k_f = 13620
            * exp(- (1199.66853127845) * invT);
dlnkfdT = (1199.66853127845) * invT2;
// pressure-fall-off
k_0 = 1.173e+24 * exp(-2.79 * tc[0] - (2108.98104638758) * invT);
Pr = 1e-12 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -2.79 * invT + (2108.98104638758) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Lindemann form
F = 1.0;
dlogFdlogPr = 0.0;
dlogFdT = 0.0;
// reverse
phi_r = sc[6];
Kc = refCinv * exp(g_RT[5] - g_RT[6] + g_RT[12]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[5] + h_RT[12]) + (h_RT[6]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[5] -= q;// CO
wdot[6] += q;// CO2
wdot[12] -= q;// O
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = q/alpha*(1.0/(Pr+1.0) + dlogFdlogPr);
if (consP) {
// d()/d[CO]
dqdci = (1.75 - 1)*dcdc_fac + k_f*sc[12];
J[270] -= dqdci;              // dwdot[CO]/d[CO]
J[271] += dqdci;              // dwdot[CO2]/d[CO]
J[277] -= dqdci;              // dwdot[O]/d[CO]
// d()/d[CO2]
dqdci = (3.6 - 1)*dcdc_fac - k_r;
J[323] -= dqdci;              // dwdot[CO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[330] -= dqdci;              // dwdot[O]/d[CO2]
// d()/d[H2]
dqdci = (2 - 1)*dcdc_fac;
J[482] -= dqdci;              // dwdot[CO]/d[H2]
J[483] += dqdci;              // dwdot[CO2]/d[H2]
J[489] -= dqdci;              // dwdot[O]/d[H2]
// d()/d[AR]
dqdci = (0.7 - 1)*dcdc_fac;
J[535] -= dqdci;              // dwdot[CO]/d[AR]
J[536] += dqdci;              // dwdot[CO2]/d[AR]
J[542] -= dqdci;              // dwdot[O]/d[AR]
// d()/d[O]
dqdci =  + k_f*sc[5];
J[641] -= dqdci;              // dwdot[CO]/d[O]
J[642] += dqdci;              // dwdot[CO2]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
// d()/d[H2O]
dqdci = (12 - 1)*dcdc_fac;
J[800] -= dqdci;              // dwdot[CO]/d[H2O]
J[801] += dqdci;              // dwdot[CO2]/d[H2O]
J[807] -= dqdci;              // dwdot[O]/d[H2O]
// d()/d[HE]
dqdci = (0.7 - 1)*dcdc_fac;
J[1860] -= dqdci;             // dwdot[CO]/d[HE]
J[1861] += dqdci;             // dwdot[CO2]/d[HE]
J[1867] -= dqdci;             // dwdot[O]/d[HE]
}
else {
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac;
dqdc[4] = dcdc_fac;
dqdc[5] = 1.75*dcdc_fac + k_f*sc[12];
dqdc[6] = 3.6*dcdc_fac - k_r;
dqdc[7] = dcdc_fac;
dqdc[8] = dcdc_fac;
dqdc[9] = 2*dcdc_fac;
dqdc[10] = 0.7*dcdc_fac;
dqdc[11] = dcdc_fac;
dqdc[12] = dcdc_fac + k_f*sc[5];
dqdc[13] = dcdc_fac;
dqdc[14] = dcdc_fac;
dqdc[15] = 12*dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac;
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = 0.7*dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+5] -= dqdc[k];
J[53*k+6] += dqdc[k];
J[53*k+12] -= dqdc[k];
}
}
J[2761] -= dqdT;// dwdot[CO]/dT
J[2762] += dqdT;// dwdot[CO2]/dT
J[2768] -= dqdT;// dwdot[O]/dT

// reaction 150: N2O (+M) <=> N2 + O (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 3 - 1)*sc[3] + ( 3.5 - 1)*sc[4] + ( 1.4 - 1)*sc[8] + ( 12 - 1)*sc[15] + ( 1.7 - 1)*sc[45];
// forward
phi_f = sc[4];
k_f = 99000000000
            * exp(- (29166.4379500416) * invT);
dlnkfdT = (29166.4379500416) * invT2;
// pressure-fall-off
k_0 = 662000000000000 * exp(-(28934.9582837714) * invT);
Pr = 1e-6 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = (28934.9582837714) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Lindemann form
F = 1.0;
dlogFdlogPr = 0.0;
dlogFdT = 0.0;
// reverse
phi_r = sc[12]*sc[45];
Kc = refC * exp(g_RT[4] - g_RT[12] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4]) + (h_RT[12] + h_RT[45]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[4] -= q;// N2O
wdot[12] += q;// O
wdot[45] += q;// N2
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = q/alpha*(1.0/(Pr+1.0) + dlogFdlogPr);
if (consP) {
// d()/d[NO]
dqdci = (3 - 1)*dcdc_fac;
J[163] -= dqdci;              // dwdot[N2O]/d[NO]
J[171] += dqdci;              // dwdot[O]/d[NO]
J[204] += dqdci;              // dwdot[N2]/d[NO]
// d()/d[N2O]
dqdci = (3.5 - 1)*dcdc_fac + k_f;
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[224] += dqdci;              // dwdot[O]/d[N2O]
J[257] += dqdci;              // dwdot[N2]/d[N2O]
// d()/d[O2]
dqdci = (1.4 - 1)*dcdc_fac;
J[428] -= dqdci;              // dwdot[N2O]/d[O2]
J[436] += dqdci;              // dwdot[O]/d[O2]
J[469] += dqdci;              // dwdot[N2]/d[O2]
// d()/d[O]
dqdci =  - k_r*sc[45];
J[640] -= dqdci;              // dwdot[N2O]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[681] += dqdci;              // dwdot[N2]/d[O]
// d()/d[H2O]
dqdci = (12 - 1)*dcdc_fac;
J[799] -= dqdci;              // dwdot[N2O]/d[H2O]
J[807] += dqdci;              // dwdot[O]/d[H2O]
J[840] += dqdci;              // dwdot[N2]/d[H2O]
// d()/d[N2]
dqdci = (1.7 - 1)*dcdc_fac - k_r*sc[12];
J[2389] -= dqdci;             // dwdot[N2O]/d[N2]
J[2397] += dqdci;             // dwdot[O]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
}
else {
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = 3*dcdc_fac;
dqdc[4] = 3.5*dcdc_fac + k_f;
dqdc[5] = dcdc_fac;
dqdc[6] = dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = 1.4*dcdc_fac;
dqdc[9] = dcdc_fac;
dqdc[10] = dcdc_fac;
dqdc[11] = dcdc_fac;
dqdc[12] = dcdc_fac - k_r*sc[45];
dqdc[13] = dcdc_fac;
dqdc[14] = dcdc_fac;
dqdc[15] = 12*dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac;
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = 1.7*dcdc_fac - k_r*sc[12];
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+4] -= dqdc[k];
J[53*k+12] += dqdc[k];
J[53*k+45] += dqdc[k];
}
}
J[2760] -= dqdT;// dwdot[N2O]/dT
J[2768] += dqdT;// dwdot[O]/dT
J[2801] += dqdT;// dwdot[N2]/dT

// reaction 197: NO2 + O (+M) <=> NO3 (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.5 - 1)*sc[8] + ( 10 - 1)*sc[15] + ( 1.5 - 1)*sc[45];
// forward
phi_f = sc[12]*sc[19];
k_f = 13000000
           ;
dlnkfdT = 0.0;
// pressure-fall-off
k_0 = 1e+28 * exp(-4.08 * tc[0] - (1242.94516453766) * invT);
Pr = 1e-12 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -4.08 * invT + (1242.94516453766) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Lindemann form
F = 1.0;
dlogFdlogPr = 0.0;
dlogFdT = 0.0;
// reverse
phi_r = sc[43];
Kc = refCinv * exp(g_RT[12] + g_RT[19] - g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[19]) + (h_RT[43]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[12] -= q;// O
wdot[19] -= q;// NO2
wdot[43] += q;// NO3
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = q/alpha*(1.0/(Pr+1.0) + dlogFdlogPr);
if (consP) {
// d()/d[O2]
dqdci = (1.5 - 1)*dcdc_fac;
J[436] -= dqdci;              // dwdot[O]/d[O2]
J[443] -= dqdci;              // dwdot[NO2]/d[O2]
J[467] += dqdci;              // dwdot[NO3]/d[O2]
// d()/d[O]
dqdci =  + k_f*sc[19];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[655] -= dqdci;              // dwdot[NO2]/d[O]
J[679] += dqdci;              // dwdot[NO3]/d[O]
// d()/d[H2O]
dqdci = (10 - 1)*dcdc_fac;
J[807] -= dqdci;              // dwdot[O]/d[H2O]
J[814] -= dqdci;              // dwdot[NO2]/d[H2O]
J[838] += dqdci;              // dwdot[NO3]/d[H2O]
// d()/d[NO2]
dqdci =  + k_f*sc[12];
J[1019] -= dqdci;             // dwdot[O]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1050] += dqdci;             // dwdot[NO3]/d[NO2]
// d()/d[NO3]
dqdci =  - k_r;
J[2291] -= dqdci;             // dwdot[O]/d[NO3]
J[2298] -= dqdci;             // dwdot[NO2]/d[NO3]
J[2322] += dqdci;             // dwdot[NO3]/d[NO3]
// d()/d[N2]
dqdci = (1.5 - 1)*dcdc_fac;
J[2397] -= dqdci;             // dwdot[O]/d[N2]
J[2404] -= dqdci;             // dwdot[NO2]/d[N2]
J[2428] += dqdci;             // dwdot[NO3]/d[N2]
}
else {
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac;
dqdc[4] = dcdc_fac;
dqdc[5] = dcdc_fac;
dqdc[6] = dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = 1.5*dcdc_fac;
dqdc[9] = dcdc_fac;
dqdc[10] = dcdc_fac;
dqdc[11] = dcdc_fac;
dqdc[12] = dcdc_fac + k_f*sc[19];
dqdc[13] = dcdc_fac;
dqdc[14] = dcdc_fac;
dqdc[15] = 10*dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = dcdc_fac + k_f*sc[12];
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = dcdc_fac;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac - k_r;
dqdc[44] = dcdc_fac;
dqdc[45] = 1.5*dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+12] -= dqdc[k];
J[53*k+19] -= dqdc[k];
J[53*k+43] += dqdc[k];
}
}
J[2768] -= dqdT;// dwdot[O]/dT
J[2775] -= dqdT;// dwdot[NO2]/dT
J[2799] += dqdT;// dwdot[NO3]/dT

// reaction 269: N2O4 (+M) <=> 2 NO2 (+M)
// a third-body and pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 0.8 - 1)*sc[10] + sc[19] + sc[37];
// forward
phi_f = sc[37];
k_f = 4.05e+18
            * exp(-1.1 * tc[0] - (6461.3019889326) * invT);
dlnkfdT = -1.1 * invT + (6461.3019889326) * invT2;
// pressure-fall-off
k_0 = 1.96e+28 * exp(-3.8 * tc[0] - (6461.3019889326) * invT);
Pr = 1e-6 * alpha / k_f * k_0;
fPr = Pr / (1.0+Pr);
dlnk0dT = -3.8 * invT + (6461.3019889326) * invT2;
dlogPrdT = log10e*(dlnk0dT - dlnkfdT);
dlogfPrdT = dlogPrdT / (1.0+Pr);
// Lindemann form
F = 1.0;
dlogFdlogPr = 0.0;
dlogFdT = 0.0;
// reverse
phi_r = (sc[19] * sc[19]);
Kc = refC * exp(-2.000000*g_RT[19] + g_RT[37]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[37]) + (2.000000*h_RT[19]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
Corr = fPr * F;
q = Corr * q_nocor;
dlnCorrdT = ln10*(dlogfPrdT + dlogFdT);
dqdT = Corr *(dlnkfdT*k_f*phi_f - dkrdT*phi_r) + dlnCorrdT*q;
// update wdot
wdot[19] += 2 * q;// NO2
wdot[37] -= q;// N2O4
// for convenience
k_f *= Corr;
k_r *= Corr;
dcdc_fac = q/alpha*(1.0/(Pr+1.0) + dlogFdlogPr);
if (consP) {
// d()/d[AR]
dqdci = (0.8 - 1)*dcdc_fac;
J[549] += 2 * dqdci;          // dwdot[NO2]/d[AR]
J[567] -= dqdci;              // dwdot[N2O4]/d[AR]
// d()/d[NO2]
dqdci = (2 - 1)*dcdc_fac - k_r*2.000000*sc[19];
J[1026] += 2 * dqdci;         // dwdot[NO2]/d[NO2]
J[1044] -= dqdci;             // dwdot[N2O4]/d[NO2]
// d()/d[N2O4]
dqdci = (2 - 1)*dcdc_fac + k_f;
J[1980] += 2 * dqdci;         // dwdot[NO2]/d[N2O4]
J[1998] -= dqdci;             // dwdot[N2O4]/d[N2O4]
}
else {
dqdc[0] = dcdc_fac;
dqdc[1] = dcdc_fac;
dqdc[2] = dcdc_fac;
dqdc[3] = dcdc_fac;
dqdc[4] = dcdc_fac;
dqdc[5] = dcdc_fac;
dqdc[6] = dcdc_fac;
dqdc[7] = dcdc_fac;
dqdc[8] = dcdc_fac;
dqdc[9] = dcdc_fac;
dqdc[10] = 0.8*dcdc_fac;
dqdc[11] = dcdc_fac;
dqdc[12] = dcdc_fac;
dqdc[13] = dcdc_fac;
dqdc[14] = dcdc_fac;
dqdc[15] = dcdc_fac;
dqdc[16] = dcdc_fac;
dqdc[17] = dcdc_fac;
dqdc[18] = dcdc_fac;
dqdc[19] = 2*dcdc_fac - k_r*2.000000*sc[19];
dqdc[20] = dcdc_fac;
dqdc[21] = dcdc_fac;
dqdc[22] = dcdc_fac;
dqdc[23] = dcdc_fac;
dqdc[24] = dcdc_fac;
dqdc[25] = dcdc_fac;
dqdc[26] = dcdc_fac;
dqdc[27] = dcdc_fac;
dqdc[28] = dcdc_fac;
dqdc[29] = dcdc_fac;
dqdc[30] = dcdc_fac;
dqdc[31] = dcdc_fac;
dqdc[32] = dcdc_fac;
dqdc[33] = dcdc_fac;
dqdc[34] = dcdc_fac;
dqdc[35] = dcdc_fac;
dqdc[36] = dcdc_fac;
dqdc[37] = 2*dcdc_fac + k_f;
dqdc[38] = dcdc_fac;
dqdc[39] = dcdc_fac;
dqdc[40] = dcdc_fac;
dqdc[41] = dcdc_fac;
dqdc[42] = dcdc_fac;
dqdc[43] = dcdc_fac;
dqdc[44] = dcdc_fac;
dqdc[45] = dcdc_fac;
dqdc[46] = dcdc_fac;
dqdc[47] = dcdc_fac;
dqdc[48] = dcdc_fac;
dqdc[49] = dcdc_fac;
dqdc[50] = dcdc_fac;
dqdc[51] = dcdc_fac;
for (int k=0; k<52; k++) {
J[53*k+19] += 2 * dqdc[k];
J[53*k+37] -= dqdc[k];
}
}
J[2775] += 2 * dqdT;// dwdot[NO2]/dT
J[2793] -= dqdT;// dwdot[N2O4]/dT

// reaction 9: H2 + M <=> 2 H + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.9 - 1)*sc[5] + ( 3.8 - 1)*sc[6] + ( 2.5 - 1)*sc[9] + ( 12 - 1)*sc[15] + ( 0.83 - 1)*sc[35] + sc[46] + ( 3 - 1)*sc[47];
// forward
phi_f = sc[9];
k_f = 45770000000000
            * exp(-1.4 * tc[0] - (52535.8199100127) * invT);
dlnkfdT = -1.4 * invT + (52535.8199100127) * invT2;
// reverse
phi_r = (sc[11] * sc[11]);
Kc = refC * exp(g_RT[9] - 2.000000*g_RT[11]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[9]) + (2.000000*h_RT[11]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] -= q;// H2
wdot[11] += 2 * q;// H
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[CO]
dqdci = (1.9 - 1)*q_nocor;
J[274] -= dqdci;              // dwdot[H2]/d[CO]
J[276] += 2 * dqdci;          // dwdot[H]/d[CO]
// d()/d[CO2]
dqdci = (3.8 - 1)*q_nocor;
J[327] -= dqdci;              // dwdot[H2]/d[CO2]
J[329] += 2 * dqdci;          // dwdot[H]/d[CO2]
// d()/d[H2]
dqdci = (2.5 - 1)*q_nocor + k_f;
J[486] -= dqdci;              // dwdot[H2]/d[H2]
J[488] += 2 * dqdci;          // dwdot[H]/d[H2]
// d()/d[H]
dqdci =  - k_r*2.000000*sc[11];
J[592] -= dqdci;              // dwdot[H2]/d[H]
J[594] += 2 * dqdci;          // dwdot[H]/d[H]
// d()/d[H2O]
dqdci = (12 - 1)*q_nocor;
J[804] -= dqdci;              // dwdot[H2]/d[H2O]
J[806] += 2 * dqdci;          // dwdot[H]/d[H2O]
// d()/d[HE]
dqdci = (0.83 - 1)*q_nocor;
J[1864] -= dqdci;             // dwdot[H2]/d[HE]
J[1866] += 2 * dqdci;         // dwdot[H]/d[HE]
// d()/d[CH4]
dqdci = (2 - 1)*q_nocor;
J[2447] -= dqdci;             // dwdot[H2]/d[CH4]
J[2449] += 2 * dqdci;         // dwdot[H]/d[CH4]
// d()/d[C2H6]
dqdci = (3 - 1)*q_nocor;
J[2500] -= dqdci;             // dwdot[H2]/d[C2H6]
J[2502] += 2 * dqdci;         // dwdot[H]/d[C2H6]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = 1.9*q_nocor;
dqdc[6] = 3.8*q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = 2.5*q_nocor + k_f;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor - k_r*2.000000*sc[11];
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 12*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = 0.83*q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = 2*q_nocor;
dqdc[47] = 3*q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+9] -= dqdc[k];
J[53*k+11] += 2 * dqdc[k];
}
}
J[2765] -= dqdT;// dwdot[H2]/dT
J[2767] += 2 * dqdT;// dwdot[H]/dT

// reaction 10: 2 O + M <=> O2 + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.9 - 1)*sc[5] + ( 3.8 - 1)*sc[6] + ( 2.5 - 1)*sc[9] + ( 0.83 - 1)*sc[10] + ( 12 - 1)*sc[15] + ( 0.83 - 1)*sc[35] + sc[46] + ( 3 - 1)*sc[47];
// forward
phi_f = (sc[12] * sc[12]);
k_f = 6165
            * exp(-0.5 * tc[0]);
dlnkfdT = -0.5 * invT;
// reverse
phi_r = sc[8];
Kc = refCinv * exp(-g_RT[8] + 2.000000*g_RT[12]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[12]) + (h_RT[8]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[12] -= 2 * q;// O
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[CO]
dqdci = (1.9 - 1)*q_nocor;
J[273] += dqdci;              // dwdot[O2]/d[CO]
J[277] += -2 * dqdci;         // dwdot[O]/d[CO]
// d()/d[CO2]
dqdci = (3.8 - 1)*q_nocor;
J[326] += dqdci;              // dwdot[O2]/d[CO2]
J[330] += -2 * dqdci;         // dwdot[O]/d[CO2]
// d()/d[O2]
dqdci =  - k_r;
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[436] += -2 * dqdci;         // dwdot[O]/d[O2]
// d()/d[H2]
dqdci = (2.5 - 1)*q_nocor;
J[485] += dqdci;              // dwdot[O2]/d[H2]
J[489] += -2 * dqdci;         // dwdot[O]/d[H2]
// d()/d[AR]
dqdci = (0.83 - 1)*q_nocor;
J[538] += dqdci;              // dwdot[O2]/d[AR]
J[542] += -2 * dqdci;         // dwdot[O]/d[AR]
// d()/d[O]
dqdci =  + k_f*2.000000*sc[12];
J[644] += dqdci;              // dwdot[O2]/d[O]
J[648] += -2 * dqdci;         // dwdot[O]/d[O]
// d()/d[H2O]
dqdci = (12 - 1)*q_nocor;
J[803] += dqdci;              // dwdot[O2]/d[H2O]
J[807] += -2 * dqdci;         // dwdot[O]/d[H2O]
// d()/d[HE]
dqdci = (0.83 - 1)*q_nocor;
J[1863] += dqdci;             // dwdot[O2]/d[HE]
J[1867] += -2 * dqdci;        // dwdot[O]/d[HE]
// d()/d[CH4]
dqdci = (2 - 1)*q_nocor;
J[2446] += dqdci;             // dwdot[O2]/d[CH4]
J[2450] += -2 * dqdci;        // dwdot[O]/d[CH4]
// d()/d[C2H6]
dqdci = (3 - 1)*q_nocor;
J[2499] += dqdci;             // dwdot[O2]/d[C2H6]
J[2503] += -2 * dqdci;        // dwdot[O]/d[C2H6]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = 1.9*q_nocor;
dqdc[6] = 3.8*q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor - k_r;
dqdc[9] = 2.5*q_nocor;
dqdc[10] = 0.83*q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor + k_f*2.000000*sc[12];
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 12*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = 0.83*q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = 2*q_nocor;
dqdc[47] = 3*q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+8] += dqdc[k];
J[53*k+12] += -2 * dqdc[k];
}
}
J[2764] += dqdT;// dwdot[O2]/dT
J[2768] += -2 * dqdT;// dwdot[O]/dT

// reaction 11: H + O + M <=> OH + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.5 - 1)*sc[5] + sc[6] + ( 2.5 - 1)*sc[9] + ( 0.75 - 1)*sc[10] + ( 12 - 1)*sc[15] + ( 0.75 - 1)*sc[35] + sc[46] + ( 3 - 1)*sc[47];
// forward
phi_f = sc[11]*sc[12];
k_f = 4714000
            * exp(-1 * tc[0]);
dlnkfdT = -1 * invT;
// reverse
phi_r = sc[13];
Kc = refCinv * exp(g_RT[11] + g_RT[12] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[12]) + (h_RT[13]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[12] -= q;// O
wdot[13] += q;// OH
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[CO]
dqdci = (1.5 - 1)*q_nocor;
J[276] -= dqdci;              // dwdot[H]/d[CO]
J[277] -= dqdci;              // dwdot[O]/d[CO]
J[278] += dqdci;              // dwdot[OH]/d[CO]
// d()/d[CO2]
dqdci = (2 - 1)*q_nocor;
J[329] -= dqdci;              // dwdot[H]/d[CO2]
J[330] -= dqdci;              // dwdot[O]/d[CO2]
J[331] += dqdci;              // dwdot[OH]/d[CO2]
// d()/d[H2]
dqdci = (2.5 - 1)*q_nocor;
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[489] -= dqdci;              // dwdot[O]/d[H2]
J[490] += dqdci;              // dwdot[OH]/d[H2]
// d()/d[AR]
dqdci = (0.75 - 1)*q_nocor;
J[541] -= dqdci;              // dwdot[H]/d[AR]
J[542] -= dqdci;              // dwdot[O]/d[AR]
J[543] += dqdci;              // dwdot[OH]/d[AR]
// d()/d[H]
dqdci =  + k_f*sc[12];
J[594] -= dqdci;              // dwdot[H]/d[H]
J[595] -= dqdci;              // dwdot[O]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
// d()/d[O]
dqdci =  + k_f*sc[11];
J[647] -= dqdci;              // dwdot[H]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
// d()/d[OH]
dqdci =  - k_r;
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/d[H2O]
dqdci = (12 - 1)*q_nocor;
J[806] -= dqdci;              // dwdot[H]/d[H2O]
J[807] -= dqdci;              // dwdot[O]/d[H2O]
J[808] += dqdci;              // dwdot[OH]/d[H2O]
// d()/d[HE]
dqdci = (0.75 - 1)*q_nocor;
J[1866] -= dqdci;             // dwdot[H]/d[HE]
J[1867] -= dqdci;             // dwdot[O]/d[HE]
J[1868] += dqdci;             // dwdot[OH]/d[HE]
// d()/d[CH4]
dqdci = (2 - 1)*q_nocor;
J[2449] -= dqdci;             // dwdot[H]/d[CH4]
J[2450] -= dqdci;             // dwdot[O]/d[CH4]
J[2451] += dqdci;             // dwdot[OH]/d[CH4]
// d()/d[C2H6]
dqdci = (3 - 1)*q_nocor;
J[2502] -= dqdci;             // dwdot[H]/d[C2H6]
J[2503] -= dqdci;             // dwdot[O]/d[C2H6]
J[2504] += dqdci;             // dwdot[OH]/d[C2H6]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = 1.5*q_nocor;
dqdc[6] = 2*q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = 2.5*q_nocor;
dqdc[10] = 0.75*q_nocor;
dqdc[11] = q_nocor + k_f*sc[12];
dqdc[12] = q_nocor + k_f*sc[11];
dqdc[13] = q_nocor - k_r;
dqdc[14] = q_nocor;
dqdc[15] = 12*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = 0.75*q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = 2*q_nocor;
dqdc[47] = 3*q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+11] -= dqdc[k];
J[53*k+12] -= dqdc[k];
J[53*k+13] += dqdc[k];
}
}
J[2767] -= dqdT;// dwdot[H]/dT
J[2768] -= dqdT;// dwdot[O]/dT
J[2769] += dqdT;// dwdot[OH]/dT

// reaction 12: H + OH + M <=> H2O + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 0.73 - 1)*sc[9] + ( 0.38 - 1)*sc[10] + ( 3.65 - 1)*sc[15] + sc[46] + ( 3 - 1)*sc[47];
// forward
phi_f = sc[11]*sc[13];
k_f = 35000000000
            * exp(-2 * tc[0]);
dlnkfdT = -2 * invT;
// reverse
phi_r = sc[15];
Kc = refCinv * exp(g_RT[11] + g_RT[13] - g_RT[15]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[13]) + (h_RT[15]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[13] -= q;// OH
wdot[15] += q;// H2O
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[H2]
dqdci = (0.73 - 1)*q_nocor;
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[490] -= dqdci;              // dwdot[OH]/d[H2]
J[492] += dqdci;              // dwdot[H2O]/d[H2]
// d()/d[AR]
dqdci = (0.38 - 1)*q_nocor;
J[541] -= dqdci;              // dwdot[H]/d[AR]
J[543] -= dqdci;              // dwdot[OH]/d[AR]
J[545] += dqdci;              // dwdot[H2O]/d[AR]
// d()/d[H]
dqdci =  + k_f*sc[13];
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
J[598] += dqdci;              // dwdot[H2O]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[11];
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
// d()/d[H2O]
dqdci = (3.65 - 1)*q_nocor - k_r;
J[806] -= dqdci;              // dwdot[H]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
// d()/d[CH4]
dqdci = (2 - 1)*q_nocor;
J[2449] -= dqdci;             // dwdot[H]/d[CH4]
J[2451] -= dqdci;             // dwdot[OH]/d[CH4]
J[2453] += dqdci;             // dwdot[H2O]/d[CH4]
// d()/d[C2H6]
dqdci = (3 - 1)*q_nocor;
J[2502] -= dqdci;             // dwdot[H]/d[C2H6]
J[2504] -= dqdci;             // dwdot[OH]/d[C2H6]
J[2506] += dqdci;             // dwdot[H2O]/d[C2H6]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = 0.73*q_nocor;
dqdc[10] = 0.38*q_nocor;
dqdc[11] = q_nocor + k_f*sc[13];
dqdc[12] = q_nocor;
dqdc[13] = q_nocor + k_f*sc[11];
dqdc[14] = q_nocor;
dqdc[15] = 3.65*q_nocor - k_r;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = 2*q_nocor;
dqdc[47] = 3*q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+11] -= dqdc[k];
J[53*k+13] -= dqdc[k];
J[53*k+15] += dqdc[k];
}
}
J[2767] -= dqdT;// dwdot[H]/dT
J[2769] -= dqdT;// dwdot[OH]/dT
J[2771] += dqdT;// dwdot[H2O]/dT

// reaction 33: HCO + M <=> CO + H + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.5 - 1)*sc[5] + sc[6] + sc[9] + ( 12 - 1)*sc[15] + sc[46] + ( 3 - 1)*sc[47];
// forward
phi_f = sc[17];
k_f = 570000
            * exp(0.66 * tc[0] - (7482.83182051618) * invT);
dlnkfdT = 0.66 * invT + (7482.83182051618) * invT2;
// reverse
phi_r = sc[5]*sc[11];
Kc = refC * exp(-g_RT[5] - g_RT[11] + g_RT[17]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[17]) + (h_RT[5] + h_RT[11]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[11] += q;// H
wdot[17] -= q;// HCO
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[CO]
dqdci = (1.5 - 1)*q_nocor - k_r*sc[11];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[276] += dqdci;              // dwdot[H]/d[CO]
J[282] -= dqdci;              // dwdot[HCO]/d[CO]
// d()/d[CO2]
dqdci = (2 - 1)*q_nocor;
J[323] += dqdci;              // dwdot[CO]/d[CO2]
J[329] += dqdci;              // dwdot[H]/d[CO2]
J[335] -= dqdci;              // dwdot[HCO]/d[CO2]
// d()/d[H2]
dqdci = (2 - 1)*q_nocor;
J[482] += dqdci;              // dwdot[CO]/d[H2]
J[488] += dqdci;              // dwdot[H]/d[H2]
J[494] -= dqdci;              // dwdot[HCO]/d[H2]
// d()/d[H]
dqdci =  - k_r*sc[5];
J[588] += dqdci;              // dwdot[CO]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[600] -= dqdci;              // dwdot[HCO]/d[H]
// d()/d[H2O]
dqdci = (12 - 1)*q_nocor;
J[800] += dqdci;              // dwdot[CO]/d[H2O]
J[806] += dqdci;              // dwdot[H]/d[H2O]
J[812] -= dqdci;              // dwdot[HCO]/d[H2O]
// d()/d[HCO]
dqdci =  + k_f;
J[906] += dqdci;              // dwdot[CO]/d[HCO]
J[912] += dqdci;              // dwdot[H]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
// d()/d[CH4]
dqdci = (2 - 1)*q_nocor;
J[2443] += dqdci;             // dwdot[CO]/d[CH4]
J[2449] += dqdci;             // dwdot[H]/d[CH4]
J[2455] -= dqdci;             // dwdot[HCO]/d[CH4]
// d()/d[C2H6]
dqdci = (3 - 1)*q_nocor;
J[2496] += dqdci;             // dwdot[CO]/d[C2H6]
J[2502] += dqdci;             // dwdot[H]/d[C2H6]
J[2508] -= dqdci;             // dwdot[HCO]/d[C2H6]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = 1.5*q_nocor - k_r*sc[11];
dqdc[6] = 2*q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = 2*q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor - k_r*sc[5];
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 12*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor + k_f;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = 2*q_nocor;
dqdc[47] = 3*q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+5] += dqdc[k];
J[53*k+11] += dqdc[k];
J[53*k+17] -= dqdc[k];
}
}
J[2761] += dqdT;// dwdot[CO]/dT
J[2767] += dqdT;// dwdot[H]/dT
J[2773] -= dqdT;// dwdot[HCO]/dT

// reaction 43: HCN + M <=> CN + H + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.5 - 1)*sc[8] + ( 10 - 1)*sc[15] + ( 0 - 1)*sc[45];
// forward
phi_f = sc[1];
k_f = 3.4e+29
            * exp(-5.13 * tc[0] - (66927.8165520277) * invT);
dlnkfdT = -5.13 * invT + (66927.8165520277) * invT2;
// reverse
phi_r = sc[11]*sc[29];
Kc = refC * exp(g_RT[1] - g_RT[11] - g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1]) + (h_RT[11] + h_RT[29]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[11] += q;// H
wdot[29] += q;// CN
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[HCN]
dqdci =  + k_f;
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[64] += dqdci;               // dwdot[H]/d[HCN]
J[82] += dqdci;               // dwdot[CN]/d[HCN]
// d()/d[O2]
dqdci = (1.5 - 1)*q_nocor;
J[425] -= dqdci;              // dwdot[HCN]/d[O2]
J[435] += dqdci;              // dwdot[H]/d[O2]
J[453] += dqdci;              // dwdot[CN]/d[O2]
// d()/d[H]
dqdci =  - k_r*sc[29];
J[584] -= dqdci;              // dwdot[HCN]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[612] += dqdci;              // dwdot[CN]/d[H]
// d()/d[H2O]
dqdci = (10 - 1)*q_nocor;
J[796] -= dqdci;              // dwdot[HCN]/d[H2O]
J[806] += dqdci;              // dwdot[H]/d[H2O]
J[824] += dqdci;              // dwdot[CN]/d[H2O]
// d()/d[CN]
dqdci =  - k_r*sc[11];
J[1538] -= dqdci;             // dwdot[HCN]/d[CN]
J[1548] += dqdci;             // dwdot[H]/d[CN]
J[1566] += dqdci;             // dwdot[CN]/d[CN]
// d()/d[N2]
dqdci = (0 - 1)*q_nocor;
J[2386] -= dqdci;             // dwdot[HCN]/d[N2]
J[2396] += dqdci;             // dwdot[H]/d[N2]
J[2414] += dqdci;             // dwdot[CN]/d[N2]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor + k_f;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = 1.5*q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor - k_r*sc[29];
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 10*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor - k_r*sc[11];
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+1] -= dqdc[k];
J[53*k+11] += dqdc[k];
J[53*k+29] += dqdc[k];
}
}
J[2757] -= dqdT;// dwdot[HCN]/dT
J[2767] += dqdT;// dwdot[H]/dT
J[2785] += dqdT;// dwdot[CN]/dT

// reaction 44: HCN + N2 <=> CN + H + N2
// a third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[45];
k_f = 3.6e+20
            * exp(-2.6 * tc[0] - (62846.7293923514) * invT);
dlnkfdT = -2.6 * invT + (62846.7293923514) * invT2;
// reverse
phi_r = sc[11]*sc[29]*sc[45];
Kc = refC * exp(g_RT[1] - g_RT[11] - g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[45]) + (h_RT[11] + h_RT[29] + h_RT[45]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[11] += q;// H
wdot[29] += q;// CN
// d()/d[HCN]
dqdci =  + k_f*sc[45];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[64] += dqdci;               // dwdot[H]/d[HCN]
J[82] += dqdci;               // dwdot[CN]/d[HCN]
// d()/d[H]
dqdci =  - k_r*sc[29]*sc[45];
J[584] -= dqdci;              // dwdot[HCN]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[612] += dqdci;              // dwdot[CN]/d[H]
// d()/d[CN]
dqdci =  - k_r*sc[11]*sc[45];
J[1538] -= dqdci;             // dwdot[HCN]/d[CN]
J[1548] += dqdci;             // dwdot[H]/d[CN]
J[1566] += dqdci;             // dwdot[CN]/d[CN]
// d()/d[N2]
dqdci =  + k_f*sc[1] - k_r*sc[11]*sc[29];
J[2386] -= dqdci;             // dwdot[HCN]/d[N2]
J[2396] += dqdci;             // dwdot[H]/d[N2]
J[2414] += dqdci;             // dwdot[CN]/d[N2]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2785] += dqdT;              // dwdot[CN]/dT

// reaction 45: HCN + M <=> HNC + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + sc[6] + ( 0.7 - 1)*sc[10] + ( 7 - 1)*sc[15];
// forward
phi_f = sc[1];
k_f = 1.6e+20
            * exp(-3.23 * tc[0] - (27475.6299529377) * invT);
dlnkfdT = -3.23 * invT + (27475.6299529377) * invT2;
// reverse
phi_r = sc[7];
Kc = exp(g_RT[1] - g_RT[7]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1]) + (h_RT[7]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[7] += q;// HNC
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[HCN]
dqdci =  + k_f;
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[60] += dqdci;               // dwdot[HNC]/d[HCN]
// d()/d[CO2]
dqdci = (2 - 1)*q_nocor;
J[319] -= dqdci;              // dwdot[HCN]/d[CO2]
J[325] += dqdci;              // dwdot[HNC]/d[CO2]
// d()/d[HNC]
dqdci =  - k_r;
J[372] -= dqdci;              // dwdot[HCN]/d[HNC]
J[378] += dqdci;              // dwdot[HNC]/d[HNC]
// d()/d[AR]
dqdci = (0.7 - 1)*q_nocor;
J[531] -= dqdci;              // dwdot[HCN]/d[AR]
J[537] += dqdci;              // dwdot[HNC]/d[AR]
// d()/d[H2O]
dqdci = (7 - 1)*q_nocor;
J[796] -= dqdci;              // dwdot[HCN]/d[H2O]
J[802] += dqdci;              // dwdot[HNC]/d[H2O]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor + k_f;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = 2*q_nocor;
dqdc[7] = q_nocor - k_r;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = 0.7*q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 7*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+1] -= dqdc[k];
J[53*k+7] += dqdc[k];
}
}
J[2757] -= dqdT;// dwdot[HCN]/dT
J[2763] += dqdT;// dwdot[HNC]/dT

// reaction 76: HNCO + M <=> CO + NH + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.5 - 1)*sc[45];
// forward
phi_f = sc[2];
k_f = 11000000000
            * exp(- (43276.6332592059) * invT);
dlnkfdT = (43276.6332592059) * invT2;
// reverse
phi_r = sc[5]*sc[28];
Kc = refC * exp(g_RT[2] - g_RT[5] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2]) + (h_RT[5] + h_RT[28]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[5] += q;// CO
wdot[28] += q;// NH
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[HNCO]
dqdci =  + k_f;
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[111] += dqdci;              // dwdot[CO]/d[HNCO]
J[134] += dqdci;              // dwdot[NH]/d[HNCO]
// d()/d[CO]
dqdci =  - k_r*sc[28];
J[267] -= dqdci;              // dwdot[HNCO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[293] += dqdci;              // dwdot[NH]/d[CO]
// d()/d[NH]
dqdci =  - k_r*sc[5];
J[1486] -= dqdci;             // dwdot[HNCO]/d[NH]
J[1489] += dqdci;             // dwdot[CO]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/d[N2]
dqdci = (1.5 - 1)*q_nocor;
J[2387] -= dqdci;             // dwdot[HNCO]/d[N2]
J[2390] += dqdci;             // dwdot[CO]/d[N2]
J[2413] += dqdci;             // dwdot[NH]/d[N2]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor + k_f;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor - k_r*sc[28];
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor - k_r*sc[5];
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = 1.5*q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+2] -= dqdc[k];
J[53*k+5] += dqdc[k];
J[53*k+28] += dqdc[k];
}
}
J[2758] -= dqdT;// dwdot[HNCO]/dT
J[2761] += dqdT;// dwdot[CO]/dT
J[2784] += dqdT;// dwdot[NH]/dT

// reaction 98: HCNO + OH <=> H + NCO + OH
// a third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[33];
k_f = 4500000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[11]*sc[13]*sc[30];
Kc = refC * exp(-g_RT[11] - g_RT[30] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[33]) + (h_RT[11] + h_RT[13] + h_RT[30]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[30] += q;// NCO
wdot[33] -= q;// HCNO
// d()/d[H]
dqdci =  - k_r*sc[13]*sc[30];
J[594] += dqdci;              // dwdot[H]/d[H]
J[613] += dqdci;              // dwdot[NCO]/d[H]
J[616] -= dqdci;              // dwdot[HCNO]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[33] - k_r*sc[11]*sc[30];
J[700] += dqdci;              // dwdot[H]/d[OH]
J[719] += dqdci;              // dwdot[NCO]/d[OH]
J[722] -= dqdci;              // dwdot[HCNO]/d[OH]
// d()/d[NCO]
dqdci =  - k_r*sc[11]*sc[13];
J[1601] += dqdci;             // dwdot[H]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
J[1623] -= dqdci;             // dwdot[HCNO]/d[NCO]
// d()/d[HCNO]
dqdci =  + k_f*sc[13];
J[1760] += dqdci;             // dwdot[H]/d[HCNO]
J[1779] += dqdci;             // dwdot[NCO]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 101: NCO + M <=> CO + N + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 1.5 - 1)*sc[45];
// forward
phi_f = sc[30];
k_f = 220000000
            * exp(- (27198.8607867451) * invT);
dlnkfdT = (27198.8607867451) * invT2;
// reverse
phi_r = sc[5]*sc[25];
Kc = refC * exp(-g_RT[5] - g_RT[25] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[30]) + (h_RT[5] + h_RT[25]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[25] += q;// N
wdot[30] -= q;// NCO
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[CO]
dqdci =  - k_r*sc[25];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[290] += dqdci;              // dwdot[N]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
// d()/d[N]
dqdci =  - k_r*sc[5];
J[1330] += dqdci;             // dwdot[CO]/d[N]
J[1350] += dqdci;             // dwdot[N]/d[N]
J[1355] -= dqdci;             // dwdot[NCO]/d[N]
// d()/d[NCO]
dqdci =  + k_f;
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1615] += dqdci;             // dwdot[N]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/d[N2]
dqdci = (1.5 - 1)*q_nocor;
J[2390] += dqdci;             // dwdot[CO]/d[N2]
J[2410] += dqdci;             // dwdot[N]/d[N2]
J[2415] -= dqdci;             // dwdot[NCO]/d[N2]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor - k_r*sc[25];
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor - k_r*sc[5];
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor + k_f;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = 1.5*q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+5] += dqdc[k];
J[53*k+25] += dqdc[k];
J[53*k+30] -= dqdc[k];
}
}
J[2761] += dqdT;// dwdot[CO]/dT
J[2781] += dqdT;// dwdot[N]/dT
J[2786] -= dqdT;// dwdot[NCO]/dT

// reaction 132: NH3 + M <=> H + NH2 + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture;
// forward
phi_f = sc[20];
k_f = 22000000000
            * exp(- (47035.6617527671) * invT);
dlnkfdT = (47035.6617527671) * invT2;
// reverse
phi_r = sc[11]*sc[27];
Kc = refC * exp(-g_RT[11] + g_RT[20] - g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[20]) + (h_RT[11] + h_RT[27]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[20] -= q;// NH3
wdot[27] += q;// NH2
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[H]
dqdci =  - k_r*sc[27];
J[594] += dqdci;              // dwdot[H]/d[H]
J[603] -= dqdci;              // dwdot[NH3]/d[H]
J[610] += dqdci;              // dwdot[NH2]/d[H]
// d()/d[NH3]
dqdci =  + k_f;
J[1071] += dqdci;             // dwdot[H]/d[NH3]
J[1080] -= dqdci;             // dwdot[NH3]/d[NH3]
J[1087] += dqdci;             // dwdot[NH2]/d[NH3]
// d()/d[NH2]
dqdci =  - k_r*sc[11];
J[1442] += dqdci;             // dwdot[H]/d[NH2]
J[1451] -= dqdci;             // dwdot[NH3]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor - k_r*sc[27];
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor + k_f;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor - k_r*sc[11];
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+11] += dqdc[k];
J[53*k+20] -= dqdc[k];
J[53*k+27] += dqdc[k];
}
}
J[2767] += dqdT;// dwdot[H]/dT
J[2776] -= dqdT;// dwdot[NH3]/dT
J[2783] += dqdT;// dwdot[NH2]/dT

// reaction 165: H2NO + M <=> H + HNO + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 10 - 1)*sc[15];
// forward
phi_f = sc[24];
k_f = 2.8e+18
            * exp(-2.83 * tc[0] - (32666.3098607134) * invT);
dlnkfdT = -2.83 * invT + (32666.3098607134) * invT2;
// reverse
phi_r = sc[11]*sc[21];
Kc = refC * exp(-g_RT[11] - g_RT[21] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[24]) + (h_RT[11] + h_RT[21]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[21] += q;// HNO
wdot[24] -= q;// H2NO
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[H]
dqdci =  - k_r*sc[21];
J[594] += dqdci;              // dwdot[H]/d[H]
J[604] += dqdci;              // dwdot[HNO]/d[H]
J[607] -= dqdci;              // dwdot[H2NO]/d[H]
// d()/d[H2O]
dqdci = (10 - 1)*q_nocor;
J[806] += dqdci;              // dwdot[H]/d[H2O]
J[816] += dqdci;              // dwdot[HNO]/d[H2O]
J[819] -= dqdci;              // dwdot[H2NO]/d[H2O]
// d()/d[HNO]
dqdci =  - k_r*sc[11];
J[1124] += dqdci;             // dwdot[H]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1137] -= dqdci;             // dwdot[H2NO]/d[HNO]
// d()/d[H2NO]
dqdci =  + k_f;
J[1283] += dqdci;             // dwdot[H]/d[H2NO]
J[1293] += dqdci;             // dwdot[HNO]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor - k_r*sc[21];
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 10*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor - k_r*sc[11];
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor + k_f;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+11] += dqdc[k];
J[53*k+21] += dqdc[k];
J[53*k+24] -= dqdc[k];
}
}
J[2767] += dqdT;// dwdot[H]/dT
J[2777] += dqdT;// dwdot[HNO]/dT
J[2780] -= dqdT;// dwdot[H2NO]/dT

// reaction 166: H2NO + M <=> HNOH + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 10 - 1)*sc[15];
// forward
phi_f = sc[24];
k_f = 1.1e+23
            * exp(-4 * tc[0] - (22141.5332954077) * invT);
dlnkfdT = -4 * invT + (22141.5332954077) * invT2;
// reverse
phi_r = sc[42];
Kc = exp(g_RT[24] - g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[24]) + (h_RT[42]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[24] -= q;// H2NO
wdot[42] += q;// HNOH
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[H2O]
dqdci = (10 - 1)*q_nocor;
J[819] -= dqdci;              // dwdot[H2NO]/d[H2O]
J[837] += dqdci;              // dwdot[HNOH]/d[H2O]
// d()/d[H2NO]
dqdci =  + k_f;
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
J[1314] += dqdci;             // dwdot[HNOH]/d[H2NO]
// d()/d[HNOH]
dqdci =  - k_r;
J[2250] -= dqdci;             // dwdot[H2NO]/d[HNOH]
J[2268] += dqdci;             // dwdot[HNOH]/d[HNOH]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 10*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor + k_f;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor - k_r;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+24] -= dqdc[k];
J[53*k+42] += dqdc[k];
}
}
J[2780] -= dqdT;// dwdot[H2NO]/dT
J[2798] += dqdT;// dwdot[HNOH]/dT

// reaction 176: HNOH + M <=> H + HNO + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 10 - 1)*sc[15];
// forward
phi_f = sc[42];
k_f = 2e+18
            * exp(-2.84 * tc[0] - (29656.5709825354) * invT);
dlnkfdT = -2.84 * invT + (29656.5709825354) * invT2;
// reverse
phi_r = sc[11]*sc[21];
Kc = refC * exp(-g_RT[11] - g_RT[21] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[42]) + (h_RT[11] + h_RT[21]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[21] += q;// HNO
wdot[42] -= q;// HNOH
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[H]
dqdci =  - k_r*sc[21];
J[594] += dqdci;              // dwdot[H]/d[H]
J[604] += dqdci;              // dwdot[HNO]/d[H]
J[625] -= dqdci;              // dwdot[HNOH]/d[H]
// d()/d[H2O]
dqdci = (10 - 1)*q_nocor;
J[806] += dqdci;              // dwdot[H]/d[H2O]
J[816] += dqdci;              // dwdot[HNO]/d[H2O]
J[837] -= dqdci;              // dwdot[HNOH]/d[H2O]
// d()/d[HNO]
dqdci =  - k_r*sc[11];
J[1124] += dqdci;             // dwdot[H]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1155] -= dqdci;             // dwdot[HNOH]/d[HNO]
// d()/d[HNOH]
dqdci =  + k_f;
J[2237] += dqdci;             // dwdot[H]/d[HNOH]
J[2247] += dqdci;             // dwdot[HNO]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor - k_r*sc[21];
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 10*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor - k_r*sc[11];
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor + k_f;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+11] += dqdc[k];
J[53*k+21] += dqdc[k];
J[53*k+42] -= dqdc[k];
}
}
J[2767] += dqdT;// dwdot[H]/dT
J[2777] += dqdT;// dwdot[HNO]/dT
J[2798] -= dqdT;// dwdot[HNOH]/dT

// reaction 188: HON + M <=> H + NO + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + sc[6] + ( 0.7 - 1)*sc[10] + ( 7 - 1)*sc[15];
// forward
phi_f = sc[22];
k_f = 51000000000000
            * exp(-1.73 * tc[0] - (8074.11140283673) * invT);
dlnkfdT = -1.73 * invT + (8074.11140283673) * invT2;
// reverse
phi_r = sc[3]*sc[11];
Kc = refC * exp(-g_RT[3] - g_RT[11] + g_RT[22]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[22]) + (h_RT[3] + h_RT[11]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[11] += q;// H
wdot[22] -= q;// HON
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[NO]
dqdci =  - k_r*sc[11];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[170] += dqdci;              // dwdot[H]/d[NO]
J[181] -= dqdci;              // dwdot[HON]/d[NO]
// d()/d[CO2]
dqdci = (2 - 1)*q_nocor;
J[321] += dqdci;              // dwdot[NO]/d[CO2]
J[329] += dqdci;              // dwdot[H]/d[CO2]
J[340] -= dqdci;              // dwdot[HON]/d[CO2]
// d()/d[AR]
dqdci = (0.7 - 1)*q_nocor;
J[533] += dqdci;              // dwdot[NO]/d[AR]
J[541] += dqdci;              // dwdot[H]/d[AR]
J[552] -= dqdci;              // dwdot[HON]/d[AR]
// d()/d[H]
dqdci =  - k_r*sc[3];
J[586] += dqdci;              // dwdot[NO]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[605] -= dqdci;              // dwdot[HON]/d[H]
// d()/d[H2O]
dqdci = (7 - 1)*q_nocor;
J[798] += dqdci;              // dwdot[NO]/d[H2O]
J[806] += dqdci;              // dwdot[H]/d[H2O]
J[817] -= dqdci;              // dwdot[HON]/d[H2O]
// d()/d[HON]
dqdci =  + k_f;
J[1169] += dqdci;             // dwdot[NO]/d[HON]
J[1177] += dqdci;             // dwdot[H]/d[HON]
J[1188] -= dqdci;             // dwdot[HON]/d[HON]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor - k_r*sc[11];
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = 2*q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = 0.7*q_nocor;
dqdc[11] = q_nocor - k_r*sc[3];
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 7*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor + k_f;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+3] += dqdc[k];
J[53*k+11] += dqdc[k];
J[53*k+22] -= dqdc[k];
}
}
J[2759] += dqdT;// dwdot[NO]/dT
J[2767] += dqdT;// dwdot[H]/dT
J[2778] -= dqdT;// dwdot[HON]/dT

// reaction 206: NO3 + NO2 <=> NO + O2 + NO2
// a third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[43];
k_f = 50000
            * exp(- (1479.45699746588) * invT);
dlnkfdT = (1479.45699746588) * invT2;
// reverse
phi_r = sc[3]*sc[8]*sc[19];
Kc = refC * exp(-g_RT[3] - g_RT[8] + g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[43]) + (h_RT[3] + h_RT[8] + h_RT[19]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[8] += q;// O2
wdot[43] -= q;// NO3
// d()/d[NO]
dqdci =  - k_r*sc[8]*sc[19];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[167] += dqdci;              // dwdot[O2]/d[NO]
J[202] -= dqdci;              // dwdot[NO3]/d[NO]
// d()/d[O2]
dqdci =  - k_r*sc[3]*sc[19];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[467] -= dqdci;              // dwdot[NO3]/d[O2]
// d()/d[NO2]
dqdci =  + k_f*sc[43] - k_r*sc[3]*sc[8];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1015] += dqdci;             // dwdot[O2]/d[NO2]
J[1050] -= dqdci;             // dwdot[NO3]/d[NO2]
// d()/d[NO3]
dqdci =  + k_f*sc[19];
J[2282] += dqdci;             // dwdot[NO]/d[NO3]
J[2287] += dqdci;             // dwdot[O2]/d[NO3]
J[2322] -= dqdci;             // dwdot[NO3]/d[NO3]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2799] -= dqdT;              // dwdot[NO3]/dT

// reaction 214: NNH + O2 <=> H + N2 + O2
// a third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[26];
k_f = 50000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[8]*sc[11]*sc[45];
Kc = refC * exp(-g_RT[11] + g_RT[26] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[26]) + (h_RT[8] + h_RT[11] + h_RT[45]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[26] -= q;// NNH
wdot[45] += q;// N2
// d()/d[O2]
dqdci =  + k_f*sc[26] - k_r*sc[11]*sc[45];
J[435] += dqdci;              // dwdot[H]/d[O2]
J[450] -= dqdci;              // dwdot[NNH]/d[O2]
J[469] += dqdci;              // dwdot[N2]/d[O2]
// d()/d[H]
dqdci =  - k_r*sc[8]*sc[45];
J[594] += dqdci;              // dwdot[H]/d[H]
J[609] -= dqdci;              // dwdot[NNH]/d[H]
J[628] += dqdci;              // dwdot[N2]/d[H]
// d()/d[NNH]
dqdci =  + k_f*sc[8];
J[1389] += dqdci;             // dwdot[H]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[N2]
dqdci =  - k_r*sc[8]*sc[11];
J[2396] += dqdci;             // dwdot[H]/d[N2]
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 219: NCCN + M <=> 2 CN + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 3 - 1)*sc[6] + ( 1.5 - 1)*sc[8] + ( 1.5 - 1)*sc[9] + ( 10 - 1)*sc[15] + ( 1.5 - 1)*sc[45];
// forward
phi_f = sc[31];
k_f = 1.1e+28
            * exp(-4.32 * tc[0] - (65457.9206712121) * invT);
dlnkfdT = -4.32 * invT + (65457.9206712121) * invT2;
// reverse
phi_r = (sc[29] * sc[29]);
Kc = refC * exp(-2.000000*g_RT[29] + g_RT[31]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[31]) + (2.000000*h_RT[29]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[29] += 2 * q;// CN
wdot[31] -= q;// NCCN
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[CO2]
dqdci = (3 - 1)*q_nocor;
J[347] += 2 * dqdci;          // dwdot[CN]/d[CO2]
J[349] -= dqdci;              // dwdot[NCCN]/d[CO2]
// d()/d[O2]
dqdci = (1.5 - 1)*q_nocor;
J[453] += 2 * dqdci;          // dwdot[CN]/d[O2]
J[455] -= dqdci;              // dwdot[NCCN]/d[O2]
// d()/d[H2]
dqdci = (1.5 - 1)*q_nocor;
J[506] += 2 * dqdci;          // dwdot[CN]/d[H2]
J[508] -= dqdci;              // dwdot[NCCN]/d[H2]
// d()/d[H2O]
dqdci = (10 - 1)*q_nocor;
J[824] += 2 * dqdci;          // dwdot[CN]/d[H2O]
J[826] -= dqdci;              // dwdot[NCCN]/d[H2O]
// d()/d[CN]
dqdci =  - k_r*2.000000*sc[29];
J[1566] += 2 * dqdci;         // dwdot[CN]/d[CN]
J[1568] -= dqdci;             // dwdot[NCCN]/d[CN]
// d()/d[NCCN]
dqdci =  + k_f;
J[1672] += 2 * dqdci;         // dwdot[CN]/d[NCCN]
J[1674] -= dqdci;             // dwdot[NCCN]/d[NCCN]
// d()/d[N2]
dqdci = (1.5 - 1)*q_nocor;
J[2414] += 2 * dqdci;         // dwdot[CN]/d[N2]
J[2416] -= dqdci;             // dwdot[NCCN]/d[N2]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = 3*q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = 1.5*q_nocor;
dqdc[9] = 1.5*q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 10*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor - k_r*2.000000*sc[29];
dqdc[30] = q_nocor;
dqdc[31] = q_nocor + k_f;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = 1.5*q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+29] += 2 * dqdc[k];
J[53*k+31] -= dqdc[k];
}
}
J[2785] += 2 * dqdT;// dwdot[CN]/dT
J[2787] -= dqdT;// dwdot[NCCN]/dT

// reaction 222: H + O + M <=> OH* + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 0.4 - 1)*sc[8] + ( 0.35 - 1)*sc[10] + ( 6.5 - 1)*sc[15] + ( 0.4 - 1)*sc[45];
// forward
phi_f = sc[11]*sc[12];
k_f = 15
            * exp(- (3006.7195781832) * invT);
dlnkfdT = (3006.7195781832) * invT2;
// reverse
phi_r = sc[0];
Kc = refCinv * exp(-g_RT[0] + g_RT[11] + g_RT[12]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[12]) + (h_RT[0]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] += q;// OH*
wdot[11] -= q;// H
wdot[12] -= q;// O
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[OH*]
dqdci =  - k_r;
J[0] += dqdci;                // dwdot[OH*]/d[OH*]
J[11] -= dqdci;               // dwdot[H]/d[OH*]
J[12] -= dqdci;               // dwdot[O]/d[OH*]
// d()/d[O2]
dqdci = (0.4 - 1)*q_nocor;
J[424] += dqdci;              // dwdot[OH*]/d[O2]
J[435] -= dqdci;              // dwdot[H]/d[O2]
J[436] -= dqdci;              // dwdot[O]/d[O2]
// d()/d[H2]
dqdci = (1 - 1)*q_nocor;
J[477] += dqdci;              // dwdot[OH*]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[489] -= dqdci;              // dwdot[O]/d[H2]
// d()/d[AR]
dqdci = (0.35 - 1)*q_nocor;
J[530] += dqdci;              // dwdot[OH*]/d[AR]
J[541] -= dqdci;              // dwdot[H]/d[AR]
J[542] -= dqdci;              // dwdot[O]/d[AR]
// d()/d[H]
dqdci =  + k_f*sc[12];
J[583] += dqdci;              // dwdot[OH*]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[595] -= dqdci;              // dwdot[O]/d[H]
// d()/d[O]
dqdci =  + k_f*sc[11];
J[636] += dqdci;              // dwdot[OH*]/d[O]
J[647] -= dqdci;              // dwdot[H]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
// d()/d[H2O]
dqdci = (6.5 - 1)*q_nocor;
J[795] += dqdci;              // dwdot[OH*]/d[H2O]
J[806] -= dqdci;              // dwdot[H]/d[H2O]
J[807] -= dqdci;              // dwdot[O]/d[H2O]
// d()/d[N2]
dqdci = (0.4 - 1)*q_nocor;
J[2385] += dqdci;             // dwdot[OH*]/d[N2]
J[2396] -= dqdci;             // dwdot[H]/d[N2]
J[2397] -= dqdci;             // dwdot[O]/d[N2]
}
else {
dqdc[0] = q_nocor - k_r;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = 0.4*q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = 0.35*q_nocor;
dqdc[11] = q_nocor + k_f*sc[12];
dqdc[12] = q_nocor + k_f*sc[11];
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 6.5*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = 0.4*q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+0] += dqdc[k];
J[53*k+11] -= dqdc[k];
J[53*k+12] -= dqdc[k];
}
}
J[2756] += dqdT;// dwdot[OH*]/dT
J[2767] -= dqdT;// dwdot[H]/dT
J[2768] -= dqdT;// dwdot[O]/dT

// reaction 233: N2 + M <=> 2 N + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 16.25 - 1)*sc[15];
// forward
phi_f = sc[45];
k_f = 1890000000000
            * exp(-0.85 * tc[0] - (113198.588972772) * invT);
dlnkfdT = -0.85 * invT + (113198.588972772) * invT2;
// reverse
phi_r = (sc[25] * sc[25]);
Kc = refC * exp(-2.000000*g_RT[25] + g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[45]) + (2.000000*h_RT[25]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[25] += 2 * q;// N
wdot[45] -= q;// N2
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[H2O]
dqdci = (16.25 - 1)*q_nocor;
J[820] += 2 * dqdci;          // dwdot[N]/d[H2O]
J[840] -= dqdci;              // dwdot[N2]/d[H2O]
// d()/d[N]
dqdci =  - k_r*2.000000*sc[25];
J[1350] += 2 * dqdci;         // dwdot[N]/d[N]
J[1370] -= dqdci;             // dwdot[N2]/d[N]
// d()/d[N2]
dqdci =  + k_f;
J[2410] += 2 * dqdci;         // dwdot[N]/d[N2]
J[2430] -= dqdci;             // dwdot[N2]/d[N2]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 16.25*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor - k_r*2.000000*sc[25];
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor + k_f;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+25] += 2 * dqdc[k];
J[53*k+45] -= dqdc[k];
}
}
J[2781] += 2 * dqdT;// dwdot[N]/dT
J[2801] -= dqdT;// dwdot[N2]/dT

// reaction 234: N + O + M <=> NO + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 16.25 - 1)*sc[15];
// forward
phi_f = sc[12]*sc[25];
k_f = 760
            * exp(-0.1 * tc[0] - (-890.693498474354) * invT);
dlnkfdT = -0.1 * invT + (-890.693498474354) * invT2;
// reverse
phi_r = sc[3];
Kc = refCinv * exp(-g_RT[3] + g_RT[12] + g_RT[25]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[25]) + (h_RT[3]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[12] -= q;// O
wdot[25] -= q;// N
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[NO]
dqdci =  - k_r;
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[171] -= dqdci;              // dwdot[O]/d[NO]
J[184] -= dqdci;              // dwdot[N]/d[NO]
// d()/d[O]
dqdci =  + k_f*sc[25];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[661] -= dqdci;              // dwdot[N]/d[O]
// d()/d[H2O]
dqdci = (16.25 - 1)*q_nocor;
J[798] += dqdci;              // dwdot[NO]/d[H2O]
J[807] -= dqdci;              // dwdot[O]/d[H2O]
J[820] -= dqdci;              // dwdot[N]/d[H2O]
// d()/d[N]
dqdci =  + k_f*sc[12];
J[1328] += dqdci;             // dwdot[NO]/d[N]
J[1337] -= dqdci;             // dwdot[O]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor - k_r;
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor + k_f*sc[25];
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 16.25*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor + k_f*sc[12];
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+3] += dqdc[k];
J[53*k+12] -= dqdc[k];
J[53*k+25] -= dqdc[k];
}
}
J[2759] += dqdT;// dwdot[NO]/dT
J[2768] -= dqdT;// dwdot[O]/dT
J[2781] -= dqdT;// dwdot[N]/dT

// reaction 240: NO2 + M <=> NO + O + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 16.25 - 1)*sc[15];
// forward
phi_f = sc[19];
k_f = 11000000000
            * exp(- (33212.2999431115) * invT);
dlnkfdT = (33212.2999431115) * invT2;
// reverse
phi_r = sc[3]*sc[12];
Kc = refC * exp(-g_RT[3] - g_RT[12] + g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19]) + (h_RT[3] + h_RT[12]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[12] += q;// O
wdot[19] -= q;// NO2
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[NO]
dqdci =  - k_r*sc[12];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[171] += dqdci;              // dwdot[O]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
// d()/d[O]
dqdci =  - k_r*sc[3];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[655] -= dqdci;              // dwdot[NO2]/d[O]
// d()/d[H2O]
dqdci = (16.25 - 1)*q_nocor;
J[798] += dqdci;              // dwdot[NO]/d[H2O]
J[807] += dqdci;              // dwdot[O]/d[H2O]
J[814] -= dqdci;              // dwdot[NO2]/d[H2O]
// d()/d[NO2]
dqdci =  + k_f;
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1019] += dqdci;             // dwdot[O]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor - k_r*sc[12];
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor - k_r*sc[3];
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 16.25*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor + k_f;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+3] += dqdc[k];
J[53*k+12] += dqdc[k];
J[53*k+19] -= dqdc[k];
}
}
J[2759] += dqdT;// dwdot[NO]/dT
J[2768] += dqdT;// dwdot[O]/dT
J[2775] -= dqdT;// dwdot[NO2]/dT

// reaction 257: H2NO + M <=> H2 + NO + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture + ( 10 - 1)*sc[15];
// forward
phi_f = sc[24];
k_f = 7.83e+21
            * exp(-4.29 * tc[0] - (30343.9649480246) * invT);
dlnkfdT = -4.29 * invT + (30343.9649480246) * invT2;
// reverse
phi_r = sc[3]*sc[9];
Kc = refC * exp(-g_RT[3] - g_RT[9] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[24]) + (h_RT[3] + h_RT[9]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[9] += q;// H2
wdot[24] -= q;// H2NO
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[NO]
dqdci =  - k_r*sc[9];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[168] += dqdci;              // dwdot[H2]/d[NO]
J[183] -= dqdci;              // dwdot[H2NO]/d[NO]
// d()/d[H2]
dqdci =  - k_r*sc[3];
J[480] += dqdci;              // dwdot[NO]/d[H2]
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[501] -= dqdci;              // dwdot[H2NO]/d[H2]
// d()/d[H2O]
dqdci = (10 - 1)*q_nocor;
J[798] += dqdci;              // dwdot[NO]/d[H2O]
J[804] += dqdci;              // dwdot[H2]/d[H2O]
J[819] -= dqdci;              // dwdot[H2NO]/d[H2O]
// d()/d[H2NO]
dqdci =  + k_f;
J[1275] += dqdci;             // dwdot[NO]/d[H2NO]
J[1281] += dqdci;             // dwdot[H2]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor - k_r*sc[9];
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor - k_r*sc[3];
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor;
dqdc[15] = 10*q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor + k_f;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+3] += dqdc[k];
J[53*k+9] += dqdc[k];
J[53*k+24] -= dqdc[k];
}
}
J[2759] += dqdT;// dwdot[NO]/dT
J[2765] += dqdT;// dwdot[H2]/dT
J[2780] -= dqdT;// dwdot[H2NO]/dT

// reaction 258: HO2 + NO + M <=> HONO2 + M
// a third-body and non-pressure-fall-off reaction
// 3-body correction factor
alpha = mixture;
// forward
phi_f = sc[3]*sc[14];
k_f = 2.23
            * exp(-3.5 * tc[0] - (1107.07666477038) * invT);
dlnkfdT = -3.5 * invT + (1107.07666477038) * invT2;
// reverse
phi_r = sc[44];
Kc = refCinv * exp(g_RT[3] + g_RT[14] - g_RT[44]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[14]) + (h_RT[44]) + 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q_nocor = k_f*phi_f - k_r*phi_r;
q = alpha * q_nocor;
dqdT = alpha *(dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[14] -= q;// HO2
wdot[44] += q;// HONO2
// for convenience
k_f *= alpha;
k_r *= alpha;
if (consP) {
// d()/d[NO]
dqdci =  + k_f*sc[14];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[173] -= dqdci;              // dwdot[HO2]/d[NO]
J[203] += dqdci;              // dwdot[HONO2]/d[NO]
// d()/d[HO2]
dqdci =  + k_f*sc[3];
J[745] -= dqdci;              // dwdot[NO]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[786] += dqdci;              // dwdot[HONO2]/d[HO2]
// d()/d[HONO2]
dqdci =  - k_r;
J[2335] -= dqdci;             // dwdot[NO]/d[HONO2]
J[2346] -= dqdci;             // dwdot[HO2]/d[HONO2]
J[2376] += dqdci;             // dwdot[HONO2]/d[HONO2]
}
else {
dqdc[0] = q_nocor;
dqdc[1] = q_nocor;
dqdc[2] = q_nocor;
dqdc[3] = q_nocor + k_f*sc[14];
dqdc[4] = q_nocor;
dqdc[5] = q_nocor;
dqdc[6] = q_nocor;
dqdc[7] = q_nocor;
dqdc[8] = q_nocor;
dqdc[9] = q_nocor;
dqdc[10] = q_nocor;
dqdc[11] = q_nocor;
dqdc[12] = q_nocor;
dqdc[13] = q_nocor;
dqdc[14] = q_nocor + k_f*sc[3];
dqdc[15] = q_nocor;
dqdc[16] = q_nocor;
dqdc[17] = q_nocor;
dqdc[18] = q_nocor;
dqdc[19] = q_nocor;
dqdc[20] = q_nocor;
dqdc[21] = q_nocor;
dqdc[22] = q_nocor;
dqdc[23] = q_nocor;
dqdc[24] = q_nocor;
dqdc[25] = q_nocor;
dqdc[26] = q_nocor;
dqdc[27] = q_nocor;
dqdc[28] = q_nocor;
dqdc[29] = q_nocor;
dqdc[30] = q_nocor;
dqdc[31] = q_nocor;
dqdc[32] = q_nocor;
dqdc[33] = q_nocor;
dqdc[34] = q_nocor;
dqdc[35] = q_nocor;
dqdc[36] = q_nocor;
dqdc[37] = q_nocor;
dqdc[38] = q_nocor;
dqdc[39] = q_nocor;
dqdc[40] = q_nocor;
dqdc[41] = q_nocor;
dqdc[42] = q_nocor;
dqdc[43] = q_nocor;
dqdc[44] = q_nocor - k_r;
dqdc[45] = q_nocor;
dqdc[46] = q_nocor;
dqdc[47] = q_nocor;
dqdc[48] = q_nocor;
dqdc[49] = q_nocor;
dqdc[50] = q_nocor;
dqdc[51] = q_nocor;
for (int k=0; k<52; k++) {
J[53*k+3] -= dqdc[k];
J[53*k+14] -= dqdc[k];
J[53*k+44] += dqdc[k];
}
}
J[2759] -= dqdT;// dwdot[NO]/dT
J[2770] -= dqdT;// dwdot[HO2]/dT
J[2800] += dqdT;// dwdot[HONO2]/dT

// reaction 0: H + N2O <=> N2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[11];
k_f = 50000000
            * exp(- (7648.89332023174) * invT);
dlnkfdT = (7648.89332023174) * invT2;
// reverse
phi_r = sc[13]*sc[45];
Kc = exp(g_RT[4] + g_RT[11] - g_RT[13] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[11]) + (h_RT[13] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] -= q;// N2O
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[45] += q;// N2
// d()/d[N2O]
dqdci =  + k_f*sc[11];
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[223] -= dqdci;              // dwdot[H]/d[N2O]
J[225] += dqdci;              // dwdot[OH]/d[N2O]
J[257] += dqdci;              // dwdot[N2]/d[N2O]
// d()/d[H]
dqdci =  + k_f*sc[4];
J[587] -= dqdci;              // dwdot[N2O]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[628] += dqdci;              // dwdot[N2]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[45];
J[693] -= dqdci;              // dwdot[N2O]/d[OH]
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[734] += dqdci;              // dwdot[N2]/d[OH]
// d()/d[N2]
dqdci =  - k_r*sc[13];
J[2389] -= dqdci;             // dwdot[N2O]/d[N2]
J[2396] -= dqdci;             // dwdot[H]/d[N2]
J[2398] += dqdci;             // dwdot[OH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 2: N + NO <=> N2 + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[25];
k_f = 21000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[12]*sc[45];
Kc = exp(g_RT[3] - g_RT[12] + g_RT[25] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[25]) + (h_RT[12] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[12] += q;// O
wdot[25] -= q;// N
wdot[45] += q;// N2
// d()/d[NO]
dqdci =  + k_f*sc[25];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[171] += dqdci;              // dwdot[O]/d[NO]
J[184] -= dqdci;              // dwdot[N]/d[NO]
J[204] += dqdci;              // dwdot[N2]/d[NO]
// d()/d[O]
dqdci =  - k_r*sc[45];
J[639] -= dqdci;              // dwdot[NO]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[661] -= dqdci;              // dwdot[N]/d[O]
J[681] += dqdci;              // dwdot[N2]/d[O]
// d()/d[N]
dqdci =  + k_f*sc[3];
J[1328] -= dqdci;             // dwdot[NO]/d[N]
J[1337] += dqdci;             // dwdot[O]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
J[1370] += dqdci;             // dwdot[N2]/d[N]
// d()/d[N2]
dqdci =  - k_r*sc[12];
J[2388] -= dqdci;             // dwdot[NO]/d[N2]
J[2397] += dqdci;             // dwdot[O]/d[N2]
J[2410] -= dqdci;             // dwdot[N]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2781] -= dqdT;              // dwdot[N]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 3: H + HNO <=> H2 + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[21];
k_f = 440000
            * exp(0.7 * tc[0] - (327.090832773068) * invT);
dlnkfdT = 0.7 * invT + (327.090832773068) * invT2;
// reverse
phi_r = sc[3]*sc[9];
Kc = exp(-g_RT[3] - g_RT[9] + g_RT[11] + g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[21]) + (h_RT[3] + h_RT[9]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[21] -= q;// HNO
// d()/d[NO]
dqdci =  - k_r*sc[9];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[168] += dqdci;              // dwdot[H2]/d[NO]
J[170] -= dqdci;              // dwdot[H]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
// d()/d[H2]
dqdci =  - k_r*sc[3];
J[480] += dqdci;              // dwdot[NO]/d[H2]
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[498] -= dqdci;              // dwdot[HNO]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[21];
J[586] += dqdci;              // dwdot[NO]/d[H]
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[604] -= dqdci;              // dwdot[HNO]/d[H]
// d()/d[HNO]
dqdci =  + k_f*sc[11];
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1122] += dqdci;             // dwdot[H2]/d[HNO]
J[1124] -= dqdci;             // dwdot[H]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT

// reaction 4: H + N2O <=> NH + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[11];
k_f = 6.7e+16
            * exp(-2.16 * tc[0] - (18697.0152179744) * invT);
dlnkfdT = -2.16 * invT + (18697.0152179744) * invT2;
// reverse
phi_r = sc[3]*sc[28];
Kc = exp(-g_RT[3] + g_RT[4] + g_RT[11] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[11]) + (h_RT[3] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[4] -= q;// N2O
wdot[11] -= q;// H
wdot[28] += q;// NH
// d()/d[NO]
dqdci =  - k_r*sc[28];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[163] -= dqdci;              // dwdot[N2O]/d[NO]
J[170] -= dqdci;              // dwdot[H]/d[NO]
J[187] += dqdci;              // dwdot[NH]/d[NO]
// d()/d[N2O]
dqdci =  + k_f*sc[11];
J[215] += dqdci;              // dwdot[NO]/d[N2O]
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[223] -= dqdci;              // dwdot[H]/d[N2O]
J[240] += dqdci;              // dwdot[NH]/d[N2O]
// d()/d[H]
dqdci =  + k_f*sc[4];
J[586] += dqdci;              // dwdot[NO]/d[H]
J[587] -= dqdci;              // dwdot[N2O]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[611] += dqdci;              // dwdot[NH]/d[H]
// d()/d[NH]
dqdci =  - k_r*sc[3];
J[1487] += dqdci;             // dwdot[NO]/d[NH]
J[1488] -= dqdci;             // dwdot[N2O]/d[NH]
J[1495] -= dqdci;             // dwdot[H]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 5: H + O2 <=> O + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[11];
k_f = 104000000
            * exp(- (7692.16995349094) * invT);
dlnkfdT = (7692.16995349094) * invT2;
// reverse
phi_r = sc[12]*sc[13];
Kc = exp(g_RT[8] + g_RT[11] - g_RT[12] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[11]) + (h_RT[12] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[11] -= q;// H
wdot[12] += q;// O
wdot[13] += q;// OH
// d()/d[O2]
dqdci =  + k_f*sc[11];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[435] -= dqdci;              // dwdot[H]/d[O2]
J[436] += dqdci;              // dwdot[O]/d[O2]
J[437] += dqdci;              // dwdot[OH]/d[O2]
// d()/d[H]
dqdci =  + k_f*sc[8];
J[591] -= dqdci;              // dwdot[O2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[595] += dqdci;              // dwdot[O]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
// d()/d[O]
dqdci =  - k_r*sc[13];
J[644] -= dqdci;              // dwdot[O2]/d[O]
J[647] -= dqdci;              // dwdot[H]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[12];
J[697] -= dqdci;              // dwdot[O2]/d[OH]
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[701] += dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 6: H2 + O <=> H + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[9]*sc[12];
k_f = 0.0509
            * exp(2.67 * tc[0] - (3166.2392612433) * invT);
dlnkfdT = 2.67 * invT + (3166.2392612433) * invT2;
// reverse
phi_r = sc[11]*sc[13];
Kc = exp(g_RT[9] - g_RT[11] + g_RT[12] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[9] + h_RT[12]) + (h_RT[11] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] -= q;// H2
wdot[11] += q;// H
wdot[12] -= q;// O
wdot[13] += q;// OH
// d()/d[H2]
dqdci =  + k_f*sc[12];
J[486] -= dqdci;              // dwdot[H2]/d[H2]
J[488] += dqdci;              // dwdot[H]/d[H2]
J[489] -= dqdci;              // dwdot[O]/d[H2]
J[490] += dqdci;              // dwdot[OH]/d[H2]
// d()/d[H]
dqdci =  - k_r*sc[13];
J[592] -= dqdci;              // dwdot[H2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[595] -= dqdci;              // dwdot[O]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
// d()/d[O]
dqdci =  + k_f*sc[9];
J[645] -= dqdci;              // dwdot[H2]/d[O]
J[647] += dqdci;              // dwdot[H]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[11];
J[698] -= dqdci;              // dwdot[H2]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2765] -= dqdT;              // dwdot[H2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 7: H2 + OH <=> H + H2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[9]*sc[13];
k_f = 43800000
            * exp(- (3517.48449397499) * invT);
dlnkfdT = (3517.48449397499) * invT2;
// reverse
phi_r = sc[11]*sc[15];
Kc = exp(g_RT[9] - g_RT[11] + g_RT[13] - g_RT[15]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[9] + h_RT[13]) + (h_RT[11] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] -= q;// H2
wdot[11] += q;// H
wdot[13] -= q;// OH
wdot[15] += q;// H2O
// d()/d[H2]
dqdci =  + k_f*sc[13];
J[486] -= dqdci;              // dwdot[H2]/d[H2]
J[488] += dqdci;              // dwdot[H]/d[H2]
J[490] -= dqdci;              // dwdot[OH]/d[H2]
J[492] += dqdci;              // dwdot[H2O]/d[H2]
// d()/d[H]
dqdci =  - k_r*sc[15];
J[592] -= dqdci;              // dwdot[H2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
J[598] += dqdci;              // dwdot[H2O]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[9];
J[698] -= dqdci;              // dwdot[H2]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[11];
J[804] -= dqdci;              // dwdot[H2]/d[H2O]
J[806] += dqdci;              // dwdot[H]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
// d()/dT
J[2765] -= dqdT;              // dwdot[H2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT

// reaction 8: H2O + O <=> 2 OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[15];
k_f = 2.97
            * exp(2.02 * tc[0] - (6743.10332178324) * invT);
dlnkfdT = 2.02 * invT + (6743.10332178324) * invT2;
// reverse
phi_r = (sc[13] * sc[13]);
Kc = exp(g_RT[12] - 2.000000*g_RT[13] + g_RT[15]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[15]) + (2.000000*h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += 2 * q;// OH
wdot[15] -= q;// H2O
// d()/d[O]
dqdci =  + k_f*sc[15];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += 2 * dqdci;          // dwdot[OH]/d[O]
J[651] -= dqdci;              // dwdot[H2O]/d[O]
// d()/d[OH]
dqdci =  - k_r*2.000000*sc[13];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += 2 * dqdci;          // dwdot[OH]/d[OH]
J[704] -= dqdci;              // dwdot[H2O]/d[OH]
// d()/d[H2O]
dqdci =  + k_f*sc[12];
J[807] -= dqdci;              // dwdot[O]/d[H2O]
J[808] += 2 * dqdci;          // dwdot[OH]/d[H2O]
J[810] -= dqdci;              // dwdot[H2O]/d[H2O]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += 2 * dqdT;          // dwdot[OH]/dT
J[2771] -= dqdT;              // dwdot[H2O]/dT

// reaction 15: H + HO2 <=> 2 OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[14];
k_f = 70790000
            * exp(- (148.448916412392) * invT);
dlnkfdT = (148.448916412392) * invT2;
// reverse
phi_r = (sc[13] * sc[13]);
Kc = exp(g_RT[11] - 2.000000*g_RT[13] + g_RT[14]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[14]) + (2.000000*h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[13] += 2 * q;// OH
wdot[14] -= q;// HO2
// d()/d[H]
dqdci =  + k_f*sc[14];
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += 2 * dqdci;          // dwdot[OH]/d[H]
J[597] -= dqdci;              // dwdot[HO2]/d[H]
// d()/d[OH]
dqdci =  - k_r*2.000000*sc[13];
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += 2 * dqdci;          // dwdot[OH]/d[OH]
J[703] -= dqdci;              // dwdot[HO2]/d[OH]
// d()/d[HO2]
dqdci =  + k_f*sc[11];
J[753] -= dqdci;              // dwdot[H]/d[HO2]
J[755] += 2 * dqdci;          // dwdot[OH]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
// d()/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += 2 * dqdT;          // dwdot[OH]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT

// reaction 16: H2 + O2 <=> H + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[9];
k_f = 0.5176
            * exp(2.433 * tc[0] - (26923.0980538841) * invT);
dlnkfdT = 2.433 * invT + (26923.0980538841) * invT2;
// reverse
phi_r = sc[11]*sc[14];
Kc = exp(g_RT[8] + g_RT[9] - g_RT[11] - g_RT[14]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[9]) + (h_RT[11] + h_RT[14]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[9] -= q;// H2
wdot[11] += q;// H
wdot[14] += q;// HO2
// d()/d[O2]
dqdci =  + k_f*sc[9];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[433] -= dqdci;              // dwdot[H2]/d[O2]
J[435] += dqdci;              // dwdot[H]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
// d()/d[H2]
dqdci =  + k_f*sc[8];
J[485] -= dqdci;              // dwdot[O2]/d[H2]
J[486] -= dqdci;              // dwdot[H2]/d[H2]
J[488] += dqdci;              // dwdot[H]/d[H2]
J[491] += dqdci;              // dwdot[HO2]/d[H2]
// d()/d[H]
dqdci =  - k_r*sc[14];
J[591] -= dqdci;              // dwdot[O2]/d[H]
J[592] -= dqdci;              // dwdot[H2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[597] += dqdci;              // dwdot[HO2]/d[H]
// d()/d[HO2]
dqdci =  - k_r*sc[11];
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[751] -= dqdci;              // dwdot[H2]/d[HO2]
J[753] += dqdci;              // dwdot[H]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2765] -= dqdT;              // dwdot[H2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT

// reaction 17: HO2 + O <=> O2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[14];
k_f = 32500000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[8]*sc[13];
Kc = exp(-g_RT[8] + g_RT[12] - g_RT[13] + g_RT[14]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[14]) + (h_RT[8] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[14] -= q;// HO2
// d()/d[O2]
dqdci =  - k_r*sc[13];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[436] -= dqdci;              // dwdot[O]/d[O2]
J[437] += dqdci;              // dwdot[OH]/d[O2]
J[438] -= dqdci;              // dwdot[HO2]/d[O2]
// d()/d[O]
dqdci =  + k_f*sc[14];
J[644] += dqdci;              // dwdot[O2]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[650] -= dqdci;              // dwdot[HO2]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[8];
J[697] += dqdci;              // dwdot[O2]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[703] -= dqdci;              // dwdot[HO2]/d[OH]
// d()/d[HO2]
dqdci =  + k_f*sc[12];
J[750] += dqdci;              // dwdot[O2]/d[HO2]
J[754] -= dqdci;              // dwdot[O]/d[HO2]
J[755] += dqdci;              // dwdot[OH]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT

// reaction 18: HO2 + OH <=> H2O + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[14];
k_f = 24560000
            * exp(- (-250.098682904946) * invT);
dlnkfdT = (-250.098682904946) * invT2;
// reverse
phi_r = sc[8]*sc[15];
Kc = exp(-g_RT[8] + g_RT[13] + g_RT[14] - g_RT[15]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[14]) + (h_RT[8] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[13] -= q;// OH
wdot[14] -= q;// HO2
wdot[15] += q;// H2O
// d()/d[O2]
dqdci =  - k_r*sc[15];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[437] -= dqdci;              // dwdot[OH]/d[O2]
J[438] -= dqdci;              // dwdot[HO2]/d[O2]
J[439] += dqdci;              // dwdot[H2O]/d[O2]
// d()/d[OH]
dqdci =  + k_f*sc[14];
J[697] += dqdci;              // dwdot[O2]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[703] -= dqdci;              // dwdot[HO2]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
// d()/d[HO2]
dqdci =  + k_f*sc[13];
J[750] += dqdci;              // dwdot[O2]/d[HO2]
J[755] -= dqdci;              // dwdot[OH]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[757] += dqdci;              // dwdot[H2O]/d[HO2]
// d()/d[H2O]
dqdci =  - k_r*sc[8];
J[803] += dqdci;              // dwdot[O2]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[809] -= dqdci;              // dwdot[HO2]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT

// reaction 19: 2 HO2 <=> H2O2 + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[14] * sc[14]);
k_f = 130000
            * exp(- (-820.243165261693) * invT);
dlnkfdT = (-820.243165261693) * invT2;
// reverse
phi_r = sc[8]*sc[16];
Kc = exp(-g_RT[8] + 2.000000*g_RT[14] - g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[14]) + (h_RT[8] + h_RT[16]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[14] -= 2 * q;// HO2
wdot[16] += q;// H2O2
// d()/d[O2]
dqdci =  - k_r*sc[16];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[438] += -2 * dqdci;         // dwdot[HO2]/d[O2]
J[440] += dqdci;              // dwdot[H2O2]/d[O2]
// d()/d[HO2]
dqdci =  + k_f*2.000000*sc[14];
J[750] += dqdci;              // dwdot[O2]/d[HO2]
J[756] += -2 * dqdci;         // dwdot[HO2]/d[HO2]
J[758] += dqdci;              // dwdot[H2O2]/d[HO2]
// d()/d[H2O2]
dqdci =  - k_r*sc[8];
J[856] += dqdci;              // dwdot[O2]/d[H2O2]
J[862] += -2 * dqdci;         // dwdot[HO2]/d[H2O2]
J[864] += dqdci;              // dwdot[H2O2]/d[H2O2]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2770] += -2 * dqdT;         // dwdot[HO2]/dT
J[2772] += dqdT;              // dwdot[H2O2]/dT

// reaction 20: 2 HO2 <=> H2O2 + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[14] * sc[14]);
k_f = 365800000
            * exp(- (6038.59998965664) * invT);
dlnkfdT = (6038.59998965664) * invT2;
// reverse
phi_r = sc[8]*sc[16];
Kc = exp(-g_RT[8] + 2.000000*g_RT[14] - g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[14]) + (h_RT[8] + h_RT[16]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[14] -= 2 * q;// HO2
wdot[16] += q;// H2O2
// d()/d[O2]
dqdci =  - k_r*sc[16];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[438] += -2 * dqdci;         // dwdot[HO2]/d[O2]
J[440] += dqdci;              // dwdot[H2O2]/d[O2]
// d()/d[HO2]
dqdci =  + k_f*2.000000*sc[14];
J[750] += dqdci;              // dwdot[O2]/d[HO2]
J[756] += -2 * dqdci;         // dwdot[HO2]/d[HO2]
J[758] += dqdci;              // dwdot[H2O2]/d[HO2]
// d()/d[H2O2]
dqdci =  - k_r*sc[8];
J[856] += dqdci;              // dwdot[O2]/d[H2O2]
J[862] += -2 * dqdci;         // dwdot[HO2]/d[H2O2]
J[864] += dqdci;              // dwdot[H2O2]/d[H2O2]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2770] += -2 * dqdT;         // dwdot[HO2]/dT
J[2772] += dqdT;              // dwdot[H2O2]/dT

// reaction 23: H + H2O2 <=> H2O + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[16];
k_f = 24100000
            * exp(- (1997.77016324474) * invT);
dlnkfdT = (1997.77016324474) * invT2;
// reverse
phi_r = sc[13]*sc[15];
Kc = exp(g_RT[11] - g_RT[13] - g_RT[15] + g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[16]) + (h_RT[13] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[15] += q;// H2O
wdot[16] -= q;// H2O2
// d()/d[H]
dqdci =  + k_f*sc[16];
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[598] += dqdci;              // dwdot[H2O]/d[H]
J[599] -= dqdci;              // dwdot[H2O2]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[15];
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[705] -= dqdci;              // dwdot[H2O2]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[13];
J[806] -= dqdci;              // dwdot[H]/d[H2O]
J[808] += dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[811] -= dqdci;              // dwdot[H2O2]/d[H2O]
// d()/d[H2O2]
dqdci =  + k_f*sc[11];
J[859] -= dqdci;              // dwdot[H]/d[H2O2]
J[861] += dqdci;              // dwdot[OH]/d[H2O2]
J[863] += dqdci;              // dwdot[H2O]/d[H2O2]
J[864] -= dqdci;              // dwdot[H2O2]/d[H2O2]
// d()/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2772] -= dqdT;              // dwdot[H2O2]/dT

// reaction 24: H + H2O2 <=> H2 + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[16];
k_f = 21500
            * exp(1 * tc[0] - (3019.29999482832) * invT);
dlnkfdT = 1 * invT + (3019.29999482832) * invT2;
// reverse
phi_r = sc[9]*sc[14];
Kc = exp(-g_RT[9] + g_RT[11] - g_RT[14] + g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[16]) + (h_RT[9] + h_RT[14]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[14] += q;// HO2
wdot[16] -= q;// H2O2
// d()/d[H2]
dqdci =  - k_r*sc[14];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[491] += dqdci;              // dwdot[HO2]/d[H2]
J[493] -= dqdci;              // dwdot[H2O2]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[16];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[597] += dqdci;              // dwdot[HO2]/d[H]
J[599] -= dqdci;              // dwdot[H2O2]/d[H]
// d()/d[HO2]
dqdci =  - k_r*sc[9];
J[751] += dqdci;              // dwdot[H2]/d[HO2]
J[753] -= dqdci;              // dwdot[H]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[758] -= dqdci;              // dwdot[H2O2]/d[HO2]
// d()/d[H2O2]
dqdci =  + k_f*sc[11];
J[857] += dqdci;              // dwdot[H2]/d[H2O2]
J[859] -= dqdci;              // dwdot[H]/d[H2O2]
J[862] += dqdci;              // dwdot[HO2]/d[H2O2]
J[864] -= dqdci;              // dwdot[H2O2]/d[H2O2]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2772] -= dqdT;              // dwdot[H2O2]/dT

// reaction 25: H2O2 + O <=> HO2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[16];
k_f = 9.55
            * exp(2 * tc[0] - (1997.77016324474) * invT);
dlnkfdT = 2 * invT + (1997.77016324474) * invT2;
// reverse
phi_r = sc[13]*sc[14];
Kc = exp(g_RT[12] - g_RT[13] - g_RT[14] + g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[16]) + (h_RT[13] + h_RT[14]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[14] += q;// HO2
wdot[16] -= q;// H2O2
// d()/d[O]
dqdci =  + k_f*sc[16];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[650] += dqdci;              // dwdot[HO2]/d[O]
J[652] -= dqdci;              // dwdot[H2O2]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[14];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[703] += dqdci;              // dwdot[HO2]/d[OH]
J[705] -= dqdci;              // dwdot[H2O2]/d[OH]
// d()/d[HO2]
dqdci =  - k_r*sc[13];
J[754] -= dqdci;              // dwdot[O]/d[HO2]
J[755] += dqdci;              // dwdot[OH]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[758] -= dqdci;              // dwdot[H2O2]/d[HO2]
// d()/d[H2O2]
dqdci =  + k_f*sc[12];
J[860] -= dqdci;              // dwdot[O]/d[H2O2]
J[861] += dqdci;              // dwdot[OH]/d[H2O2]
J[862] += dqdci;              // dwdot[HO2]/d[H2O2]
J[864] -= dqdci;              // dwdot[H2O2]/d[H2O2]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2772] -= dqdT;              // dwdot[H2O2]/dT

// reaction 26: H2O2 + OH <=> H2O + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[16];
k_f = 1740000
            * exp(- (160.022899725901) * invT);
dlnkfdT = (160.022899725901) * invT2;
// reverse
phi_r = sc[14]*sc[15];
Kc = exp(g_RT[13] - g_RT[14] - g_RT[15] + g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[16]) + (h_RT[14] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[14] += q;// HO2
wdot[15] += q;// H2O
wdot[16] -= q;// H2O2
// d()/d[OH]
dqdci =  + k_f*sc[16];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[703] += dqdci;              // dwdot[HO2]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[705] -= dqdci;              // dwdot[H2O2]/d[OH]
// d()/d[HO2]
dqdci =  - k_r*sc[15];
J[755] -= dqdci;              // dwdot[OH]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[757] += dqdci;              // dwdot[H2O]/d[HO2]
J[758] -= dqdci;              // dwdot[H2O2]/d[HO2]
// d()/d[H2O]
dqdci =  - k_r*sc[14];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[809] += dqdci;              // dwdot[HO2]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[811] -= dqdci;              // dwdot[H2O2]/d[H2O]
// d()/d[H2O2]
dqdci =  + k_f*sc[13];
J[861] -= dqdci;              // dwdot[OH]/d[H2O2]
J[862] += dqdci;              // dwdot[HO2]/d[H2O2]
J[863] += dqdci;              // dwdot[H2O]/d[H2O2]
J[864] -= dqdci;              // dwdot[H2O2]/d[H2O2]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2772] -= dqdT;              // dwdot[H2O2]/dT

// reaction 27: H2O2 + OH <=> H2O + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[16];
k_f = 75900000
            * exp(- (3657.88194373451) * invT);
dlnkfdT = (3657.88194373451) * invT2;
// reverse
phi_r = sc[14]*sc[15];
Kc = exp(g_RT[13] - g_RT[14] - g_RT[15] + g_RT[16]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[16]) + (h_RT[14] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[14] += q;// HO2
wdot[15] += q;// H2O
wdot[16] -= q;// H2O2
// d()/d[OH]
dqdci =  + k_f*sc[16];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[703] += dqdci;              // dwdot[HO2]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[705] -= dqdci;              // dwdot[H2O2]/d[OH]
// d()/d[HO2]
dqdci =  - k_r*sc[15];
J[755] -= dqdci;              // dwdot[OH]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[757] += dqdci;              // dwdot[H2O]/d[HO2]
J[758] -= dqdci;              // dwdot[H2O2]/d[HO2]
// d()/d[H2O]
dqdci =  - k_r*sc[14];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[809] += dqdci;              // dwdot[HO2]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[811] -= dqdci;              // dwdot[H2O2]/d[H2O]
// d()/d[H2O2]
dqdci =  + k_f*sc[13];
J[861] -= dqdci;              // dwdot[OH]/d[H2O2]
J[862] += dqdci;              // dwdot[HO2]/d[H2O2]
J[863] += dqdci;              // dwdot[H2O]/d[H2O2]
J[864] -= dqdci;              // dwdot[H2O2]/d[H2O2]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2772] -= dqdT;              // dwdot[H2O2]/dT

// reaction 29: CO + O2 <=> CO2 + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[5]*sc[8];
k_f = 1119000
            * exp(- (24003.4349588851) * invT);
dlnkfdT = (24003.4349588851) * invT2;
// reverse
phi_r = sc[6]*sc[12];
Kc = exp(g_RT[5] - g_RT[6] + g_RT[8] - g_RT[12]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[5] + h_RT[8]) + (h_RT[6] + h_RT[12]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] -= q;// CO
wdot[6] += q;// CO2
wdot[8] -= q;// O2
wdot[12] += q;// O
// d()/d[CO]
dqdci =  + k_f*sc[8];
J[270] -= dqdci;              // dwdot[CO]/d[CO]
J[271] += dqdci;              // dwdot[CO2]/d[CO]
J[273] -= dqdci;              // dwdot[O2]/d[CO]
J[277] += dqdci;              // dwdot[O]/d[CO]
// d()/d[CO2]
dqdci =  - k_r*sc[12];
J[323] -= dqdci;              // dwdot[CO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[326] -= dqdci;              // dwdot[O2]/d[CO2]
J[330] += dqdci;              // dwdot[O]/d[CO2]
// d()/d[O2]
dqdci =  + k_f*sc[5];
J[429] -= dqdci;              // dwdot[CO]/d[O2]
J[430] += dqdci;              // dwdot[CO2]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[436] += dqdci;              // dwdot[O]/d[O2]
// d()/d[O]
dqdci =  - k_r*sc[6];
J[641] -= dqdci;              // dwdot[CO]/d[O]
J[642] += dqdci;              // dwdot[CO2]/d[O]
J[644] -= dqdci;              // dwdot[O2]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
// d()/dT
J[2761] -= dqdT;              // dwdot[CO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2768] += dqdT;              // dwdot[O]/dT

// reaction 30: CO + OH <=> CO2 + H
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[5]*sc[13];
k_f = 0.07015
            * exp(2.053 * tc[0] - (-178.994168026739) * invT);
dlnkfdT = 2.053 * invT + (-178.994168026739) * invT2;
// reverse
phi_r = sc[6]*sc[11];
Kc = exp(g_RT[5] - g_RT[6] - g_RT[11] + g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[5] + h_RT[13]) + (h_RT[6] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] -= q;// CO
wdot[6] += q;// CO2
wdot[11] += q;// H
wdot[13] -= q;// OH
// d()/d[CO]
dqdci =  + k_f*sc[13];
J[270] -= dqdci;              // dwdot[CO]/d[CO]
J[271] += dqdci;              // dwdot[CO2]/d[CO]
J[276] += dqdci;              // dwdot[H]/d[CO]
J[278] -= dqdci;              // dwdot[OH]/d[CO]
// d()/d[CO2]
dqdci =  - k_r*sc[11];
J[323] -= dqdci;              // dwdot[CO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[329] += dqdci;              // dwdot[H]/d[CO2]
J[331] -= dqdci;              // dwdot[OH]/d[CO2]
// d()/d[H]
dqdci =  - k_r*sc[6];
J[588] -= dqdci;              // dwdot[CO]/d[H]
J[589] += dqdci;              // dwdot[CO2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[5];
J[694] -= dqdci;              // dwdot[CO]/d[OH]
J[695] += dqdci;              // dwdot[CO2]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2761] -= dqdT;              // dwdot[CO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT

// reaction 31: CO + OH <=> CO2 + H
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[5]*sc[13];
k_f = 5757000
            * exp(-0.664 * tc[0] - (166.967289714006) * invT);
dlnkfdT = -0.664 * invT + (166.967289714006) * invT2;
// reverse
phi_r = sc[6]*sc[11];
Kc = exp(g_RT[5] - g_RT[6] - g_RT[11] + g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[5] + h_RT[13]) + (h_RT[6] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] -= q;// CO
wdot[6] += q;// CO2
wdot[11] += q;// H
wdot[13] -= q;// OH
// d()/d[CO]
dqdci =  + k_f*sc[13];
J[270] -= dqdci;              // dwdot[CO]/d[CO]
J[271] += dqdci;              // dwdot[CO2]/d[CO]
J[276] += dqdci;              // dwdot[H]/d[CO]
J[278] -= dqdci;              // dwdot[OH]/d[CO]
// d()/d[CO2]
dqdci =  - k_r*sc[11];
J[323] -= dqdci;              // dwdot[CO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[329] += dqdci;              // dwdot[H]/d[CO2]
J[331] -= dqdci;              // dwdot[OH]/d[CO2]
// d()/d[H]
dqdci =  - k_r*sc[6];
J[588] -= dqdci;              // dwdot[CO]/d[H]
J[589] += dqdci;              // dwdot[CO2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[5];
J[694] -= dqdci;              // dwdot[CO]/d[OH]
J[695] += dqdci;              // dwdot[CO2]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2761] -= dqdT;              // dwdot[CO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT

// reaction 32: CO + HO2 <=> CO2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[5]*sc[14];
k_f = 0.157
            * exp(2.18 * tc[0] - (9027.70698453667) * invT);
dlnkfdT = 2.18 * invT + (9027.70698453667) * invT2;
// reverse
phi_r = sc[6]*sc[13];
Kc = exp(g_RT[5] - g_RT[6] - g_RT[13] + g_RT[14]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[5] + h_RT[14]) + (h_RT[6] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] -= q;// CO
wdot[6] += q;// CO2
wdot[13] += q;// OH
wdot[14] -= q;// HO2
// d()/d[CO]
dqdci =  + k_f*sc[14];
J[270] -= dqdci;              // dwdot[CO]/d[CO]
J[271] += dqdci;              // dwdot[CO2]/d[CO]
J[278] += dqdci;              // dwdot[OH]/d[CO]
J[279] -= dqdci;              // dwdot[HO2]/d[CO]
// d()/d[CO2]
dqdci =  - k_r*sc[13];
J[323] -= dqdci;              // dwdot[CO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[331] += dqdci;              // dwdot[OH]/d[CO2]
J[332] -= dqdci;              // dwdot[HO2]/d[CO2]
// d()/d[OH]
dqdci =  - k_r*sc[6];
J[694] -= dqdci;              // dwdot[CO]/d[OH]
J[695] += dqdci;              // dwdot[CO2]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[703] -= dqdci;              // dwdot[HO2]/d[OH]
// d()/d[HO2]
dqdci =  + k_f*sc[5];
J[747] -= dqdci;              // dwdot[CO]/d[HO2]
J[748] += dqdci;              // dwdot[CO2]/d[HO2]
J[755] += dqdci;              // dwdot[OH]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
// d()/dT
J[2761] -= dqdT;              // dwdot[CO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT

// reaction 34: HCO + O2 <=> CO + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[17];
k_f = 7580000
            * exp(- (206.318832979935) * invT);
dlnkfdT = (206.318832979935) * invT2;
// reverse
phi_r = sc[5]*sc[14];
Kc = exp(-g_RT[5] + g_RT[8] - g_RT[14] + g_RT[17]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[17]) + (h_RT[5] + h_RT[14]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[8] -= q;// O2
wdot[14] += q;// HO2
wdot[17] -= q;// HCO
// d()/d[CO]
dqdci =  - k_r*sc[14];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[273] -= dqdci;              // dwdot[O2]/d[CO]
J[279] += dqdci;              // dwdot[HO2]/d[CO]
J[282] -= dqdci;              // dwdot[HCO]/d[CO]
// d()/d[O2]
dqdci =  + k_f*sc[17];
J[429] += dqdci;              // dwdot[CO]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
J[441] -= dqdci;              // dwdot[HCO]/d[O2]
// d()/d[HO2]
dqdci =  - k_r*sc[5];
J[747] += dqdci;              // dwdot[CO]/d[HO2]
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[759] -= dqdci;              // dwdot[HCO]/d[HO2]
// d()/d[HCO]
dqdci =  + k_f*sc[8];
J[906] += dqdci;              // dwdot[CO]/d[HCO]
J[909] -= dqdci;              // dwdot[O2]/d[HCO]
J[915] += dqdci;              // dwdot[HO2]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT

// reaction 35: H + HCO <=> CO + H2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[17];
k_f = 73400000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[5]*sc[9];
Kc = exp(-g_RT[5] - g_RT[9] + g_RT[11] + g_RT[17]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[17]) + (h_RT[5] + h_RT[9]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[17] -= q;// HCO
// d()/d[CO]
dqdci =  - k_r*sc[9];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[274] += dqdci;              // dwdot[H2]/d[CO]
J[276] -= dqdci;              // dwdot[H]/d[CO]
J[282] -= dqdci;              // dwdot[HCO]/d[CO]
// d()/d[H2]
dqdci =  - k_r*sc[5];
J[482] += dqdci;              // dwdot[CO]/d[H2]
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[494] -= dqdci;              // dwdot[HCO]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[17];
J[588] += dqdci;              // dwdot[CO]/d[H]
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[600] -= dqdci;              // dwdot[HCO]/d[H]
// d()/d[HCO]
dqdci =  + k_f*sc[11];
J[906] += dqdci;              // dwdot[CO]/d[HCO]
J[910] += dqdci;              // dwdot[H2]/d[HCO]
J[912] -= dqdci;              // dwdot[H]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT

// reaction 36: HCO + O <=> CO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[17];
k_f = 30200000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[5]*sc[13];
Kc = exp(-g_RT[5] + g_RT[12] - g_RT[13] + g_RT[17]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[17]) + (h_RT[5] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[17] -= q;// HCO
// d()/d[CO]
dqdci =  - k_r*sc[13];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[277] -= dqdci;              // dwdot[O]/d[CO]
J[278] += dqdci;              // dwdot[OH]/d[CO]
J[282] -= dqdci;              // dwdot[HCO]/d[CO]
// d()/d[O]
dqdci =  + k_f*sc[17];
J[641] += dqdci;              // dwdot[CO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[653] -= dqdci;              // dwdot[HCO]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[5];
J[694] += dqdci;              // dwdot[CO]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[706] -= dqdci;              // dwdot[HCO]/d[OH]
// d()/d[HCO]
dqdci =  + k_f*sc[12];
J[906] += dqdci;              // dwdot[CO]/d[HCO]
J[913] -= dqdci;              // dwdot[O]/d[HCO]
J[914] += dqdci;              // dwdot[OH]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT

// reaction 37: HCO + O <=> CO2 + H
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[17];
k_f = 30000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[6]*sc[11];
Kc = exp(-g_RT[6] - g_RT[11] + g_RT[12] + g_RT[17]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[17]) + (h_RT[6] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[6] += q;// CO2
wdot[11] += q;// H
wdot[12] -= q;// O
wdot[17] -= q;// HCO
// d()/d[CO2]
dqdci =  - k_r*sc[11];
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[329] += dqdci;              // dwdot[H]/d[CO2]
J[330] -= dqdci;              // dwdot[O]/d[CO2]
J[335] -= dqdci;              // dwdot[HCO]/d[CO2]
// d()/d[H]
dqdci =  - k_r*sc[6];
J[589] += dqdci;              // dwdot[CO2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[595] -= dqdci;              // dwdot[O]/d[H]
J[600] -= dqdci;              // dwdot[HCO]/d[H]
// d()/d[O]
dqdci =  + k_f*sc[17];
J[642] += dqdci;              // dwdot[CO2]/d[O]
J[647] += dqdci;              // dwdot[H]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[653] -= dqdci;              // dwdot[HCO]/d[O]
// d()/d[HCO]
dqdci =  + k_f*sc[12];
J[907] += dqdci;              // dwdot[CO2]/d[HCO]
J[912] += dqdci;              // dwdot[H]/d[HCO]
J[913] -= dqdci;              // dwdot[O]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
// d()/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT

// reaction 38: HCO + OH <=> CO + H2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[17];
k_f = 102000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[5]*sc[15];
Kc = exp(-g_RT[5] + g_RT[13] - g_RT[15] + g_RT[17]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[17]) + (h_RT[5] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[17] -= q;// HCO
// d()/d[CO]
dqdci =  - k_r*sc[15];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[278] -= dqdci;              // dwdot[OH]/d[CO]
J[280] += dqdci;              // dwdot[H2O]/d[CO]
J[282] -= dqdci;              // dwdot[HCO]/d[CO]
// d()/d[OH]
dqdci =  + k_f*sc[17];
J[694] += dqdci;              // dwdot[CO]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[706] -= dqdci;              // dwdot[HCO]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[5];
J[800] += dqdci;              // dwdot[CO]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[812] -= dqdci;              // dwdot[HCO]/d[H2O]
// d()/d[HCO]
dqdci =  + k_f*sc[13];
J[906] += dqdci;              // dwdot[CO]/d[HCO]
J[914] -= dqdci;              // dwdot[OH]/d[HCO]
J[916] += dqdci;              // dwdot[H2O]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT

// reaction 39: HCO + HO2 => CO2 + H + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[17];
k_f = 30000000
           ;
dlnkfdT = 0.0;
// rate of progress
q = k_f*phi_f;
dqdT = dlnkfdT*k_f*phi_f;
// update wdot
wdot[6] += q;// CO2
wdot[11] += q;// H
wdot[13] += q;// OH
wdot[14] -= q;// HO2
wdot[17] -= q;// HCO
// d()/d[HO2]
dqdci =  + k_f*sc[17];
J[748] += dqdci;              // dwdot[CO2]/d[HO2]
J[753] += dqdci;              // dwdot[H]/d[HO2]
J[755] += dqdci;              // dwdot[OH]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[759] -= dqdci;              // dwdot[HCO]/d[HO2]
// d()/d[HCO]
dqdci =  + k_f*sc[14];
J[907] += dqdci;              // dwdot[CO2]/d[HCO]
J[912] += dqdci;              // dwdot[H]/d[HCO]
J[914] += dqdci;              // dwdot[OH]/d[HCO]
J[915] -= dqdci;              // dwdot[HO2]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
// d()/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT

// reaction 40: 2 HCO => 2 CO + H2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[17] * sc[17]);
k_f = 3000000
           ;
dlnkfdT = 0.0;
// rate of progress
q = k_f*phi_f;
dqdT = dlnkfdT*k_f*phi_f;
// update wdot
wdot[5] += 2 * q;// CO
wdot[9] += q;// H2
wdot[17] -= 2 * q;// HCO
// d()/d[HCO]
dqdci =  + k_f*2.000000*sc[17];
J[906] += 2 * dqdci;          // dwdot[CO]/d[HCO]
J[910] += dqdci;              // dwdot[H2]/d[HCO]
J[918] += -2 * dqdci;         // dwdot[HCO]/d[HCO]
// d()/dT
J[2761] += 2 * dqdT;          // dwdot[CO]/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2773] += -2 * dqdT;         // dwdot[HCO]/dT

// reaction 41: CH2O + O2 <=> HCO + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[18];
k_f = 8070000000
            * exp(- (26881.8342872881) * invT);
dlnkfdT = (26881.8342872881) * invT2;
// reverse
phi_r = sc[14]*sc[17];
Kc = exp(g_RT[8] - g_RT[14] - g_RT[17] + g_RT[18]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[18]) + (h_RT[14] + h_RT[17]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[14] += q;// HO2
wdot[17] += q;// HCO
wdot[18] -= q;// CH2O
// d()/d[O2]
dqdci =  + k_f*sc[18];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
J[441] += dqdci;              // dwdot[HCO]/d[O2]
J[442] -= dqdci;              // dwdot[CH2O]/d[O2]
// d()/d[HO2]
dqdci =  - k_r*sc[17];
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[759] += dqdci;              // dwdot[HCO]/d[HO2]
J[760] -= dqdci;              // dwdot[CH2O]/d[HO2]
// d()/d[HCO]
dqdci =  - k_r*sc[14];
J[909] -= dqdci;              // dwdot[O2]/d[HCO]
J[915] += dqdci;              // dwdot[HO2]/d[HCO]
J[918] += dqdci;              // dwdot[HCO]/d[HCO]
J[919] -= dqdci;              // dwdot[CH2O]/d[HCO]
// d()/d[CH2O]
dqdci =  + k_f*sc[8];
J[962] -= dqdci;              // dwdot[O2]/d[CH2O]
J[968] += dqdci;              // dwdot[HO2]/d[CH2O]
J[971] += dqdci;              // dwdot[HCO]/d[CH2O]
J[972] -= dqdci;              // dwdot[CH2O]/d[CH2O]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2773] += dqdT;              // dwdot[HCO]/dT
J[2774] -= dqdT;              // dwdot[CH2O]/dT

// reaction 42: 2 HCO <=> CH2O + CO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[17] * sc[17]);
k_f = 18000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[5]*sc[18];
Kc = exp(-g_RT[5] + 2.000000*g_RT[17] - g_RT[18]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[17]) + (h_RT[5] + h_RT[18]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[17] -= 2 * q;// HCO
wdot[18] += q;// CH2O
// d()/d[CO]
dqdci =  - k_r*sc[18];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[282] += -2 * dqdci;         // dwdot[HCO]/d[CO]
J[283] += dqdci;              // dwdot[CH2O]/d[CO]
// d()/d[HCO]
dqdci =  + k_f*2.000000*sc[17];
J[906] += dqdci;              // dwdot[CO]/d[HCO]
J[918] += -2 * dqdci;         // dwdot[HCO]/d[HCO]
J[919] += dqdci;              // dwdot[CH2O]/d[HCO]
// d()/d[CH2O]
dqdci =  - k_r*sc[5];
J[959] += dqdci;              // dwdot[CO]/d[CH2O]
J[971] += -2 * dqdci;         // dwdot[HCO]/d[CH2O]
J[972] += dqdci;              // dwdot[CH2O]/d[CH2O]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2773] += -2 * dqdT;         // dwdot[HCO]/dT
J[2774] += dqdT;              // dwdot[CH2O]/dT

// reaction 46: CN + H2 <=> H + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[9]*sc[29];
k_f = 0.11
            * exp(2.6 * tc[0] - (960.137398355405) * invT);
dlnkfdT = 2.6 * invT + (960.137398355405) * invT2;
// reverse
phi_r = sc[1]*sc[11];
Kc = exp(-g_RT[1] + g_RT[9] - g_RT[11] + g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[9] + h_RT[29]) + (h_RT[1] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[9] -= q;// H2
wdot[11] += q;// H
wdot[29] -= q;// CN
// d()/d[HCN]
dqdci =  - k_r*sc[11];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[62] -= dqdci;               // dwdot[H2]/d[HCN]
J[64] += dqdci;               // dwdot[H]/d[HCN]
J[82] -= dqdci;               // dwdot[CN]/d[HCN]
// d()/d[H2]
dqdci =  + k_f*sc[29];
J[478] += dqdci;              // dwdot[HCN]/d[H2]
J[486] -= dqdci;              // dwdot[H2]/d[H2]
J[488] += dqdci;              // dwdot[H]/d[H2]
J[506] -= dqdci;              // dwdot[CN]/d[H2]
// d()/d[H]
dqdci =  - k_r*sc[1];
J[584] += dqdci;              // dwdot[HCN]/d[H]
J[592] -= dqdci;              // dwdot[H2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[612] -= dqdci;              // dwdot[CN]/d[H]
// d()/d[CN]
dqdci =  + k_f*sc[9];
J[1538] += dqdci;             // dwdot[HCN]/d[CN]
J[1546] -= dqdci;             // dwdot[H2]/d[CN]
J[1548] += dqdci;             // dwdot[H]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2765] -= dqdT;              // dwdot[H2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT

// reaction 47: HCN + O <=> H + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[12];
k_f = 0.014
            * exp(2.64 * tc[0] - (2506.0189957075) * invT);
dlnkfdT = 2.64 * invT + (2506.0189957075) * invT2;
// reverse
phi_r = sc[11]*sc[30];
Kc = exp(g_RT[1] - g_RT[11] + g_RT[12] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[12]) + (h_RT[11] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[11] += q;// H
wdot[12] -= q;// O
wdot[30] += q;// NCO
// d()/d[HCN]
dqdci =  + k_f*sc[12];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[64] += dqdci;               // dwdot[H]/d[HCN]
J[65] -= dqdci;               // dwdot[O]/d[HCN]
J[83] += dqdci;               // dwdot[NCO]/d[HCN]
// d()/d[H]
dqdci =  - k_r*sc[30];
J[584] -= dqdci;              // dwdot[HCN]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[595] -= dqdci;              // dwdot[O]/d[H]
J[613] += dqdci;              // dwdot[NCO]/d[H]
// d()/d[O]
dqdci =  + k_f*sc[1];
J[637] -= dqdci;              // dwdot[HCN]/d[O]
J[647] += dqdci;              // dwdot[H]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[666] += dqdci;              // dwdot[NCO]/d[O]
// d()/d[NCO]
dqdci =  - k_r*sc[11];
J[1591] -= dqdci;             // dwdot[HCN]/d[NCO]
J[1601] += dqdci;             // dwdot[H]/d[NCO]
J[1602] -= dqdci;             // dwdot[O]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 48: HCN + O <=> CN + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[12];
k_f = 42000
            * exp(0.4 * tc[0] - (10398.9723988545) * invT);
dlnkfdT = 0.4 * invT + (10398.9723988545) * invT2;
// reverse
phi_r = sc[13]*sc[29];
Kc = exp(g_RT[1] + g_RT[12] - g_RT[13] - g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[12]) + (h_RT[13] + h_RT[29]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[29] += q;// CN
// d()/d[HCN]
dqdci =  + k_f*sc[12];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[65] -= dqdci;               // dwdot[O]/d[HCN]
J[66] += dqdci;               // dwdot[OH]/d[HCN]
J[82] += dqdci;               // dwdot[CN]/d[HCN]
// d()/d[O]
dqdci =  + k_f*sc[1];
J[637] -= dqdci;              // dwdot[HCN]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[665] += dqdci;              // dwdot[CN]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[29];
J[690] -= dqdci;              // dwdot[HCN]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[718] += dqdci;              // dwdot[CN]/d[OH]
// d()/d[CN]
dqdci =  - k_r*sc[13];
J[1538] -= dqdci;             // dwdot[HCN]/d[CN]
J[1549] -= dqdci;             // dwdot[O]/d[CN]
J[1550] += dqdci;             // dwdot[OH]/d[CN]
J[1566] += dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2785] += dqdT;              // dwdot[CN]/dT

// reaction 49: HCN + O <=> CO + NH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[12];
k_f = 0.0035
            * exp(2.64 * tc[0] - (2506.0189957075) * invT);
dlnkfdT = 2.64 * invT + (2506.0189957075) * invT2;
// reverse
phi_r = sc[5]*sc[28];
Kc = exp(g_RT[1] - g_RT[5] + g_RT[12] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[12]) + (h_RT[5] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[5] += q;// CO
wdot[12] -= q;// O
wdot[28] += q;// NH
// d()/d[HCN]
dqdci =  + k_f*sc[12];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[58] += dqdci;               // dwdot[CO]/d[HCN]
J[65] -= dqdci;               // dwdot[O]/d[HCN]
J[81] += dqdci;               // dwdot[NH]/d[HCN]
// d()/d[CO]
dqdci =  - k_r*sc[28];
J[266] -= dqdci;              // dwdot[HCN]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[277] -= dqdci;              // dwdot[O]/d[CO]
J[293] += dqdci;              // dwdot[NH]/d[CO]
// d()/d[O]
dqdci =  + k_f*sc[1];
J[637] -= dqdci;              // dwdot[HCN]/d[O]
J[641] += dqdci;              // dwdot[CO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[664] += dqdci;              // dwdot[NH]/d[O]
// d()/d[NH]
dqdci =  - k_r*sc[5];
J[1485] -= dqdci;             // dwdot[HCN]/d[NH]
J[1489] += dqdci;             // dwdot[CO]/d[NH]
J[1496] -= dqdci;             // dwdot[O]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 50: HCN + OH <=> CN + H2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[13];
k_f = 3.9
            * exp(1.83 * tc[0] - (5183.13165778861) * invT);
dlnkfdT = 1.83 * invT + (5183.13165778861) * invT2;
// reverse
phi_r = sc[15]*sc[29];
Kc = exp(g_RT[1] + g_RT[13] - g_RT[15] - g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[13]) + (h_RT[15] + h_RT[29]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[29] += q;// CN
// d()/d[HCN]
dqdci =  + k_f*sc[13];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[66] -= dqdci;               // dwdot[OH]/d[HCN]
J[68] += dqdci;               // dwdot[H2O]/d[HCN]
J[82] += dqdci;               // dwdot[CN]/d[HCN]
// d()/d[OH]
dqdci =  + k_f*sc[1];
J[690] -= dqdci;              // dwdot[HCN]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[718] += dqdci;              // dwdot[CN]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[29];
J[796] -= dqdci;              // dwdot[HCN]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[824] += dqdci;              // dwdot[CN]/d[H2O]
// d()/d[CN]
dqdci =  - k_r*sc[15];
J[1538] -= dqdci;             // dwdot[HCN]/d[CN]
J[1550] -= dqdci;             // dwdot[OH]/d[CN]
J[1552] += dqdci;             // dwdot[H2O]/d[CN]
J[1566] += dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2785] += dqdT;              // dwdot[CN]/dT

// reaction 51: HCN + OH <=> H + HOCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[13];
k_f = 0.059
            * exp(2.4 * tc[0] - (6290.208322559) * invT);
dlnkfdT = 2.4 * invT + (6290.208322559) * invT2;
// reverse
phi_r = sc[11]*sc[32];
Kc = exp(g_RT[1] - g_RT[11] + g_RT[13] - g_RT[32]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[13]) + (h_RT[11] + h_RT[32]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[11] += q;// H
wdot[13] -= q;// OH
wdot[32] += q;// HOCN
// d()/d[HCN]
dqdci =  + k_f*sc[13];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[64] += dqdci;               // dwdot[H]/d[HCN]
J[66] -= dqdci;               // dwdot[OH]/d[HCN]
J[85] += dqdci;               // dwdot[HOCN]/d[HCN]
// d()/d[H]
dqdci =  - k_r*sc[32];
J[584] -= dqdci;              // dwdot[HCN]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
J[615] += dqdci;              // dwdot[HOCN]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[1];
J[690] -= dqdci;              // dwdot[HCN]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[721] += dqdci;              // dwdot[HOCN]/d[OH]
// d()/d[HOCN]
dqdci =  - k_r*sc[11];
J[1697] -= dqdci;             // dwdot[HCN]/d[HOCN]
J[1707] += dqdci;             // dwdot[H]/d[HOCN]
J[1709] -= dqdci;             // dwdot[OH]/d[HOCN]
J[1728] += dqdci;             // dwdot[HOCN]/d[HOCN]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2788] += dqdT;              // dwdot[HOCN]/dT

// reaction 52: HCN + OH <=> H + HNCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[13];
k_f = 2e-09
            * exp(4 * tc[0] - (503.21666580472) * invT);
dlnkfdT = 4 * invT + (503.21666580472) * invT2;
// reverse
phi_r = sc[2]*sc[11];
Kc = exp(g_RT[1] - g_RT[2] - g_RT[11] + g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[13]) + (h_RT[2] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[2] += q;// HNCO
wdot[11] += q;// H
wdot[13] -= q;// OH
// d()/d[HCN]
dqdci =  + k_f*sc[13];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[55] += dqdci;               // dwdot[HNCO]/d[HCN]
J[64] += dqdci;               // dwdot[H]/d[HCN]
J[66] -= dqdci;               // dwdot[OH]/d[HCN]
// d()/d[HNCO]
dqdci =  - k_r*sc[11];
J[107] -= dqdci;              // dwdot[HCN]/d[HNCO]
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[117] += dqdci;              // dwdot[H]/d[HNCO]
J[119] -= dqdci;              // dwdot[OH]/d[HNCO]
// d()/d[H]
dqdci =  - k_r*sc[2];
J[584] -= dqdci;              // dwdot[HCN]/d[H]
J[585] += dqdci;              // dwdot[HNCO]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[1];
J[690] -= dqdci;              // dwdot[HCN]/d[OH]
J[691] += dqdci;              // dwdot[HNCO]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT

// reaction 53: HCN + OH <=> CO + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[13];
k_f = 7.8e-10
            * exp(4 * tc[0] - (2012.86666321888) * invT);
dlnkfdT = 4 * invT + (2012.86666321888) * invT2;
// reverse
phi_r = sc[5]*sc[27];
Kc = exp(g_RT[1] - g_RT[5] + g_RT[13] - g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[13]) + (h_RT[5] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[5] += q;// CO
wdot[13] -= q;// OH
wdot[27] += q;// NH2
// d()/d[HCN]
dqdci =  + k_f*sc[13];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[58] += dqdci;               // dwdot[CO]/d[HCN]
J[66] -= dqdci;               // dwdot[OH]/d[HCN]
J[80] += dqdci;               // dwdot[NH2]/d[HCN]
// d()/d[CO]
dqdci =  - k_r*sc[27];
J[266] -= dqdci;              // dwdot[HCN]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[278] -= dqdci;              // dwdot[OH]/d[CO]
J[292] += dqdci;              // dwdot[NH2]/d[CO]
// d()/d[OH]
dqdci =  + k_f*sc[1];
J[690] -= dqdci;              // dwdot[HCN]/d[OH]
J[694] += dqdci;              // dwdot[CO]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[716] += dqdci;              // dwdot[NH2]/d[OH]
// d()/d[NH2]
dqdci =  - k_r*sc[5];
J[1432] -= dqdci;             // dwdot[HCN]/d[NH2]
J[1436] += dqdci;             // dwdot[CO]/d[NH2]
J[1444] -= dqdci;             // dwdot[OH]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT

// reaction 54: HCN + O2 <=> CN + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[8];
k_f = 30000000
            * exp(- (37791.5716019344) * invT);
dlnkfdT = (37791.5716019344) * invT2;
// reverse
phi_r = sc[14]*sc[29];
Kc = exp(g_RT[1] + g_RT[8] - g_RT[14] - g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[8]) + (h_RT[14] + h_RT[29]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[8] -= q;// O2
wdot[14] += q;// HO2
wdot[29] += q;// CN
// d()/d[HCN]
dqdci =  + k_f*sc[8];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[61] -= dqdci;               // dwdot[O2]/d[HCN]
J[67] += dqdci;               // dwdot[HO2]/d[HCN]
J[82] += dqdci;               // dwdot[CN]/d[HCN]
// d()/d[O2]
dqdci =  + k_f*sc[1];
J[425] -= dqdci;              // dwdot[HCN]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
J[453] += dqdci;              // dwdot[CN]/d[O2]
// d()/d[HO2]
dqdci =  - k_r*sc[29];
J[743] -= dqdci;              // dwdot[HCN]/d[HO2]
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[771] += dqdci;              // dwdot[CN]/d[HO2]
// d()/d[CN]
dqdci =  - k_r*sc[14];
J[1538] -= dqdci;             // dwdot[HCN]/d[CN]
J[1545] -= dqdci;             // dwdot[O2]/d[CN]
J[1551] += dqdci;             // dwdot[HO2]/d[CN]
J[1566] += dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2785] += dqdT;              // dwdot[CN]/dT

// reaction 55: CN + HCN <=> H + NCCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[1]*sc[29];
k_f = 15
            * exp(1.71 * tc[0] - (769.921498681221) * invT);
dlnkfdT = 1.71 * invT + (769.921498681221) * invT2;
// reverse
phi_r = sc[11]*sc[31];
Kc = exp(g_RT[1] - g_RT[11] + g_RT[29] - g_RT[31]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[1] + h_RT[29]) + (h_RT[11] + h_RT[31]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] -= q;// HCN
wdot[11] += q;// H
wdot[29] -= q;// CN
wdot[31] += q;// NCCN
// d()/d[HCN]
dqdci =  + k_f*sc[29];
J[54] -= dqdci;               // dwdot[HCN]/d[HCN]
J[64] += dqdci;               // dwdot[H]/d[HCN]
J[82] -= dqdci;               // dwdot[CN]/d[HCN]
J[84] += dqdci;               // dwdot[NCCN]/d[HCN]
// d()/d[H]
dqdci =  - k_r*sc[31];
J[584] -= dqdci;              // dwdot[HCN]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[612] -= dqdci;              // dwdot[CN]/d[H]
J[614] += dqdci;              // dwdot[NCCN]/d[H]
// d()/d[CN]
dqdci =  + k_f*sc[1];
J[1538] -= dqdci;             // dwdot[HCN]/d[CN]
J[1548] += dqdci;             // dwdot[H]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1568] += dqdci;             // dwdot[NCCN]/d[CN]
// d()/d[NCCN]
dqdci =  - k_r*sc[11];
J[1644] -= dqdci;             // dwdot[HCN]/d[NCCN]
J[1654] += dqdci;             // dwdot[H]/d[NCCN]
J[1672] -= dqdci;             // dwdot[CN]/d[NCCN]
J[1674] += dqdci;             // dwdot[NCCN]/d[NCCN]
// d()/dT
J[2757] -= dqdT;              // dwdot[HCN]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2787] += dqdT;              // dwdot[NCCN]/dT

// reaction 56: H + HNC <=> H + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[7]*sc[11];
k_f = 78000000
            * exp(- (1811.57999689699) * invT);
dlnkfdT = (1811.57999689699) * invT2;
// reverse
phi_r = sc[1]*sc[11];
Kc = exp(-g_RT[1] + g_RT[7] + g_RT[11] - g_RT[11]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[7] + h_RT[11]) + (h_RT[1] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[7] -= q;// HNC
// d()/d[HCN]
dqdci =  - k_r*sc[11];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[60] -= dqdci;               // dwdot[HNC]/d[HCN]
// d()/d[HNC]
dqdci =  + k_f*sc[11];
J[372] += dqdci;              // dwdot[HCN]/d[HNC]
J[378] -= dqdci;              // dwdot[HNC]/d[HNC]
// d()/d[H]
dqdci =  + k_f*sc[7] - k_r*sc[1];
J[584] += dqdci;              // dwdot[HCN]/d[H]
J[590] -= dqdci;              // dwdot[HNC]/d[H]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2763] -= dqdT;              // dwdot[HNC]/dT

// reaction 57: HNC + O <=> CO + NH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[7]*sc[12];
k_f = 4600000
            * exp(- (1107.07666477038) * invT);
dlnkfdT = (1107.07666477038) * invT2;
// reverse
phi_r = sc[5]*sc[28];
Kc = exp(-g_RT[5] + g_RT[7] + g_RT[12] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[7] + h_RT[12]) + (h_RT[5] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[7] -= q;// HNC
wdot[12] -= q;// O
wdot[28] += q;// NH
// d()/d[CO]
dqdci =  - k_r*sc[28];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[272] -= dqdci;              // dwdot[HNC]/d[CO]
J[277] -= dqdci;              // dwdot[O]/d[CO]
J[293] += dqdci;              // dwdot[NH]/d[CO]
// d()/d[HNC]
dqdci =  + k_f*sc[12];
J[376] += dqdci;              // dwdot[CO]/d[HNC]
J[378] -= dqdci;              // dwdot[HNC]/d[HNC]
J[383] -= dqdci;              // dwdot[O]/d[HNC]
J[399] += dqdci;              // dwdot[NH]/d[HNC]
// d()/d[O]
dqdci =  + k_f*sc[7];
J[641] += dqdci;              // dwdot[CO]/d[O]
J[643] -= dqdci;              // dwdot[HNC]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[664] += dqdci;              // dwdot[NH]/d[O]
// d()/d[NH]
dqdci =  - k_r*sc[5];
J[1489] += dqdci;             // dwdot[CO]/d[NH]
J[1491] -= dqdci;             // dwdot[HNC]/d[NH]
J[1496] -= dqdci;             // dwdot[O]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2763] -= dqdT;              // dwdot[HNC]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 58: HNC + OH <=> H + HNCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[7]*sc[13];
k_f = 28000000
            * exp(- (1861.90166347746) * invT);
dlnkfdT = (1861.90166347746) * invT2;
// reverse
phi_r = sc[2]*sc[11];
Kc = exp(-g_RT[2] + g_RT[7] - g_RT[11] + g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[7] + h_RT[13]) + (h_RT[2] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[7] -= q;// HNC
wdot[11] += q;// H
wdot[13] -= q;// OH
// d()/d[HNCO]
dqdci =  - k_r*sc[11];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[113] -= dqdci;              // dwdot[HNC]/d[HNCO]
J[117] += dqdci;              // dwdot[H]/d[HNCO]
J[119] -= dqdci;              // dwdot[OH]/d[HNCO]
// d()/d[HNC]
dqdci =  + k_f*sc[13];
J[373] += dqdci;              // dwdot[HNCO]/d[HNC]
J[378] -= dqdci;              // dwdot[HNC]/d[HNC]
J[382] += dqdci;              // dwdot[H]/d[HNC]
J[384] -= dqdci;              // dwdot[OH]/d[HNC]
// d()/d[H]
dqdci =  - k_r*sc[2];
J[585] += dqdci;              // dwdot[HNCO]/d[H]
J[590] -= dqdci;              // dwdot[HNC]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[7];
J[691] += dqdci;              // dwdot[HNCO]/d[OH]
J[696] -= dqdci;              // dwdot[HNC]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2763] -= dqdT;              // dwdot[HNC]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT

// reaction 59: CN + HNC <=> H + NCCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[7]*sc[29];
k_f = 10000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[11]*sc[31];
Kc = exp(g_RT[7] - g_RT[11] + g_RT[29] - g_RT[31]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[7] + h_RT[29]) + (h_RT[11] + h_RT[31]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[7] -= q;// HNC
wdot[11] += q;// H
wdot[29] -= q;// CN
wdot[31] += q;// NCCN
// d()/d[HNC]
dqdci =  + k_f*sc[29];
J[378] -= dqdci;              // dwdot[HNC]/d[HNC]
J[382] += dqdci;              // dwdot[H]/d[HNC]
J[400] -= dqdci;              // dwdot[CN]/d[HNC]
J[402] += dqdci;              // dwdot[NCCN]/d[HNC]
// d()/d[H]
dqdci =  - k_r*sc[31];
J[590] -= dqdci;              // dwdot[HNC]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[612] -= dqdci;              // dwdot[CN]/d[H]
J[614] += dqdci;              // dwdot[NCCN]/d[H]
// d()/d[CN]
dqdci =  + k_f*sc[7];
J[1544] -= dqdci;             // dwdot[HNC]/d[CN]
J[1548] += dqdci;             // dwdot[H]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1568] += dqdci;             // dwdot[NCCN]/d[CN]
// d()/d[NCCN]
dqdci =  - k_r*sc[11];
J[1650] -= dqdci;             // dwdot[HNC]/d[NCCN]
J[1654] += dqdci;             // dwdot[H]/d[NCCN]
J[1672] -= dqdci;             // dwdot[CN]/d[NCCN]
J[1674] += dqdci;             // dwdot[NCCN]/d[NCCN]
// d()/dT
J[2763] -= dqdT;              // dwdot[HNC]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2787] += dqdT;              // dwdot[NCCN]/dT

// reaction 60: CN + O <=> CO + N
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[29];
k_f = 1900000
            * exp(0.46 * tc[0] - (363.825649376812) * invT);
dlnkfdT = 0.46 * invT + (363.825649376812) * invT2;
// reverse
phi_r = sc[5]*sc[25];
Kc = exp(-g_RT[5] + g_RT[12] - g_RT[25] + g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[29]) + (h_RT[5] + h_RT[25]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[12] -= q;// O
wdot[25] += q;// N
wdot[29] -= q;// CN
// d()/d[CO]
dqdci =  - k_r*sc[25];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[277] -= dqdci;              // dwdot[O]/d[CO]
J[290] += dqdci;              // dwdot[N]/d[CO]
J[294] -= dqdci;              // dwdot[CN]/d[CO]
// d()/d[O]
dqdci =  + k_f*sc[29];
J[641] += dqdci;              // dwdot[CO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[661] += dqdci;              // dwdot[N]/d[O]
J[665] -= dqdci;              // dwdot[CN]/d[O]
// d()/d[N]
dqdci =  - k_r*sc[5];
J[1330] += dqdci;             // dwdot[CO]/d[N]
J[1337] -= dqdci;             // dwdot[O]/d[N]
J[1350] += dqdci;             // dwdot[N]/d[N]
J[1354] -= dqdci;             // dwdot[CN]/d[N]
// d()/d[CN]
dqdci =  + k_f*sc[12];
J[1542] += dqdci;             // dwdot[CO]/d[CN]
J[1549] -= dqdci;             // dwdot[O]/d[CN]
J[1562] += dqdci;             // dwdot[N]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2781] += dqdT;              // dwdot[N]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT

// reaction 61: CN + OH <=> H + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[29];
k_f = 1000000000
            * exp(-0.437 * tc[0]);
dlnkfdT = -0.437 * invT;
// reverse
phi_r = sc[11]*sc[30];
Kc = exp(-g_RT[11] + g_RT[13] + g_RT[29] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[29]) + (h_RT[11] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[13] -= q;// OH
wdot[29] -= q;// CN
wdot[30] += q;// NCO
// d()/d[H]
dqdci =  - k_r*sc[30];
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
J[612] -= dqdci;              // dwdot[CN]/d[H]
J[613] += dqdci;              // dwdot[NCO]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[29];
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[718] -= dqdci;              // dwdot[CN]/d[OH]
J[719] += dqdci;              // dwdot[NCO]/d[OH]
// d()/d[CN]
dqdci =  + k_f*sc[13];
J[1548] += dqdci;             // dwdot[H]/d[CN]
J[1550] -= dqdci;             // dwdot[OH]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1567] += dqdci;             // dwdot[NCO]/d[CN]
// d()/d[NCO]
dqdci =  - k_r*sc[11];
J[1601] += dqdci;             // dwdot[H]/d[NCO]
J[1603] -= dqdci;             // dwdot[OH]/d[NCO]
J[1619] -= dqdci;             // dwdot[CN]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 62: CN + O2 <=> NCO + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[29];
k_f = 7200000
            * exp(- (-209.841349640568) * invT);
dlnkfdT = (-209.841349640568) * invT2;
// reverse
phi_r = sc[12]*sc[30];
Kc = exp(g_RT[8] - g_RT[12] + g_RT[29] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[29]) + (h_RT[12] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[12] += q;// O
wdot[29] -= q;// CN
wdot[30] += q;// NCO
// d()/d[O2]
dqdci =  + k_f*sc[29];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[436] += dqdci;              // dwdot[O]/d[O2]
J[453] -= dqdci;              // dwdot[CN]/d[O2]
J[454] += dqdci;              // dwdot[NCO]/d[O2]
// d()/d[O]
dqdci =  - k_r*sc[30];
J[644] -= dqdci;              // dwdot[O2]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[665] -= dqdci;              // dwdot[CN]/d[O]
J[666] += dqdci;              // dwdot[NCO]/d[O]
// d()/d[CN]
dqdci =  + k_f*sc[8];
J[1545] -= dqdci;             // dwdot[O2]/d[CN]
J[1549] += dqdci;             // dwdot[O]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1567] += dqdci;             // dwdot[NCO]/d[CN]
// d()/d[NCO]
dqdci =  - k_r*sc[12];
J[1598] -= dqdci;             // dwdot[O2]/d[NCO]
J[1602] += dqdci;             // dwdot[O]/d[NCO]
J[1619] -= dqdci;             // dwdot[CN]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 63: CN + O2 <=> NCO + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[29];
k_f = -280000000000
            * exp(-2 * tc[0]);
dlnkfdT = -2 * invT;
// reverse
phi_r = sc[12]*sc[30];
Kc = exp(g_RT[8] - g_RT[12] + g_RT[29] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[29]) + (h_RT[12] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[12] += q;// O
wdot[29] -= q;// CN
wdot[30] += q;// NCO
// d()/d[O2]
dqdci =  + k_f*sc[29];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[436] += dqdci;              // dwdot[O]/d[O2]
J[453] -= dqdci;              // dwdot[CN]/d[O2]
J[454] += dqdci;              // dwdot[NCO]/d[O2]
// d()/d[O]
dqdci =  - k_r*sc[30];
J[644] -= dqdci;              // dwdot[O2]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[665] -= dqdci;              // dwdot[CN]/d[O]
J[666] += dqdci;              // dwdot[NCO]/d[O]
// d()/d[CN]
dqdci =  + k_f*sc[8];
J[1545] -= dqdci;             // dwdot[O2]/d[CN]
J[1549] += dqdci;             // dwdot[O]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1567] += dqdci;             // dwdot[NCO]/d[CN]
// d()/d[NCO]
dqdci =  - k_r*sc[12];
J[1598] -= dqdci;             // dwdot[O2]/d[NCO]
J[1602] += dqdci;             // dwdot[O]/d[NCO]
J[1619] -= dqdci;             // dwdot[CN]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 64: CN + O2 <=> CO + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[29];
k_f = 280000000000
            * exp(-2 * tc[0]);
dlnkfdT = -2 * invT;
// reverse
phi_r = sc[3]*sc[5];
Kc = exp(-g_RT[3] - g_RT[5] + g_RT[8] + g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[29]) + (h_RT[3] + h_RT[5]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[5] += q;// CO
wdot[8] -= q;// O2
wdot[29] -= q;// CN
// d()/d[NO]
dqdci =  - k_r*sc[5];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[164] += dqdci;              // dwdot[CO]/d[NO]
J[167] -= dqdci;              // dwdot[O2]/d[NO]
J[188] -= dqdci;              // dwdot[CN]/d[NO]
// d()/d[CO]
dqdci =  - k_r*sc[3];
J[268] += dqdci;              // dwdot[NO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[273] -= dqdci;              // dwdot[O2]/d[CO]
J[294] -= dqdci;              // dwdot[CN]/d[CO]
// d()/d[O2]
dqdci =  + k_f*sc[29];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[429] += dqdci;              // dwdot[CO]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[453] -= dqdci;              // dwdot[CN]/d[O2]
// d()/d[CN]
dqdci =  + k_f*sc[8];
J[1540] += dqdci;             // dwdot[NO]/d[CN]
J[1542] += dqdci;             // dwdot[CO]/d[CN]
J[1545] -= dqdci;             // dwdot[O2]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT

// reaction 65: CN + CO2 <=> CO + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[6]*sc[29];
k_f = 3.7
            * exp(2.16 * tc[0] - (13536.528310147) * invT);
dlnkfdT = 2.16 * invT + (13536.528310147) * invT2;
// reverse
phi_r = sc[5]*sc[30];
Kc = exp(-g_RT[5] + g_RT[6] + g_RT[29] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[6] + h_RT[29]) + (h_RT[5] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[6] -= q;// CO2
wdot[29] -= q;// CN
wdot[30] += q;// NCO
// d()/d[CO]
dqdci =  - k_r*sc[30];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[271] -= dqdci;              // dwdot[CO2]/d[CO]
J[294] -= dqdci;              // dwdot[CN]/d[CO]
J[295] += dqdci;              // dwdot[NCO]/d[CO]
// d()/d[CO2]
dqdci =  + k_f*sc[29];
J[323] += dqdci;              // dwdot[CO]/d[CO2]
J[324] -= dqdci;              // dwdot[CO2]/d[CO2]
J[347] -= dqdci;              // dwdot[CN]/d[CO2]
J[348] += dqdci;              // dwdot[NCO]/d[CO2]
// d()/d[CN]
dqdci =  + k_f*sc[6];
J[1542] += dqdci;             // dwdot[CO]/d[CN]
J[1543] -= dqdci;             // dwdot[CO2]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1567] += dqdci;             // dwdot[NCO]/d[CN]
// d()/d[NCO]
dqdci =  - k_r*sc[5];
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1596] -= dqdci;             // dwdot[CO2]/d[NCO]
J[1619] -= dqdci;             // dwdot[CN]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2762] -= dqdT;              // dwdot[CO2]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 66: CH2O + CN <=> HCN + HCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[18]*sc[29];
k_f = 42000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[1]*sc[17];
Kc = exp(-g_RT[1] - g_RT[17] + g_RT[18] + g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[18] + h_RT[29]) + (h_RT[1] + h_RT[17]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[17] += q;// HCO
wdot[18] -= q;// CH2O
wdot[29] -= q;// CN
// d()/d[HCN]
dqdci =  - k_r*sc[17];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[70] += dqdci;               // dwdot[HCO]/d[HCN]
J[71] -= dqdci;               // dwdot[CH2O]/d[HCN]
J[82] -= dqdci;               // dwdot[CN]/d[HCN]
// d()/d[HCO]
dqdci =  - k_r*sc[1];
J[902] += dqdci;              // dwdot[HCN]/d[HCO]
J[918] += dqdci;              // dwdot[HCO]/d[HCO]
J[919] -= dqdci;              // dwdot[CH2O]/d[HCO]
J[930] -= dqdci;              // dwdot[CN]/d[HCO]
// d()/d[CH2O]
dqdci =  + k_f*sc[29];
J[955] += dqdci;              // dwdot[HCN]/d[CH2O]
J[971] += dqdci;              // dwdot[HCO]/d[CH2O]
J[972] -= dqdci;              // dwdot[CH2O]/d[CH2O]
J[983] -= dqdci;              // dwdot[CN]/d[CH2O]
// d()/d[CN]
dqdci =  + k_f*sc[18];
J[1538] += dqdci;             // dwdot[HCN]/d[CN]
J[1554] += dqdci;             // dwdot[HCO]/d[CN]
J[1555] -= dqdci;             // dwdot[CH2O]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2773] += dqdT;              // dwdot[HCO]/dT
J[2774] -= dqdT;              // dwdot[CH2O]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT

// reaction 67: CN + NO <=> N + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[29];
k_f = 96000000
            * exp(- (21185.4216303787) * invT);
dlnkfdT = (21185.4216303787) * invT2;
// reverse
phi_r = sc[25]*sc[30];
Kc = exp(g_RT[3] - g_RT[25] + g_RT[29] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[29]) + (h_RT[25] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[25] += q;// N
wdot[29] -= q;// CN
wdot[30] += q;// NCO
// d()/d[NO]
dqdci =  + k_f*sc[29];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[184] += dqdci;              // dwdot[N]/d[NO]
J[188] -= dqdci;              // dwdot[CN]/d[NO]
J[189] += dqdci;              // dwdot[NCO]/d[NO]
// d()/d[N]
dqdci =  - k_r*sc[30];
J[1328] -= dqdci;             // dwdot[NO]/d[N]
J[1350] += dqdci;             // dwdot[N]/d[N]
J[1354] -= dqdci;             // dwdot[CN]/d[N]
J[1355] += dqdci;             // dwdot[NCO]/d[N]
// d()/d[CN]
dqdci =  + k_f*sc[3];
J[1540] -= dqdci;             // dwdot[NO]/d[CN]
J[1562] += dqdci;             // dwdot[N]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1567] += dqdci;             // dwdot[NCO]/d[CN]
// d()/d[NCO]
dqdci =  - k_r*sc[25];
J[1593] -= dqdci;             // dwdot[NO]/d[NCO]
J[1615] += dqdci;             // dwdot[N]/d[NCO]
J[1619] -= dqdci;             // dwdot[CN]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2781] += dqdT;              // dwdot[N]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 68: CN + NO2 <=> NCO + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[29];
k_f = 5300000000
            * exp(-0.752 * tc[0] - (173.106533036824) * invT);
dlnkfdT = -0.752 * invT + (173.106533036824) * invT2;
// reverse
phi_r = sc[3]*sc[30];
Kc = exp(-g_RT[3] + g_RT[19] + g_RT[29] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[29]) + (h_RT[3] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[19] -= q;// NO2
wdot[29] -= q;// CN
wdot[30] += q;// NCO
// d()/d[NO]
dqdci =  - k_r*sc[30];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
J[188] -= dqdci;              // dwdot[CN]/d[NO]
J[189] += dqdci;              // dwdot[NCO]/d[NO]
// d()/d[NO2]
dqdci =  + k_f*sc[29];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1036] -= dqdci;             // dwdot[CN]/d[NO2]
J[1037] += dqdci;             // dwdot[NCO]/d[NO2]
// d()/d[CN]
dqdci =  + k_f*sc[19];
J[1540] += dqdci;             // dwdot[NO]/d[CN]
J[1556] -= dqdci;             // dwdot[NO2]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1567] += dqdci;             // dwdot[NCO]/d[CN]
// d()/d[NCO]
dqdci =  - k_r*sc[3];
J[1593] += dqdci;             // dwdot[NO]/d[NCO]
J[1609] -= dqdci;             // dwdot[NO2]/d[NCO]
J[1619] -= dqdci;             // dwdot[CN]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 69: CN + NO2 <=> CO + N2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[29];
k_f = 490000000
            * exp(-0.752 * tc[0] - (173.106533036824) * invT);
dlnkfdT = -0.752 * invT + (173.106533036824) * invT2;
// reverse
phi_r = sc[4]*sc[5];
Kc = exp(-g_RT[4] - g_RT[5] + g_RT[19] + g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[29]) + (h_RT[4] + h_RT[5]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] += q;// N2O
wdot[5] += q;// CO
wdot[19] -= q;// NO2
wdot[29] -= q;// CN
// d()/d[N2O]
dqdci =  - k_r*sc[5];
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[217] += dqdci;              // dwdot[CO]/d[N2O]
J[231] -= dqdci;              // dwdot[NO2]/d[N2O]
J[241] -= dqdci;              // dwdot[CN]/d[N2O]
// d()/d[CO]
dqdci =  - k_r*sc[4];
J[269] += dqdci;              // dwdot[N2O]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[284] -= dqdci;              // dwdot[NO2]/d[CO]
J[294] -= dqdci;              // dwdot[CN]/d[CO]
// d()/d[NO2]
dqdci =  + k_f*sc[29];
J[1011] += dqdci;             // dwdot[N2O]/d[NO2]
J[1012] += dqdci;             // dwdot[CO]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1036] -= dqdci;             // dwdot[CN]/d[NO2]
// d()/d[CN]
dqdci =  + k_f*sc[19];
J[1541] += dqdci;             // dwdot[N2O]/d[CN]
J[1542] += dqdci;             // dwdot[CO]/d[CN]
J[1556] -= dqdci;             // dwdot[NO2]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT

// reaction 70: CN + NO2 <=> CO2 + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[29];
k_f = 370000000
            * exp(-0.752 * tc[0] - (173.106533036824) * invT);
dlnkfdT = -0.752 * invT + (173.106533036824) * invT2;
// reverse
phi_r = sc[6]*sc[45];
Kc = exp(-g_RT[6] + g_RT[19] + g_RT[29] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[29]) + (h_RT[6] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[6] += q;// CO2
wdot[19] -= q;// NO2
wdot[29] -= q;// CN
wdot[45] += q;// N2
// d()/d[CO2]
dqdci =  - k_r*sc[45];
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[337] -= dqdci;              // dwdot[NO2]/d[CO2]
J[347] -= dqdci;              // dwdot[CN]/d[CO2]
J[363] += dqdci;              // dwdot[N2]/d[CO2]
// d()/d[NO2]
dqdci =  + k_f*sc[29];
J[1013] += dqdci;             // dwdot[CO2]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1036] -= dqdci;             // dwdot[CN]/d[NO2]
J[1052] += dqdci;             // dwdot[N2]/d[NO2]
// d()/d[CN]
dqdci =  + k_f*sc[19];
J[1543] += dqdci;             // dwdot[CO2]/d[CN]
J[1556] -= dqdci;             // dwdot[NO2]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1582] += dqdci;             // dwdot[N2]/d[CN]
// d()/d[N2]
dqdci =  - k_r*sc[6];
J[2391] += dqdci;             // dwdot[CO2]/d[N2]
J[2404] -= dqdci;             // dwdot[NO2]/d[N2]
J[2414] -= dqdci;             // dwdot[CN]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 71: CN + HNO <=> HCN + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[21]*sc[29];
k_f = 18000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[1]*sc[3];
Kc = exp(-g_RT[1] - g_RT[3] + g_RT[21] + g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[21] + h_RT[29]) + (h_RT[1] + h_RT[3]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[3] += q;// NO
wdot[21] -= q;// HNO
wdot[29] -= q;// CN
// d()/d[HCN]
dqdci =  - k_r*sc[3];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[56] += dqdci;               // dwdot[NO]/d[HCN]
J[74] -= dqdci;               // dwdot[HNO]/d[HCN]
J[82] -= dqdci;               // dwdot[CN]/d[HCN]
// d()/d[NO]
dqdci =  - k_r*sc[1];
J[160] += dqdci;              // dwdot[HCN]/d[NO]
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
J[188] -= dqdci;              // dwdot[CN]/d[NO]
// d()/d[HNO]
dqdci =  + k_f*sc[29];
J[1114] += dqdci;             // dwdot[HCN]/d[HNO]
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
J[1142] -= dqdci;             // dwdot[CN]/d[HNO]
// d()/d[CN]
dqdci =  + k_f*sc[21];
J[1538] += dqdci;             // dwdot[HCN]/d[CN]
J[1540] += dqdci;             // dwdot[NO]/d[CN]
J[1558] -= dqdci;             // dwdot[HNO]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT

// reaction 72: CN + HONO <=> HCN + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[23]*sc[29];
k_f = 12000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[1]*sc[19];
Kc = exp(-g_RT[1] - g_RT[19] + g_RT[23] + g_RT[29]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[23] + h_RT[29]) + (h_RT[1] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[19] += q;// NO2
wdot[23] -= q;// HONO
wdot[29] -= q;// CN
// d()/d[HCN]
dqdci =  - k_r*sc[19];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[72] += dqdci;               // dwdot[NO2]/d[HCN]
J[76] -= dqdci;               // dwdot[HONO]/d[HCN]
J[82] -= dqdci;               // dwdot[CN]/d[HCN]
// d()/d[NO2]
dqdci =  - k_r*sc[1];
J[1008] += dqdci;             // dwdot[HCN]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1030] -= dqdci;             // dwdot[HONO]/d[NO2]
J[1036] -= dqdci;             // dwdot[CN]/d[NO2]
// d()/d[HONO]
dqdci =  + k_f*sc[29];
J[1220] += dqdci;             // dwdot[HCN]/d[HONO]
J[1238] += dqdci;             // dwdot[NO2]/d[HONO]
J[1242] -= dqdci;             // dwdot[HONO]/d[HONO]
J[1248] -= dqdci;             // dwdot[CN]/d[HONO]
// d()/d[CN]
dqdci =  + k_f*sc[23];
J[1538] += dqdci;             // dwdot[HCN]/d[CN]
J[1556] += dqdci;             // dwdot[NO2]/d[CN]
J[1560] -= dqdci;             // dwdot[HONO]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2779] -= dqdT;              // dwdot[HONO]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT

// reaction 73: CN + N2O <=> NCN + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[29];
k_f = 0.0038
            * exp(2.6 * tc[0] - (1861.90166347746) * invT);
dlnkfdT = 2.6 * invT + (1861.90166347746) * invT2;
// reverse
phi_r = sc[3]*sc[34];
Kc = exp(-g_RT[3] + g_RT[4] + g_RT[29] - g_RT[34]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[29]) + (h_RT[3] + h_RT[34]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[4] -= q;// N2O
wdot[29] -= q;// CN
wdot[34] += q;// NCN
// d()/d[NO]
dqdci =  - k_r*sc[34];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[163] -= dqdci;              // dwdot[N2O]/d[NO]
J[188] -= dqdci;              // dwdot[CN]/d[NO]
J[193] += dqdci;              // dwdot[NCN]/d[NO]
// d()/d[N2O]
dqdci =  + k_f*sc[29];
J[215] += dqdci;              // dwdot[NO]/d[N2O]
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[241] -= dqdci;              // dwdot[CN]/d[N2O]
J[246] += dqdci;              // dwdot[NCN]/d[N2O]
// d()/d[CN]
dqdci =  + k_f*sc[4];
J[1540] += dqdci;             // dwdot[NO]/d[CN]
J[1541] -= dqdci;             // dwdot[N2O]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1571] += dqdci;             // dwdot[NCN]/d[CN]
// d()/d[NCN]
dqdci =  - k_r*sc[3];
J[1805] += dqdci;             // dwdot[NO]/d[NCN]
J[1806] -= dqdci;             // dwdot[N2O]/d[NCN]
J[1831] -= dqdci;             // dwdot[CN]/d[NCN]
J[1836] += dqdci;             // dwdot[NCN]/d[NCN]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2790] += dqdT;              // dwdot[NCN]/dT

// reaction 74: CN + HNCO <=> HCN + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[29];
k_f = 10000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[1]*sc[30];
Kc = exp(-g_RT[1] + g_RT[2] + g_RT[29] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[29]) + (h_RT[1] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[2] -= q;// HNCO
wdot[29] -= q;// CN
wdot[30] += q;// NCO
// d()/d[HCN]
dqdci =  - k_r*sc[30];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[55] -= dqdci;               // dwdot[HNCO]/d[HCN]
J[82] -= dqdci;               // dwdot[CN]/d[HCN]
J[83] += dqdci;               // dwdot[NCO]/d[HCN]
// d()/d[HNCO]
dqdci =  + k_f*sc[29];
J[107] += dqdci;              // dwdot[HCN]/d[HNCO]
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[135] -= dqdci;              // dwdot[CN]/d[HNCO]
J[136] += dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[CN]
dqdci =  + k_f*sc[2];
J[1538] += dqdci;             // dwdot[HCN]/d[CN]
J[1539] -= dqdci;             // dwdot[HNCO]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1567] += dqdci;             // dwdot[NCO]/d[CN]
// d()/d[NCO]
dqdci =  - k_r*sc[1];
J[1591] += dqdci;             // dwdot[HCN]/d[NCO]
J[1592] -= dqdci;             // dwdot[HNCO]/d[NCO]
J[1619] -= dqdci;             // dwdot[CN]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 75: CN + NCO <=> CO + NCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[29]*sc[30];
k_f = 18000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[5]*sc[34];
Kc = exp(-g_RT[5] + g_RT[29] + g_RT[30] - g_RT[34]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[29] + h_RT[30]) + (h_RT[5] + h_RT[34]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[29] -= q;// CN
wdot[30] -= q;// NCO
wdot[34] += q;// NCN
// d()/d[CO]
dqdci =  - k_r*sc[34];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[294] -= dqdci;              // dwdot[CN]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
J[299] += dqdci;              // dwdot[NCN]/d[CO]
// d()/d[CN]
dqdci =  + k_f*sc[30];
J[1542] += dqdci;             // dwdot[CO]/d[CN]
J[1566] -= dqdci;             // dwdot[CN]/d[CN]
J[1567] -= dqdci;             // dwdot[NCO]/d[CN]
J[1571] += dqdci;             // dwdot[NCN]/d[CN]
// d()/d[NCO]
dqdci =  + k_f*sc[29];
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1619] -= dqdci;             // dwdot[CN]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
J[1624] += dqdci;             // dwdot[NCN]/d[NCO]
// d()/d[NCN]
dqdci =  - k_r*sc[5];
J[1807] += dqdci;             // dwdot[CO]/d[NCN]
J[1831] -= dqdci;             // dwdot[CN]/d[NCN]
J[1832] -= dqdci;             // dwdot[NCO]/d[NCN]
J[1836] += dqdci;             // dwdot[NCN]/d[NCN]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2785] -= dqdT;              // dwdot[CN]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT
J[2790] += dqdT;              // dwdot[NCN]/dT

// reaction 77: H + HNCO <=> CO + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[11];
k_f = 0.036
            * exp(2.49 * tc[0] - (1180.04308131207) * invT);
dlnkfdT = 2.49 * invT + (1180.04308131207) * invT2;
// reverse
phi_r = sc[5]*sc[27];
Kc = exp(g_RT[2] - g_RT[5] + g_RT[11] - g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[11]) + (h_RT[5] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[5] += q;// CO
wdot[11] -= q;// H
wdot[27] += q;// NH2
// d()/d[HNCO]
dqdci =  + k_f*sc[11];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[111] += dqdci;              // dwdot[CO]/d[HNCO]
J[117] -= dqdci;              // dwdot[H]/d[HNCO]
J[133] += dqdci;              // dwdot[NH2]/d[HNCO]
// d()/d[CO]
dqdci =  - k_r*sc[27];
J[267] -= dqdci;              // dwdot[HNCO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[276] -= dqdci;              // dwdot[H]/d[CO]
J[292] += dqdci;              // dwdot[NH2]/d[CO]
// d()/d[H]
dqdci =  + k_f*sc[2];
J[585] -= dqdci;              // dwdot[HNCO]/d[H]
J[588] += dqdci;              // dwdot[CO]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[610] += dqdci;              // dwdot[NH2]/d[H]
// d()/d[NH2]
dqdci =  - k_r*sc[5];
J[1433] -= dqdci;             // dwdot[HNCO]/d[NH2]
J[1436] += dqdci;             // dwdot[CO]/d[NH2]
J[1442] -= dqdci;             // dwdot[H]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT

// reaction 78: H + HNCO <=> H2 + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[11];
k_f = 90
            * exp(1.66 * tc[0] - (6994.7116546856) * invT);
dlnkfdT = 1.66 * invT + (6994.7116546856) * invT2;
// reverse
phi_r = sc[9]*sc[30];
Kc = exp(g_RT[2] - g_RT[9] + g_RT[11] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[11]) + (h_RT[9] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[30] += q;// NCO
// d()/d[HNCO]
dqdci =  + k_f*sc[11];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[115] += dqdci;              // dwdot[H2]/d[HNCO]
J[117] -= dqdci;              // dwdot[H]/d[HNCO]
J[136] += dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[H2]
dqdci =  - k_r*sc[30];
J[479] -= dqdci;              // dwdot[HNCO]/d[H2]
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[507] += dqdci;              // dwdot[NCO]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[2];
J[585] -= dqdci;              // dwdot[HNCO]/d[H]
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[613] += dqdci;              // dwdot[NCO]/d[H]
// d()/d[NCO]
dqdci =  - k_r*sc[9];
J[1592] -= dqdci;             // dwdot[HNCO]/d[NCO]
J[1599] += dqdci;             // dwdot[H2]/d[NCO]
J[1601] -= dqdci;             // dwdot[H]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 79: HNCO + O <=> NCO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[12];
k_f = 2.2
            * exp(2.11 * tc[0] - (5751.76649014795) * invT);
dlnkfdT = 2.11 * invT + (5751.76649014795) * invT2;
// reverse
phi_r = sc[13]*sc[30];
Kc = exp(g_RT[2] + g_RT[12] - g_RT[13] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[12]) + (h_RT[13] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[30] += q;// NCO
// d()/d[HNCO]
dqdci =  + k_f*sc[12];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[118] -= dqdci;              // dwdot[O]/d[HNCO]
J[119] += dqdci;              // dwdot[OH]/d[HNCO]
J[136] += dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[O]
dqdci =  + k_f*sc[2];
J[638] -= dqdci;              // dwdot[HNCO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[666] += dqdci;              // dwdot[NCO]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[30];
J[691] -= dqdci;              // dwdot[HNCO]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[719] += dqdci;              // dwdot[NCO]/d[OH]
// d()/d[NCO]
dqdci =  - k_r*sc[13];
J[1592] -= dqdci;             // dwdot[HNCO]/d[NCO]
J[1602] -= dqdci;             // dwdot[O]/d[NCO]
J[1603] += dqdci;             // dwdot[OH]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 80: HNCO + O <=> CO2 + NH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[12];
k_f = 96
            * exp(1.41 * tc[0] - (4287.40599265621) * invT);
dlnkfdT = 1.41 * invT + (4287.40599265621) * invT2;
// reverse
phi_r = sc[6]*sc[28];
Kc = exp(g_RT[2] - g_RT[6] + g_RT[12] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[12]) + (h_RT[6] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[6] += q;// CO2
wdot[12] -= q;// O
wdot[28] += q;// NH
// d()/d[HNCO]
dqdci =  + k_f*sc[12];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[112] += dqdci;              // dwdot[CO2]/d[HNCO]
J[118] -= dqdci;              // dwdot[O]/d[HNCO]
J[134] += dqdci;              // dwdot[NH]/d[HNCO]
// d()/d[CO2]
dqdci =  - k_r*sc[28];
J[320] -= dqdci;              // dwdot[HNCO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[330] -= dqdci;              // dwdot[O]/d[CO2]
J[346] += dqdci;              // dwdot[NH]/d[CO2]
// d()/d[O]
dqdci =  + k_f*sc[2];
J[638] -= dqdci;              // dwdot[HNCO]/d[O]
J[642] += dqdci;              // dwdot[CO2]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[664] += dqdci;              // dwdot[NH]/d[O]
// d()/d[NH]
dqdci =  - k_r*sc[6];
J[1486] -= dqdci;             // dwdot[HNCO]/d[NH]
J[1490] += dqdci;             // dwdot[CO2]/d[NH]
J[1496] -= dqdci;             // dwdot[O]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 81: HNCO + O <=> CO + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[12];
k_f = 150
            * exp(1.57 * tc[0] - (22147.5718953973) * invT);
dlnkfdT = 1.57 * invT + (22147.5718953973) * invT2;
// reverse
phi_r = sc[5]*sc[21];
Kc = exp(g_RT[2] - g_RT[5] + g_RT[12] - g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[12]) + (h_RT[5] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[5] += q;// CO
wdot[12] -= q;// O
wdot[21] += q;// HNO
// d()/d[HNCO]
dqdci =  + k_f*sc[12];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[111] += dqdci;              // dwdot[CO]/d[HNCO]
J[118] -= dqdci;              // dwdot[O]/d[HNCO]
J[127] += dqdci;              // dwdot[HNO]/d[HNCO]
// d()/d[CO]
dqdci =  - k_r*sc[21];
J[267] -= dqdci;              // dwdot[HNCO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[277] -= dqdci;              // dwdot[O]/d[CO]
J[286] += dqdci;              // dwdot[HNO]/d[CO]
// d()/d[O]
dqdci =  + k_f*sc[2];
J[638] -= dqdci;              // dwdot[HNCO]/d[O]
J[641] += dqdci;              // dwdot[CO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[657] += dqdci;              // dwdot[HNO]/d[O]
// d()/d[HNO]
dqdci =  - k_r*sc[5];
J[1115] -= dqdci;             // dwdot[HNCO]/d[HNO]
J[1118] += dqdci;             // dwdot[CO]/d[HNO]
J[1125] -= dqdci;             // dwdot[O]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT

// reaction 82: HNCO + OH <=> H2O + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[13];
k_f = 36
            * exp(1.5 * tc[0] - (1811.57999689699) * invT);
dlnkfdT = 1.5 * invT + (1811.57999689699) * invT2;
// reverse
phi_r = sc[15]*sc[30];
Kc = exp(g_RT[2] + g_RT[13] - g_RT[15] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[13]) + (h_RT[15] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[30] += q;// NCO
// d()/d[HNCO]
dqdci =  + k_f*sc[13];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[119] -= dqdci;              // dwdot[OH]/d[HNCO]
J[121] += dqdci;              // dwdot[H2O]/d[HNCO]
J[136] += dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[OH]
dqdci =  + k_f*sc[2];
J[691] -= dqdci;              // dwdot[HNCO]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[719] += dqdci;              // dwdot[NCO]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[30];
J[797] -= dqdci;              // dwdot[HNCO]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[825] += dqdci;              // dwdot[NCO]/d[H2O]
// d()/d[NCO]
dqdci =  - k_r*sc[15];
J[1592] -= dqdci;             // dwdot[HNCO]/d[NCO]
J[1603] -= dqdci;             // dwdot[OH]/d[NCO]
J[1605] += dqdci;             // dwdot[H2O]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 83: HNCO + HO2 <=> H2O2 + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[14];
k_f = 300000
            * exp(- (11070.7666477038) * invT);
dlnkfdT = (11070.7666477038) * invT2;
// reverse
phi_r = sc[16]*sc[30];
Kc = exp(g_RT[2] + g_RT[14] - g_RT[16] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[14]) + (h_RT[16] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[14] -= q;// HO2
wdot[16] += q;// H2O2
wdot[30] += q;// NCO
// d()/d[HNCO]
dqdci =  + k_f*sc[14];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[120] -= dqdci;              // dwdot[HO2]/d[HNCO]
J[122] += dqdci;              // dwdot[H2O2]/d[HNCO]
J[136] += dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[HO2]
dqdci =  + k_f*sc[2];
J[744] -= dqdci;              // dwdot[HNCO]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[758] += dqdci;              // dwdot[H2O2]/d[HO2]
J[772] += dqdci;              // dwdot[NCO]/d[HO2]
// d()/d[H2O2]
dqdci =  - k_r*sc[30];
J[850] -= dqdci;              // dwdot[HNCO]/d[H2O2]
J[862] -= dqdci;              // dwdot[HO2]/d[H2O2]
J[864] += dqdci;              // dwdot[H2O2]/d[H2O2]
J[878] += dqdci;              // dwdot[NCO]/d[H2O2]
// d()/d[NCO]
dqdci =  - k_r*sc[16];
J[1592] -= dqdci;             // dwdot[HNCO]/d[NCO]
J[1604] -= dqdci;             // dwdot[HO2]/d[NCO]
J[1606] += dqdci;             // dwdot[H2O2]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2772] += dqdT;              // dwdot[H2O2]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 84: HNCO + O2 <=> CO2 + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[8];
k_f = 1000000
            * exp(- (17612.5833031652) * invT);
dlnkfdT = (17612.5833031652) * invT2;
// reverse
phi_r = sc[6]*sc[21];
Kc = exp(g_RT[2] - g_RT[6] + g_RT[8] - g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[8]) + (h_RT[6] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[6] += q;// CO2
wdot[8] -= q;// O2
wdot[21] += q;// HNO
// d()/d[HNCO]
dqdci =  + k_f*sc[8];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[112] += dqdci;              // dwdot[CO2]/d[HNCO]
J[114] -= dqdci;              // dwdot[O2]/d[HNCO]
J[127] += dqdci;              // dwdot[HNO]/d[HNCO]
// d()/d[CO2]
dqdci =  - k_r*sc[21];
J[320] -= dqdci;              // dwdot[HNCO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[326] -= dqdci;              // dwdot[O2]/d[CO2]
J[339] += dqdci;              // dwdot[HNO]/d[CO2]
// d()/d[O2]
dqdci =  + k_f*sc[2];
J[426] -= dqdci;              // dwdot[HNCO]/d[O2]
J[430] += dqdci;              // dwdot[CO2]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[445] += dqdci;              // dwdot[HNO]/d[O2]
// d()/d[HNO]
dqdci =  - k_r*sc[6];
J[1115] -= dqdci;             // dwdot[HNCO]/d[HNO]
J[1119] += dqdci;             // dwdot[CO2]/d[HNO]
J[1121] -= dqdci;             // dwdot[O2]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT

// reaction 85: HNCO + NH <=> NCO + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[2]*sc[28];
k_f = 30000000
            * exp(- (11926.2349795719) * invT);
dlnkfdT = (11926.2349795719) * invT2;
// reverse
phi_r = sc[27]*sc[30];
Kc = exp(g_RT[2] - g_RT[27] + g_RT[28] - g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[2] + h_RT[28]) + (h_RT[27] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] -= q;// HNCO
wdot[27] += q;// NH2
wdot[28] -= q;// NH
wdot[30] += q;// NCO
// d()/d[HNCO]
dqdci =  + k_f*sc[28];
J[108] -= dqdci;              // dwdot[HNCO]/d[HNCO]
J[133] += dqdci;              // dwdot[NH2]/d[HNCO]
J[134] -= dqdci;              // dwdot[NH]/d[HNCO]
J[136] += dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[NH2]
dqdci =  - k_r*sc[30];
J[1433] -= dqdci;             // dwdot[HNCO]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
J[1459] -= dqdci;             // dwdot[NH]/d[NH2]
J[1461] += dqdci;             // dwdot[NCO]/d[NH2]
// d()/d[NH]
dqdci =  + k_f*sc[2];
J[1486] -= dqdci;             // dwdot[HNCO]/d[NH]
J[1511] += dqdci;             // dwdot[NH2]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
J[1514] += dqdci;             // dwdot[NCO]/d[NH]
// d()/d[NCO]
dqdci =  - k_r*sc[27];
J[1592] -= dqdci;             // dwdot[HNCO]/d[NCO]
J[1617] += dqdci;             // dwdot[NH2]/d[NCO]
J[1618] -= dqdci;             // dwdot[NH]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] -= dqdT;              // dwdot[HNCO]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT

// reaction 86: H + HOCN <=> H + HNCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[32];
k_f = 310
            * exp(0.84 * tc[0] - (964.666348347648) * invT);
dlnkfdT = 0.84 * invT + (964.666348347648) * invT2;
// reverse
phi_r = sc[2]*sc[11];
Kc = exp(-g_RT[2] + g_RT[11] - g_RT[11] + g_RT[32]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[32]) + (h_RT[2] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[32] -= q;// HOCN
// d()/d[HNCO]
dqdci =  - k_r*sc[11];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[138] -= dqdci;              // dwdot[HOCN]/d[HNCO]
// d()/d[H]
dqdci =  + k_f*sc[32] - k_r*sc[2];
J[585] += dqdci;              // dwdot[HNCO]/d[H]
J[615] -= dqdci;              // dwdot[HOCN]/d[H]
// d()/d[HOCN]
dqdci =  + k_f*sc[11];
J[1698] += dqdci;             // dwdot[HNCO]/d[HOCN]
J[1728] -= dqdci;             // dwdot[HOCN]/d[HOCN]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2788] -= dqdT;              // dwdot[HOCN]/dT

// reaction 87: H + HOCN <=> CO + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[32];
k_f = 120
            * exp(0.61 * tc[0] - (1044.6777982106) * invT);
dlnkfdT = 0.61 * invT + (1044.6777982106) * invT2;
// reverse
phi_r = sc[5]*sc[27];
Kc = exp(-g_RT[5] + g_RT[11] - g_RT[27] + g_RT[32]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[32]) + (h_RT[5] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[11] -= q;// H
wdot[27] += q;// NH2
wdot[32] -= q;// HOCN
// d()/d[CO]
dqdci =  - k_r*sc[27];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[276] -= dqdci;              // dwdot[H]/d[CO]
J[292] += dqdci;              // dwdot[NH2]/d[CO]
J[297] -= dqdci;              // dwdot[HOCN]/d[CO]
// d()/d[H]
dqdci =  + k_f*sc[32];
J[588] += dqdci;              // dwdot[CO]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[610] += dqdci;              // dwdot[NH2]/d[H]
J[615] -= dqdci;              // dwdot[HOCN]/d[H]
// d()/d[NH2]
dqdci =  - k_r*sc[5];
J[1436] += dqdci;             // dwdot[CO]/d[NH2]
J[1442] -= dqdci;             // dwdot[H]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
J[1463] -= dqdci;             // dwdot[HOCN]/d[NH2]
// d()/d[HOCN]
dqdci =  + k_f*sc[11];
J[1701] += dqdci;             // dwdot[CO]/d[HOCN]
J[1707] -= dqdci;             // dwdot[H]/d[HOCN]
J[1723] += dqdci;             // dwdot[NH2]/d[HOCN]
J[1728] -= dqdci;             // dwdot[HOCN]/d[HOCN]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT
J[2788] -= dqdT;              // dwdot[HOCN]/dT

// reaction 88: H + HOCN <=> H2 + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[32];
k_f = 240
            * exp(1.5 * tc[0] - (3329.78467762983) * invT);
dlnkfdT = 1.5 * invT + (3329.78467762983) * invT2;
// reverse
phi_r = sc[9]*sc[30];
Kc = exp(-g_RT[9] + g_RT[11] - g_RT[30] + g_RT[32]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[32]) + (h_RT[9] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[30] += q;// NCO
wdot[32] -= q;// HOCN
// d()/d[H2]
dqdci =  - k_r*sc[30];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[507] += dqdci;              // dwdot[NCO]/d[H2]
J[509] -= dqdci;              // dwdot[HOCN]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[32];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[613] += dqdci;              // dwdot[NCO]/d[H]
J[615] -= dqdci;              // dwdot[HOCN]/d[H]
// d()/d[NCO]
dqdci =  - k_r*sc[9];
J[1599] += dqdci;             // dwdot[H2]/d[NCO]
J[1601] -= dqdci;             // dwdot[H]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
J[1622] -= dqdci;             // dwdot[HOCN]/d[NCO]
// d()/d[HOCN]
dqdci =  + k_f*sc[11];
J[1705] += dqdci;             // dwdot[H2]/d[HOCN]
J[1707] -= dqdci;             // dwdot[H]/d[HOCN]
J[1726] += dqdci;             // dwdot[NCO]/d[HOCN]
J[1728] -= dqdci;             // dwdot[HOCN]/d[HOCN]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT
J[2788] -= dqdT;              // dwdot[HOCN]/dT

// reaction 89: HOCN + O <=> NCO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[32];
k_f = 170
            * exp(1.5 * tc[0] - (2079.79447977091) * invT);
dlnkfdT = 1.5 * invT + (2079.79447977091) * invT2;
// reverse
phi_r = sc[13]*sc[30];
Kc = exp(g_RT[12] - g_RT[13] - g_RT[30] + g_RT[32]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[32]) + (h_RT[13] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[30] += q;// NCO
wdot[32] -= q;// HOCN
// d()/d[O]
dqdci =  + k_f*sc[32];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[666] += dqdci;              // dwdot[NCO]/d[O]
J[668] -= dqdci;              // dwdot[HOCN]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[30];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[719] += dqdci;              // dwdot[NCO]/d[OH]
J[721] -= dqdci;              // dwdot[HOCN]/d[OH]
// d()/d[NCO]
dqdci =  - k_r*sc[13];
J[1602] -= dqdci;             // dwdot[O]/d[NCO]
J[1603] += dqdci;             // dwdot[OH]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
J[1622] -= dqdci;             // dwdot[HOCN]/d[NCO]
// d()/d[HOCN]
dqdci =  + k_f*sc[12];
J[1708] -= dqdci;             // dwdot[O]/d[HOCN]
J[1709] += dqdci;             // dwdot[OH]/d[HOCN]
J[1726] += dqdci;             // dwdot[NCO]/d[HOCN]
J[1728] -= dqdci;             // dwdot[HOCN]/d[HOCN]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT
J[2788] -= dqdT;              // dwdot[HOCN]/dT

// reaction 90: HOCN + OH <=> H2O + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[32];
k_f = 1.2
            * exp(2 * tc[0] - (-124.79773311957) * invT);
dlnkfdT = 2 * invT + (-124.79773311957) * invT2;
// reverse
phi_r = sc[15]*sc[30];
Kc = exp(g_RT[13] - g_RT[15] - g_RT[30] + g_RT[32]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[32]) + (h_RT[15] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[30] += q;// NCO
wdot[32] -= q;// HOCN
// d()/d[OH]
dqdci =  + k_f*sc[32];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[719] += dqdci;              // dwdot[NCO]/d[OH]
J[721] -= dqdci;              // dwdot[HOCN]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[30];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[825] += dqdci;              // dwdot[NCO]/d[H2O]
J[827] -= dqdci;              // dwdot[HOCN]/d[H2O]
// d()/d[NCO]
dqdci =  - k_r*sc[15];
J[1603] -= dqdci;             // dwdot[OH]/d[NCO]
J[1605] += dqdci;             // dwdot[H2O]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
J[1622] -= dqdci;             // dwdot[HOCN]/d[NCO]
// d()/d[HOCN]
dqdci =  + k_f*sc[13];
J[1709] -= dqdci;             // dwdot[OH]/d[HOCN]
J[1711] += dqdci;             // dwdot[H2O]/d[HOCN]
J[1726] += dqdci;             // dwdot[NCO]/d[HOCN]
J[1728] -= dqdci;             // dwdot[HOCN]/d[HOCN]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT
J[2788] -= dqdT;              // dwdot[HOCN]/dT

// reaction 91: HOCN + NH2 <=> NCO + NH3
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[27]*sc[32];
k_f = 0.92
            * exp(1.94 * tc[0] - (1834.72796352401) * invT);
dlnkfdT = 1.94 * invT + (1834.72796352401) * invT2;
// reverse
phi_r = sc[20]*sc[30];
Kc = exp(-g_RT[20] + g_RT[27] - g_RT[30] + g_RT[32]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[27] + h_RT[32]) + (h_RT[20] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[20] += q;// NH3
wdot[27] -= q;// NH2
wdot[30] += q;// NCO
wdot[32] -= q;// HOCN
// d()/d[NH3]
dqdci =  - k_r*sc[30];
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1087] -= dqdci;             // dwdot[NH2]/d[NH3]
J[1090] += dqdci;             // dwdot[NCO]/d[NH3]
J[1092] -= dqdci;             // dwdot[HOCN]/d[NH3]
// d()/d[NH2]
dqdci =  + k_f*sc[32];
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1461] += dqdci;             // dwdot[NCO]/d[NH2]
J[1463] -= dqdci;             // dwdot[HOCN]/d[NH2]
// d()/d[NCO]
dqdci =  - k_r*sc[20];
J[1610] += dqdci;             // dwdot[NH3]/d[NCO]
J[1617] -= dqdci;             // dwdot[NH2]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
J[1622] -= dqdci;             // dwdot[HOCN]/d[NCO]
// d()/d[HOCN]
dqdci =  + k_f*sc[27];
J[1716] += dqdci;             // dwdot[NH3]/d[HOCN]
J[1723] -= dqdci;             // dwdot[NH2]/d[HOCN]
J[1726] += dqdci;             // dwdot[NCO]/d[HOCN]
J[1728] -= dqdci;             // dwdot[HOCN]/d[HOCN]
// d()/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT
J[2788] -= dqdT;              // dwdot[HOCN]/dT

// reaction 92: HCNO <=> HCN + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[33];
k_f = 4.2e+31
            * exp(-6.12 * tc[0] - (30801.8921139069) * invT);
dlnkfdT = -6.12 * invT + (30801.8921139069) * invT2;
// reverse
phi_r = sc[1]*sc[12];
Kc = refC * exp(-g_RT[1] - g_RT[12] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[33]) + (h_RT[1] + h_RT[12]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[12] += q;// O
wdot[33] -= q;// HCNO
// d()/d[HCN]
dqdci =  - k_r*sc[12];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[65] += dqdci;               // dwdot[O]/d[HCN]
J[86] -= dqdci;               // dwdot[HCNO]/d[HCN]
// d()/d[O]
dqdci =  - k_r*sc[1];
J[637] += dqdci;              // dwdot[HCN]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[669] -= dqdci;              // dwdot[HCNO]/d[O]
// d()/d[HCNO]
dqdci =  + k_f;
J[1750] += dqdci;             // dwdot[HCN]/d[HCNO]
J[1761] += dqdci;             // dwdot[O]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 93: H + HCNO <=> HCN + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[33];
k_f = 72000
            * exp(0.841 * tc[0] - (4333.70192591025) * invT);
dlnkfdT = 0.841 * invT + (4333.70192591025) * invT2;
// reverse
phi_r = sc[1]*sc[13];
Kc = exp(-g_RT[1] + g_RT[11] - g_RT[13] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[33]) + (h_RT[1] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[33] -= q;// HCNO
// d()/d[HCN]
dqdci =  - k_r*sc[13];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[64] -= dqdci;               // dwdot[H]/d[HCN]
J[66] += dqdci;               // dwdot[OH]/d[HCN]
J[86] -= dqdci;               // dwdot[HCNO]/d[HCN]
// d()/d[H]
dqdci =  + k_f*sc[33];
J[584] += dqdci;              // dwdot[HCN]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[616] -= dqdci;              // dwdot[HCNO]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[1];
J[690] += dqdci;              // dwdot[HCN]/d[OH]
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[722] -= dqdci;              // dwdot[HCNO]/d[OH]
// d()/d[HCNO]
dqdci =  + k_f*sc[11];
J[1750] += dqdci;             // dwdot[HCN]/d[HCNO]
J[1760] -= dqdci;             // dwdot[H]/d[HCNO]
J[1762] += dqdci;             // dwdot[OH]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 94: HCNO + O <=> HCO + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[33];
k_f = 63000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[3]*sc[17];
Kc = exp(-g_RT[3] + g_RT[12] - g_RT[17] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[33]) + (h_RT[3] + h_RT[17]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[12] -= q;// O
wdot[17] += q;// HCO
wdot[33] -= q;// HCNO
// d()/d[NO]
dqdci =  - k_r*sc[17];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[171] -= dqdci;              // dwdot[O]/d[NO]
J[176] += dqdci;              // dwdot[HCO]/d[NO]
J[192] -= dqdci;              // dwdot[HCNO]/d[NO]
// d()/d[O]
dqdci =  + k_f*sc[33];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[653] += dqdci;              // dwdot[HCO]/d[O]
J[669] -= dqdci;              // dwdot[HCNO]/d[O]
// d()/d[HCO]
dqdci =  - k_r*sc[3];
J[904] += dqdci;              // dwdot[NO]/d[HCO]
J[913] -= dqdci;              // dwdot[O]/d[HCO]
J[918] += dqdci;              // dwdot[HCO]/d[HCO]
J[934] -= dqdci;              // dwdot[HCNO]/d[HCO]
// d()/d[HCNO]
dqdci =  + k_f*sc[12];
J[1752] += dqdci;             // dwdot[NO]/d[HCNO]
J[1761] -= dqdci;             // dwdot[O]/d[HCNO]
J[1766] += dqdci;             // dwdot[HCO]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2773] += dqdT;              // dwdot[HCO]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 95: HCNO + OH <=> CH2O + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[33];
k_f = 1000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[3]*sc[18];
Kc = exp(-g_RT[3] + g_RT[13] - g_RT[18] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[33]) + (h_RT[3] + h_RT[18]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[13] -= q;// OH
wdot[18] += q;// CH2O
wdot[33] -= q;// HCNO
// d()/d[NO]
dqdci =  - k_r*sc[18];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[172] -= dqdci;              // dwdot[OH]/d[NO]
J[177] += dqdci;              // dwdot[CH2O]/d[NO]
J[192] -= dqdci;              // dwdot[HCNO]/d[NO]
// d()/d[OH]
dqdci =  + k_f*sc[33];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[707] += dqdci;              // dwdot[CH2O]/d[OH]
J[722] -= dqdci;              // dwdot[HCNO]/d[OH]
// d()/d[CH2O]
dqdci =  - k_r*sc[3];
J[957] += dqdci;              // dwdot[NO]/d[CH2O]
J[967] -= dqdci;              // dwdot[OH]/d[CH2O]
J[972] += dqdci;              // dwdot[CH2O]/d[CH2O]
J[987] -= dqdci;              // dwdot[HCNO]/d[CH2O]
// d()/d[HCNO]
dqdci =  + k_f*sc[13];
J[1752] += dqdci;             // dwdot[NO]/d[HCNO]
J[1762] -= dqdci;             // dwdot[OH]/d[HCNO]
J[1767] += dqdci;             // dwdot[CH2O]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2774] += dqdT;              // dwdot[CH2O]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 96: HCNO + O <=> NCO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[33];
k_f = 7000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[13]*sc[30];
Kc = exp(g_RT[12] - g_RT[13] - g_RT[30] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[33]) + (h_RT[13] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[30] += q;// NCO
wdot[33] -= q;// HCNO
// d()/d[O]
dqdci =  + k_f*sc[33];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[666] += dqdci;              // dwdot[NCO]/d[O]
J[669] -= dqdci;              // dwdot[HCNO]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[30];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[719] += dqdci;              // dwdot[NCO]/d[OH]
J[722] -= dqdci;              // dwdot[HCNO]/d[OH]
// d()/d[NCO]
dqdci =  - k_r*sc[13];
J[1602] -= dqdci;             // dwdot[O]/d[NCO]
J[1603] += dqdci;             // dwdot[OH]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
J[1623] -= dqdci;             // dwdot[HCNO]/d[NCO]
// d()/d[HCNO]
dqdci =  + k_f*sc[12];
J[1761] -= dqdci;             // dwdot[O]/d[HCNO]
J[1762] += dqdci;             // dwdot[OH]/d[HCNO]
J[1779] += dqdci;             // dwdot[NCO]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 97: HCNO + OH <=> CO + H2 + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[33];
k_f = 6500000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[3]*sc[5]*sc[9];
Kc = refC * exp(-g_RT[3] - g_RT[5] - g_RT[9] + g_RT[13] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[33]) + (h_RT[3] + h_RT[5] + h_RT[9]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[5] += q;// CO
wdot[9] += q;// H2
wdot[13] -= q;// OH
wdot[33] -= q;// HCNO
// d()/d[NO]
dqdci =  - k_r*sc[5]*sc[9];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[164] += dqdci;              // dwdot[CO]/d[NO]
J[168] += dqdci;              // dwdot[H2]/d[NO]
J[172] -= dqdci;              // dwdot[OH]/d[NO]
J[192] -= dqdci;              // dwdot[HCNO]/d[NO]
// d()/d[CO]
dqdci =  - k_r*sc[3]*sc[9];
J[268] += dqdci;              // dwdot[NO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[274] += dqdci;              // dwdot[H2]/d[CO]
J[278] -= dqdci;              // dwdot[OH]/d[CO]
J[298] -= dqdci;              // dwdot[HCNO]/d[CO]
// d()/d[H2]
dqdci =  - k_r*sc[3]*sc[5];
J[480] += dqdci;              // dwdot[NO]/d[H2]
J[482] += dqdci;              // dwdot[CO]/d[H2]
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[490] -= dqdci;              // dwdot[OH]/d[H2]
J[510] -= dqdci;              // dwdot[HCNO]/d[H2]
// d()/d[OH]
dqdci =  + k_f*sc[33];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[694] += dqdci;              // dwdot[CO]/d[OH]
J[698] += dqdci;              // dwdot[H2]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[722] -= dqdci;              // dwdot[HCNO]/d[OH]
// d()/d[HCNO]
dqdci =  + k_f*sc[13];
J[1752] += dqdci;             // dwdot[NO]/d[HCNO]
J[1754] += dqdci;             // dwdot[CO]/d[HCNO]
J[1758] += dqdci;             // dwdot[H2]/d[HCNO]
J[1762] -= dqdci;             // dwdot[OH]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 99: HCNO + OH <=> H2O + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[33];
k_f = 3500000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[15]*sc[30];
Kc = exp(g_RT[13] - g_RT[15] - g_RT[30] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[33]) + (h_RT[15] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[30] += q;// NCO
wdot[33] -= q;// HCNO
// d()/d[OH]
dqdci =  + k_f*sc[33];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[719] += dqdci;              // dwdot[NCO]/d[OH]
J[722] -= dqdci;              // dwdot[HCNO]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[30];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[825] += dqdci;              // dwdot[NCO]/d[H2O]
J[828] -= dqdci;              // dwdot[HCNO]/d[H2O]
// d()/d[NCO]
dqdci =  - k_r*sc[15];
J[1603] -= dqdci;             // dwdot[OH]/d[NCO]
J[1605] += dqdci;             // dwdot[H2O]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
J[1623] -= dqdci;             // dwdot[HCNO]/d[NCO]
// d()/d[HCNO]
dqdci =  + k_f*sc[13];
J[1762] -= dqdci;             // dwdot[OH]/d[HCNO]
J[1764] += dqdci;             // dwdot[H2O]/d[HCNO]
J[1779] += dqdci;             // dwdot[NCO]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 100: HCNO + OH <=> HCO + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[33];
k_f = 4500000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[17]*sc[21];
Kc = exp(g_RT[13] - g_RT[17] - g_RT[21] + g_RT[33]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[33]) + (h_RT[17] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[17] += q;// HCO
wdot[21] += q;// HNO
wdot[33] -= q;// HCNO
// d()/d[OH]
dqdci =  + k_f*sc[33];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[706] += dqdci;              // dwdot[HCO]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[722] -= dqdci;              // dwdot[HCNO]/d[OH]
// d()/d[HCO]
dqdci =  - k_r*sc[21];
J[914] -= dqdci;              // dwdot[OH]/d[HCO]
J[918] += dqdci;              // dwdot[HCO]/d[HCO]
J[922] += dqdci;              // dwdot[HNO]/d[HCO]
J[934] -= dqdci;              // dwdot[HCNO]/d[HCO]
// d()/d[HNO]
dqdci =  - k_r*sc[17];
J[1126] -= dqdci;             // dwdot[OH]/d[HNO]
J[1130] += dqdci;             // dwdot[HCO]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1146] -= dqdci;             // dwdot[HCNO]/d[HNO]
// d()/d[HCNO]
dqdci =  + k_f*sc[13];
J[1762] -= dqdci;             // dwdot[OH]/d[HCNO]
J[1766] += dqdci;             // dwdot[HCO]/d[HCNO]
J[1770] += dqdci;             // dwdot[HNO]/d[HCNO]
J[1782] -= dqdci;             // dwdot[HCNO]/d[HCNO]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2773] += dqdT;              // dwdot[HCO]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2789] -= dqdT;              // dwdot[HCNO]/dT

// reaction 102: H + NCO <=> CO + NH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[30];
k_f = 72000000
            * exp(- (503.21666580472) * invT);
dlnkfdT = (503.21666580472) * invT2;
// reverse
phi_r = sc[5]*sc[28];
Kc = exp(-g_RT[5] + g_RT[11] - g_RT[28] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[30]) + (h_RT[5] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[11] -= q;// H
wdot[28] += q;// NH
wdot[30] -= q;// NCO
// d()/d[CO]
dqdci =  - k_r*sc[28];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[276] -= dqdci;              // dwdot[H]/d[CO]
J[293] += dqdci;              // dwdot[NH]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
// d()/d[H]
dqdci =  + k_f*sc[30];
J[588] += dqdci;              // dwdot[CO]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[611] += dqdci;              // dwdot[NH]/d[H]
J[613] -= dqdci;              // dwdot[NCO]/d[H]
// d()/d[NH]
dqdci =  - k_r*sc[5];
J[1489] += dqdci;             // dwdot[CO]/d[NH]
J[1495] -= dqdci;             // dwdot[H]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
J[1514] -= dqdci;             // dwdot[NCO]/d[NH]
// d()/d[NCO]
dqdci =  + k_f*sc[11];
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1601] -= dqdci;             // dwdot[H]/d[NCO]
J[1618] += dqdci;             // dwdot[NH]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2784] += dqdT;              // dwdot[NH]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 103: NCO + O <=> CO + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[30];
k_f = 2000000000
            * exp(-0.5 * tc[0]);
dlnkfdT = -0.5 * invT;
// reverse
phi_r = sc[3]*sc[5];
Kc = exp(-g_RT[3] - g_RT[5] + g_RT[12] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[30]) + (h_RT[3] + h_RT[5]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[5] += q;// CO
wdot[12] -= q;// O
wdot[30] -= q;// NCO
// d()/d[NO]
dqdci =  - k_r*sc[5];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[164] += dqdci;              // dwdot[CO]/d[NO]
J[171] -= dqdci;              // dwdot[O]/d[NO]
J[189] -= dqdci;              // dwdot[NCO]/d[NO]
// d()/d[CO]
dqdci =  - k_r*sc[3];
J[268] += dqdci;              // dwdot[NO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[277] -= dqdci;              // dwdot[O]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
// d()/d[O]
dqdci =  + k_f*sc[30];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[641] += dqdci;              // dwdot[CO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[666] -= dqdci;              // dwdot[NCO]/d[O]
// d()/d[NCO]
dqdci =  + k_f*sc[12];
J[1593] += dqdci;             // dwdot[NO]/d[NCO]
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1602] -= dqdci;             // dwdot[O]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 104: NCO + OH <=> CO + HON
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[30];
k_f = 5300000
            * exp(-0.07 * tc[0] - (2579.48862891499) * invT);
dlnkfdT = -0.07 * invT + (2579.48862891499) * invT2;
// reverse
phi_r = sc[5]*sc[22];
Kc = exp(-g_RT[5] + g_RT[13] - g_RT[22] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[30]) + (h_RT[5] + h_RT[22]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[13] -= q;// OH
wdot[22] += q;// HON
wdot[30] -= q;// NCO
// d()/d[CO]
dqdci =  - k_r*sc[22];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[278] -= dqdci;              // dwdot[OH]/d[CO]
J[287] += dqdci;              // dwdot[HON]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
// d()/d[OH]
dqdci =  + k_f*sc[30];
J[694] += dqdci;              // dwdot[CO]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[711] += dqdci;              // dwdot[HON]/d[OH]
J[719] -= dqdci;              // dwdot[NCO]/d[OH]
// d()/d[HON]
dqdci =  - k_r*sc[5];
J[1171] += dqdci;             // dwdot[CO]/d[HON]
J[1179] -= dqdci;             // dwdot[OH]/d[HON]
J[1188] += dqdci;             // dwdot[HON]/d[HON]
J[1196] -= dqdci;             // dwdot[NCO]/d[HON]
// d()/d[NCO]
dqdci =  + k_f*sc[13];
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1603] -= dqdci;             // dwdot[OH]/d[NCO]
J[1612] += dqdci;             // dwdot[HON]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2778] += dqdT;              // dwdot[HON]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 105: NCO + OH <=> CO + H + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[30];
k_f = 8300000
            * exp(-0.05 * tc[0] - (9079.03508444875) * invT);
dlnkfdT = -0.05 * invT + (9079.03508444875) * invT2;
// reverse
phi_r = sc[3]*sc[5]*sc[11];
Kc = refC * exp(-g_RT[3] - g_RT[5] - g_RT[11] + g_RT[13] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[30]) + (h_RT[3] + h_RT[5] + h_RT[11]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[5] += q;// CO
wdot[11] += q;// H
wdot[13] -= q;// OH
wdot[30] -= q;// NCO
// d()/d[NO]
dqdci =  - k_r*sc[5]*sc[11];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[164] += dqdci;              // dwdot[CO]/d[NO]
J[170] += dqdci;              // dwdot[H]/d[NO]
J[172] -= dqdci;              // dwdot[OH]/d[NO]
J[189] -= dqdci;              // dwdot[NCO]/d[NO]
// d()/d[CO]
dqdci =  - k_r*sc[3]*sc[11];
J[268] += dqdci;              // dwdot[NO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[276] += dqdci;              // dwdot[H]/d[CO]
J[278] -= dqdci;              // dwdot[OH]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
// d()/d[H]
dqdci =  - k_r*sc[3]*sc[5];
J[586] += dqdci;              // dwdot[NO]/d[H]
J[588] += dqdci;              // dwdot[CO]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
J[613] -= dqdci;              // dwdot[NCO]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[30];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[694] += dqdci;              // dwdot[CO]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[719] -= dqdci;              // dwdot[NCO]/d[OH]
// d()/d[NCO]
dqdci =  + k_f*sc[13];
J[1593] += dqdci;             // dwdot[NO]/d[NCO]
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1601] += dqdci;             // dwdot[H]/d[NCO]
J[1603] -= dqdci;             // dwdot[OH]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 106: HO2 + NCO <=> HNCO + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[30];
k_f = 20000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[2]*sc[8];
Kc = exp(-g_RT[2] - g_RT[8] + g_RT[14] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[14] + h_RT[30]) + (h_RT[2] + h_RT[8]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[8] += q;// O2
wdot[14] -= q;// HO2
wdot[30] -= q;// NCO
// d()/d[HNCO]
dqdci =  - k_r*sc[8];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[114] += dqdci;              // dwdot[O2]/d[HNCO]
J[120] -= dqdci;              // dwdot[HO2]/d[HNCO]
J[136] -= dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[O2]
dqdci =  - k_r*sc[2];
J[426] += dqdci;              // dwdot[HNCO]/d[O2]
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[438] -= dqdci;              // dwdot[HO2]/d[O2]
J[454] -= dqdci;              // dwdot[NCO]/d[O2]
// d()/d[HO2]
dqdci =  + k_f*sc[30];
J[744] += dqdci;              // dwdot[HNCO]/d[HO2]
J[750] += dqdci;              // dwdot[O2]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[772] -= dqdci;              // dwdot[NCO]/d[HO2]
// d()/d[NCO]
dqdci =  + k_f*sc[14];
J[1592] += dqdci;             // dwdot[HNCO]/d[NCO]
J[1598] += dqdci;             // dwdot[O2]/d[NCO]
J[1604] -= dqdci;             // dwdot[HO2]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 107: NCO + O2 <=> CO2 + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[30];
k_f = 2000000
            * exp(- (10064.3333160944) * invT);
dlnkfdT = (10064.3333160944) * invT2;
// reverse
phi_r = sc[3]*sc[6];
Kc = exp(-g_RT[3] - g_RT[6] + g_RT[8] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[30]) + (h_RT[3] + h_RT[6]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[6] += q;// CO2
wdot[8] -= q;// O2
wdot[30] -= q;// NCO
// d()/d[NO]
dqdci =  - k_r*sc[6];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[165] += dqdci;              // dwdot[CO2]/d[NO]
J[167] -= dqdci;              // dwdot[O2]/d[NO]
J[189] -= dqdci;              // dwdot[NCO]/d[NO]
// d()/d[CO2]
dqdci =  - k_r*sc[3];
J[321] += dqdci;              // dwdot[NO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[326] -= dqdci;              // dwdot[O2]/d[CO2]
J[348] -= dqdci;              // dwdot[NCO]/d[CO2]
// d()/d[O2]
dqdci =  + k_f*sc[30];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[430] += dqdci;              // dwdot[CO2]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[454] -= dqdci;              // dwdot[NCO]/d[O2]
// d()/d[NCO]
dqdci =  + k_f*sc[8];
J[1593] += dqdci;             // dwdot[NO]/d[NCO]
J[1596] += dqdci;             // dwdot[CO2]/d[NCO]
J[1598] -= dqdci;             // dwdot[O2]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 108: HCO + NCO <=> CO + HNCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[17]*sc[30];
k_f = 36000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[2]*sc[5];
Kc = exp(-g_RT[2] - g_RT[5] + g_RT[17] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[17] + h_RT[30]) + (h_RT[2] + h_RT[5]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[5] += q;// CO
wdot[17] -= q;// HCO
wdot[30] -= q;// NCO
// d()/d[HNCO]
dqdci =  - k_r*sc[5];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[111] += dqdci;              // dwdot[CO]/d[HNCO]
J[123] -= dqdci;              // dwdot[HCO]/d[HNCO]
J[136] -= dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[CO]
dqdci =  - k_r*sc[2];
J[267] += dqdci;              // dwdot[HNCO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[282] -= dqdci;              // dwdot[HCO]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
// d()/d[HCO]
dqdci =  + k_f*sc[30];
J[903] += dqdci;              // dwdot[HNCO]/d[HCO]
J[906] += dqdci;              // dwdot[CO]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
J[931] -= dqdci;              // dwdot[NCO]/d[HCO]
// d()/d[NCO]
dqdci =  + k_f*sc[17];
J[1592] += dqdci;             // dwdot[HNCO]/d[NCO]
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1607] -= dqdci;             // dwdot[HCO]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 109: CH2O + NCO <=> HCO + HNCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[18]*sc[30];
k_f = 6000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[2]*sc[17];
Kc = exp(-g_RT[2] - g_RT[17] + g_RT[18] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[18] + h_RT[30]) + (h_RT[2] + h_RT[17]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[17] += q;// HCO
wdot[18] -= q;// CH2O
wdot[30] -= q;// NCO
// d()/d[HNCO]
dqdci =  - k_r*sc[17];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[123] += dqdci;              // dwdot[HCO]/d[HNCO]
J[124] -= dqdci;              // dwdot[CH2O]/d[HNCO]
J[136] -= dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[HCO]
dqdci =  - k_r*sc[2];
J[903] += dqdci;              // dwdot[HNCO]/d[HCO]
J[918] += dqdci;              // dwdot[HCO]/d[HCO]
J[919] -= dqdci;              // dwdot[CH2O]/d[HCO]
J[931] -= dqdci;              // dwdot[NCO]/d[HCO]
// d()/d[CH2O]
dqdci =  + k_f*sc[30];
J[956] += dqdci;              // dwdot[HNCO]/d[CH2O]
J[971] += dqdci;              // dwdot[HCO]/d[CH2O]
J[972] -= dqdci;              // dwdot[CH2O]/d[CH2O]
J[984] -= dqdci;              // dwdot[NCO]/d[CH2O]
// d()/d[NCO]
dqdci =  + k_f*sc[18];
J[1592] += dqdci;             // dwdot[HNCO]/d[NCO]
J[1607] += dqdci;             // dwdot[HCO]/d[NCO]
J[1608] -= dqdci;             // dwdot[CH2O]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2773] += dqdT;              // dwdot[HCO]/dT
J[2774] -= dqdT;              // dwdot[CH2O]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 110: NCO + NO <=> CO + N2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[30];
k_f = 40000000000000
            * exp(-2.19 * tc[0] - (877.106648497626) * invT);
dlnkfdT = -2.19 * invT + (877.106648497626) * invT2;
// reverse
phi_r = sc[4]*sc[5];
Kc = exp(g_RT[3] - g_RT[4] - g_RT[5] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[30]) + (h_RT[4] + h_RT[5]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[4] += q;// N2O
wdot[5] += q;// CO
wdot[30] -= q;// NCO
// d()/d[NO]
dqdci =  + k_f*sc[30];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[163] += dqdci;              // dwdot[N2O]/d[NO]
J[164] += dqdci;              // dwdot[CO]/d[NO]
J[189] -= dqdci;              // dwdot[NCO]/d[NO]
// d()/d[N2O]
dqdci =  - k_r*sc[5];
J[215] -= dqdci;              // dwdot[NO]/d[N2O]
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[217] += dqdci;              // dwdot[CO]/d[N2O]
J[242] -= dqdci;              // dwdot[NCO]/d[N2O]
// d()/d[CO]
dqdci =  - k_r*sc[4];
J[268] -= dqdci;              // dwdot[NO]/d[CO]
J[269] += dqdci;              // dwdot[N2O]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
// d()/d[NCO]
dqdci =  + k_f*sc[3];
J[1593] -= dqdci;             // dwdot[NO]/d[NCO]
J[1594] += dqdci;             // dwdot[N2O]/d[NCO]
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 111: NCO + NO <=> CO2 + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[30];
k_f = 1.5e+15
            * exp(-2.74 * tc[0] - (917.867198427809) * invT);
dlnkfdT = -2.74 * invT + (917.867198427809) * invT2;
// reverse
phi_r = sc[6]*sc[45];
Kc = exp(g_RT[3] - g_RT[6] + g_RT[30] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[30]) + (h_RT[6] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[6] += q;// CO2
wdot[30] -= q;// NCO
wdot[45] += q;// N2
// d()/d[NO]
dqdci =  + k_f*sc[30];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[165] += dqdci;              // dwdot[CO2]/d[NO]
J[189] -= dqdci;              // dwdot[NCO]/d[NO]
J[204] += dqdci;              // dwdot[N2]/d[NO]
// d()/d[CO2]
dqdci =  - k_r*sc[45];
J[321] -= dqdci;              // dwdot[NO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[348] -= dqdci;              // dwdot[NCO]/d[CO2]
J[363] += dqdci;              // dwdot[N2]/d[CO2]
// d()/d[NCO]
dqdci =  + k_f*sc[3];
J[1593] -= dqdci;             // dwdot[NO]/d[NCO]
J[1596] += dqdci;             // dwdot[CO2]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
J[1635] += dqdci;             // dwdot[N2]/d[NCO]
// d()/d[N2]
dqdci =  - k_r*sc[6];
J[2388] -= dqdci;             // dwdot[NO]/d[N2]
J[2391] += dqdci;             // dwdot[CO2]/d[N2]
J[2415] -= dqdci;             // dwdot[NCO]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 112: NCO + NO2 <=> CO + 2 NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[30];
k_f = 250000
            * exp(- (355.774182723937) * invT);
dlnkfdT = (355.774182723937) * invT2;
// reverse
phi_r = (sc[3] * sc[3])*sc[5];
Kc = refC * exp(-2.000000*g_RT[3] - g_RT[5] + g_RT[19] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[30]) + (2.000000*h_RT[3] + h_RT[5]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += 2 * q;// NO
wdot[5] += q;// CO
wdot[19] -= q;// NO2
wdot[30] -= q;// NCO
// d()/d[NO]
dqdci =  - k_r*2.000000*sc[3]*sc[5];
J[162] += 2 * dqdci;          // dwdot[NO]/d[NO]
J[164] += dqdci;              // dwdot[CO]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
J[189] -= dqdci;              // dwdot[NCO]/d[NO]
// d()/d[CO]
dqdci =  - k_r*sc[3]*sc[3];
J[268] += 2 * dqdci;          // dwdot[NO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[284] -= dqdci;              // dwdot[NO2]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
// d()/d[NO2]
dqdci =  + k_f*sc[30];
J[1010] += 2 * dqdci;         // dwdot[NO]/d[NO2]
J[1012] += dqdci;             // dwdot[CO]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1037] -= dqdci;             // dwdot[NCO]/d[NO2]
// d()/d[NCO]
dqdci =  + k_f*sc[19];
J[1593] += 2 * dqdci;         // dwdot[NO]/d[NCO]
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1609] -= dqdci;             // dwdot[NO2]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2759] += 2 * dqdT;          // dwdot[NO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 113: NCO + NO2 <=> CO2 + N2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[30];
k_f = 3000000
            * exp(- (-355.774182723937) * invT);
dlnkfdT = (-355.774182723937) * invT2;
// reverse
phi_r = sc[4]*sc[6];
Kc = exp(-g_RT[4] - g_RT[6] + g_RT[19] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[30]) + (h_RT[4] + h_RT[6]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] += q;// N2O
wdot[6] += q;// CO2
wdot[19] -= q;// NO2
wdot[30] -= q;// NCO
// d()/d[N2O]
dqdci =  - k_r*sc[6];
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[218] += dqdci;              // dwdot[CO2]/d[N2O]
J[231] -= dqdci;              // dwdot[NO2]/d[N2O]
J[242] -= dqdci;              // dwdot[NCO]/d[N2O]
// d()/d[CO2]
dqdci =  - k_r*sc[4];
J[322] += dqdci;              // dwdot[N2O]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[337] -= dqdci;              // dwdot[NO2]/d[CO2]
J[348] -= dqdci;              // dwdot[NCO]/d[CO2]
// d()/d[NO2]
dqdci =  + k_f*sc[30];
J[1011] += dqdci;             // dwdot[N2O]/d[NO2]
J[1013] += dqdci;             // dwdot[CO2]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1037] -= dqdci;             // dwdot[NCO]/d[NO2]
// d()/d[NCO]
dqdci =  + k_f*sc[19];
J[1594] += dqdci;             // dwdot[N2O]/d[NCO]
J[1596] += dqdci;             // dwdot[CO2]/d[NCO]
J[1609] -= dqdci;             // dwdot[NO2]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 114: HNO + NCO <=> HNCO + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[21]*sc[30];
k_f = 18000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[2]*sc[3];
Kc = exp(-g_RT[2] - g_RT[3] + g_RT[21] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[21] + h_RT[30]) + (h_RT[2] + h_RT[3]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[3] += q;// NO
wdot[21] -= q;// HNO
wdot[30] -= q;// NCO
// d()/d[HNCO]
dqdci =  - k_r*sc[3];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[109] += dqdci;              // dwdot[NO]/d[HNCO]
J[127] -= dqdci;              // dwdot[HNO]/d[HNCO]
J[136] -= dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[NO]
dqdci =  - k_r*sc[2];
J[161] += dqdci;              // dwdot[HNCO]/d[NO]
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
J[189] -= dqdci;              // dwdot[NCO]/d[NO]
// d()/d[HNO]
dqdci =  + k_f*sc[30];
J[1115] += dqdci;             // dwdot[HNCO]/d[HNO]
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
J[1143] -= dqdci;             // dwdot[NCO]/d[HNO]
// d()/d[NCO]
dqdci =  + k_f*sc[21];
J[1592] += dqdci;             // dwdot[HNCO]/d[NCO]
J[1593] += dqdci;             // dwdot[NO]/d[NCO]
J[1611] -= dqdci;             // dwdot[HNO]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 115: HONO + NCO <=> HNCO + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[23]*sc[30];
k_f = 3600000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[2]*sc[19];
Kc = exp(-g_RT[2] - g_RT[19] + g_RT[23] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[23] + h_RT[30]) + (h_RT[2] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[19] += q;// NO2
wdot[23] -= q;// HONO
wdot[30] -= q;// NCO
// d()/d[HNCO]
dqdci =  - k_r*sc[19];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[125] += dqdci;              // dwdot[NO2]/d[HNCO]
J[129] -= dqdci;              // dwdot[HONO]/d[HNCO]
J[136] -= dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[NO2]
dqdci =  - k_r*sc[2];
J[1009] += dqdci;             // dwdot[HNCO]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1030] -= dqdci;             // dwdot[HONO]/d[NO2]
J[1037] -= dqdci;             // dwdot[NCO]/d[NO2]
// d()/d[HONO]
dqdci =  + k_f*sc[30];
J[1221] += dqdci;             // dwdot[HNCO]/d[HONO]
J[1238] += dqdci;             // dwdot[NO2]/d[HONO]
J[1242] -= dqdci;             // dwdot[HONO]/d[HONO]
J[1249] -= dqdci;             // dwdot[NCO]/d[HONO]
// d()/d[NCO]
dqdci =  + k_f*sc[23];
J[1592] += dqdci;             // dwdot[HNCO]/d[NCO]
J[1609] += dqdci;             // dwdot[NO2]/d[NCO]
J[1613] -= dqdci;             // dwdot[HONO]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2779] -= dqdT;              // dwdot[HONO]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 116: N + NCO <=> CO + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[25]*sc[30];
k_f = 20000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[5]*sc[45];
Kc = exp(-g_RT[5] + g_RT[25] + g_RT[30] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[25] + h_RT[30]) + (h_RT[5] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += q;// CO
wdot[25] -= q;// N
wdot[30] -= q;// NCO
wdot[45] += q;// N2
// d()/d[CO]
dqdci =  - k_r*sc[45];
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[290] -= dqdci;              // dwdot[N]/d[CO]
J[295] -= dqdci;              // dwdot[NCO]/d[CO]
J[310] += dqdci;              // dwdot[N2]/d[CO]
// d()/d[N]
dqdci =  + k_f*sc[30];
J[1330] += dqdci;             // dwdot[CO]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
J[1355] -= dqdci;             // dwdot[NCO]/d[N]
J[1370] += dqdci;             // dwdot[N2]/d[N]
// d()/d[NCO]
dqdci =  + k_f*sc[25];
J[1595] += dqdci;             // dwdot[CO]/d[NCO]
J[1615] -= dqdci;             // dwdot[N]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
J[1635] += dqdci;             // dwdot[N2]/d[NCO]
// d()/d[N2]
dqdci =  - k_r*sc[5];
J[2390] += dqdci;             // dwdot[CO]/d[N2]
J[2410] -= dqdci;             // dwdot[N]/d[N2]
J[2415] -= dqdci;             // dwdot[NCO]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2781] -= dqdT;              // dwdot[N]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 117: NCO + NH3 <=> HNCO + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[20]*sc[30];
k_f = 0.028
            * exp(2.48 * tc[0] - (493.152332488625) * invT);
dlnkfdT = 2.48 * invT + (493.152332488625) * invT2;
// reverse
phi_r = sc[2]*sc[27];
Kc = exp(-g_RT[2] + g_RT[20] - g_RT[27] + g_RT[30]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[20] + h_RT[30]) + (h_RT[2] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[20] -= q;// NH3
wdot[27] += q;// NH2
wdot[30] -= q;// NCO
// d()/d[HNCO]
dqdci =  - k_r*sc[27];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[126] -= dqdci;              // dwdot[NH3]/d[HNCO]
J[133] += dqdci;              // dwdot[NH2]/d[HNCO]
J[136] -= dqdci;              // dwdot[NCO]/d[HNCO]
// d()/d[NH3]
dqdci =  + k_f*sc[30];
J[1062] += dqdci;             // dwdot[HNCO]/d[NH3]
J[1080] -= dqdci;             // dwdot[NH3]/d[NH3]
J[1087] += dqdci;             // dwdot[NH2]/d[NH3]
J[1090] -= dqdci;             // dwdot[NCO]/d[NH3]
// d()/d[NH2]
dqdci =  - k_r*sc[2];
J[1433] += dqdci;             // dwdot[HNCO]/d[NH2]
J[1451] -= dqdci;             // dwdot[NH3]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
J[1461] -= dqdci;             // dwdot[NCO]/d[NH2]
// d()/d[NCO]
dqdci =  + k_f*sc[20];
J[1592] += dqdci;             // dwdot[HNCO]/d[NCO]
J[1610] -= dqdci;             // dwdot[NH3]/d[NCO]
J[1617] += dqdci;             // dwdot[NH2]/d[NCO]
J[1620] -= dqdci;             // dwdot[NCO]/d[NCO]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2776] -= dqdT;              // dwdot[NH3]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT
J[2786] -= dqdT;              // dwdot[NCO]/dT

// reaction 118: 2 NCO <=> 2 CO + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[30] * sc[30]);
k_f = 18000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = (sc[5] * sc[5])*sc[45];
Kc = refC * exp(-2.000000*g_RT[5] + 2.000000*g_RT[30] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[30]) + (2.000000*h_RT[5] + h_RT[45]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[5] += 2 * q;// CO
wdot[30] -= 2 * q;// NCO
wdot[45] += q;// N2
// d()/d[CO]
dqdci =  - k_r*2.000000*sc[5]*sc[45];
J[270] += 2 * dqdci;          // dwdot[CO]/d[CO]
J[295] += -2 * dqdci;         // dwdot[NCO]/d[CO]
J[310] += dqdci;              // dwdot[N2]/d[CO]
// d()/d[NCO]
dqdci =  + k_f*2.000000*sc[30];
J[1595] += 2 * dqdci;         // dwdot[CO]/d[NCO]
J[1620] += -2 * dqdci;        // dwdot[NCO]/d[NCO]
J[1635] += dqdci;             // dwdot[N2]/d[NCO]
// d()/d[N2]
dqdci =  - k_r*sc[5]*sc[5];
J[2390] += 2 * dqdci;         // dwdot[CO]/d[N2]
J[2415] += -2 * dqdci;        // dwdot[NCO]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2761] += 2 * dqdT;          // dwdot[CO]/dT
J[2786] += -2 * dqdT;         // dwdot[NCO]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 119: H2CN <=> H + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[40];
k_f = 4e+28
            * exp(-6.03 * tc[0] - (15044.6686575637) * invT);
dlnkfdT = -6.03 * invT + (15044.6686575637) * invT2;
// reverse
phi_r = sc[1]*sc[11];
Kc = refC * exp(-g_RT[1] - g_RT[11] + g_RT[40]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[40]) + (h_RT[1] + h_RT[11]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[11] += q;// H
wdot[40] -= q;// H2CN
// d()/d[HCN]
dqdci =  - k_r*sc[11];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[64] += dqdci;               // dwdot[H]/d[HCN]
J[93] -= dqdci;               // dwdot[H2CN]/d[HCN]
// d()/d[H]
dqdci =  - k_r*sc[1];
J[584] += dqdci;              // dwdot[HCN]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[623] -= dqdci;              // dwdot[H2CN]/d[H]
// d()/d[H2CN]
dqdci =  + k_f;
J[2121] += dqdci;             // dwdot[HCN]/d[H2CN]
J[2131] += dqdci;             // dwdot[H]/d[H2CN]
J[2160] -= dqdci;             // dwdot[H2CN]/d[H2CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2796] -= dqdT;              // dwdot[H2CN]/dT

// reaction 120: H + H2CN <=> H2 + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[40];
k_f = 240
            * exp(1.5 * tc[0] - (-449.875699229419) * invT);
dlnkfdT = 1.5 * invT + (-449.875699229419) * invT2;
// reverse
phi_r = sc[1]*sc[9];
Kc = exp(-g_RT[1] - g_RT[9] + g_RT[11] + g_RT[40]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[40]) + (h_RT[1] + h_RT[9]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[40] -= q;// H2CN
// d()/d[HCN]
dqdci =  - k_r*sc[9];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[62] += dqdci;               // dwdot[H2]/d[HCN]
J[64] -= dqdci;               // dwdot[H]/d[HCN]
J[93] -= dqdci;               // dwdot[H2CN]/d[HCN]
// d()/d[H2]
dqdci =  - k_r*sc[1];
J[478] += dqdci;              // dwdot[HCN]/d[H2]
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[517] -= dqdci;              // dwdot[H2CN]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[40];
J[584] += dqdci;              // dwdot[HCN]/d[H]
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[623] -= dqdci;              // dwdot[H2CN]/d[H]
// d()/d[H2CN]
dqdci =  + k_f*sc[11];
J[2121] += dqdci;             // dwdot[HCN]/d[H2CN]
J[2129] += dqdci;             // dwdot[H2]/d[H2CN]
J[2131] -= dqdci;             // dwdot[H]/d[H2CN]
J[2160] -= dqdci;             // dwdot[H2CN]/d[H2CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2796] -= dqdT;              // dwdot[H2CN]/dT

// reaction 121: H2CN + O <=> HCN + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[40];
k_f = 170
            * exp(1.5 * tc[0] - (-449.875699229419) * invT);
dlnkfdT = 1.5 * invT + (-449.875699229419) * invT2;
// reverse
phi_r = sc[1]*sc[13];
Kc = exp(-g_RT[1] + g_RT[12] - g_RT[13] + g_RT[40]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[40]) + (h_RT[1] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[40] -= q;// H2CN
// d()/d[HCN]
dqdci =  - k_r*sc[13];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[65] -= dqdci;               // dwdot[O]/d[HCN]
J[66] += dqdci;               // dwdot[OH]/d[HCN]
J[93] -= dqdci;               // dwdot[H2CN]/d[HCN]
// d()/d[O]
dqdci =  + k_f*sc[40];
J[637] += dqdci;              // dwdot[HCN]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[676] -= dqdci;              // dwdot[H2CN]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[1];
J[690] += dqdci;              // dwdot[HCN]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[729] -= dqdci;              // dwdot[H2CN]/d[OH]
// d()/d[H2CN]
dqdci =  + k_f*sc[12];
J[2121] += dqdci;             // dwdot[HCN]/d[H2CN]
J[2132] -= dqdci;             // dwdot[O]/d[H2CN]
J[2133] += dqdci;             // dwdot[OH]/d[H2CN]
J[2160] -= dqdci;             // dwdot[H2CN]/d[H2CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2796] -= dqdT;              // dwdot[H2CN]/dT

// reaction 122: H2CN + OH <=> H2O + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[40];
k_f = 15000000000000
            * exp(-2.18 * tc[0] - (1089.96729813302) * invT);
dlnkfdT = -2.18 * invT + (1089.96729813302) * invT2;
// reverse
phi_r = sc[1]*sc[15];
Kc = exp(-g_RT[1] + g_RT[13] - g_RT[15] + g_RT[40]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[40]) + (h_RT[1] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[40] -= q;// H2CN
// d()/d[HCN]
dqdci =  - k_r*sc[15];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[66] -= dqdci;               // dwdot[OH]/d[HCN]
J[68] += dqdci;               // dwdot[H2O]/d[HCN]
J[93] -= dqdci;               // dwdot[H2CN]/d[HCN]
// d()/d[OH]
dqdci =  + k_f*sc[40];
J[690] += dqdci;              // dwdot[HCN]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[729] -= dqdci;              // dwdot[H2CN]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[1];
J[796] += dqdci;              // dwdot[HCN]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[835] -= dqdci;              // dwdot[H2CN]/d[H2O]
// d()/d[H2CN]
dqdci =  + k_f*sc[13];
J[2121] += dqdci;             // dwdot[HCN]/d[H2CN]
J[2133] -= dqdci;             // dwdot[OH]/d[H2CN]
J[2135] += dqdci;             // dwdot[H2O]/d[H2CN]
J[2160] -= dqdci;             // dwdot[H2CN]/d[H2CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2796] -= dqdT;              // dwdot[H2CN]/dT

// reaction 123: H2CN + OH <=> H2O + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[40];
k_f = 1.2
            * exp(2 * tc[0] - (-599.834265639226) * invT);
dlnkfdT = 2 * invT + (-599.834265639226) * invT2;
// reverse
phi_r = sc[1]*sc[15];
Kc = exp(-g_RT[1] + g_RT[13] - g_RT[15] + g_RT[40]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[40]) + (h_RT[1] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[40] -= q;// H2CN
// d()/d[HCN]
dqdci =  - k_r*sc[15];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[66] -= dqdci;               // dwdot[OH]/d[HCN]
J[68] += dqdci;               // dwdot[H2O]/d[HCN]
J[93] -= dqdci;               // dwdot[H2CN]/d[HCN]
// d()/d[OH]
dqdci =  + k_f*sc[40];
J[690] += dqdci;              // dwdot[HCN]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[729] -= dqdci;              // dwdot[H2CN]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[1];
J[796] += dqdci;              // dwdot[HCN]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[835] -= dqdci;              // dwdot[H2CN]/d[H2O]
// d()/d[H2CN]
dqdci =  + k_f*sc[13];
J[2121] += dqdci;             // dwdot[HCN]/d[H2CN]
J[2133] -= dqdci;             // dwdot[OH]/d[H2CN]
J[2135] += dqdci;             // dwdot[H2O]/d[H2CN]
J[2160] -= dqdci;             // dwdot[H2CN]/d[H2CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2796] -= dqdT;              // dwdot[H2CN]/dT

// reaction 124: H2CN + O2 <=> CH2O + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[40];
k_f = 3000000
            * exp(- (2999.67454486193) * invT);
dlnkfdT = (2999.67454486193) * invT2;
// reverse
phi_r = sc[3]*sc[18];
Kc = exp(-g_RT[3] + g_RT[8] - g_RT[18] + g_RT[40]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[40]) + (h_RT[3] + h_RT[18]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[8] -= q;// O2
wdot[18] += q;// CH2O
wdot[40] -= q;// H2CN
// d()/d[NO]
dqdci =  - k_r*sc[18];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[167] -= dqdci;              // dwdot[O2]/d[NO]
J[177] += dqdci;              // dwdot[CH2O]/d[NO]
J[199] -= dqdci;              // dwdot[H2CN]/d[NO]
// d()/d[O2]
dqdci =  + k_f*sc[40];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[442] += dqdci;              // dwdot[CH2O]/d[O2]
J[464] -= dqdci;              // dwdot[H2CN]/d[O2]
// d()/d[CH2O]
dqdci =  - k_r*sc[3];
J[957] += dqdci;              // dwdot[NO]/d[CH2O]
J[962] -= dqdci;              // dwdot[O2]/d[CH2O]
J[972] += dqdci;              // dwdot[CH2O]/d[CH2O]
J[994] -= dqdci;              // dwdot[H2CN]/d[CH2O]
// d()/d[H2CN]
dqdci =  + k_f*sc[8];
J[2123] += dqdci;             // dwdot[NO]/d[H2CN]
J[2128] -= dqdci;             // dwdot[O2]/d[H2CN]
J[2138] += dqdci;             // dwdot[CH2O]/d[H2CN]
J[2160] -= dqdci;             // dwdot[H2CN]/d[H2CN]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2774] += dqdT;              // dwdot[CH2O]/dT
J[2796] -= dqdT;              // dwdot[H2CN]/dT

// reaction 125: H2CN + NH2 <=> HCN + NH3
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[27]*sc[40];
k_f = 0.92
            * exp(1.94 * tc[0] - (-579.705599007037) * invT);
dlnkfdT = 1.94 * invT + (-579.705599007037) * invT2;
// reverse
phi_r = sc[1]*sc[20];
Kc = exp(-g_RT[1] - g_RT[20] + g_RT[27] + g_RT[40]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[27] + h_RT[40]) + (h_RT[1] + h_RT[20]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[20] += q;// NH3
wdot[27] -= q;// NH2
wdot[40] -= q;// H2CN
// d()/d[HCN]
dqdci =  - k_r*sc[20];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[73] += dqdci;               // dwdot[NH3]/d[HCN]
J[80] -= dqdci;               // dwdot[NH2]/d[HCN]
J[93] -= dqdci;               // dwdot[H2CN]/d[HCN]
// d()/d[NH3]
dqdci =  - k_r*sc[1];
J[1061] += dqdci;             // dwdot[HCN]/d[NH3]
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1087] -= dqdci;             // dwdot[NH2]/d[NH3]
J[1100] -= dqdci;             // dwdot[H2CN]/d[NH3]
// d()/d[NH2]
dqdci =  + k_f*sc[40];
J[1432] += dqdci;             // dwdot[HCN]/d[NH2]
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1471] -= dqdci;             // dwdot[H2CN]/d[NH2]
// d()/d[H2CN]
dqdci =  + k_f*sc[27];
J[2121] += dqdci;             // dwdot[HCN]/d[H2CN]
J[2140] += dqdci;             // dwdot[NH3]/d[H2CN]
J[2147] -= dqdci;             // dwdot[NH2]/d[H2CN]
J[2160] -= dqdci;             // dwdot[H2CN]/d[H2CN]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2796] -= dqdT;              // dwdot[H2CN]/dT

// reaction 126: HCNH <=> H + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[41];
k_f = 6.1e+28
            * exp(-5.69 * tc[0] - (12213.5716957464) * invT);
dlnkfdT = -5.69 * invT + (12213.5716957464) * invT2;
// reverse
phi_r = sc[1]*sc[11];
Kc = refC * exp(-g_RT[1] - g_RT[11] + g_RT[41]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[41]) + (h_RT[1] + h_RT[11]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[11] += q;// H
wdot[41] -= q;// HCNH
// d()/d[HCN]
dqdci =  - k_r*sc[11];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[64] += dqdci;               // dwdot[H]/d[HCN]
J[94] -= dqdci;               // dwdot[HCNH]/d[HCN]
// d()/d[H]
dqdci =  - k_r*sc[1];
J[584] += dqdci;              // dwdot[HCN]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[624] -= dqdci;              // dwdot[HCNH]/d[H]
// d()/d[HCNH]
dqdci =  + k_f;
J[2174] += dqdci;             // dwdot[HCN]/d[HCNH]
J[2184] += dqdci;             // dwdot[H]/d[HCNH]
J[2214] -= dqdci;             // dwdot[HCNH]/d[HCNH]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2797] -= dqdT;              // dwdot[HCNH]/dT

// reaction 127: H + HCNH <=> H + H2CN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[41];
k_f = 20000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[11]*sc[40];
Kc = exp(g_RT[11] - g_RT[11] - g_RT[40] + g_RT[41]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[41]) + (h_RT[11] + h_RT[40]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[40] += q;// H2CN
wdot[41] -= q;// HCNH
// d()/d[H]
dqdci =  + k_f*sc[41] - k_r*sc[40];
J[623] += dqdci;              // dwdot[H2CN]/d[H]
J[624] -= dqdci;              // dwdot[HCNH]/d[H]
// d()/d[H2CN]
dqdci =  - k_r*sc[11];
J[2160] += dqdci;             // dwdot[H2CN]/d[H2CN]
J[2161] -= dqdci;             // dwdot[HCNH]/d[H2CN]
// d()/d[HCNH]
dqdci =  + k_f*sc[11];
J[2213] += dqdci;             // dwdot[H2CN]/d[HCNH]
J[2214] -= dqdci;             // dwdot[HCNH]/d[HCNH]
// d()/dT
J[2796] += dqdT;              // dwdot[H2CN]/dT
J[2797] -= dqdT;              // dwdot[HCNH]/dT

// reaction 128: H + HCNH <=> H2 + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[41];
k_f = 240
            * exp(1.5 * tc[0] - (-449.875699229419) * invT);
dlnkfdT = 1.5 * invT + (-449.875699229419) * invT2;
// reverse
phi_r = sc[1]*sc[9];
Kc = exp(-g_RT[1] - g_RT[9] + g_RT[11] + g_RT[41]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[41]) + (h_RT[1] + h_RT[9]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[41] -= q;// HCNH
// d()/d[HCN]
dqdci =  - k_r*sc[9];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[62] += dqdci;               // dwdot[H2]/d[HCN]
J[64] -= dqdci;               // dwdot[H]/d[HCN]
J[94] -= dqdci;               // dwdot[HCNH]/d[HCN]
// d()/d[H2]
dqdci =  - k_r*sc[1];
J[478] += dqdci;              // dwdot[HCN]/d[H2]
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[518] -= dqdci;              // dwdot[HCNH]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[41];
J[584] += dqdci;              // dwdot[HCN]/d[H]
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[624] -= dqdci;              // dwdot[HCNH]/d[H]
// d()/d[HCNH]
dqdci =  + k_f*sc[11];
J[2174] += dqdci;             // dwdot[HCN]/d[HCNH]
J[2182] += dqdci;             // dwdot[H2]/d[HCNH]
J[2184] -= dqdci;             // dwdot[H]/d[HCNH]
J[2214] -= dqdci;             // dwdot[HCNH]/d[HCNH]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2797] -= dqdT;              // dwdot[HCNH]/dT

// reaction 129: HCNH + O <=> H + HNCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[41];
k_f = 70000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[2]*sc[11];
Kc = exp(-g_RT[2] - g_RT[11] + g_RT[12] + g_RT[41]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[41]) + (h_RT[2] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[2] += q;// HNCO
wdot[11] += q;// H
wdot[12] -= q;// O
wdot[41] -= q;// HCNH
// d()/d[HNCO]
dqdci =  - k_r*sc[11];
J[108] += dqdci;              // dwdot[HNCO]/d[HNCO]
J[117] += dqdci;              // dwdot[H]/d[HNCO]
J[118] -= dqdci;              // dwdot[O]/d[HNCO]
J[147] -= dqdci;              // dwdot[HCNH]/d[HNCO]
// d()/d[H]
dqdci =  - k_r*sc[2];
J[585] += dqdci;              // dwdot[HNCO]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[595] -= dqdci;              // dwdot[O]/d[H]
J[624] -= dqdci;              // dwdot[HCNH]/d[H]
// d()/d[O]
dqdci =  + k_f*sc[41];
J[638] += dqdci;              // dwdot[HNCO]/d[O]
J[647] += dqdci;              // dwdot[H]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[677] -= dqdci;              // dwdot[HCNH]/d[O]
// d()/d[HCNH]
dqdci =  + k_f*sc[12];
J[2175] += dqdci;             // dwdot[HNCO]/d[HCNH]
J[2184] += dqdci;             // dwdot[H]/d[HCNH]
J[2185] -= dqdci;             // dwdot[O]/d[HCNH]
J[2214] -= dqdci;             // dwdot[HCNH]/d[HCNH]
// d()/dT
J[2758] += dqdT;              // dwdot[HNCO]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2797] -= dqdT;              // dwdot[HCNH]/dT

// reaction 130: HCNH + O <=> HCN + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[41];
k_f = 170
            * exp(1.5 * tc[0] - (-449.875699229419) * invT);
dlnkfdT = 1.5 * invT + (-449.875699229419) * invT2;
// reverse
phi_r = sc[1]*sc[13];
Kc = exp(-g_RT[1] + g_RT[12] - g_RT[13] + g_RT[41]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[41]) + (h_RT[1] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[41] -= q;// HCNH
// d()/d[HCN]
dqdci =  - k_r*sc[13];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[65] -= dqdci;               // dwdot[O]/d[HCN]
J[66] += dqdci;               // dwdot[OH]/d[HCN]
J[94] -= dqdci;               // dwdot[HCNH]/d[HCN]
// d()/d[O]
dqdci =  + k_f*sc[41];
J[637] += dqdci;              // dwdot[HCN]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[677] -= dqdci;              // dwdot[HCNH]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[1];
J[690] += dqdci;              // dwdot[HCN]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[730] -= dqdci;              // dwdot[HCNH]/d[OH]
// d()/d[HCNH]
dqdci =  + k_f*sc[12];
J[2174] += dqdci;             // dwdot[HCN]/d[HCNH]
J[2185] -= dqdci;             // dwdot[O]/d[HCNH]
J[2186] += dqdci;             // dwdot[OH]/d[HCNH]
J[2214] -= dqdci;             // dwdot[HCNH]/d[HCNH]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2797] -= dqdT;              // dwdot[HCNH]/dT

// reaction 131: HCNH + OH <=> H2O + HCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[41];
k_f = 1.2
            * exp(2 * tc[0] - (-599.834265639226) * invT);
dlnkfdT = 2 * invT + (-599.834265639226) * invT2;
// reverse
phi_r = sc[1]*sc[15];
Kc = exp(-g_RT[1] + g_RT[13] - g_RT[15] + g_RT[41]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[41]) + (h_RT[1] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[1] += q;// HCN
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[41] -= q;// HCNH
// d()/d[HCN]
dqdci =  - k_r*sc[15];
J[54] += dqdci;               // dwdot[HCN]/d[HCN]
J[66] -= dqdci;               // dwdot[OH]/d[HCN]
J[68] += dqdci;               // dwdot[H2O]/d[HCN]
J[94] -= dqdci;               // dwdot[HCNH]/d[HCN]
// d()/d[OH]
dqdci =  + k_f*sc[41];
J[690] += dqdci;              // dwdot[HCN]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[730] -= dqdci;              // dwdot[HCNH]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[1];
J[796] += dqdci;              // dwdot[HCN]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[836] -= dqdci;              // dwdot[HCNH]/d[H2O]
// d()/d[HCNH]
dqdci =  + k_f*sc[13];
J[2174] += dqdci;             // dwdot[HCN]/d[HCNH]
J[2186] -= dqdci;             // dwdot[OH]/d[HCNH]
J[2188] += dqdci;             // dwdot[H2O]/d[HCNH]
J[2214] -= dqdci;             // dwdot[HCNH]/d[HCNH]
// d()/dT
J[2757] += dqdT;              // dwdot[HCN]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2797] -= dqdT;              // dwdot[HCNH]/dT

// reaction 133: H + NH3 <=> H2 + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[20];
k_f = 0.64
            * exp(2.39 * tc[0] - (5118.2167078998) * invT);
dlnkfdT = 2.39 * invT + (5118.2167078998) * invT2;
// reverse
phi_r = sc[9]*sc[27];
Kc = exp(-g_RT[9] + g_RT[11] + g_RT[20] - g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[20]) + (h_RT[9] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[20] -= q;// NH3
wdot[27] += q;// NH2
// d()/d[H2]
dqdci =  - k_r*sc[27];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[497] -= dqdci;              // dwdot[NH3]/d[H2]
J[504] += dqdci;              // dwdot[NH2]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[20];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[603] -= dqdci;              // dwdot[NH3]/d[H]
J[610] += dqdci;              // dwdot[NH2]/d[H]
// d()/d[NH3]
dqdci =  + k_f*sc[11];
J[1069] += dqdci;             // dwdot[H2]/d[NH3]
J[1071] -= dqdci;             // dwdot[H]/d[NH3]
J[1080] -= dqdci;             // dwdot[NH3]/d[NH3]
J[1087] += dqdci;             // dwdot[NH2]/d[NH3]
// d()/d[NH2]
dqdci =  - k_r*sc[9];
J[1440] += dqdci;             // dwdot[H2]/d[NH2]
J[1442] -= dqdci;             // dwdot[H]/d[NH2]
J[1451] -= dqdci;             // dwdot[NH3]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2776] -= dqdT;              // dwdot[NH3]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT

// reaction 134: NH3 + O <=> NH2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[20];
k_f = 9.4
            * exp(1.94 * tc[0] - (3250.77966109849) * invT);
dlnkfdT = 1.94 * invT + (3250.77966109849) * invT2;
// reverse
phi_r = sc[13]*sc[27];
Kc = exp(g_RT[12] - g_RT[13] + g_RT[20] - g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[20]) + (h_RT[13] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[20] -= q;// NH3
wdot[27] += q;// NH2
// d()/d[O]
dqdci =  + k_f*sc[20];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[656] -= dqdci;              // dwdot[NH3]/d[O]
J[663] += dqdci;              // dwdot[NH2]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[27];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[709] -= dqdci;              // dwdot[NH3]/d[OH]
J[716] += dqdci;              // dwdot[NH2]/d[OH]
// d()/d[NH3]
dqdci =  + k_f*sc[12];
J[1072] -= dqdci;             // dwdot[O]/d[NH3]
J[1073] += dqdci;             // dwdot[OH]/d[NH3]
J[1080] -= dqdci;             // dwdot[NH3]/d[NH3]
J[1087] += dqdci;             // dwdot[NH2]/d[NH3]
// d()/d[NH2]
dqdci =  - k_r*sc[13];
J[1443] -= dqdci;             // dwdot[O]/d[NH2]
J[1444] += dqdci;             // dwdot[OH]/d[NH2]
J[1451] -= dqdci;             // dwdot[NH3]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2776] -= dqdT;              // dwdot[NH3]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT

// reaction 135: NH3 + OH <=> H2O + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[20];
k_f = 2
            * exp(2.04 * tc[0] - (284.820632845471) * invT);
dlnkfdT = 2.04 * invT + (284.820632845471) * invT2;
// reverse
phi_r = sc[15]*sc[27];
Kc = exp(g_RT[13] - g_RT[15] + g_RT[20] - g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[20]) + (h_RT[15] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[20] -= q;// NH3
wdot[27] += q;// NH2
// d()/d[OH]
dqdci =  + k_f*sc[20];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[709] -= dqdci;              // dwdot[NH3]/d[OH]
J[716] += dqdci;              // dwdot[NH2]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[27];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[815] -= dqdci;              // dwdot[NH3]/d[H2O]
J[822] += dqdci;              // dwdot[NH2]/d[H2O]
// d()/d[NH3]
dqdci =  + k_f*sc[13];
J[1073] -= dqdci;             // dwdot[OH]/d[NH3]
J[1075] += dqdci;             // dwdot[H2O]/d[NH3]
J[1080] -= dqdci;             // dwdot[NH3]/d[NH3]
J[1087] += dqdci;             // dwdot[NH2]/d[NH3]
// d()/d[NH2]
dqdci =  - k_r*sc[15];
J[1444] -= dqdci;             // dwdot[OH]/d[NH2]
J[1446] += dqdci;             // dwdot[H2O]/d[NH2]
J[1451] -= dqdci;             // dwdot[NH3]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2776] -= dqdT;              // dwdot[NH3]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT

// reaction 136: HO2 + NH3 <=> H2O2 + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[20];
k_f = 300000
            * exp(- (11070.7666477038) * invT);
dlnkfdT = (11070.7666477038) * invT2;
// reverse
phi_r = sc[16]*sc[27];
Kc = exp(g_RT[14] - g_RT[16] + g_RT[20] - g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[14] + h_RT[20]) + (h_RT[16] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[14] -= q;// HO2
wdot[16] += q;// H2O2
wdot[20] -= q;// NH3
wdot[27] += q;// NH2
// d()/d[HO2]
dqdci =  + k_f*sc[20];
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[758] += dqdci;              // dwdot[H2O2]/d[HO2]
J[762] -= dqdci;              // dwdot[NH3]/d[HO2]
J[769] += dqdci;              // dwdot[NH2]/d[HO2]
// d()/d[H2O2]
dqdci =  - k_r*sc[27];
J[862] -= dqdci;              // dwdot[HO2]/d[H2O2]
J[864] += dqdci;              // dwdot[H2O2]/d[H2O2]
J[868] -= dqdci;              // dwdot[NH3]/d[H2O2]
J[875] += dqdci;              // dwdot[NH2]/d[H2O2]
// d()/d[NH3]
dqdci =  + k_f*sc[14];
J[1074] -= dqdci;             // dwdot[HO2]/d[NH3]
J[1076] += dqdci;             // dwdot[H2O2]/d[NH3]
J[1080] -= dqdci;             // dwdot[NH3]/d[NH3]
J[1087] += dqdci;             // dwdot[NH2]/d[NH3]
// d()/d[NH2]
dqdci =  - k_r*sc[16];
J[1445] -= dqdci;             // dwdot[HO2]/d[NH2]
J[1447] += dqdci;             // dwdot[H2O2]/d[NH2]
J[1451] -= dqdci;             // dwdot[NH3]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2772] += dqdT;              // dwdot[H2O2]/dT
J[2776] -= dqdT;              // dwdot[NH3]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT

// reaction 137: H + NH2 <=> H2 + NH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[27];
k_f = 40000000
            * exp(- (1836.74083018723) * invT);
dlnkfdT = (1836.74083018723) * invT2;
// reverse
phi_r = sc[9]*sc[28];
Kc = exp(-g_RT[9] + g_RT[11] + g_RT[27] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[27]) + (h_RT[9] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[27] -= q;// NH2
wdot[28] += q;// NH
// d()/d[H2]
dqdci =  - k_r*sc[28];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[504] -= dqdci;              // dwdot[NH2]/d[H2]
J[505] += dqdci;              // dwdot[NH]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[27];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[610] -= dqdci;              // dwdot[NH2]/d[H]
J[611] += dqdci;              // dwdot[NH]/d[H]
// d()/d[NH2]
dqdci =  + k_f*sc[11];
J[1440] += dqdci;             // dwdot[H2]/d[NH2]
J[1442] -= dqdci;             // dwdot[H]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1459] += dqdci;             // dwdot[NH]/d[NH2]
// d()/d[NH]
dqdci =  - k_r*sc[9];
J[1493] += dqdci;             // dwdot[H2]/d[NH]
J[1495] -= dqdci;             // dwdot[H]/d[NH]
J[1511] -= dqdci;             // dwdot[NH2]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 138: NH2 + O <=> H + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[27];
k_f = 660000000
            * exp(-0.5 * tc[0]);
dlnkfdT = -0.5 * invT;
// reverse
phi_r = sc[11]*sc[21];
Kc = exp(-g_RT[11] + g_RT[12] - g_RT[21] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[27]) + (h_RT[11] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[12] -= q;// O
wdot[21] += q;// HNO
wdot[27] -= q;// NH2
// d()/d[H]
dqdci =  - k_r*sc[21];
J[594] += dqdci;              // dwdot[H]/d[H]
J[595] -= dqdci;              // dwdot[O]/d[H]
J[604] += dqdci;              // dwdot[HNO]/d[H]
J[610] -= dqdci;              // dwdot[NH2]/d[H]
// d()/d[O]
dqdci =  + k_f*sc[27];
J[647] += dqdci;              // dwdot[H]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[657] += dqdci;              // dwdot[HNO]/d[O]
J[663] -= dqdci;              // dwdot[NH2]/d[O]
// d()/d[HNO]
dqdci =  - k_r*sc[11];
J[1124] += dqdci;             // dwdot[H]/d[HNO]
J[1125] -= dqdci;             // dwdot[O]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1140] -= dqdci;             // dwdot[NH2]/d[HNO]
// d()/d[NH2]
dqdci =  + k_f*sc[12];
J[1442] += dqdci;             // dwdot[H]/d[NH2]
J[1443] -= dqdci;             // dwdot[O]/d[NH2]
J[1452] += dqdci;             // dwdot[HNO]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 139: NH2 + O <=> NH + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[27];
k_f = 6800000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[13]*sc[28];
Kc = exp(g_RT[12] - g_RT[13] + g_RT[27] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[27]) + (h_RT[13] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[27] -= q;// NH2
wdot[28] += q;// NH
// d()/d[O]
dqdci =  + k_f*sc[27];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[663] -= dqdci;              // dwdot[NH2]/d[O]
J[664] += dqdci;              // dwdot[NH]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[28];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[716] -= dqdci;              // dwdot[NH2]/d[OH]
J[717] += dqdci;              // dwdot[NH]/d[OH]
// d()/d[NH2]
dqdci =  + k_f*sc[12];
J[1443] -= dqdci;             // dwdot[O]/d[NH2]
J[1444] += dqdci;             // dwdot[OH]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1459] += dqdci;             // dwdot[NH]/d[NH2]
// d()/d[NH]
dqdci =  - k_r*sc[13];
J[1496] -= dqdci;             // dwdot[O]/d[NH]
J[1497] += dqdci;             // dwdot[OH]/d[NH]
J[1511] -= dqdci;             // dwdot[NH2]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 140: NH2 + OH <=> H2O + NH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[27];
k_f = 4
            * exp(2 * tc[0] - (503.21666580472) * invT);
dlnkfdT = 2 * invT + (503.21666580472) * invT2;
// reverse
phi_r = sc[15]*sc[28];
Kc = exp(g_RT[13] - g_RT[15] + g_RT[27] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[27]) + (h_RT[15] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[27] -= q;// NH2
wdot[28] += q;// NH
// d()/d[OH]
dqdci =  + k_f*sc[27];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[716] -= dqdci;              // dwdot[NH2]/d[OH]
J[717] += dqdci;              // dwdot[NH]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[28];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[822] -= dqdci;              // dwdot[NH2]/d[H2O]
J[823] += dqdci;              // dwdot[NH]/d[H2O]
// d()/d[NH2]
dqdci =  + k_f*sc[13];
J[1444] -= dqdci;             // dwdot[OH]/d[NH2]
J[1446] += dqdci;             // dwdot[H2O]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1459] += dqdci;             // dwdot[NH]/d[NH2]
// d()/d[NH]
dqdci =  - k_r*sc[15];
J[1497] -= dqdci;             // dwdot[OH]/d[NH]
J[1499] += dqdci;             // dwdot[H2O]/d[NH]
J[1511] -= dqdci;             // dwdot[NH2]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 141: HO2 + NH2 <=> H2NO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[27];
k_f = 50000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[13]*sc[24];
Kc = exp(-g_RT[13] + g_RT[14] - g_RT[24] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[14] + h_RT[27]) + (h_RT[13] + h_RT[24]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] += q;// OH
wdot[14] -= q;// HO2
wdot[24] += q;// H2NO
wdot[27] -= q;// NH2
// d()/d[OH]
dqdci =  - k_r*sc[24];
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[703] -= dqdci;              // dwdot[HO2]/d[OH]
J[713] += dqdci;              // dwdot[H2NO]/d[OH]
J[716] -= dqdci;              // dwdot[NH2]/d[OH]
// d()/d[HO2]
dqdci =  + k_f*sc[27];
J[755] += dqdci;              // dwdot[OH]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[766] += dqdci;              // dwdot[H2NO]/d[HO2]
J[769] -= dqdci;              // dwdot[NH2]/d[HO2]
// d()/d[H2NO]
dqdci =  - k_r*sc[13];
J[1285] += dqdci;             // dwdot[OH]/d[H2NO]
J[1286] -= dqdci;             // dwdot[HO2]/d[H2NO]
J[1296] += dqdci;             // dwdot[H2NO]/d[H2NO]
J[1299] -= dqdci;             // dwdot[NH2]/d[H2NO]
// d()/d[NH2]
dqdci =  + k_f*sc[14];
J[1444] += dqdci;             // dwdot[OH]/d[NH2]
J[1445] -= dqdci;             // dwdot[HO2]/d[NH2]
J[1455] += dqdci;             // dwdot[H2NO]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2780] += dqdT;              // dwdot[H2NO]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 142: HO2 + NH2 <=> NH3 + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[27];
k_f = 0.92
            * exp(1.94 * tc[0] - (-579.705599007037) * invT);
dlnkfdT = 1.94 * invT + (-579.705599007037) * invT2;
// reverse
phi_r = sc[8]*sc[20];
Kc = exp(-g_RT[8] + g_RT[14] - g_RT[20] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[14] + h_RT[27]) + (h_RT[8] + h_RT[20]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[14] -= q;// HO2
wdot[20] += q;// NH3
wdot[27] -= q;// NH2
// d()/d[O2]
dqdci =  - k_r*sc[20];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[438] -= dqdci;              // dwdot[HO2]/d[O2]
J[444] += dqdci;              // dwdot[NH3]/d[O2]
J[451] -= dqdci;              // dwdot[NH2]/d[O2]
// d()/d[HO2]
dqdci =  + k_f*sc[27];
J[750] += dqdci;              // dwdot[O2]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[762] += dqdci;              // dwdot[NH3]/d[HO2]
J[769] -= dqdci;              // dwdot[NH2]/d[HO2]
// d()/d[NH3]
dqdci =  - k_r*sc[8];
J[1068] += dqdci;             // dwdot[O2]/d[NH3]
J[1074] -= dqdci;             // dwdot[HO2]/d[NH3]
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1087] -= dqdci;             // dwdot[NH2]/d[NH3]
// d()/d[NH2]
dqdci =  + k_f*sc[14];
J[1439] += dqdci;             // dwdot[O2]/d[NH2]
J[1445] -= dqdci;             // dwdot[HO2]/d[NH2]
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 143: NH2 + O2 <=> H2NO + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[27];
k_f = 250000
            * exp(0.48 * tc[0] - (14888.1682744984) * invT);
dlnkfdT = 0.48 * invT + (14888.1682744984) * invT2;
// reverse
phi_r = sc[12]*sc[24];
Kc = exp(g_RT[8] - g_RT[12] - g_RT[24] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[27]) + (h_RT[12] + h_RT[24]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[12] += q;// O
wdot[24] += q;// H2NO
wdot[27] -= q;// NH2
// d()/d[O2]
dqdci =  + k_f*sc[27];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[436] += dqdci;              // dwdot[O]/d[O2]
J[448] += dqdci;              // dwdot[H2NO]/d[O2]
J[451] -= dqdci;              // dwdot[NH2]/d[O2]
// d()/d[O]
dqdci =  - k_r*sc[24];
J[644] -= dqdci;              // dwdot[O2]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[660] += dqdci;              // dwdot[H2NO]/d[O]
J[663] -= dqdci;              // dwdot[NH2]/d[O]
// d()/d[H2NO]
dqdci =  - k_r*sc[12];
J[1280] -= dqdci;             // dwdot[O2]/d[H2NO]
J[1284] += dqdci;             // dwdot[O]/d[H2NO]
J[1296] += dqdci;             // dwdot[H2NO]/d[H2NO]
J[1299] -= dqdci;             // dwdot[NH2]/d[H2NO]
// d()/d[NH2]
dqdci =  + k_f*sc[8];
J[1439] -= dqdci;             // dwdot[O2]/d[NH2]
J[1443] += dqdci;             // dwdot[O]/d[NH2]
J[1455] += dqdci;             // dwdot[H2NO]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2780] += dqdT;              // dwdot[H2NO]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 144: NH2 + O2 <=> HNO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[27];
k_f = 62
            * exp(1.23 * tc[0] - (17662.9049697457) * invT);
dlnkfdT = 1.23 * invT + (17662.9049697457) * invT2;
// reverse
phi_r = sc[13]*sc[21];
Kc = exp(g_RT[8] - g_RT[13] - g_RT[21] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[27]) + (h_RT[13] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[13] += q;// OH
wdot[21] += q;// HNO
wdot[27] -= q;// NH2
// d()/d[O2]
dqdci =  + k_f*sc[27];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[437] += dqdci;              // dwdot[OH]/d[O2]
J[445] += dqdci;              // dwdot[HNO]/d[O2]
J[451] -= dqdci;              // dwdot[NH2]/d[O2]
// d()/d[OH]
dqdci =  - k_r*sc[21];
J[697] -= dqdci;              // dwdot[O2]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[716] -= dqdci;              // dwdot[NH2]/d[OH]
// d()/d[HNO]
dqdci =  - k_r*sc[13];
J[1121] -= dqdci;             // dwdot[O2]/d[HNO]
J[1126] += dqdci;             // dwdot[OH]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1140] -= dqdci;             // dwdot[NH2]/d[HNO]
// d()/d[NH2]
dqdci =  + k_f*sc[8];
J[1439] -= dqdci;             // dwdot[O2]/d[NH2]
J[1444] += dqdci;             // dwdot[OH]/d[NH2]
J[1452] += dqdci;             // dwdot[HNO]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 145: 2 NH2 <=> NH + NH3
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[27] * sc[27]);
k_f = 50000000
            * exp(- (5032.1666580472) * invT);
dlnkfdT = (5032.1666580472) * invT2;
// reverse
phi_r = sc[20]*sc[28];
Kc = exp(-g_RT[20] + 2.000000*g_RT[27] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[27]) + (h_RT[20] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[20] += q;// NH3
wdot[27] -= 2 * q;// NH2
wdot[28] += q;// NH
// d()/d[NH3]
dqdci =  - k_r*sc[28];
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1087] += -2 * dqdci;        // dwdot[NH2]/d[NH3]
J[1088] += dqdci;             // dwdot[NH]/d[NH3]
// d()/d[NH2]
dqdci =  + k_f*2.000000*sc[27];
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1458] += -2 * dqdci;        // dwdot[NH2]/d[NH2]
J[1459] += dqdci;             // dwdot[NH]/d[NH2]
// d()/d[NH]
dqdci =  - k_r*sc[20];
J[1504] += dqdci;             // dwdot[NH3]/d[NH]
J[1511] += -2 * dqdci;        // dwdot[NH2]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2783] += -2 * dqdT;         // dwdot[NH2]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 146: NH + NH2 <=> N + NH3
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[27]*sc[28];
k_f = 0.92
            * exp(1.94 * tc[0] - (1229.86153122673) * invT);
dlnkfdT = 1.94 * invT + (1229.86153122673) * invT2;
// reverse
phi_r = sc[20]*sc[25];
Kc = exp(-g_RT[20] - g_RT[25] + g_RT[27] + g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[27] + h_RT[28]) + (h_RT[20] + h_RT[25]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[20] += q;// NH3
wdot[25] += q;// N
wdot[27] -= q;// NH2
wdot[28] -= q;// NH
// d()/d[NH3]
dqdci =  - k_r*sc[25];
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1085] += dqdci;             // dwdot[N]/d[NH3]
J[1087] -= dqdci;             // dwdot[NH2]/d[NH3]
J[1088] -= dqdci;             // dwdot[NH]/d[NH3]
// d()/d[N]
dqdci =  - k_r*sc[20];
J[1345] += dqdci;             // dwdot[NH3]/d[N]
J[1350] += dqdci;             // dwdot[N]/d[N]
J[1352] -= dqdci;             // dwdot[NH2]/d[N]
J[1353] -= dqdci;             // dwdot[NH]/d[N]
// d()/d[NH2]
dqdci =  + k_f*sc[28];
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1456] += dqdci;             // dwdot[N]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1459] -= dqdci;             // dwdot[NH]/d[NH2]
// d()/d[NH]
dqdci =  + k_f*sc[27];
J[1504] += dqdci;             // dwdot[NH3]/d[NH]
J[1509] += dqdci;             // dwdot[N]/d[NH]
J[1511] -= dqdci;             // dwdot[NH2]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2781] += dqdT;              // dwdot[N]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT

// reaction 147: N + NH2 <=> 2 H + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[25]*sc[27];
k_f = 70000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = (sc[11] * sc[11])*sc[45];
Kc = refC * exp(-2.000000*g_RT[11] + g_RT[25] + g_RT[27] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[25] + h_RT[27]) + (2.000000*h_RT[11] + h_RT[45]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += 2 * q;// H
wdot[25] -= q;// N
wdot[27] -= q;// NH2
wdot[45] += q;// N2
// d()/d[H]
dqdci =  - k_r*2.000000*sc[11]*sc[45];
J[594] += 2 * dqdci;          // dwdot[H]/d[H]
J[608] -= dqdci;              // dwdot[N]/d[H]
J[610] -= dqdci;              // dwdot[NH2]/d[H]
J[628] += dqdci;              // dwdot[N2]/d[H]
// d()/d[N]
dqdci =  + k_f*sc[27];
J[1336] += 2 * dqdci;         // dwdot[H]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
J[1352] -= dqdci;             // dwdot[NH2]/d[N]
J[1370] += dqdci;             // dwdot[N2]/d[N]
// d()/d[NH2]
dqdci =  + k_f*sc[25];
J[1442] += 2 * dqdci;         // dwdot[H]/d[NH2]
J[1456] -= dqdci;             // dwdot[N]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1476] += dqdci;             // dwdot[N2]/d[NH2]
// d()/d[N2]
dqdci =  - k_r*sc[11]*sc[11];
J[2396] += 2 * dqdci;         // dwdot[H]/d[N2]
J[2410] -= dqdci;             // dwdot[N]/d[N2]
J[2412] -= dqdci;             // dwdot[NH2]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2767] += 2 * dqdT;          // dwdot[H]/dT
J[2781] -= dqdT;              // dwdot[N]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 148: NH2 + NO <=> H2O + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[27];
k_f = 280000000000000
            * exp(-2.654 * tc[0] - (633.046565582337) * invT);
dlnkfdT = -2.654 * invT + (633.046565582337) * invT2;
// reverse
phi_r = sc[15]*sc[45];
Kc = exp(g_RT[3] - g_RT[15] + g_RT[27] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[27]) + (h_RT[15] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[15] += q;// H2O
wdot[27] -= q;// NH2
wdot[45] += q;// N2
// d()/d[NO]
dqdci =  + k_f*sc[27];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[174] += dqdci;              // dwdot[H2O]/d[NO]
J[186] -= dqdci;              // dwdot[NH2]/d[NO]
J[204] += dqdci;              // dwdot[N2]/d[NO]
// d()/d[H2O]
dqdci =  - k_r*sc[45];
J[798] -= dqdci;              // dwdot[NO]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[822] -= dqdci;              // dwdot[NH2]/d[H2O]
J[840] += dqdci;              // dwdot[N2]/d[H2O]
// d()/d[NH2]
dqdci =  + k_f*sc[3];
J[1434] -= dqdci;             // dwdot[NO]/d[NH2]
J[1446] += dqdci;             // dwdot[H2O]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1476] += dqdci;             // dwdot[N2]/d[NH2]
// d()/d[N2]
dqdci =  - k_r*sc[15];
J[2388] -= dqdci;             // dwdot[NO]/d[N2]
J[2400] += dqdci;             // dwdot[H2O]/d[N2]
J[2412] -= dqdci;             // dwdot[NH2]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 149: NH + O <=> H + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[28];
k_f = 92000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[3]*sc[11];
Kc = exp(-g_RT[3] - g_RT[11] + g_RT[12] + g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[28]) + (h_RT[3] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[11] += q;// H
wdot[12] -= q;// O
wdot[28] -= q;// NH
// d()/d[NO]
dqdci =  - k_r*sc[11];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[170] += dqdci;              // dwdot[H]/d[NO]
J[171] -= dqdci;              // dwdot[O]/d[NO]
J[187] -= dqdci;              // dwdot[NH]/d[NO]
// d()/d[H]
dqdci =  - k_r*sc[3];
J[586] += dqdci;              // dwdot[NO]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[595] -= dqdci;              // dwdot[O]/d[H]
J[611] -= dqdci;              // dwdot[NH]/d[H]
// d()/d[O]
dqdci =  + k_f*sc[28];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[647] += dqdci;              // dwdot[H]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[664] -= dqdci;              // dwdot[NH]/d[O]
// d()/d[NH]
dqdci =  + k_f*sc[12];
J[1487] += dqdci;             // dwdot[NO]/d[NH]
J[1495] += dqdci;             // dwdot[H]/d[NH]
J[1496] -= dqdci;             // dwdot[O]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT

// reaction 151: N2O + OH <=> HO2 + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[13];
k_f = 2000000
            * exp(- (20128.6666321888) * invT);
dlnkfdT = (20128.6666321888) * invT2;
// reverse
phi_r = sc[14]*sc[45];
Kc = exp(g_RT[4] + g_RT[13] - g_RT[14] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[13]) + (h_RT[14] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] -= q;// N2O
wdot[13] -= q;// OH
wdot[14] += q;// HO2
wdot[45] += q;// N2
// d()/d[N2O]
dqdci =  + k_f*sc[13];
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[225] -= dqdci;              // dwdot[OH]/d[N2O]
J[226] += dqdci;              // dwdot[HO2]/d[N2O]
J[257] += dqdci;              // dwdot[N2]/d[N2O]
// d()/d[OH]
dqdci =  + k_f*sc[4];
J[693] -= dqdci;              // dwdot[N2O]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[703] += dqdci;              // dwdot[HO2]/d[OH]
J[734] += dqdci;              // dwdot[N2]/d[OH]
// d()/d[HO2]
dqdci =  - k_r*sc[45];
J[746] -= dqdci;              // dwdot[N2O]/d[HO2]
J[755] -= dqdci;              // dwdot[OH]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[787] += dqdci;              // dwdot[N2]/d[HO2]
// d()/d[N2]
dqdci =  - k_r*sc[14];
J[2389] -= dqdci;             // dwdot[N2O]/d[N2]
J[2398] -= dqdci;             // dwdot[OH]/d[N2]
J[2399] += dqdci;             // dwdot[HO2]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 152: NH2 + NO <=> NNH + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[27];
k_f = 31000000
            * exp(-0.48 * tc[0] - (593.795665649569) * invT);
dlnkfdT = -0.48 * invT + (593.795665649569) * invT2;
// reverse
phi_r = sc[13]*sc[26];
Kc = exp(g_RT[3] - g_RT[13] - g_RT[26] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[27]) + (h_RT[13] + h_RT[26]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[13] += q;// OH
wdot[26] += q;// NNH
wdot[27] -= q;// NH2
// d()/d[NO]
dqdci =  + k_f*sc[27];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[185] += dqdci;              // dwdot[NNH]/d[NO]
J[186] -= dqdci;              // dwdot[NH2]/d[NO]
// d()/d[OH]
dqdci =  - k_r*sc[26];
J[692] -= dqdci;              // dwdot[NO]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[715] += dqdci;              // dwdot[NNH]/d[OH]
J[716] -= dqdci;              // dwdot[NH2]/d[OH]
// d()/d[NNH]
dqdci =  - k_r*sc[13];
J[1381] -= dqdci;             // dwdot[NO]/d[NNH]
J[1391] += dqdci;             // dwdot[OH]/d[NNH]
J[1404] += dqdci;             // dwdot[NNH]/d[NNH]
J[1405] -= dqdci;             // dwdot[NH2]/d[NNH]
// d()/d[NH2]
dqdci =  + k_f*sc[3];
J[1434] -= dqdci;             // dwdot[NO]/d[NH2]
J[1444] += dqdci;             // dwdot[OH]/d[NH2]
J[1457] += dqdci;             // dwdot[NNH]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2782] += dqdT;              // dwdot[NNH]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 153: N + OH <=> H + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[25];
k_f = 38000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[3]*sc[11];
Kc = exp(-g_RT[3] - g_RT[11] + g_RT[13] + g_RT[25]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[25]) + (h_RT[3] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[11] += q;// H
wdot[13] -= q;// OH
wdot[25] -= q;// N
// d()/d[NO]
dqdci =  - k_r*sc[11];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[170] += dqdci;              // dwdot[H]/d[NO]
J[172] -= dqdci;              // dwdot[OH]/d[NO]
J[184] -= dqdci;              // dwdot[N]/d[NO]
// d()/d[H]
dqdci =  - k_r*sc[3];
J[586] += dqdci;              // dwdot[NO]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
J[608] -= dqdci;              // dwdot[N]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[25];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[714] -= dqdci;              // dwdot[N]/d[OH]
// d()/d[N]
dqdci =  + k_f*sc[13];
J[1328] += dqdci;             // dwdot[NO]/d[N]
J[1336] += dqdci;             // dwdot[H]/d[N]
J[1338] -= dqdci;             // dwdot[OH]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2781] -= dqdT;              // dwdot[N]/dT

// reaction 154: NH2 + NO2 <=> H2O + N2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[27];
k_f = 16000000000
            * exp(-1.44 * tc[0] - (134.862066435665) * invT);
dlnkfdT = -1.44 * invT + (134.862066435665) * invT2;
// reverse
phi_r = sc[4]*sc[15];
Kc = exp(-g_RT[4] - g_RT[15] + g_RT[19] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[27]) + (h_RT[4] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] += q;// N2O
wdot[15] += q;// H2O
wdot[19] -= q;// NO2
wdot[27] -= q;// NH2
// d()/d[N2O]
dqdci =  - k_r*sc[15];
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[227] += dqdci;              // dwdot[H2O]/d[N2O]
J[231] -= dqdci;              // dwdot[NO2]/d[N2O]
J[239] -= dqdci;              // dwdot[NH2]/d[N2O]
// d()/d[H2O]
dqdci =  - k_r*sc[4];
J[799] += dqdci;              // dwdot[N2O]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[814] -= dqdci;              // dwdot[NO2]/d[H2O]
J[822] -= dqdci;              // dwdot[NH2]/d[H2O]
// d()/d[NO2]
dqdci =  + k_f*sc[27];
J[1011] += dqdci;             // dwdot[N2O]/d[NO2]
J[1022] += dqdci;             // dwdot[H2O]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1034] -= dqdci;             // dwdot[NH2]/d[NO2]
// d()/d[NH2]
dqdci =  + k_f*sc[19];
J[1435] += dqdci;             // dwdot[N2O]/d[NH2]
J[1446] += dqdci;             // dwdot[H2O]/d[NH2]
J[1450] -= dqdci;             // dwdot[NO2]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 155: NH2 + NO2 <=> H2NO + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[27];
k_f = 65000000000
            * exp(-1.44 * tc[0] - (134.862066435665) * invT);
dlnkfdT = -1.44 * invT + (134.862066435665) * invT2;
// reverse
phi_r = sc[3]*sc[24];
Kc = exp(-g_RT[3] + g_RT[19] - g_RT[24] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[27]) + (h_RT[3] + h_RT[24]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[19] -= q;// NO2
wdot[24] += q;// H2NO
wdot[27] -= q;// NH2
// d()/d[NO]
dqdci =  - k_r*sc[24];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
J[183] += dqdci;              // dwdot[H2NO]/d[NO]
J[186] -= dqdci;              // dwdot[NH2]/d[NO]
// d()/d[NO2]
dqdci =  + k_f*sc[27];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1031] += dqdci;             // dwdot[H2NO]/d[NO2]
J[1034] -= dqdci;             // dwdot[NH2]/d[NO2]
// d()/d[H2NO]
dqdci =  - k_r*sc[3];
J[1275] += dqdci;             // dwdot[NO]/d[H2NO]
J[1291] -= dqdci;             // dwdot[NO2]/d[H2NO]
J[1296] += dqdci;             // dwdot[H2NO]/d[H2NO]
J[1299] -= dqdci;             // dwdot[NH2]/d[H2NO]
// d()/d[NH2]
dqdci =  + k_f*sc[19];
J[1434] += dqdci;             // dwdot[NO]/d[NH2]
J[1450] -= dqdci;             // dwdot[NO2]/d[NH2]
J[1455] += dqdci;             // dwdot[H2NO]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2780] += dqdT;              // dwdot[H2NO]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 156: H + NH <=> H2 + N
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[28];
k_f = 100000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[9]*sc[25];
Kc = exp(-g_RT[9] + g_RT[11] - g_RT[25] + g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[28]) + (h_RT[9] + h_RT[25]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[25] += q;// N
wdot[28] -= q;// NH
// d()/d[H2]
dqdci =  - k_r*sc[25];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[502] += dqdci;              // dwdot[N]/d[H2]
J[505] -= dqdci;              // dwdot[NH]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[28];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[608] += dqdci;              // dwdot[N]/d[H]
J[611] -= dqdci;              // dwdot[NH]/d[H]
// d()/d[N]
dqdci =  - k_r*sc[9];
J[1334] += dqdci;             // dwdot[H2]/d[N]
J[1336] -= dqdci;             // dwdot[H]/d[N]
J[1350] += dqdci;             // dwdot[N]/d[N]
J[1353] -= dqdci;             // dwdot[NH]/d[N]
// d()/d[NH]
dqdci =  + k_f*sc[11];
J[1493] += dqdci;             // dwdot[H2]/d[NH]
J[1495] -= dqdci;             // dwdot[H]/d[NH]
J[1509] += dqdci;             // dwdot[N]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2781] += dqdT;              // dwdot[N]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT

// reaction 157: NH + OH <=> H + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[28];
k_f = 20000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[11]*sc[21];
Kc = exp(-g_RT[11] + g_RT[13] - g_RT[21] + g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[28]) + (h_RT[11] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[13] -= q;// OH
wdot[21] += q;// HNO
wdot[28] -= q;// NH
// d()/d[H]
dqdci =  - k_r*sc[21];
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
J[604] += dqdci;              // dwdot[HNO]/d[H]
J[611] -= dqdci;              // dwdot[NH]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[28];
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[717] -= dqdci;              // dwdot[NH]/d[OH]
// d()/d[HNO]
dqdci =  - k_r*sc[11];
J[1124] += dqdci;             // dwdot[H]/d[HNO]
J[1126] -= dqdci;             // dwdot[OH]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1141] -= dqdci;             // dwdot[NH]/d[HNO]
// d()/d[NH]
dqdci =  + k_f*sc[13];
J[1495] += dqdci;             // dwdot[H]/d[NH]
J[1497] -= dqdci;             // dwdot[OH]/d[NH]
J[1505] += dqdci;             // dwdot[HNO]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT

// reaction 158: NH + OH <=> H2O + N
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[28];
k_f = 500000
            * exp(0.5 * tc[0] - (1006.43333160944) * invT);
dlnkfdT = 0.5 * invT + (1006.43333160944) * invT2;
// reverse
phi_r = sc[15]*sc[25];
Kc = exp(g_RT[13] - g_RT[15] - g_RT[25] + g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[28]) + (h_RT[15] + h_RT[25]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[25] += q;// N
wdot[28] -= q;// NH
// d()/d[OH]
dqdci =  + k_f*sc[28];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[714] += dqdci;              // dwdot[N]/d[OH]
J[717] -= dqdci;              // dwdot[NH]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[25];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[820] += dqdci;              // dwdot[N]/d[H2O]
J[823] -= dqdci;              // dwdot[NH]/d[H2O]
// d()/d[N]
dqdci =  - k_r*sc[15];
J[1338] -= dqdci;             // dwdot[OH]/d[N]
J[1340] += dqdci;             // dwdot[H2O]/d[N]
J[1350] += dqdci;             // dwdot[N]/d[N]
J[1353] -= dqdci;             // dwdot[NH]/d[N]
// d()/d[NH]
dqdci =  + k_f*sc[13];
J[1497] -= dqdci;             // dwdot[OH]/d[NH]
J[1499] += dqdci;             // dwdot[H2O]/d[NH]
J[1509] += dqdci;             // dwdot[N]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2781] += dqdT;              // dwdot[N]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT

// reaction 159: NH + O2 <=> HNO + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[28];
k_f = 0.46
            * exp(2 * tc[0] - (3270.90832773068) * invT);
dlnkfdT = 2 * invT + (3270.90832773068) * invT2;
// reverse
phi_r = sc[12]*sc[21];
Kc = exp(g_RT[8] - g_RT[12] - g_RT[21] + g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[28]) + (h_RT[12] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[12] += q;// O
wdot[21] += q;// HNO
wdot[28] -= q;// NH
// d()/d[O2]
dqdci =  + k_f*sc[28];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[436] += dqdci;              // dwdot[O]/d[O2]
J[445] += dqdci;              // dwdot[HNO]/d[O2]
J[452] -= dqdci;              // dwdot[NH]/d[O2]
// d()/d[O]
dqdci =  - k_r*sc[21];
J[644] -= dqdci;              // dwdot[O2]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[657] += dqdci;              // dwdot[HNO]/d[O]
J[664] -= dqdci;              // dwdot[NH]/d[O]
// d()/d[HNO]
dqdci =  - k_r*sc[12];
J[1121] -= dqdci;             // dwdot[O2]/d[HNO]
J[1125] += dqdci;             // dwdot[O]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1141] -= dqdci;             // dwdot[NH]/d[HNO]
// d()/d[NH]
dqdci =  + k_f*sc[8];
J[1492] -= dqdci;             // dwdot[O2]/d[NH]
J[1496] += dqdci;             // dwdot[O]/d[NH]
J[1505] += dqdci;             // dwdot[HNO]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT

// reaction 160: NH + O2 <=> NO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[28];
k_f = 76000
            * exp(- (769.921498681221) * invT);
dlnkfdT = (769.921498681221) * invT2;
// reverse
phi_r = sc[3]*sc[13];
Kc = exp(-g_RT[3] + g_RT[8] - g_RT[13] + g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[28]) + (h_RT[3] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[8] -= q;// O2
wdot[13] += q;// OH
wdot[28] -= q;// NH
// d()/d[NO]
dqdci =  - k_r*sc[13];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[167] -= dqdci;              // dwdot[O2]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[187] -= dqdci;              // dwdot[NH]/d[NO]
// d()/d[O2]
dqdci =  + k_f*sc[28];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[437] += dqdci;              // dwdot[OH]/d[O2]
J[452] -= dqdci;              // dwdot[NH]/d[O2]
// d()/d[OH]
dqdci =  - k_r*sc[3];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[697] -= dqdci;              // dwdot[O2]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[717] -= dqdci;              // dwdot[NH]/d[OH]
// d()/d[NH]
dqdci =  + k_f*sc[8];
J[1487] += dqdci;             // dwdot[NO]/d[NH]
J[1492] -= dqdci;             // dwdot[O2]/d[NH]
J[1497] += dqdci;             // dwdot[OH]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT

// reaction 161: 2 NH <=> 2 H + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[28] * sc[28]);
k_f = 25000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = (sc[11] * sc[11])*sc[45];
Kc = refC * exp(-2.000000*g_RT[11] + 2.000000*g_RT[28] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[28]) + (2.000000*h_RT[11] + h_RT[45]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += 2 * q;// H
wdot[28] -= 2 * q;// NH
wdot[45] += q;// N2
// d()/d[H]
dqdci =  - k_r*2.000000*sc[11]*sc[45];
J[594] += 2 * dqdci;          // dwdot[H]/d[H]
J[611] += -2 * dqdci;         // dwdot[NH]/d[H]
J[628] += dqdci;              // dwdot[N2]/d[H]
// d()/d[NH]
dqdci =  + k_f*2.000000*sc[28];
J[1495] += 2 * dqdci;         // dwdot[H]/d[NH]
J[1512] += -2 * dqdci;        // dwdot[NH]/d[NH]
J[1529] += dqdci;             // dwdot[N2]/d[NH]
// d()/d[N2]
dqdci =  - k_r*sc[11]*sc[11];
J[2396] += 2 * dqdci;         // dwdot[H]/d[N2]
J[2413] += -2 * dqdci;        // dwdot[NH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2767] += 2 * dqdT;          // dwdot[H]/dT
J[2784] += -2 * dqdT;         // dwdot[NH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 162: N + NH <=> H + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[25]*sc[28];
k_f = 30000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[11]*sc[45];
Kc = exp(-g_RT[11] + g_RT[25] + g_RT[28] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[25] + h_RT[28]) + (h_RT[11] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[25] -= q;// N
wdot[28] -= q;// NH
wdot[45] += q;// N2
// d()/d[H]
dqdci =  - k_r*sc[45];
J[594] += dqdci;              // dwdot[H]/d[H]
J[608] -= dqdci;              // dwdot[N]/d[H]
J[611] -= dqdci;              // dwdot[NH]/d[H]
J[628] += dqdci;              // dwdot[N2]/d[H]
// d()/d[N]
dqdci =  + k_f*sc[28];
J[1336] += dqdci;             // dwdot[H]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
J[1353] -= dqdci;             // dwdot[NH]/d[N]
J[1370] += dqdci;             // dwdot[N2]/d[N]
// d()/d[NH]
dqdci =  + k_f*sc[25];
J[1495] += dqdci;             // dwdot[H]/d[NH]
J[1509] -= dqdci;             // dwdot[N]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
J[1529] += dqdci;             // dwdot[N2]/d[NH]
// d()/d[N2]
dqdci =  - k_r*sc[11];
J[2396] += dqdci;             // dwdot[H]/d[N2]
J[2410] -= dqdci;             // dwdot[N]/d[N2]
J[2413] -= dqdci;             // dwdot[NH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2781] -= dqdT;              // dwdot[N]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 163: NH + NO <=> N2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[28];
k_f = 22000000
            * exp(-0.23 * tc[0]);
dlnkfdT = -0.23 * invT;
// reverse
phi_r = sc[13]*sc[45];
Kc = exp(g_RT[3] - g_RT[13] + g_RT[28] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[28]) + (h_RT[13] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[13] += q;// OH
wdot[28] -= q;// NH
wdot[45] += q;// N2
// d()/d[NO]
dqdci =  + k_f*sc[28];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[187] -= dqdci;              // dwdot[NH]/d[NO]
J[204] += dqdci;              // dwdot[N2]/d[NO]
// d()/d[OH]
dqdci =  - k_r*sc[45];
J[692] -= dqdci;              // dwdot[NO]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[717] -= dqdci;              // dwdot[NH]/d[OH]
J[734] += dqdci;              // dwdot[N2]/d[OH]
// d()/d[NH]
dqdci =  + k_f*sc[3];
J[1487] -= dqdci;             // dwdot[NO]/d[NH]
J[1497] += dqdci;             // dwdot[OH]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
J[1529] += dqdci;             // dwdot[N2]/d[NH]
// d()/d[N2]
dqdci =  - k_r*sc[13];
J[2388] -= dqdci;             // dwdot[NO]/d[N2]
J[2398] += dqdci;             // dwdot[OH]/d[N2]
J[2413] -= dqdci;             // dwdot[NH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 164: NH + NO2 <=> N2O + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[28];
k_f = 10000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[4]*sc[13];
Kc = exp(-g_RT[4] - g_RT[13] + g_RT[19] + g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[28]) + (h_RT[4] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] += q;// N2O
wdot[13] += q;// OH
wdot[19] -= q;// NO2
wdot[28] -= q;// NH
// d()/d[N2O]
dqdci =  - k_r*sc[13];
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[225] += dqdci;              // dwdot[OH]/d[N2O]
J[231] -= dqdci;              // dwdot[NO2]/d[N2O]
J[240] -= dqdci;              // dwdot[NH]/d[N2O]
// d()/d[OH]
dqdci =  - k_r*sc[4];
J[693] += dqdci;              // dwdot[N2O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[708] -= dqdci;              // dwdot[NO2]/d[OH]
J[717] -= dqdci;              // dwdot[NH]/d[OH]
// d()/d[NO2]
dqdci =  + k_f*sc[28];
J[1011] += dqdci;             // dwdot[N2O]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1035] -= dqdci;             // dwdot[NH]/d[NO2]
// d()/d[NH]
dqdci =  + k_f*sc[19];
J[1488] += dqdci;             // dwdot[N2O]/d[NH]
J[1497] += dqdci;             // dwdot[OH]/d[NH]
J[1503] -= dqdci;             // dwdot[NO2]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT

// reaction 167: H + H2NO <=> H2 + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[24];
k_f = 30
            * exp(2 * tc[0] - (1006.43333160944) * invT);
dlnkfdT = 2 * invT + (1006.43333160944) * invT2;
// reverse
phi_r = sc[9]*sc[21];
Kc = exp(-g_RT[9] + g_RT[11] - g_RT[21] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[24]) + (h_RT[9] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[21] += q;// HNO
wdot[24] -= q;// H2NO
// d()/d[H2]
dqdci =  - k_r*sc[21];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[498] += dqdci;              // dwdot[HNO]/d[H2]
J[501] -= dqdci;              // dwdot[H2NO]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[24];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[604] += dqdci;              // dwdot[HNO]/d[H]
J[607] -= dqdci;              // dwdot[H2NO]/d[H]
// d()/d[HNO]
dqdci =  - k_r*sc[9];
J[1122] += dqdci;             // dwdot[H2]/d[HNO]
J[1124] -= dqdci;             // dwdot[H]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1137] -= dqdci;             // dwdot[H2NO]/d[HNO]
// d()/d[H2NO]
dqdci =  + k_f*sc[11];
J[1281] += dqdci;             // dwdot[H2]/d[H2NO]
J[1283] -= dqdci;             // dwdot[H]/d[H2NO]
J[1293] += dqdci;             // dwdot[HNO]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT

// reaction 168: H + H2NO <=> NH2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[24];
k_f = 50000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[13]*sc[27];
Kc = exp(g_RT[11] - g_RT[13] + g_RT[24] - g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[24]) + (h_RT[13] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[24] -= q;// H2NO
wdot[27] += q;// NH2
// d()/d[H]
dqdci =  + k_f*sc[24];
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[607] -= dqdci;              // dwdot[H2NO]/d[H]
J[610] += dqdci;              // dwdot[NH2]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[27];
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[713] -= dqdci;              // dwdot[H2NO]/d[OH]
J[716] += dqdci;              // dwdot[NH2]/d[OH]
// d()/d[H2NO]
dqdci =  + k_f*sc[11];
J[1283] -= dqdci;             // dwdot[H]/d[H2NO]
J[1285] += dqdci;             // dwdot[OH]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
J[1299] += dqdci;             // dwdot[NH2]/d[H2NO]
// d()/d[NH2]
dqdci =  - k_r*sc[13];
J[1442] -= dqdci;             // dwdot[H]/d[NH2]
J[1444] += dqdci;             // dwdot[OH]/d[NH2]
J[1455] -= dqdci;             // dwdot[H2NO]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT

// reaction 169: H2NO + O <=> HNO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[24];
k_f = 30
            * exp(2 * tc[0] - (1006.43333160944) * invT);
dlnkfdT = 2 * invT + (1006.43333160944) * invT2;
// reverse
phi_r = sc[13]*sc[21];
Kc = exp(g_RT[12] - g_RT[13] - g_RT[21] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[24]) + (h_RT[13] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[21] += q;// HNO
wdot[24] -= q;// H2NO
// d()/d[O]
dqdci =  + k_f*sc[24];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[657] += dqdci;              // dwdot[HNO]/d[O]
J[660] -= dqdci;              // dwdot[H2NO]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[21];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[713] -= dqdci;              // dwdot[H2NO]/d[OH]
// d()/d[HNO]
dqdci =  - k_r*sc[13];
J[1125] -= dqdci;             // dwdot[O]/d[HNO]
J[1126] += dqdci;             // dwdot[OH]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1137] -= dqdci;             // dwdot[H2NO]/d[HNO]
// d()/d[H2NO]
dqdci =  + k_f*sc[12];
J[1284] -= dqdci;             // dwdot[O]/d[H2NO]
J[1285] += dqdci;             // dwdot[OH]/d[H2NO]
J[1293] += dqdci;             // dwdot[HNO]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT

// reaction 170: H2NO + OH <=> H2O + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[24];
k_f = 20
            * exp(2 * tc[0] - (503.21666580472) * invT);
dlnkfdT = 2 * invT + (503.21666580472) * invT2;
// reverse
phi_r = sc[15]*sc[21];
Kc = exp(g_RT[13] - g_RT[15] - g_RT[21] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[24]) + (h_RT[15] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[21] += q;// HNO
wdot[24] -= q;// H2NO
// d()/d[OH]
dqdci =  + k_f*sc[24];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[713] -= dqdci;              // dwdot[H2NO]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[21];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[816] += dqdci;              // dwdot[HNO]/d[H2O]
J[819] -= dqdci;              // dwdot[H2NO]/d[H2O]
// d()/d[HNO]
dqdci =  - k_r*sc[15];
J[1126] -= dqdci;             // dwdot[OH]/d[HNO]
J[1128] += dqdci;             // dwdot[H2O]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1137] -= dqdci;             // dwdot[H2NO]/d[HNO]
// d()/d[H2NO]
dqdci =  + k_f*sc[13];
J[1285] -= dqdci;             // dwdot[OH]/d[H2NO]
J[1287] += dqdci;             // dwdot[H2O]/d[H2NO]
J[1293] += dqdci;             // dwdot[HNO]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT

// reaction 171: H2NO + HO2 <=> H2O2 + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[24];
k_f = 0.029
            * exp(2.69 * tc[0] - (805.146665287552) * invT);
dlnkfdT = 2.69 * invT + (805.146665287552) * invT2;
// reverse
phi_r = sc[16]*sc[21];
Kc = exp(g_RT[14] - g_RT[16] - g_RT[21] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[14] + h_RT[24]) + (h_RT[16] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[14] -= q;// HO2
wdot[16] += q;// H2O2
wdot[21] += q;// HNO
wdot[24] -= q;// H2NO
// d()/d[HO2]
dqdci =  + k_f*sc[24];
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[758] += dqdci;              // dwdot[H2O2]/d[HO2]
J[763] += dqdci;              // dwdot[HNO]/d[HO2]
J[766] -= dqdci;              // dwdot[H2NO]/d[HO2]
// d()/d[H2O2]
dqdci =  - k_r*sc[21];
J[862] -= dqdci;              // dwdot[HO2]/d[H2O2]
J[864] += dqdci;              // dwdot[H2O2]/d[H2O2]
J[869] += dqdci;              // dwdot[HNO]/d[H2O2]
J[872] -= dqdci;              // dwdot[H2NO]/d[H2O2]
// d()/d[HNO]
dqdci =  - k_r*sc[16];
J[1127] -= dqdci;             // dwdot[HO2]/d[HNO]
J[1129] += dqdci;             // dwdot[H2O2]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1137] -= dqdci;             // dwdot[H2NO]/d[HNO]
// d()/d[H2NO]
dqdci =  + k_f*sc[14];
J[1286] -= dqdci;             // dwdot[HO2]/d[H2NO]
J[1288] += dqdci;             // dwdot[H2O2]/d[H2NO]
J[1293] += dqdci;             // dwdot[HNO]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
// d()/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2772] += dqdT;              // dwdot[H2O2]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT

// reaction 172: H2NO + O2 <=> HNO + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[24];
k_f = 3000000
            * exp(- (12580.416645118) * invT);
dlnkfdT = (12580.416645118) * invT2;
// reverse
phi_r = sc[14]*sc[21];
Kc = exp(g_RT[8] - g_RT[14] - g_RT[21] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[24]) + (h_RT[14] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[14] += q;// HO2
wdot[21] += q;// HNO
wdot[24] -= q;// H2NO
// d()/d[O2]
dqdci =  + k_f*sc[24];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
J[445] += dqdci;              // dwdot[HNO]/d[O2]
J[448] -= dqdci;              // dwdot[H2NO]/d[O2]
// d()/d[HO2]
dqdci =  - k_r*sc[21];
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[763] += dqdci;              // dwdot[HNO]/d[HO2]
J[766] -= dqdci;              // dwdot[H2NO]/d[HO2]
// d()/d[HNO]
dqdci =  - k_r*sc[14];
J[1121] -= dqdci;             // dwdot[O2]/d[HNO]
J[1127] += dqdci;             // dwdot[HO2]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1137] -= dqdci;             // dwdot[H2NO]/d[HNO]
// d()/d[H2NO]
dqdci =  + k_f*sc[8];
J[1280] -= dqdci;             // dwdot[O2]/d[H2NO]
J[1286] += dqdci;             // dwdot[HO2]/d[H2NO]
J[1293] += dqdci;             // dwdot[HNO]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT

// reaction 173: H2NO + NO <=> 2 HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[24];
k_f = 0.02
            * exp(2 * tc[0] - (6541.81665546136) * invT);
dlnkfdT = 2 * invT + (6541.81665546136) * invT2;
// reverse
phi_r = (sc[21] * sc[21]);
Kc = exp(g_RT[3] - 2.000000*g_RT[21] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[24]) + (2.000000*h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[21] += 2 * q;// HNO
wdot[24] -= q;// H2NO
// d()/d[NO]
dqdci =  + k_f*sc[24];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[180] += 2 * dqdci;          // dwdot[HNO]/d[NO]
J[183] -= dqdci;              // dwdot[H2NO]/d[NO]
// d()/d[HNO]
dqdci =  - k_r*2.000000*sc[21];
J[1116] -= dqdci;             // dwdot[NO]/d[HNO]
J[1134] += 2 * dqdci;         // dwdot[HNO]/d[HNO]
J[1137] -= dqdci;             // dwdot[H2NO]/d[HNO]
// d()/d[H2NO]
dqdci =  + k_f*sc[3];
J[1275] -= dqdci;             // dwdot[NO]/d[H2NO]
J[1293] += 2 * dqdci;         // dwdot[HNO]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2777] += 2 * dqdT;          // dwdot[HNO]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT

// reaction 174: H2NO + NH2 <=> HNO + NH3
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[24]*sc[27];
k_f = 3000000
            * exp(- (503.21666580472) * invT);
dlnkfdT = (503.21666580472) * invT2;
// reverse
phi_r = sc[20]*sc[21];
Kc = exp(-g_RT[20] - g_RT[21] + g_RT[24] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[24] + h_RT[27]) + (h_RT[20] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[20] += q;// NH3
wdot[21] += q;// HNO
wdot[24] -= q;// H2NO
wdot[27] -= q;// NH2
// d()/d[NH3]
dqdci =  - k_r*sc[21];
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1081] += dqdci;             // dwdot[HNO]/d[NH3]
J[1084] -= dqdci;             // dwdot[H2NO]/d[NH3]
J[1087] -= dqdci;             // dwdot[NH2]/d[NH3]
// d()/d[HNO]
dqdci =  - k_r*sc[20];
J[1133] += dqdci;             // dwdot[NH3]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1137] -= dqdci;             // dwdot[H2NO]/d[HNO]
J[1140] -= dqdci;             // dwdot[NH2]/d[HNO]
// d()/d[H2NO]
dqdci =  + k_f*sc[27];
J[1292] += dqdci;             // dwdot[NH3]/d[H2NO]
J[1293] += dqdci;             // dwdot[HNO]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
J[1299] -= dqdci;             // dwdot[NH2]/d[H2NO]
// d()/d[NH2]
dqdci =  + k_f*sc[24];
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1452] += dqdci;             // dwdot[HNO]/d[NH2]
J[1455] -= dqdci;             // dwdot[H2NO]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 175: H2NO + NO2 <=> HNO + HONO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[24];
k_f = 600000
            * exp(- (1006.43333160944) * invT);
dlnkfdT = (1006.43333160944) * invT2;
// reverse
phi_r = sc[21]*sc[23];
Kc = exp(g_RT[19] - g_RT[21] - g_RT[23] + g_RT[24]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[24]) + (h_RT[21] + h_RT[23]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[19] -= q;// NO2
wdot[21] += q;// HNO
wdot[23] += q;// HONO
wdot[24] -= q;// H2NO
// d()/d[NO2]
dqdci =  + k_f*sc[24];
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1028] += dqdci;             // dwdot[HNO]/d[NO2]
J[1030] += dqdci;             // dwdot[HONO]/d[NO2]
J[1031] -= dqdci;             // dwdot[H2NO]/d[NO2]
// d()/d[HNO]
dqdci =  - k_r*sc[23];
J[1132] -= dqdci;             // dwdot[NO2]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1136] += dqdci;             // dwdot[HONO]/d[HNO]
J[1137] -= dqdci;             // dwdot[H2NO]/d[HNO]
// d()/d[HONO]
dqdci =  - k_r*sc[21];
J[1238] -= dqdci;             // dwdot[NO2]/d[HONO]
J[1240] += dqdci;             // dwdot[HNO]/d[HONO]
J[1242] += dqdci;             // dwdot[HONO]/d[HONO]
J[1243] -= dqdci;             // dwdot[H2NO]/d[HONO]
// d()/d[H2NO]
dqdci =  + k_f*sc[19];
J[1291] -= dqdci;             // dwdot[NO2]/d[H2NO]
J[1293] += dqdci;             // dwdot[HNO]/d[H2NO]
J[1295] += dqdci;             // dwdot[HONO]/d[H2NO]
J[1296] -= dqdci;             // dwdot[H2NO]/d[H2NO]
// d()/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2779] += dqdT;              // dwdot[HONO]/dT
J[2780] -= dqdT;              // dwdot[H2NO]/dT

// reaction 177: H + HNOH <=> NH2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[42];
k_f = 40000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[13]*sc[27];
Kc = exp(g_RT[11] - g_RT[13] - g_RT[27] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[42]) + (h_RT[13] + h_RT[27]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[27] += q;// NH2
wdot[42] -= q;// HNOH
// d()/d[H]
dqdci =  + k_f*sc[42];
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[610] += dqdci;              // dwdot[NH2]/d[H]
J[625] -= dqdci;              // dwdot[HNOH]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[27];
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[716] += dqdci;              // dwdot[NH2]/d[OH]
J[731] -= dqdci;              // dwdot[HNOH]/d[OH]
// d()/d[NH2]
dqdci =  - k_r*sc[13];
J[1442] -= dqdci;             // dwdot[H]/d[NH2]
J[1444] += dqdci;             // dwdot[OH]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
J[1473] -= dqdci;             // dwdot[HNOH]/d[NH2]
// d()/d[HNOH]
dqdci =  + k_f*sc[11];
J[2237] -= dqdci;             // dwdot[H]/d[HNOH]
J[2239] += dqdci;             // dwdot[OH]/d[HNOH]
J[2253] += dqdci;             // dwdot[NH2]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 178: H + HNOH <=> H2 + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[42];
k_f = 480
            * exp(1.5 * tc[0] - (190.215899674184) * invT);
dlnkfdT = 1.5 * invT + (190.215899674184) * invT2;
// reverse
phi_r = sc[9]*sc[21];
Kc = exp(-g_RT[9] + g_RT[11] - g_RT[21] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[42]) + (h_RT[9] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[21] += q;// HNO
wdot[42] -= q;// HNOH
// d()/d[H2]
dqdci =  - k_r*sc[21];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[498] += dqdci;              // dwdot[HNO]/d[H2]
J[519] -= dqdci;              // dwdot[HNOH]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[42];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[604] += dqdci;              // dwdot[HNO]/d[H]
J[625] -= dqdci;              // dwdot[HNOH]/d[H]
// d()/d[HNO]
dqdci =  - k_r*sc[9];
J[1122] += dqdci;             // dwdot[H2]/d[HNO]
J[1124] -= dqdci;             // dwdot[H]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1155] -= dqdci;             // dwdot[HNOH]/d[HNO]
// d()/d[HNOH]
dqdci =  + k_f*sc[11];
J[2235] += dqdci;             // dwdot[H2]/d[HNOH]
J[2237] -= dqdci;             // dwdot[H]/d[HNOH]
J[2247] += dqdci;             // dwdot[HNO]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 179: HNOH + O <=> HNO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[42];
k_f = 70000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[13]*sc[21];
Kc = exp(g_RT[12] - g_RT[13] - g_RT[21] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[42]) + (h_RT[13] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[21] += q;// HNO
wdot[42] -= q;// HNOH
// d()/d[O]
dqdci =  + k_f*sc[42];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[657] += dqdci;              // dwdot[HNO]/d[O]
J[678] -= dqdci;              // dwdot[HNOH]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[21];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[731] -= dqdci;              // dwdot[HNOH]/d[OH]
// d()/d[HNO]
dqdci =  - k_r*sc[13];
J[1125] -= dqdci;             // dwdot[O]/d[HNO]
J[1126] += dqdci;             // dwdot[OH]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1155] -= dqdci;             // dwdot[HNOH]/d[HNO]
// d()/d[HNOH]
dqdci =  + k_f*sc[12];
J[2238] -= dqdci;             // dwdot[O]/d[HNOH]
J[2239] += dqdci;             // dwdot[OH]/d[HNOH]
J[2247] += dqdci;             // dwdot[HNO]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 180: HNOH + O <=> HNO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[42];
k_f = 330
            * exp(1.5 * tc[0] - (-180.15156635809) * invT);
dlnkfdT = 1.5 * invT + (-180.15156635809) * invT2;
// reverse
phi_r = sc[13]*sc[21];
Kc = exp(g_RT[12] - g_RT[13] - g_RT[21] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[42]) + (h_RT[13] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[21] += q;// HNO
wdot[42] -= q;// HNOH
// d()/d[O]
dqdci =  + k_f*sc[42];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[657] += dqdci;              // dwdot[HNO]/d[O]
J[678] -= dqdci;              // dwdot[HNOH]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[21];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[731] -= dqdci;              // dwdot[HNOH]/d[OH]
// d()/d[HNO]
dqdci =  - k_r*sc[13];
J[1125] -= dqdci;             // dwdot[O]/d[HNO]
J[1126] += dqdci;             // dwdot[OH]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1155] -= dqdci;             // dwdot[HNOH]/d[HNO]
// d()/d[HNOH]
dqdci =  + k_f*sc[12];
J[2238] -= dqdci;             // dwdot[O]/d[HNOH]
J[2239] += dqdci;             // dwdot[OH]/d[HNOH]
J[2247] += dqdci;             // dwdot[HNO]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 181: HNOH + OH <=> H2O + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[42];
k_f = 2.4
            * exp(2 * tc[0] - (-599.834265639226) * invT);
dlnkfdT = 2 * invT + (-599.834265639226) * invT2;
// reverse
phi_r = sc[15]*sc[21];
Kc = exp(g_RT[13] - g_RT[15] - g_RT[21] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[42]) + (h_RT[15] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[21] += q;// HNO
wdot[42] -= q;// HNOH
// d()/d[OH]
dqdci =  + k_f*sc[42];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[731] -= dqdci;              // dwdot[HNOH]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[21];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[816] += dqdci;              // dwdot[HNO]/d[H2O]
J[837] -= dqdci;              // dwdot[HNOH]/d[H2O]
// d()/d[HNO]
dqdci =  - k_r*sc[15];
J[1126] -= dqdci;             // dwdot[OH]/d[HNO]
J[1128] += dqdci;             // dwdot[H2O]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1155] -= dqdci;             // dwdot[HNOH]/d[HNO]
// d()/d[HNOH]
dqdci =  + k_f*sc[13];
J[2239] -= dqdci;             // dwdot[OH]/d[HNOH]
J[2241] += dqdci;             // dwdot[H2O]/d[HNOH]
J[2247] += dqdci;             // dwdot[HNO]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 182: HNOH + HO2 <=> H2O2 + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[42];
k_f = 0.029
            * exp(2.69 * tc[0] - (-805.146665287552) * invT);
dlnkfdT = 2.69 * invT + (-805.146665287552) * invT2;
// reverse
phi_r = sc[16]*sc[21];
Kc = exp(g_RT[14] - g_RT[16] - g_RT[21] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[14] + h_RT[42]) + (h_RT[16] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[14] -= q;// HO2
wdot[16] += q;// H2O2
wdot[21] += q;// HNO
wdot[42] -= q;// HNOH
// d()/d[HO2]
dqdci =  + k_f*sc[42];
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[758] += dqdci;              // dwdot[H2O2]/d[HO2]
J[763] += dqdci;              // dwdot[HNO]/d[HO2]
J[784] -= dqdci;              // dwdot[HNOH]/d[HO2]
// d()/d[H2O2]
dqdci =  - k_r*sc[21];
J[862] -= dqdci;              // dwdot[HO2]/d[H2O2]
J[864] += dqdci;              // dwdot[H2O2]/d[H2O2]
J[869] += dqdci;              // dwdot[HNO]/d[H2O2]
J[890] -= dqdci;              // dwdot[HNOH]/d[H2O2]
// d()/d[HNO]
dqdci =  - k_r*sc[16];
J[1127] -= dqdci;             // dwdot[HO2]/d[HNO]
J[1129] += dqdci;             // dwdot[H2O2]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1155] -= dqdci;             // dwdot[HNOH]/d[HNO]
// d()/d[HNOH]
dqdci =  + k_f*sc[14];
J[2240] -= dqdci;             // dwdot[HO2]/d[HNOH]
J[2242] += dqdci;             // dwdot[H2O2]/d[HNOH]
J[2247] += dqdci;             // dwdot[HNO]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2772] += dqdT;              // dwdot[H2O2]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 183: HNOH + O2 <=> HNO + HO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[42];
k_f = 3000000
            * exp(- (12580.416645118) * invT);
dlnkfdT = (12580.416645118) * invT2;
// reverse
phi_r = sc[14]*sc[21];
Kc = exp(g_RT[8] - g_RT[14] - g_RT[21] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[42]) + (h_RT[14] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[14] += q;// HO2
wdot[21] += q;// HNO
wdot[42] -= q;// HNOH
// d()/d[O2]
dqdci =  + k_f*sc[42];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
J[445] += dqdci;              // dwdot[HNO]/d[O2]
J[466] -= dqdci;              // dwdot[HNOH]/d[O2]
// d()/d[HO2]
dqdci =  - k_r*sc[21];
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[763] += dqdci;              // dwdot[HNO]/d[HO2]
J[784] -= dqdci;              // dwdot[HNOH]/d[HO2]
// d()/d[HNO]
dqdci =  - k_r*sc[14];
J[1121] -= dqdci;             // dwdot[O2]/d[HNO]
J[1127] += dqdci;             // dwdot[HO2]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1155] -= dqdci;             // dwdot[HNOH]/d[HNO]
// d()/d[HNOH]
dqdci =  + k_f*sc[8];
J[2234] -= dqdci;             // dwdot[O2]/d[HNOH]
J[2240] += dqdci;             // dwdot[HO2]/d[HNOH]
J[2247] += dqdci;             // dwdot[HNO]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 184: HNOH + NH2 <=> HNO + NH3
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[27]*sc[42];
k_f = 1.8
            * exp(1.94 * tc[0] - (-579.705599007037) * invT);
dlnkfdT = 1.94 * invT + (-579.705599007037) * invT2;
// reverse
phi_r = sc[20]*sc[21];
Kc = exp(-g_RT[20] - g_RT[21] + g_RT[27] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[27] + h_RT[42]) + (h_RT[20] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[20] += q;// NH3
wdot[21] += q;// HNO
wdot[27] -= q;// NH2
wdot[42] -= q;// HNOH
// d()/d[NH3]
dqdci =  - k_r*sc[21];
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1081] += dqdci;             // dwdot[HNO]/d[NH3]
J[1087] -= dqdci;             // dwdot[NH2]/d[NH3]
J[1102] -= dqdci;             // dwdot[HNOH]/d[NH3]
// d()/d[HNO]
dqdci =  - k_r*sc[20];
J[1133] += dqdci;             // dwdot[NH3]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1140] -= dqdci;             // dwdot[NH2]/d[HNO]
J[1155] -= dqdci;             // dwdot[HNOH]/d[HNO]
// d()/d[NH2]
dqdci =  + k_f*sc[42];
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1452] += dqdci;             // dwdot[HNO]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1473] -= dqdci;             // dwdot[HNOH]/d[NH2]
// d()/d[HNOH]
dqdci =  + k_f*sc[27];
J[2246] += dqdci;             // dwdot[NH3]/d[HNOH]
J[2247] += dqdci;             // dwdot[HNO]/d[HNOH]
J[2253] -= dqdci;             // dwdot[NH2]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 185: HNOH + NO2 <=> HNO + HONO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[42];
k_f = 600000
            * exp(- (1006.43333160944) * invT);
dlnkfdT = (1006.43333160944) * invT2;
// reverse
phi_r = sc[21]*sc[23];
Kc = exp(g_RT[19] - g_RT[21] - g_RT[23] + g_RT[42]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[42]) + (h_RT[21] + h_RT[23]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[19] -= q;// NO2
wdot[21] += q;// HNO
wdot[23] += q;// HONO
wdot[42] -= q;// HNOH
// d()/d[NO2]
dqdci =  + k_f*sc[42];
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1028] += dqdci;             // dwdot[HNO]/d[NO2]
J[1030] += dqdci;             // dwdot[HONO]/d[NO2]
J[1049] -= dqdci;             // dwdot[HNOH]/d[NO2]
// d()/d[HNO]
dqdci =  - k_r*sc[23];
J[1132] -= dqdci;             // dwdot[NO2]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1136] += dqdci;             // dwdot[HONO]/d[HNO]
J[1155] -= dqdci;             // dwdot[HNOH]/d[HNO]
// d()/d[HONO]
dqdci =  - k_r*sc[21];
J[1238] -= dqdci;             // dwdot[NO2]/d[HONO]
J[1240] += dqdci;             // dwdot[HNO]/d[HONO]
J[1242] += dqdci;             // dwdot[HONO]/d[HONO]
J[1261] -= dqdci;             // dwdot[HNOH]/d[HONO]
// d()/d[HNOH]
dqdci =  + k_f*sc[19];
J[2245] -= dqdci;             // dwdot[NO2]/d[HNOH]
J[2247] += dqdci;             // dwdot[HNO]/d[HNOH]
J[2249] += dqdci;             // dwdot[HONO]/d[HNOH]
J[2268] -= dqdci;             // dwdot[HNOH]/d[HNOH]
// d()/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2779] += dqdT;              // dwdot[HONO]/dT
J[2798] -= dqdT;              // dwdot[HNOH]/dT

// reaction 186: HNO + O2 <=> HO2 + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[21];
k_f = 22000
            * exp(- (1509.64999741416) * invT);
dlnkfdT = (1509.64999741416) * invT2;
// reverse
phi_r = sc[3]*sc[14];
Kc = exp(-g_RT[3] + g_RT[8] - g_RT[14] + g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[21]) + (h_RT[3] + h_RT[14]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[8] -= q;// O2
wdot[14] += q;// HO2
wdot[21] -= q;// HNO
// d()/d[NO]
dqdci =  - k_r*sc[14];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[167] -= dqdci;              // dwdot[O2]/d[NO]
J[173] += dqdci;              // dwdot[HO2]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
// d()/d[O2]
dqdci =  + k_f*sc[21];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
J[445] -= dqdci;              // dwdot[HNO]/d[O2]
// d()/d[HO2]
dqdci =  - k_r*sc[3];
J[745] += dqdci;              // dwdot[NO]/d[HO2]
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[763] -= dqdci;              // dwdot[HNO]/d[HO2]
// d()/d[HNO]
dqdci =  + k_f*sc[8];
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1121] -= dqdci;             // dwdot[O2]/d[HNO]
J[1127] += dqdci;             // dwdot[HO2]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT

// reaction 187: HCO + HNO <=> CH2O + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[17]*sc[21];
k_f = 600000
            * exp(- (1006.43333160944) * invT);
dlnkfdT = (1006.43333160944) * invT2;
// reverse
phi_r = sc[3]*sc[18];
Kc = exp(-g_RT[3] + g_RT[17] - g_RT[18] + g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[17] + h_RT[21]) + (h_RT[3] + h_RT[18]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[17] -= q;// HCO
wdot[18] += q;// CH2O
wdot[21] -= q;// HNO
// d()/d[NO]
dqdci =  - k_r*sc[18];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[176] -= dqdci;              // dwdot[HCO]/d[NO]
J[177] += dqdci;              // dwdot[CH2O]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
// d()/d[HCO]
dqdci =  + k_f*sc[21];
J[904] += dqdci;              // dwdot[NO]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
J[919] += dqdci;              // dwdot[CH2O]/d[HCO]
J[922] -= dqdci;              // dwdot[HNO]/d[HCO]
// d()/d[CH2O]
dqdci =  - k_r*sc[3];
J[957] += dqdci;              // dwdot[NO]/d[CH2O]
J[971] -= dqdci;              // dwdot[HCO]/d[CH2O]
J[972] += dqdci;              // dwdot[CH2O]/d[CH2O]
J[975] -= dqdci;              // dwdot[HNO]/d[CH2O]
// d()/d[HNO]
dqdci =  + k_f*sc[17];
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1130] -= dqdci;             // dwdot[HCO]/d[HNO]
J[1131] += dqdci;             // dwdot[CH2O]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT
J[2774] += dqdT;              // dwdot[CH2O]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT

// reaction 189: H + HON <=> H + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[22];
k_f = 20000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[11]*sc[21];
Kc = exp(g_RT[11] - g_RT[11] - g_RT[21] + g_RT[22]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[22]) + (h_RT[11] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[21] += q;// HNO
wdot[22] -= q;// HON
// d()/d[H]
dqdci =  + k_f*sc[22] - k_r*sc[21];
J[604] += dqdci;              // dwdot[HNO]/d[H]
J[605] -= dqdci;              // dwdot[HON]/d[H]
// d()/d[HNO]
dqdci =  - k_r*sc[11];
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1135] -= dqdci;             // dwdot[HON]/d[HNO]
// d()/d[HON]
dqdci =  + k_f*sc[11];
J[1187] += dqdci;             // dwdot[HNO]/d[HON]
J[1188] -= dqdci;             // dwdot[HON]/d[HON]
// d()/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2778] -= dqdT;              // dwdot[HON]/dT

// reaction 190: H + HON <=> NH + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[22];
k_f = 20000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[13]*sc[28];
Kc = exp(g_RT[11] - g_RT[13] + g_RT[22] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[22]) + (h_RT[13] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[22] -= q;// HON
wdot[28] += q;// NH
// d()/d[H]
dqdci =  + k_f*sc[22];
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[605] -= dqdci;              // dwdot[HON]/d[H]
J[611] += dqdci;              // dwdot[NH]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[28];
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[711] -= dqdci;              // dwdot[HON]/d[OH]
J[717] += dqdci;              // dwdot[NH]/d[OH]
// d()/d[HON]
dqdci =  + k_f*sc[11];
J[1177] -= dqdci;             // dwdot[H]/d[HON]
J[1179] += dqdci;             // dwdot[OH]/d[HON]
J[1188] -= dqdci;             // dwdot[HON]/d[HON]
J[1194] += dqdci;             // dwdot[NH]/d[HON]
// d()/d[NH]
dqdci =  - k_r*sc[13];
J[1495] -= dqdci;             // dwdot[H]/d[NH]
J[1497] += dqdci;             // dwdot[OH]/d[NH]
J[1506] -= dqdci;             // dwdot[HON]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2778] -= dqdT;              // dwdot[HON]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 191: HON + O <=> NO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[22];
k_f = 70000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[3]*sc[13];
Kc = exp(-g_RT[3] + g_RT[12] - g_RT[13] + g_RT[22]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[22]) + (h_RT[3] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[22] -= q;// HON
// d()/d[NO]
dqdci =  - k_r*sc[13];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[171] -= dqdci;              // dwdot[O]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[181] -= dqdci;              // dwdot[HON]/d[NO]
// d()/d[O]
dqdci =  + k_f*sc[22];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[658] -= dqdci;              // dwdot[HON]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[3];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[711] -= dqdci;              // dwdot[HON]/d[OH]
// d()/d[HON]
dqdci =  + k_f*sc[12];
J[1169] += dqdci;             // dwdot[NO]/d[HON]
J[1178] -= dqdci;             // dwdot[O]/d[HON]
J[1179] += dqdci;             // dwdot[OH]/d[HON]
J[1188] -= dqdci;             // dwdot[HON]/d[HON]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2778] -= dqdT;              // dwdot[HON]/dT

// reaction 192: HON + OH <=> H + HONO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[22];
k_f = 40000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[11]*sc[23];
Kc = exp(-g_RT[11] + g_RT[13] + g_RT[22] - g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[22]) + (h_RT[11] + h_RT[23]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[13] -= q;// OH
wdot[22] -= q;// HON
wdot[23] += q;// HONO
// d()/d[H]
dqdci =  - k_r*sc[23];
J[594] += dqdci;              // dwdot[H]/d[H]
J[596] -= dqdci;              // dwdot[OH]/d[H]
J[605] -= dqdci;              // dwdot[HON]/d[H]
J[606] += dqdci;              // dwdot[HONO]/d[H]
// d()/d[OH]
dqdci =  + k_f*sc[22];
J[700] += dqdci;              // dwdot[H]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[711] -= dqdci;              // dwdot[HON]/d[OH]
J[712] += dqdci;              // dwdot[HONO]/d[OH]
// d()/d[HON]
dqdci =  + k_f*sc[13];
J[1177] += dqdci;             // dwdot[H]/d[HON]
J[1179] -= dqdci;             // dwdot[OH]/d[HON]
J[1188] -= dqdci;             // dwdot[HON]/d[HON]
J[1189] += dqdci;             // dwdot[HONO]/d[HON]
// d()/d[HONO]
dqdci =  - k_r*sc[11];
J[1230] += dqdci;             // dwdot[H]/d[HONO]
J[1232] -= dqdci;             // dwdot[OH]/d[HONO]
J[1241] -= dqdci;             // dwdot[HON]/d[HONO]
J[1242] += dqdci;             // dwdot[HONO]/d[HONO]
// d()/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2778] -= dqdT;              // dwdot[HON]/dT
J[2779] += dqdT;              // dwdot[HONO]/dT

// reaction 193: HON + O2 <=> NO2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[22];
k_f = 1000000
            * exp(- (2499.98039571785) * invT);
dlnkfdT = (2499.98039571785) * invT2;
// reverse
phi_r = sc[13]*sc[19];
Kc = exp(g_RT[8] - g_RT[13] - g_RT[19] + g_RT[22]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[22]) + (h_RT[13] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[13] += q;// OH
wdot[19] += q;// NO2
wdot[22] -= q;// HON
// d()/d[O2]
dqdci =  + k_f*sc[22];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[437] += dqdci;              // dwdot[OH]/d[O2]
J[443] += dqdci;              // dwdot[NO2]/d[O2]
J[446] -= dqdci;              // dwdot[HON]/d[O2]
// d()/d[OH]
dqdci =  - k_r*sc[19];
J[697] -= dqdci;              // dwdot[O2]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
J[711] -= dqdci;              // dwdot[HON]/d[OH]
// d()/d[NO2]
dqdci =  - k_r*sc[13];
J[1015] -= dqdci;             // dwdot[O2]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1029] -= dqdci;             // dwdot[HON]/d[NO2]
// d()/d[HON]
dqdci =  + k_f*sc[8];
J[1174] -= dqdci;             // dwdot[O2]/d[HON]
J[1179] += dqdci;             // dwdot[OH]/d[HON]
J[1185] += dqdci;             // dwdot[NO2]/d[HON]
J[1188] -= dqdci;             // dwdot[HON]/d[HON]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2778] -= dqdT;              // dwdot[HON]/dT

// reaction 194: HCO + NO <=> CO + HNO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[17];
k_f = 70000000
            * exp(-0.4 * tc[0]);
dlnkfdT = -0.4 * invT;
// reverse
phi_r = sc[5]*sc[21];
Kc = exp(g_RT[3] - g_RT[5] + g_RT[17] - g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[17]) + (h_RT[5] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[5] += q;// CO
wdot[17] -= q;// HCO
wdot[21] += q;// HNO
// d()/d[NO]
dqdci =  + k_f*sc[17];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[164] += dqdci;              // dwdot[CO]/d[NO]
J[176] -= dqdci;              // dwdot[HCO]/d[NO]
J[180] += dqdci;              // dwdot[HNO]/d[NO]
// d()/d[CO]
dqdci =  - k_r*sc[21];
J[268] -= dqdci;              // dwdot[NO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[282] -= dqdci;              // dwdot[HCO]/d[CO]
J[286] += dqdci;              // dwdot[HNO]/d[CO]
// d()/d[HCO]
dqdci =  + k_f*sc[3];
J[904] -= dqdci;              // dwdot[NO]/d[HCO]
J[906] += dqdci;              // dwdot[CO]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
J[922] += dqdci;              // dwdot[HNO]/d[HCO]
// d()/d[HNO]
dqdci =  - k_r*sc[5];
J[1116] -= dqdci;             // dwdot[NO]/d[HNO]
J[1118] += dqdci;             // dwdot[CO]/d[HNO]
J[1130] -= dqdci;             // dwdot[HCO]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT

// reaction 195: H + HONO <=> HNO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[23];
k_f = 56000
            * exp(0.86 * tc[0] - (2516.0833290236) * invT);
dlnkfdT = 0.86 * invT + (2516.0833290236) * invT2;
// reverse
phi_r = sc[13]*sc[21];
Kc = exp(g_RT[11] - g_RT[13] - g_RT[21] + g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[23]) + (h_RT[13] + h_RT[21]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[21] += q;// HNO
wdot[23] -= q;// HONO
// d()/d[H]
dqdci =  + k_f*sc[23];
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[604] += dqdci;              // dwdot[HNO]/d[H]
J[606] -= dqdci;              // dwdot[HONO]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[21];
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[710] += dqdci;              // dwdot[HNO]/d[OH]
J[712] -= dqdci;              // dwdot[HONO]/d[OH]
// d()/d[HNO]
dqdci =  - k_r*sc[13];
J[1124] -= dqdci;             // dwdot[H]/d[HNO]
J[1126] += dqdci;             // dwdot[OH]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1136] -= dqdci;             // dwdot[HONO]/d[HNO]
// d()/d[HONO]
dqdci =  + k_f*sc[11];
J[1230] -= dqdci;             // dwdot[H]/d[HONO]
J[1232] += dqdci;             // dwdot[OH]/d[HONO]
J[1240] += dqdci;             // dwdot[HNO]/d[HONO]
J[1242] -= dqdci;             // dwdot[HONO]/d[HONO]
// d()/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2779] -= dqdT;              // dwdot[HONO]/dT

// reaction 196: H + HONO <=> H2O + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[23];
k_f = 8.1
            * exp(1.89 * tc[0] - (1937.38416334817) * invT);
dlnkfdT = 1.89 * invT + (1937.38416334817) * invT2;
// reverse
phi_r = sc[3]*sc[15];
Kc = exp(-g_RT[3] + g_RT[11] - g_RT[15] + g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[23]) + (h_RT[3] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[11] -= q;// H
wdot[15] += q;// H2O
wdot[23] -= q;// HONO
// d()/d[NO]
dqdci =  - k_r*sc[15];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[170] -= dqdci;              // dwdot[H]/d[NO]
J[174] += dqdci;              // dwdot[H2O]/d[NO]
J[182] -= dqdci;              // dwdot[HONO]/d[NO]
// d()/d[H]
dqdci =  + k_f*sc[23];
J[586] += dqdci;              // dwdot[NO]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[598] += dqdci;              // dwdot[H2O]/d[H]
J[606] -= dqdci;              // dwdot[HONO]/d[H]
// d()/d[H2O]
dqdci =  - k_r*sc[3];
J[798] += dqdci;              // dwdot[NO]/d[H2O]
J[806] -= dqdci;              // dwdot[H]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[818] -= dqdci;              // dwdot[HONO]/d[H2O]
// d()/d[HONO]
dqdci =  + k_f*sc[11];
J[1222] += dqdci;             // dwdot[NO]/d[HONO]
J[1230] -= dqdci;             // dwdot[H]/d[HONO]
J[1234] += dqdci;             // dwdot[H2O]/d[HONO]
J[1242] -= dqdci;             // dwdot[HONO]/d[HONO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2779] -= dqdT;              // dwdot[HONO]/dT

// reaction 198: 2 NO2 <=> NO + NO3
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[19] * sc[19]);
k_f = 9600
            * exp(0.73 * tc[0] - (10517.2283153186) * invT);
dlnkfdT = 0.73 * invT + (10517.2283153186) * invT2;
// reverse
phi_r = sc[3]*sc[43];
Kc = exp(-g_RT[3] + 2.000000*g_RT[19] - g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[19]) + (h_RT[3] + h_RT[43]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[19] -= 2 * q;// NO2
wdot[43] += q;// NO3
// d()/d[NO]
dqdci =  - k_r*sc[43];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[178] += -2 * dqdci;         // dwdot[NO2]/d[NO]
J[202] += dqdci;              // dwdot[NO3]/d[NO]
// d()/d[NO2]
dqdci =  + k_f*2.000000*sc[19];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1026] += -2 * dqdci;        // dwdot[NO2]/d[NO2]
J[1050] += dqdci;             // dwdot[NO3]/d[NO2]
// d()/d[NO3]
dqdci =  - k_r*sc[3];
J[2282] += dqdci;             // dwdot[NO]/d[NO3]
J[2298] += -2 * dqdci;        // dwdot[NO2]/d[NO3]
J[2322] += dqdci;             // dwdot[NO3]/d[NO3]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2775] += -2 * dqdT;         // dwdot[NO2]/dT
J[2799] += dqdT;              // dwdot[NO3]/dT

// reaction 199: CO + NO2 <=> CO2 + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[5]*sc[19];
k_f = 90000000
            * exp(- (17008.7233041995) * invT);
dlnkfdT = (17008.7233041995) * invT2;
// reverse
phi_r = sc[3]*sc[6];
Kc = exp(-g_RT[3] + g_RT[5] - g_RT[6] + g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[5] + h_RT[19]) + (h_RT[3] + h_RT[6]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[5] -= q;// CO
wdot[6] += q;// CO2
wdot[19] -= q;// NO2
// d()/d[NO]
dqdci =  - k_r*sc[6];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[164] -= dqdci;              // dwdot[CO]/d[NO]
J[165] += dqdci;              // dwdot[CO2]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
// d()/d[CO]
dqdci =  + k_f*sc[19];
J[268] += dqdci;              // dwdot[NO]/d[CO]
J[270] -= dqdci;              // dwdot[CO]/d[CO]
J[271] += dqdci;              // dwdot[CO2]/d[CO]
J[284] -= dqdci;              // dwdot[NO2]/d[CO]
// d()/d[CO2]
dqdci =  - k_r*sc[3];
J[321] += dqdci;              // dwdot[NO]/d[CO2]
J[323] -= dqdci;              // dwdot[CO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[337] -= dqdci;              // dwdot[NO2]/d[CO2]
// d()/d[NO2]
dqdci =  + k_f*sc[5];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1012] -= dqdci;             // dwdot[CO]/d[NO2]
J[1013] += dqdci;             // dwdot[CO2]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2761] -= dqdT;              // dwdot[CO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT

// reaction 200: HCO + NO2 <=> CO + NO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[17]*sc[19];
k_f = 1.2e+17
            * exp(-3.29 * tc[0] - (1185.07524797011) * invT);
dlnkfdT = -3.29 * invT + (1185.07524797011) * invT2;
// reverse
phi_r = sc[3]*sc[5]*sc[13];
Kc = refC * exp(-g_RT[3] - g_RT[5] - g_RT[13] + g_RT[17] + g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[17] + h_RT[19]) + (h_RT[3] + h_RT[5] + h_RT[13]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[5] += q;// CO
wdot[13] += q;// OH
wdot[17] -= q;// HCO
wdot[19] -= q;// NO2
// d()/d[NO]
dqdci =  - k_r*sc[5]*sc[13];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[164] += dqdci;              // dwdot[CO]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[176] -= dqdci;              // dwdot[HCO]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
// d()/d[CO]
dqdci =  - k_r*sc[3]*sc[13];
J[268] += dqdci;              // dwdot[NO]/d[CO]
J[270] += dqdci;              // dwdot[CO]/d[CO]
J[278] += dqdci;              // dwdot[OH]/d[CO]
J[282] -= dqdci;              // dwdot[HCO]/d[CO]
J[284] -= dqdci;              // dwdot[NO2]/d[CO]
// d()/d[OH]
dqdci =  - k_r*sc[3]*sc[5];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[694] += dqdci;              // dwdot[CO]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[706] -= dqdci;              // dwdot[HCO]/d[OH]
J[708] -= dqdci;              // dwdot[NO2]/d[OH]
// d()/d[HCO]
dqdci =  + k_f*sc[19];
J[904] += dqdci;              // dwdot[NO]/d[HCO]
J[906] += dqdci;              // dwdot[CO]/d[HCO]
J[914] += dqdci;              // dwdot[OH]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
J[920] -= dqdci;              // dwdot[NO2]/d[HCO]
// d()/d[NO2]
dqdci =  + k_f*sc[17];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1012] += dqdci;             // dwdot[CO]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1024] -= dqdci;             // dwdot[HCO]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2761] += dqdT;              // dwdot[CO]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT

// reaction 201: HCO + NO2 <=> CO2 + H + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[17]*sc[19];
k_f = 8400000000
            * exp(-0.75 * tc[0] - (971.208165003109) * invT);
dlnkfdT = -0.75 * invT + (971.208165003109) * invT2;
// reverse
phi_r = sc[3]*sc[6]*sc[11];
Kc = refC * exp(-g_RT[3] - g_RT[6] - g_RT[11] + g_RT[17] + g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[17] + h_RT[19]) + (h_RT[3] + h_RT[6] + h_RT[11]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[6] += q;// CO2
wdot[11] += q;// H
wdot[17] -= q;// HCO
wdot[19] -= q;// NO2
// d()/d[NO]
dqdci =  - k_r*sc[6]*sc[11];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[165] += dqdci;              // dwdot[CO2]/d[NO]
J[170] += dqdci;              // dwdot[H]/d[NO]
J[176] -= dqdci;              // dwdot[HCO]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
// d()/d[CO2]
dqdci =  - k_r*sc[3]*sc[11];
J[321] += dqdci;              // dwdot[NO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[329] += dqdci;              // dwdot[H]/d[CO2]
J[335] -= dqdci;              // dwdot[HCO]/d[CO2]
J[337] -= dqdci;              // dwdot[NO2]/d[CO2]
// d()/d[H]
dqdci =  - k_r*sc[3]*sc[6];
J[586] += dqdci;              // dwdot[NO]/d[H]
J[589] += dqdci;              // dwdot[CO2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[600] -= dqdci;              // dwdot[HCO]/d[H]
J[602] -= dqdci;              // dwdot[NO2]/d[H]
// d()/d[HCO]
dqdci =  + k_f*sc[19];
J[904] += dqdci;              // dwdot[NO]/d[HCO]
J[907] += dqdci;              // dwdot[CO2]/d[HCO]
J[912] += dqdci;              // dwdot[H]/d[HCO]
J[918] -= dqdci;              // dwdot[HCO]/d[HCO]
J[920] -= dqdci;              // dwdot[NO2]/d[HCO]
// d()/d[NO2]
dqdci =  + k_f*sc[17];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1013] += dqdci;             // dwdot[CO2]/d[NO2]
J[1018] += dqdci;             // dwdot[H]/d[NO2]
J[1024] -= dqdci;             // dwdot[HCO]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2773] -= dqdT;              // dwdot[HCO]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT

// reaction 202: H + NO3 <=> NO2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[43];
k_f = 60000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[13]*sc[19];
Kc = exp(g_RT[11] - g_RT[13] - g_RT[19] + g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[43]) + (h_RT[13] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[19] += q;// NO2
wdot[43] -= q;// NO3
// d()/d[H]
dqdci =  + k_f*sc[43];
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[602] += dqdci;              // dwdot[NO2]/d[H]
J[626] -= dqdci;              // dwdot[NO3]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[19];
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
J[732] -= dqdci;              // dwdot[NO3]/d[OH]
// d()/d[NO2]
dqdci =  - k_r*sc[13];
J[1018] -= dqdci;             // dwdot[H]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1050] -= dqdci;             // dwdot[NO3]/d[NO2]
// d()/d[NO3]
dqdci =  + k_f*sc[11];
J[2290] -= dqdci;             // dwdot[H]/d[NO3]
J[2292] += dqdci;             // dwdot[OH]/d[NO3]
J[2298] += dqdci;             // dwdot[NO2]/d[NO3]
J[2322] -= dqdci;             // dwdot[NO3]/d[NO3]
// d()/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2799] -= dqdT;              // dwdot[NO3]/dT

// reaction 203: NO3 + O <=> NO2 + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[43];
k_f = 10000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[8]*sc[19];
Kc = exp(-g_RT[8] + g_RT[12] - g_RT[19] + g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[43]) + (h_RT[8] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[12] -= q;// O
wdot[19] += q;// NO2
wdot[43] -= q;// NO3
// d()/d[O2]
dqdci =  - k_r*sc[19];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[436] -= dqdci;              // dwdot[O]/d[O2]
J[443] += dqdci;              // dwdot[NO2]/d[O2]
J[467] -= dqdci;              // dwdot[NO3]/d[O2]
// d()/d[O]
dqdci =  + k_f*sc[43];
J[644] += dqdci;              // dwdot[O2]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[655] += dqdci;              // dwdot[NO2]/d[O]
J[679] -= dqdci;              // dwdot[NO3]/d[O]
// d()/d[NO2]
dqdci =  - k_r*sc[8];
J[1015] += dqdci;             // dwdot[O2]/d[NO2]
J[1019] -= dqdci;             // dwdot[O]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1050] -= dqdci;             // dwdot[NO3]/d[NO2]
// d()/d[NO3]
dqdci =  + k_f*sc[12];
J[2287] += dqdci;             // dwdot[O2]/d[NO3]
J[2291] -= dqdci;             // dwdot[O]/d[NO3]
J[2298] += dqdci;             // dwdot[NO2]/d[NO3]
J[2322] -= dqdci;             // dwdot[NO3]/d[NO3]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2799] -= dqdT;              // dwdot[NO3]/dT

// reaction 204: NO3 + OH <=> HO2 + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[43];
k_f = 14000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[14]*sc[19];
Kc = exp(g_RT[13] - g_RT[14] - g_RT[19] + g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[43]) + (h_RT[14] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[14] += q;// HO2
wdot[19] += q;// NO2
wdot[43] -= q;// NO3
// d()/d[OH]
dqdci =  + k_f*sc[43];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[703] += dqdci;              // dwdot[HO2]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
J[732] -= dqdci;              // dwdot[NO3]/d[OH]
// d()/d[HO2]
dqdci =  - k_r*sc[19];
J[755] -= dqdci;              // dwdot[OH]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[761] += dqdci;              // dwdot[NO2]/d[HO2]
J[785] -= dqdci;              // dwdot[NO3]/d[HO2]
// d()/d[NO2]
dqdci =  - k_r*sc[14];
J[1020] -= dqdci;             // dwdot[OH]/d[NO2]
J[1021] += dqdci;             // dwdot[HO2]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1050] -= dqdci;             // dwdot[NO3]/d[NO2]
// d()/d[NO3]
dqdci =  + k_f*sc[13];
J[2292] -= dqdci;             // dwdot[OH]/d[NO3]
J[2293] += dqdci;             // dwdot[HO2]/d[NO3]
J[2298] += dqdci;             // dwdot[NO2]/d[NO3]
J[2322] -= dqdci;             // dwdot[NO3]/d[NO3]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2799] -= dqdT;              // dwdot[NO3]/dT

// reaction 205: HO2 + NO3 <=> NO2 + O2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[43];
k_f = 1500000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[8]*sc[13]*sc[19];
Kc = refC * exp(-g_RT[8] - g_RT[13] + g_RT[14] - g_RT[19] + g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[14] + h_RT[43]) + (h_RT[8] + h_RT[13] + h_RT[19]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[13] += q;// OH
wdot[14] -= q;// HO2
wdot[19] += q;// NO2
wdot[43] -= q;// NO3
// d()/d[O2]
dqdci =  - k_r*sc[13]*sc[19];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[437] += dqdci;              // dwdot[OH]/d[O2]
J[438] -= dqdci;              // dwdot[HO2]/d[O2]
J[443] += dqdci;              // dwdot[NO2]/d[O2]
J[467] -= dqdci;              // dwdot[NO3]/d[O2]
// d()/d[OH]
dqdci =  - k_r*sc[8]*sc[19];
J[697] += dqdci;              // dwdot[O2]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[703] -= dqdci;              // dwdot[HO2]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
J[732] -= dqdci;              // dwdot[NO3]/d[OH]
// d()/d[HO2]
dqdci =  + k_f*sc[43];
J[750] += dqdci;              // dwdot[O2]/d[HO2]
J[755] += dqdci;              // dwdot[OH]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[761] += dqdci;              // dwdot[NO2]/d[HO2]
J[785] -= dqdci;              // dwdot[NO3]/d[HO2]
// d()/d[NO2]
dqdci =  - k_r*sc[8]*sc[13];
J[1015] += dqdci;             // dwdot[O2]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1021] -= dqdci;             // dwdot[HO2]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1050] -= dqdci;             // dwdot[NO3]/d[NO2]
// d()/d[NO3]
dqdci =  + k_f*sc[14];
J[2287] += dqdci;             // dwdot[O2]/d[NO3]
J[2292] += dqdci;             // dwdot[OH]/d[NO3]
J[2293] -= dqdci;             // dwdot[HO2]/d[NO3]
J[2298] += dqdci;             // dwdot[NO2]/d[NO3]
J[2322] -= dqdci;             // dwdot[NO3]/d[NO3]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2799] -= dqdT;              // dwdot[NO3]/dT

// reaction 207: NNH <=> H + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[26];
k_f = 65000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[11]*sc[45];
Kc = refC * exp(-g_RT[11] + g_RT[26] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[26]) + (h_RT[11] + h_RT[45]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[11] += q;// H
wdot[26] -= q;// NNH
wdot[45] += q;// N2
// d()/d[H]
dqdci =  - k_r*sc[45];
J[594] += dqdci;              // dwdot[H]/d[H]
J[609] -= dqdci;              // dwdot[NNH]/d[H]
J[628] += dqdci;              // dwdot[N2]/d[H]
// d()/d[NNH]
dqdci =  + k_f;
J[1389] += dqdci;             // dwdot[H]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[N2]
dqdci =  - k_r*sc[11];
J[2396] += dqdci;             // dwdot[H]/d[N2]
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 208: H + NNH <=> H2 + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[26];
k_f = 100000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[9]*sc[45];
Kc = exp(-g_RT[9] + g_RT[11] + g_RT[26] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[26]) + (h_RT[9] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[26] -= q;// NNH
wdot[45] += q;// N2
// d()/d[H2]
dqdci =  - k_r*sc[45];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[503] -= dqdci;              // dwdot[NNH]/d[H2]
J[522] += dqdci;              // dwdot[N2]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[26];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[609] -= dqdci;              // dwdot[NNH]/d[H]
J[628] += dqdci;              // dwdot[N2]/d[H]
// d()/d[NNH]
dqdci =  + k_f*sc[11];
J[1387] += dqdci;             // dwdot[H2]/d[NNH]
J[1389] -= dqdci;             // dwdot[H]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[N2]
dqdci =  - k_r*sc[9];
J[2394] += dqdci;             // dwdot[H2]/d[N2]
J[2396] -= dqdci;             // dwdot[H]/d[N2]
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 209: NNH + O <=> H + N2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[26];
k_f = 100000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[4]*sc[11];
Kc = exp(-g_RT[4] - g_RT[11] + g_RT[12] + g_RT[26]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[26]) + (h_RT[4] + h_RT[11]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] += q;// N2O
wdot[11] += q;// H
wdot[12] -= q;// O
wdot[26] -= q;// NNH
// d()/d[N2O]
dqdci =  - k_r*sc[11];
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[223] += dqdci;              // dwdot[H]/d[N2O]
J[224] -= dqdci;              // dwdot[O]/d[N2O]
J[238] -= dqdci;              // dwdot[NNH]/d[N2O]
// d()/d[H]
dqdci =  - k_r*sc[4];
J[587] += dqdci;              // dwdot[N2O]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[595] -= dqdci;              // dwdot[O]/d[H]
J[609] -= dqdci;              // dwdot[NNH]/d[H]
// d()/d[O]
dqdci =  + k_f*sc[26];
J[640] += dqdci;              // dwdot[N2O]/d[O]
J[647] += dqdci;              // dwdot[H]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[662] -= dqdci;              // dwdot[NNH]/d[O]
// d()/d[NNH]
dqdci =  + k_f*sc[12];
J[1382] += dqdci;             // dwdot[N2O]/d[NNH]
J[1389] += dqdci;             // dwdot[H]/d[NNH]
J[1390] -= dqdci;             // dwdot[O]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
// d()/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT

// reaction 210: NNH + O <=> N2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[26];
k_f = 12000000
            * exp(0.145 * tc[0] - (-109.198016479624) * invT);
dlnkfdT = 0.145 * invT + (-109.198016479624) * invT2;
// reverse
phi_r = sc[13]*sc[45];
Kc = exp(g_RT[12] - g_RT[13] + g_RT[26] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[26]) + (h_RT[13] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[26] -= q;// NNH
wdot[45] += q;// N2
// d()/d[O]
dqdci =  + k_f*sc[26];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[662] -= dqdci;              // dwdot[NNH]/d[O]
J[681] += dqdci;              // dwdot[N2]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[45];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[715] -= dqdci;              // dwdot[NNH]/d[OH]
J[734] += dqdci;              // dwdot[N2]/d[OH]
// d()/d[NNH]
dqdci =  + k_f*sc[12];
J[1390] -= dqdci;             // dwdot[O]/d[NNH]
J[1391] += dqdci;             // dwdot[OH]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[N2]
dqdci =  - k_r*sc[13];
J[2397] -= dqdci;             // dwdot[O]/d[N2]
J[2398] += dqdci;             // dwdot[OH]/d[N2]
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 211: NNH + O <=> NH + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[26];
k_f = 520000
            * exp(0.381 * tc[0] - (-205.81561631413) * invT);
dlnkfdT = 0.381 * invT + (-205.81561631413) * invT2;
// reverse
phi_r = sc[3]*sc[28];
Kc = exp(-g_RT[3] + g_RT[12] + g_RT[26] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[26]) + (h_RT[3] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[12] -= q;// O
wdot[26] -= q;// NNH
wdot[28] += q;// NH
// d()/d[NO]
dqdci =  - k_r*sc[28];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[171] -= dqdci;              // dwdot[O]/d[NO]
J[185] -= dqdci;              // dwdot[NNH]/d[NO]
J[187] += dqdci;              // dwdot[NH]/d[NO]
// d()/d[O]
dqdci =  + k_f*sc[26];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[662] -= dqdci;              // dwdot[NNH]/d[O]
J[664] += dqdci;              // dwdot[NH]/d[O]
// d()/d[NNH]
dqdci =  + k_f*sc[12];
J[1381] += dqdci;             // dwdot[NO]/d[NNH]
J[1390] -= dqdci;             // dwdot[O]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1406] += dqdci;             // dwdot[NH]/d[NNH]
// d()/d[NH]
dqdci =  - k_r*sc[3];
J[1487] += dqdci;             // dwdot[NO]/d[NH]
J[1496] -= dqdci;             // dwdot[O]/d[NH]
J[1510] -= dqdci;             // dwdot[NNH]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 212: NNH + OH <=> H2O + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[26];
k_f = 50000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[15]*sc[45];
Kc = exp(g_RT[13] - g_RT[15] + g_RT[26] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[26]) + (h_RT[15] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[26] -= q;// NNH
wdot[45] += q;// N2
// d()/d[OH]
dqdci =  + k_f*sc[26];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[715] -= dqdci;              // dwdot[NNH]/d[OH]
J[734] += dqdci;              // dwdot[N2]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[45];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[821] -= dqdci;              // dwdot[NNH]/d[H2O]
J[840] += dqdci;              // dwdot[N2]/d[H2O]
// d()/d[NNH]
dqdci =  + k_f*sc[13];
J[1391] -= dqdci;             // dwdot[OH]/d[NNH]
J[1393] += dqdci;             // dwdot[H2O]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[N2]
dqdci =  - k_r*sc[15];
J[2398] -= dqdci;             // dwdot[OH]/d[N2]
J[2400] += dqdci;             // dwdot[H2O]/d[N2]
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 213: NNH + O2 <=> HO2 + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[26];
k_f = 200000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[14]*sc[45];
Kc = exp(g_RT[8] - g_RT[14] + g_RT[26] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[26]) + (h_RT[14] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] -= q;// O2
wdot[14] += q;// HO2
wdot[26] -= q;// NNH
wdot[45] += q;// N2
// d()/d[O2]
dqdci =  + k_f*sc[26];
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[438] += dqdci;              // dwdot[HO2]/d[O2]
J[450] -= dqdci;              // dwdot[NNH]/d[O2]
J[469] += dqdci;              // dwdot[N2]/d[O2]
// d()/d[HO2]
dqdci =  - k_r*sc[45];
J[750] -= dqdci;              // dwdot[O2]/d[HO2]
J[756] += dqdci;              // dwdot[HO2]/d[HO2]
J[768] -= dqdci;              // dwdot[NNH]/d[HO2]
J[787] += dqdci;              // dwdot[N2]/d[HO2]
// d()/d[NNH]
dqdci =  + k_f*sc[8];
J[1386] -= dqdci;             // dwdot[O2]/d[NNH]
J[1392] += dqdci;             // dwdot[HO2]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[N2]
dqdci =  - k_r*sc[14];
J[2393] -= dqdci;             // dwdot[O2]/d[N2]
J[2399] += dqdci;             // dwdot[HO2]/d[N2]
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2770] += dqdT;              // dwdot[HO2]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 215: NH + NNH <=> N2 + NH2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[26]*sc[28];
k_f = 50000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[27]*sc[45];
Kc = exp(g_RT[26] - g_RT[27] + g_RT[28] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[26] + h_RT[28]) + (h_RT[27] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[26] -= q;// NNH
wdot[27] += q;// NH2
wdot[28] -= q;// NH
wdot[45] += q;// N2
// d()/d[NNH]
dqdci =  + k_f*sc[28];
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1405] += dqdci;             // dwdot[NH2]/d[NNH]
J[1406] -= dqdci;             // dwdot[NH]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[NH2]
dqdci =  - k_r*sc[45];
J[1457] -= dqdci;             // dwdot[NNH]/d[NH2]
J[1458] += dqdci;             // dwdot[NH2]/d[NH2]
J[1459] -= dqdci;             // dwdot[NH]/d[NH2]
J[1476] += dqdci;             // dwdot[N2]/d[NH2]
// d()/d[NH]
dqdci =  + k_f*sc[26];
J[1510] -= dqdci;             // dwdot[NNH]/d[NH]
J[1511] += dqdci;             // dwdot[NH2]/d[NH]
J[1512] -= dqdci;             // dwdot[NH]/d[NH]
J[1529] += dqdci;             // dwdot[N2]/d[NH]
// d()/d[N2]
dqdci =  - k_r*sc[27];
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2412] += dqdci;             // dwdot[NH2]/d[N2]
J[2413] -= dqdci;             // dwdot[NH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2783] += dqdT;              // dwdot[NH2]/dT
J[2784] -= dqdT;              // dwdot[NH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 216: NH2 + NNH <=> N2 + NH3
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[26]*sc[27];
k_f = 50000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[20]*sc[45];
Kc = exp(-g_RT[20] + g_RT[26] + g_RT[27] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[26] + h_RT[27]) + (h_RT[20] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[20] += q;// NH3
wdot[26] -= q;// NNH
wdot[27] -= q;// NH2
wdot[45] += q;// N2
// d()/d[NH3]
dqdci =  - k_r*sc[45];
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1086] -= dqdci;             // dwdot[NNH]/d[NH3]
J[1087] -= dqdci;             // dwdot[NH2]/d[NH3]
J[1105] += dqdci;             // dwdot[N2]/d[NH3]
// d()/d[NNH]
dqdci =  + k_f*sc[27];
J[1398] += dqdci;             // dwdot[NH3]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1405] -= dqdci;             // dwdot[NH2]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[NH2]
dqdci =  + k_f*sc[26];
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1457] -= dqdci;             // dwdot[NNH]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
J[1476] += dqdci;             // dwdot[N2]/d[NH2]
// d()/d[N2]
dqdci =  - k_r*sc[20];
J[2405] += dqdci;             // dwdot[NH3]/d[N2]
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2412] -= dqdci;             // dwdot[NH2]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 217: NNH + NO <=> HNO + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[26];
k_f = 50000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[21]*sc[45];
Kc = exp(g_RT[3] - g_RT[21] + g_RT[26] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[26]) + (h_RT[21] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[21] += q;// HNO
wdot[26] -= q;// NNH
wdot[45] += q;// N2
// d()/d[NO]
dqdci =  + k_f*sc[26];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[180] += dqdci;              // dwdot[HNO]/d[NO]
J[185] -= dqdci;              // dwdot[NNH]/d[NO]
J[204] += dqdci;              // dwdot[N2]/d[NO]
// d()/d[HNO]
dqdci =  - k_r*sc[45];
J[1116] -= dqdci;             // dwdot[NO]/d[HNO]
J[1134] += dqdci;             // dwdot[HNO]/d[HNO]
J[1139] -= dqdci;             // dwdot[NNH]/d[HNO]
J[1158] += dqdci;             // dwdot[N2]/d[HNO]
// d()/d[NNH]
dqdci =  + k_f*sc[3];
J[1381] -= dqdci;             // dwdot[NO]/d[NNH]
J[1399] += dqdci;             // dwdot[HNO]/d[NNH]
J[1404] -= dqdci;             // dwdot[NNH]/d[NNH]
J[1423] += dqdci;             // dwdot[N2]/d[NNH]
// d()/d[N2]
dqdci =  - k_r*sc[21];
J[2388] -= dqdci;             // dwdot[NO]/d[N2]
J[2406] += dqdci;             // dwdot[HNO]/d[N2]
J[2411] -= dqdci;             // dwdot[NNH]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2777] += dqdT;              // dwdot[HNO]/dT
J[2782] -= dqdT;              // dwdot[NNH]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 218: CO + N2O <=> CO2 + N2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[5];
k_f = 270000
            * exp(- (10183.5956658901) * invT);
dlnkfdT = (10183.5956658901) * invT2;
// reverse
phi_r = sc[6]*sc[45];
Kc = exp(g_RT[4] + g_RT[5] - g_RT[6] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[5]) + (h_RT[6] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] -= q;// N2O
wdot[5] -= q;// CO
wdot[6] += q;// CO2
wdot[45] += q;// N2
// d()/d[N2O]
dqdci =  + k_f*sc[5];
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[217] -= dqdci;              // dwdot[CO]/d[N2O]
J[218] += dqdci;              // dwdot[CO2]/d[N2O]
J[257] += dqdci;              // dwdot[N2]/d[N2O]
// d()/d[CO]
dqdci =  + k_f*sc[4];
J[269] -= dqdci;              // dwdot[N2O]/d[CO]
J[270] -= dqdci;              // dwdot[CO]/d[CO]
J[271] += dqdci;              // dwdot[CO2]/d[CO]
J[310] += dqdci;              // dwdot[N2]/d[CO]
// d()/d[CO2]
dqdci =  - k_r*sc[45];
J[322] -= dqdci;              // dwdot[N2O]/d[CO2]
J[323] -= dqdci;              // dwdot[CO]/d[CO2]
J[324] += dqdci;              // dwdot[CO2]/d[CO2]
J[363] += dqdci;              // dwdot[N2]/d[CO2]
// d()/d[N2]
dqdci =  - k_r*sc[6];
J[2389] -= dqdci;             // dwdot[N2O]/d[N2]
J[2390] -= dqdci;             // dwdot[CO]/d[N2]
J[2391] += dqdci;             // dwdot[CO2]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2761] -= dqdT;              // dwdot[CO]/dT
J[2762] += dqdT;              // dwdot[CO2]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 220: NCCN + O <=> CN + NCO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[31];
k_f = 4600000
            * exp(- (4468.56399234591) * invT);
dlnkfdT = (4468.56399234591) * invT2;
// reverse
phi_r = sc[29]*sc[30];
Kc = exp(g_RT[12] - g_RT[29] - g_RT[30] + g_RT[31]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[31]) + (h_RT[29] + h_RT[30]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[29] += q;// CN
wdot[30] += q;// NCO
wdot[31] -= q;// NCCN
// d()/d[O]
dqdci =  + k_f*sc[31];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[665] += dqdci;              // dwdot[CN]/d[O]
J[666] += dqdci;              // dwdot[NCO]/d[O]
J[667] -= dqdci;              // dwdot[NCCN]/d[O]
// d()/d[CN]
dqdci =  - k_r*sc[30];
J[1549] -= dqdci;             // dwdot[O]/d[CN]
J[1566] += dqdci;             // dwdot[CN]/d[CN]
J[1567] += dqdci;             // dwdot[NCO]/d[CN]
J[1568] -= dqdci;             // dwdot[NCCN]/d[CN]
// d()/d[NCO]
dqdci =  - k_r*sc[29];
J[1602] -= dqdci;             // dwdot[O]/d[NCO]
J[1619] += dqdci;             // dwdot[CN]/d[NCO]
J[1620] += dqdci;             // dwdot[NCO]/d[NCO]
J[1621] -= dqdci;             // dwdot[NCCN]/d[NCO]
// d()/d[NCCN]
dqdci =  + k_f*sc[12];
J[1655] -= dqdci;             // dwdot[O]/d[NCCN]
J[1672] += dqdci;             // dwdot[CN]/d[NCCN]
J[1673] += dqdci;             // dwdot[NCO]/d[NCCN]
J[1674] -= dqdci;             // dwdot[NCCN]/d[NCCN]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2785] += dqdT;              // dwdot[CN]/dT
J[2786] += dqdT;              // dwdot[NCO]/dT
J[2787] -= dqdT;              // dwdot[NCCN]/dT

// reaction 221: NCCN + OH <=> CN + HOCN
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[31];
k_f = 190000
            * exp(- (1459.32833083369) * invT);
dlnkfdT = (1459.32833083369) * invT2;
// reverse
phi_r = sc[29]*sc[32];
Kc = exp(g_RT[13] - g_RT[29] + g_RT[31] - g_RT[32]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[31]) + (h_RT[29] + h_RT[32]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[29] += q;// CN
wdot[31] -= q;// NCCN
wdot[32] += q;// HOCN
// d()/d[OH]
dqdci =  + k_f*sc[31];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[718] += dqdci;              // dwdot[CN]/d[OH]
J[720] -= dqdci;              // dwdot[NCCN]/d[OH]
J[721] += dqdci;              // dwdot[HOCN]/d[OH]
// d()/d[CN]
dqdci =  - k_r*sc[32];
J[1550] -= dqdci;             // dwdot[OH]/d[CN]
J[1566] += dqdci;             // dwdot[CN]/d[CN]
J[1568] -= dqdci;             // dwdot[NCCN]/d[CN]
J[1569] += dqdci;             // dwdot[HOCN]/d[CN]
// d()/d[NCCN]
dqdci =  + k_f*sc[13];
J[1656] -= dqdci;             // dwdot[OH]/d[NCCN]
J[1672] += dqdci;             // dwdot[CN]/d[NCCN]
J[1674] -= dqdci;             // dwdot[NCCN]/d[NCCN]
J[1675] += dqdci;             // dwdot[HOCN]/d[NCCN]
// d()/d[HOCN]
dqdci =  - k_r*sc[29];
J[1709] -= dqdci;             // dwdot[OH]/d[HOCN]
J[1725] += dqdci;             // dwdot[CN]/d[HOCN]
J[1727] -= dqdci;             // dwdot[NCCN]/d[HOCN]
J[1728] += dqdci;             // dwdot[HOCN]/d[HOCN]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2785] += dqdT;              // dwdot[CN]/dT
J[2787] -= dqdT;              // dwdot[NCCN]/dT
J[2788] += dqdT;              // dwdot[HOCN]/dT

// reaction 223: H2O + OH* <=> H2O + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[15];
k_f = 5930000
            * exp(0.5 * tc[0] - (-432.766332592059) * invT);
dlnkfdT = 0.5 * invT + (-432.766332592059) * invT2;
// reverse
phi_r = sc[13]*sc[15];
Kc = exp(g_RT[0] - g_RT[13] + g_RT[15] - g_RT[15]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[15]) + (h_RT[13] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[15];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[OH]
dqdci =  - k_r*sc[15];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/d[H2O]
dqdci =  + k_f*sc[0] - k_r*sc[13];
J[795] -= dqdci;              // dwdot[OH*]/d[H2O]
J[808] += dqdci;              // dwdot[OH]/d[H2O]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 224: H2 + OH* <=> H2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[9];
k_f = 2950000
            * exp(0.5 * tc[0] - (-223.428199617296) * invT);
dlnkfdT = 0.5 * invT + (-223.428199617296) * invT2;
// reverse
phi_r = sc[9]*sc[13];
Kc = exp(g_RT[0] + g_RT[9] - g_RT[9] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[9]) + (h_RT[9] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[9];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[H2]
dqdci =  + k_f*sc[0] - k_r*sc[13];
J[477] -= dqdci;              // dwdot[OH*]/d[H2]
J[490] += dqdci;              // dwdot[OH]/d[H2]
// d()/d[OH]
dqdci =  - k_r*sc[9];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 225: N2 + OH* <=> N2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[45];
k_f = 108000
            * exp(0.5 * tc[0] - (-624.995098929462) * invT);
dlnkfdT = 0.5 * invT + (-624.995098929462) * invT2;
// reverse
phi_r = sc[13]*sc[45];
Kc = exp(g_RT[0] - g_RT[13] + g_RT[45] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[45]) + (h_RT[13] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[45];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[OH]
dqdci =  - k_r*sc[45];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/d[N2]
dqdci =  + k_f*sc[0] - k_r*sc[13];
J[2385] -= dqdci;             // dwdot[OH*]/d[N2]
J[2398] += dqdci;             // dwdot[OH]/d[N2]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 226: OH + OH* <=> 2 OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[13];
k_f = 6010000
            * exp(0.5 * tc[0] - (-384.457532674806) * invT);
dlnkfdT = 0.5 * invT + (-384.457532674806) * invT2;
// reverse
phi_r = (sc[13] * sc[13]);
Kc = exp(g_RT[0] + g_RT[13] - 2.000000*g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[13]) + (2.000000*h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[13];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[OH]
dqdci =  + k_f*sc[0] - k_r*2.000000*sc[13];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 227: H + OH* <=> H + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[11];
k_f = 1310000
            * exp(0.5 * tc[0] - (-84.0371831893882) * invT);
dlnkfdT = 0.5 * invT + (-84.0371831893882) * invT2;
// reverse
phi_r = sc[11]*sc[13];
Kc = exp(g_RT[0] + g_RT[11] - g_RT[11] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[11]) + (h_RT[11] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[11];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[H]
dqdci =  + k_f*sc[0] - k_r*sc[13];
J[583] -= dqdci;              // dwdot[OH*]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[11];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 228: AR + OH* <=> AR + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[10];
k_f = 1690000
            * exp(- (2080.80091310252) * invT);
dlnkfdT = (2080.80091310252) * invT2;
// reverse
phi_r = sc[10]*sc[13];
Kc = exp(g_RT[0] + g_RT[10] - g_RT[10] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[10]) + (h_RT[10] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[10];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[AR]
dqdci =  + k_f*sc[0] - k_r*sc[13];
J[530] -= dqdci;              // dwdot[OH*]/d[AR]
J[543] += dqdci;              // dwdot[OH]/d[AR]
// d()/d[OH]
dqdci =  - k_r*sc[10];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 229: O2 + OH* <=> O2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[8];
k_f = 2100000
            * exp(0.5 * tc[0] - (-240.537566254656) * invT);
dlnkfdT = 0.5 * invT + (-240.537566254656) * invT2;
// reverse
phi_r = sc[8]*sc[13];
Kc = exp(g_RT[0] + g_RT[8] - g_RT[8] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[8]) + (h_RT[8] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[8];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[O2]
dqdci =  + k_f*sc[0] - k_r*sc[13];
J[424] -= dqdci;              // dwdot[OH*]/d[O2]
J[437] += dqdci;              // dwdot[OH]/d[O2]
// d()/d[OH]
dqdci =  - k_r*sc[8];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 230: CO2 + OH* <=> CO2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[6];
k_f = 2750000
            * exp(0.5 * tc[0] - (-487.113732498969) * invT);
dlnkfdT = 0.5 * invT + (-487.113732498969) * invT2;
// reverse
phi_r = sc[6]*sc[13];
Kc = exp(g_RT[0] + g_RT[6] - g_RT[6] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[6]) + (h_RT[6] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[6];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[CO2]
dqdci =  + k_f*sc[0] - k_r*sc[13];
J[318] -= dqdci;              // dwdot[OH*]/d[CO2]
J[331] += dqdci;              // dwdot[OH]/d[CO2]
// d()/d[OH]
dqdci =  - k_r*sc[6];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 231: CO + OH* <=> CO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[0]*sc[5];
k_f = 3230000
            * exp(0.5 * tc[0] - (-396.031515988314) * invT);
dlnkfdT = 0.5 * invT + (-396.031515988314) * invT2;
// reverse
phi_r = sc[5]*sc[13];
Kc = exp(g_RT[0] + g_RT[5] - g_RT[5] - g_RT[13]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[0] + h_RT[5]) + (h_RT[5] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] -= q;// OH*
wdot[13] += q;// OH
// d()/d[OH*]
dqdci =  + k_f*sc[5];
J[0] -= dqdci;                // dwdot[OH*]/d[OH*]
J[13] += dqdci;               // dwdot[OH]/d[OH*]
// d()/d[CO]
dqdci =  + k_f*sc[0] - k_r*sc[13];
J[265] -= dqdci;              // dwdot[OH*]/d[CO]
J[278] += dqdci;              // dwdot[OH]/d[CO]
// d()/d[OH]
dqdci =  - k_r*sc[5];
J[689] -= dqdci;              // dwdot[OH*]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
// d()/dT
J[2756] -= dqdT;              // dwdot[OH*]/dT
J[2769] += dqdT;              // dwdot[OH]/dT

// reaction 232: H + N2O <=> N2 + OH*
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[11];
k_f = 160000000
            * exp(- (25311.7982899774) * invT);
dlnkfdT = (25311.7982899774) * invT2;
// reverse
phi_r = sc[0]*sc[45];
Kc = exp(-g_RT[0] + g_RT[4] + g_RT[11] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[11]) + (h_RT[0] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[0] += q;// OH*
wdot[4] -= q;// N2O
wdot[11] -= q;// H
wdot[45] += q;// N2
// d()/d[OH*]
dqdci =  - k_r*sc[45];
J[0] += dqdci;                // dwdot[OH*]/d[OH*]
J[4] -= dqdci;                // dwdot[N2O]/d[OH*]
J[11] -= dqdci;               // dwdot[H]/d[OH*]
J[45] += dqdci;               // dwdot[N2]/d[OH*]
// d()/d[N2O]
dqdci =  + k_f*sc[11];
J[212] += dqdci;              // dwdot[OH*]/d[N2O]
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[223] -= dqdci;              // dwdot[H]/d[N2O]
J[257] += dqdci;              // dwdot[N2]/d[N2O]
// d()/d[H]
dqdci =  + k_f*sc[4];
J[583] += dqdci;              // dwdot[OH*]/d[H]
J[587] -= dqdci;              // dwdot[N2O]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[628] += dqdci;              // dwdot[N2]/d[H]
// d()/d[N2]
dqdci =  - k_r*sc[0];
J[2385] += dqdci;             // dwdot[OH*]/d[N2]
J[2389] -= dqdci;             // dwdot[N2O]/d[N2]
J[2396] -= dqdci;             // dwdot[H]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2756] += dqdT;              // dwdot[OH*]/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 235: HO2 + NO <=> NO2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[14];
k_f = 2100000
            * exp(- (-241.543999586265) * invT);
dlnkfdT = (-241.543999586265) * invT2;
// reverse
phi_r = sc[13]*sc[19];
Kc = exp(g_RT[3] - g_RT[13] + g_RT[14] - g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[14]) + (h_RT[13] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[13] += q;// OH
wdot[14] -= q;// HO2
wdot[19] += q;// NO2
// d()/d[NO]
dqdci =  + k_f*sc[14];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[173] -= dqdci;              // dwdot[HO2]/d[NO]
J[178] += dqdci;              // dwdot[NO2]/d[NO]
// d()/d[OH]
dqdci =  - k_r*sc[19];
J[692] -= dqdci;              // dwdot[NO]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[703] -= dqdci;              // dwdot[HO2]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
// d()/d[HO2]
dqdci =  + k_f*sc[3];
J[745] -= dqdci;              // dwdot[NO]/d[HO2]
J[755] += dqdci;              // dwdot[OH]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[761] += dqdci;              // dwdot[NO2]/d[HO2]
// d()/d[NO2]
dqdci =  - k_r*sc[13];
J[1010] -= dqdci;             // dwdot[NO]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1021] -= dqdci;             // dwdot[HO2]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT

// reaction 237: H2 + NO2 <=> H + HONO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[9]*sc[19];
k_f = 0.013
            * exp(2.76 * tc[0] - (14980.7601410065) * invT);
dlnkfdT = 2.76 * invT + (14980.7601410065) * invT2;
// reverse
phi_r = sc[11]*sc[23];
Kc = exp(g_RT[9] - g_RT[11] + g_RT[19] - g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[9] + h_RT[19]) + (h_RT[11] + h_RT[23]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] -= q;// H2
wdot[11] += q;// H
wdot[19] -= q;// NO2
wdot[23] += q;// HONO
// d()/d[H2]
dqdci =  + k_f*sc[19];
J[486] -= dqdci;              // dwdot[H2]/d[H2]
J[488] += dqdci;              // dwdot[H]/d[H2]
J[496] -= dqdci;              // dwdot[NO2]/d[H2]
J[500] += dqdci;              // dwdot[HONO]/d[H2]
// d()/d[H]
dqdci =  - k_r*sc[23];
J[592] -= dqdci;              // dwdot[H2]/d[H]
J[594] += dqdci;              // dwdot[H]/d[H]
J[602] -= dqdci;              // dwdot[NO2]/d[H]
J[606] += dqdci;              // dwdot[HONO]/d[H]
// d()/d[NO2]
dqdci =  + k_f*sc[9];
J[1016] -= dqdci;             // dwdot[H2]/d[NO2]
J[1018] += dqdci;             // dwdot[H]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1030] += dqdci;             // dwdot[HONO]/d[NO2]
// d()/d[HONO]
dqdci =  - k_r*sc[11];
J[1228] -= dqdci;             // dwdot[H2]/d[HONO]
J[1230] += dqdci;             // dwdot[H]/d[HONO]
J[1238] -= dqdci;             // dwdot[NO2]/d[HONO]
J[1242] += dqdci;             // dwdot[HONO]/d[HONO]
// d()/dT
J[2765] -= dqdT;              // dwdot[H2]/dT
J[2767] += dqdT;              // dwdot[H]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2779] += dqdT;              // dwdot[HONO]/dT

// reaction 238: H + NO2 <=> NO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[19];
k_f = 131000000
            * exp(- (182.164433021309) * invT);
dlnkfdT = (182.164433021309) * invT2;
// reverse
phi_r = sc[3]*sc[13];
Kc = exp(-g_RT[3] + g_RT[11] - g_RT[13] + g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[19]) + (h_RT[3] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[11] -= q;// H
wdot[13] += q;// OH
wdot[19] -= q;// NO2
// d()/d[NO]
dqdci =  - k_r*sc[13];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[170] -= dqdci;              // dwdot[H]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
// d()/d[H]
dqdci =  + k_f*sc[19];
J[586] += dqdci;              // dwdot[NO]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[596] += dqdci;              // dwdot[OH]/d[H]
J[602] -= dqdci;              // dwdot[NO2]/d[H]
// d()/d[OH]
dqdci =  - k_r*sc[3];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[700] -= dqdci;              // dwdot[H]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[708] -= dqdci;              // dwdot[NO2]/d[OH]
// d()/d[NO2]
dqdci =  + k_f*sc[11];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1018] -= dqdci;             // dwdot[H]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT

// reaction 239: NO2 + O <=> NO + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[19];
k_f = 3910000
            * exp(- (-119.765566461523) * invT);
dlnkfdT = (-119.765566461523) * invT2;
// reverse
phi_r = sc[3]*sc[8];
Kc = exp(-g_RT[3] - g_RT[8] + g_RT[12] + g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[19]) + (h_RT[3] + h_RT[8]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[8] += q;// O2
wdot[12] -= q;// O
wdot[19] -= q;// NO2
// d()/d[NO]
dqdci =  - k_r*sc[8];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[167] += dqdci;              // dwdot[O2]/d[NO]
J[171] -= dqdci;              // dwdot[O]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
// d()/d[O2]
dqdci =  - k_r*sc[3];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[436] -= dqdci;              // dwdot[O]/d[O2]
J[443] -= dqdci;              // dwdot[NO2]/d[O2]
// d()/d[O]
dqdci =  + k_f*sc[19];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[644] += dqdci;              // dwdot[O2]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[655] -= dqdci;              // dwdot[NO2]/d[O]
// d()/d[NO2]
dqdci =  + k_f*sc[12];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1015] += dqdci;             // dwdot[O2]/d[NO2]
J[1019] -= dqdci;             // dwdot[O]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT

// reaction 241: 2 NO2 <=> 2 NO + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[19] * sc[19]);
k_f = 2000000
            * exp(- (13498.7870602116) * invT);
dlnkfdT = (13498.7870602116) * invT2;
// reverse
phi_r = (sc[3] * sc[3])*sc[8];
Kc = refC * exp(-2.000000*g_RT[3] - g_RT[8] + 2.000000*g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[19]) + (2.000000*h_RT[3] + h_RT[8]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += 2 * q;// NO
wdot[8] += q;// O2
wdot[19] -= 2 * q;// NO2
// d()/d[NO]
dqdci =  - k_r*2.000000*sc[3]*sc[8];
J[162] += 2 * dqdci;          // dwdot[NO]/d[NO]
J[167] += dqdci;              // dwdot[O2]/d[NO]
J[178] += -2 * dqdci;         // dwdot[NO2]/d[NO]
// d()/d[O2]
dqdci =  - k_r*sc[3]*sc[3];
J[427] += 2 * dqdci;          // dwdot[NO]/d[O2]
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[443] += -2 * dqdci;         // dwdot[NO2]/d[O2]
// d()/d[NO2]
dqdci =  + k_f*2.000000*sc[19];
J[1010] += 2 * dqdci;         // dwdot[NO]/d[NO2]
J[1015] += dqdci;             // dwdot[O2]/d[NO2]
J[1026] += -2 * dqdci;        // dwdot[NO2]/d[NO2]
// d()/dT
J[2759] += 2 * dqdT;          // dwdot[NO]/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2775] += -2 * dqdT;         // dwdot[NO2]/dT

// reaction 242: HO2 + NO2 <=> HONO + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[14]*sc[19];
k_f = 1.91e-06
            * exp(3.32 * tc[0] - (1531.79153070957) * invT);
dlnkfdT = 3.32 * invT + (1531.79153070957) * invT2;
// reverse
phi_r = sc[8]*sc[23];
Kc = exp(-g_RT[8] + g_RT[14] + g_RT[19] - g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[14] + h_RT[19]) + (h_RT[8] + h_RT[23]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[14] -= q;// HO2
wdot[19] -= q;// NO2
wdot[23] += q;// HONO
// d()/d[O2]
dqdci =  - k_r*sc[23];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[438] -= dqdci;              // dwdot[HO2]/d[O2]
J[443] -= dqdci;              // dwdot[NO2]/d[O2]
J[447] += dqdci;              // dwdot[HONO]/d[O2]
// d()/d[HO2]
dqdci =  + k_f*sc[19];
J[750] += dqdci;              // dwdot[O2]/d[HO2]
J[756] -= dqdci;              // dwdot[HO2]/d[HO2]
J[761] -= dqdci;              // dwdot[NO2]/d[HO2]
J[765] += dqdci;              // dwdot[HONO]/d[HO2]
// d()/d[NO2]
dqdci =  + k_f*sc[14];
J[1015] += dqdci;             // dwdot[O2]/d[NO2]
J[1021] -= dqdci;             // dwdot[HO2]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1030] += dqdci;             // dwdot[HONO]/d[NO2]
// d()/d[HONO]
dqdci =  - k_r*sc[8];
J[1227] += dqdci;             // dwdot[O2]/d[HONO]
J[1233] -= dqdci;             // dwdot[HO2]/d[HONO]
J[1238] -= dqdci;             // dwdot[NO2]/d[HONO]
J[1242] += dqdci;             // dwdot[HONO]/d[HONO]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2770] -= dqdT;              // dwdot[HO2]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2779] += dqdT;              // dwdot[HONO]/dT

// reaction 244: NO + NO2 <=> N2O + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[19];
k_f = 1000000
            * exp(- (30192.9999482832) * invT);
dlnkfdT = (30192.9999482832) * invT2;
// reverse
phi_r = sc[4]*sc[8];
Kc = exp(g_RT[3] - g_RT[4] - g_RT[8] + g_RT[19]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[19]) + (h_RT[4] + h_RT[8]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[4] += q;// N2O
wdot[8] += q;// O2
wdot[19] -= q;// NO2
// d()/d[NO]
dqdci =  + k_f*sc[19];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[163] += dqdci;              // dwdot[N2O]/d[NO]
J[167] += dqdci;              // dwdot[O2]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
// d()/d[N2O]
dqdci =  - k_r*sc[8];
J[215] -= dqdci;              // dwdot[NO]/d[N2O]
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[220] += dqdci;              // dwdot[O2]/d[N2O]
J[231] -= dqdci;              // dwdot[NO2]/d[N2O]
// d()/d[O2]
dqdci =  - k_r*sc[4];
J[427] -= dqdci;              // dwdot[NO]/d[O2]
J[428] += dqdci;              // dwdot[N2O]/d[O2]
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[443] -= dqdci;              // dwdot[NO2]/d[O2]
// d()/d[NO2]
dqdci =  + k_f*sc[3];
J[1010] -= dqdci;             // dwdot[NO]/d[NO2]
J[1011] += dqdci;             // dwdot[N2O]/d[NO2]
J[1015] += dqdci;             // dwdot[O2]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT

// reaction 245: HONO + O <=> NO2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[23];
k_f = 12000000
            * exp(- (3019.29999482832) * invT);
dlnkfdT = (3019.29999482832) * invT2;
// reverse
phi_r = sc[13]*sc[19];
Kc = exp(g_RT[12] - g_RT[13] - g_RT[19] + g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[23]) + (h_RT[13] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[19] += q;// NO2
wdot[23] -= q;// HONO
// d()/d[O]
dqdci =  + k_f*sc[23];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[655] += dqdci;              // dwdot[NO2]/d[O]
J[659] -= dqdci;              // dwdot[HONO]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[19];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
J[712] -= dqdci;              // dwdot[HONO]/d[OH]
// d()/d[NO2]
dqdci =  - k_r*sc[13];
J[1019] -= dqdci;             // dwdot[O]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1030] -= dqdci;             // dwdot[HONO]/d[NO2]
// d()/d[HONO]
dqdci =  + k_f*sc[12];
J[1231] -= dqdci;             // dwdot[O]/d[HONO]
J[1232] += dqdci;             // dwdot[OH]/d[HONO]
J[1238] += dqdci;             // dwdot[NO2]/d[HONO]
J[1242] -= dqdci;             // dwdot[HONO]/d[HONO]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2779] -= dqdT;              // dwdot[HONO]/dT

// reaction 246: HONO + OH <=> H2O + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[23];
k_f = 13000
            * exp(1 * tc[0] - (67.9342498836372) * invT);
dlnkfdT = 1 * invT + (67.9342498836372) * invT2;
// reverse
phi_r = sc[15]*sc[19];
Kc = exp(g_RT[13] - g_RT[15] - g_RT[19] + g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[23]) + (h_RT[15] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[19] += q;// NO2
wdot[23] -= q;// HONO
// d()/d[OH]
dqdci =  + k_f*sc[23];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
J[712] -= dqdci;              // dwdot[HONO]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[19];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[814] += dqdci;              // dwdot[NO2]/d[H2O]
J[818] -= dqdci;              // dwdot[HONO]/d[H2O]
// d()/d[NO2]
dqdci =  - k_r*sc[15];
J[1020] -= dqdci;             // dwdot[OH]/d[NO2]
J[1022] += dqdci;             // dwdot[H2O]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1030] -= dqdci;             // dwdot[HONO]/d[NO2]
// d()/d[HONO]
dqdci =  + k_f*sc[13];
J[1232] -= dqdci;             // dwdot[OH]/d[HONO]
J[1234] += dqdci;             // dwdot[H2O]/d[HONO]
J[1238] += dqdci;             // dwdot[NO2]/d[HONO]
J[1242] -= dqdci;             // dwdot[HONO]/d[HONO]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2779] -= dqdT;              // dwdot[HONO]/dT

// reaction 247: 2 HONO <=> H2O + NO + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[23] * sc[23]);
k_f = 3.49e-07
            * exp(3.64 * tc[0] - (6109.0503228693) * invT);
dlnkfdT = 3.64 * invT + (6109.0503228693) * invT2;
// reverse
phi_r = sc[3]*sc[15]*sc[19];
Kc = refC * exp(-g_RT[3] - g_RT[15] - g_RT[19] + 2.000000*g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[23]) + (h_RT[3] + h_RT[15] + h_RT[19]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[15] += q;// H2O
wdot[19] += q;// NO2
wdot[23] -= 2 * q;// HONO
// d()/d[NO]
dqdci =  - k_r*sc[15]*sc[19];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[174] += dqdci;              // dwdot[H2O]/d[NO]
J[178] += dqdci;              // dwdot[NO2]/d[NO]
J[182] += -2 * dqdci;         // dwdot[HONO]/d[NO]
// d()/d[H2O]
dqdci =  - k_r*sc[3]*sc[19];
J[798] += dqdci;              // dwdot[NO]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[814] += dqdci;              // dwdot[NO2]/d[H2O]
J[818] += -2 * dqdci;         // dwdot[HONO]/d[H2O]
// d()/d[NO2]
dqdci =  - k_r*sc[3]*sc[15];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1022] += dqdci;             // dwdot[H2O]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1030] += -2 * dqdci;        // dwdot[HONO]/d[NO2]
// d()/d[HONO]
dqdci =  + k_f*2.000000*sc[23];
J[1222] += dqdci;             // dwdot[NO]/d[HONO]
J[1234] += dqdci;             // dwdot[H2O]/d[HONO]
J[1238] += dqdci;             // dwdot[NO2]/d[HONO]
J[1242] += -2 * dqdci;        // dwdot[HONO]/d[HONO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2779] += -2 * dqdT;         // dwdot[HONO]/dT

// reaction 248: HNO + O <=> NO + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[21];
k_f = 10000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[3]*sc[13];
Kc = exp(-g_RT[3] + g_RT[12] - g_RT[13] + g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[21]) + (h_RT[3] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[21] -= q;// HNO
// d()/d[NO]
dqdci =  - k_r*sc[13];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[171] -= dqdci;              // dwdot[O]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
// d()/d[O]
dqdci =  + k_f*sc[21];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[657] -= dqdci;              // dwdot[HNO]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[3];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[710] -= dqdci;              // dwdot[HNO]/d[OH]
// d()/d[HNO]
dqdci =  + k_f*sc[12];
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1125] -= dqdci;             // dwdot[O]/d[HNO]
J[1126] += dqdci;             // dwdot[OH]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT

// reaction 249: HNO + OH <=> H2O + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[21];
k_f = 36000000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[3]*sc[15];
Kc = exp(-g_RT[3] + g_RT[13] - g_RT[15] + g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[21]) + (h_RT[3] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[21] -= q;// HNO
// d()/d[NO]
dqdci =  - k_r*sc[15];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[172] -= dqdci;              // dwdot[OH]/d[NO]
J[174] += dqdci;              // dwdot[H2O]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
// d()/d[OH]
dqdci =  + k_f*sc[21];
J[692] += dqdci;              // dwdot[NO]/d[OH]
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[710] -= dqdci;              // dwdot[HNO]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[3];
J[798] += dqdci;              // dwdot[NO]/d[H2O]
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[816] -= dqdci;              // dwdot[HNO]/d[H2O]
// d()/d[HNO]
dqdci =  + k_f*sc[13];
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1126] -= dqdci;             // dwdot[OH]/d[HNO]
J[1128] += dqdci;             // dwdot[H2O]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT

// reaction 250: HNO + NO2 <=> HONO + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[21];
k_f = 0.0442
            * exp(2.6 * tc[0] - (2043.05966316716) * invT);
dlnkfdT = 2.6 * invT + (2043.05966316716) * invT2;
// reverse
phi_r = sc[3]*sc[23];
Kc = exp(-g_RT[3] + g_RT[19] + g_RT[21] - g_RT[23]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[21]) + (h_RT[3] + h_RT[23]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[19] -= q;// NO2
wdot[21] -= q;// HNO
wdot[23] += q;// HONO
// d()/d[NO]
dqdci =  - k_r*sc[23];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[178] -= dqdci;              // dwdot[NO2]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
J[182] += dqdci;              // dwdot[HONO]/d[NO]
// d()/d[NO2]
dqdci =  + k_f*sc[21];
J[1010] += dqdci;             // dwdot[NO]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1028] -= dqdci;             // dwdot[HNO]/d[NO2]
J[1030] += dqdci;             // dwdot[HONO]/d[NO2]
// d()/d[HNO]
dqdci =  + k_f*sc[19];
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1132] -= dqdci;             // dwdot[NO2]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
J[1136] += dqdci;             // dwdot[HONO]/d[HNO]
// d()/d[HONO]
dqdci =  - k_r*sc[3];
J[1222] += dqdci;             // dwdot[NO]/d[HONO]
J[1238] -= dqdci;             // dwdot[NO2]/d[HONO]
J[1240] -= dqdci;             // dwdot[HNO]/d[HONO]
J[1242] += dqdci;             // dwdot[HONO]/d[HONO]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT
J[2779] += dqdT;              // dwdot[HONO]/dT

// reaction 251: 2 HNO <=> H2O + N2O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[21] * sc[21]);
k_f = 3950000
            * exp(- (2516.0833290236) * invT);
dlnkfdT = (2516.0833290236) * invT2;
// reverse
phi_r = sc[4]*sc[15];
Kc = exp(-g_RT[4] - g_RT[15] + 2.000000*g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[21]) + (h_RT[4] + h_RT[15]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] += q;// N2O
wdot[15] += q;// H2O
wdot[21] -= 2 * q;// HNO
// d()/d[N2O]
dqdci =  - k_r*sc[15];
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[227] += dqdci;              // dwdot[H2O]/d[N2O]
J[233] += -2 * dqdci;         // dwdot[HNO]/d[N2O]
// d()/d[H2O]
dqdci =  - k_r*sc[4];
J[799] += dqdci;              // dwdot[N2O]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[816] += -2 * dqdci;         // dwdot[HNO]/d[H2O]
// d()/d[HNO]
dqdci =  + k_f*2.000000*sc[21];
J[1117] += dqdci;             // dwdot[N2O]/d[HNO]
J[1128] += dqdci;             // dwdot[H2O]/d[HNO]
J[1134] += -2 * dqdci;        // dwdot[HNO]/d[HNO]
// d()/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2777] += -2 * dqdT;         // dwdot[HNO]/dT

// reaction 252: HNO + NO <=> N2O + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[21];
k_f = 2000000
            * exp(- (13083.6333109227) * invT);
dlnkfdT = (13083.6333109227) * invT2;
// reverse
phi_r = sc[4]*sc[13];
Kc = exp(g_RT[3] - g_RT[4] - g_RT[13] + g_RT[21]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[21]) + (h_RT[4] + h_RT[13]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[4] += q;// N2O
wdot[13] += q;// OH
wdot[21] -= q;// HNO
// d()/d[NO]
dqdci =  + k_f*sc[21];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[163] += dqdci;              // dwdot[N2O]/d[NO]
J[172] += dqdci;              // dwdot[OH]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
// d()/d[N2O]
dqdci =  - k_r*sc[13];
J[215] -= dqdci;              // dwdot[NO]/d[N2O]
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[225] += dqdci;              // dwdot[OH]/d[N2O]
J[233] -= dqdci;              // dwdot[HNO]/d[N2O]
// d()/d[OH]
dqdci =  - k_r*sc[4];
J[692] -= dqdci;              // dwdot[NO]/d[OH]
J[693] += dqdci;              // dwdot[N2O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[710] -= dqdci;              // dwdot[HNO]/d[OH]
// d()/d[HNO]
dqdci =  + k_f*sc[3];
J[1116] -= dqdci;             // dwdot[NO]/d[HNO]
J[1117] += dqdci;             // dwdot[N2O]/d[HNO]
J[1126] += dqdci;             // dwdot[OH]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT

// reaction 253: N + NO2 <=> N2O + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[19]*sc[25];
k_f = 1800000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[4]*sc[12];
Kc = exp(-g_RT[4] - g_RT[12] + g_RT[19] + g_RT[25]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[19] + h_RT[25]) + (h_RT[4] + h_RT[12]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] += q;// N2O
wdot[12] += q;// O
wdot[19] -= q;// NO2
wdot[25] -= q;// N
// d()/d[N2O]
dqdci =  - k_r*sc[12];
J[216] += dqdci;              // dwdot[N2O]/d[N2O]
J[224] += dqdci;              // dwdot[O]/d[N2O]
J[231] -= dqdci;              // dwdot[NO2]/d[N2O]
J[237] -= dqdci;              // dwdot[N]/d[N2O]
// d()/d[O]
dqdci =  - k_r*sc[4];
J[640] += dqdci;              // dwdot[N2O]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[655] -= dqdci;              // dwdot[NO2]/d[O]
J[661] -= dqdci;              // dwdot[N]/d[O]
// d()/d[NO2]
dqdci =  + k_f*sc[25];
J[1011] += dqdci;             // dwdot[N2O]/d[NO2]
J[1019] += dqdci;             // dwdot[O]/d[NO2]
J[1026] -= dqdci;             // dwdot[NO2]/d[NO2]
J[1032] -= dqdci;             // dwdot[N]/d[NO2]
// d()/d[N]
dqdci =  + k_f*sc[19];
J[1329] += dqdci;             // dwdot[N2O]/d[N]
J[1337] += dqdci;             // dwdot[O]/d[N]
J[1344] -= dqdci;             // dwdot[NO2]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
// d()/dT
J[2760] += dqdT;              // dwdot[N2O]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2775] -= dqdT;              // dwdot[NO2]/dT
J[2781] -= dqdT;              // dwdot[N]/dT

// reaction 254: N + O2 <=> NO + O
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[8]*sc[25];
k_f = 6400
            * exp(1 * tc[0] - (3160.20066125364) * invT);
dlnkfdT = 1 * invT + (3160.20066125364) * invT2;
// reverse
phi_r = sc[3]*sc[12];
Kc = exp(-g_RT[3] + g_RT[8] - g_RT[12] + g_RT[25]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[8] + h_RT[25]) + (h_RT[3] + h_RT[12]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[8] -= q;// O2
wdot[12] += q;// O
wdot[25] -= q;// N
// d()/d[NO]
dqdci =  - k_r*sc[12];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[167] -= dqdci;              // dwdot[O2]/d[NO]
J[171] += dqdci;              // dwdot[O]/d[NO]
J[184] -= dqdci;              // dwdot[N]/d[NO]
// d()/d[O2]
dqdci =  + k_f*sc[25];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[432] -= dqdci;              // dwdot[O2]/d[O2]
J[436] += dqdci;              // dwdot[O]/d[O2]
J[449] -= dqdci;              // dwdot[N]/d[O2]
// d()/d[O]
dqdci =  - k_r*sc[3];
J[639] += dqdci;              // dwdot[NO]/d[O]
J[644] -= dqdci;              // dwdot[O2]/d[O]
J[648] += dqdci;              // dwdot[O]/d[O]
J[661] -= dqdci;              // dwdot[N]/d[O]
// d()/d[N]
dqdci =  + k_f*sc[8];
J[1328] += dqdci;             // dwdot[NO]/d[N]
J[1333] -= dqdci;             // dwdot[O2]/d[N]
J[1337] += dqdci;             // dwdot[O]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2764] -= dqdT;              // dwdot[O2]/dT
J[2768] += dqdT;              // dwdot[O]/dT
J[2781] -= dqdT;              // dwdot[N]/dT

// reaction 255: N + N2O <=> N2 + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[25];
k_f = 10000000
            * exp(- (9998.91514953978) * invT);
dlnkfdT = (9998.91514953978) * invT2;
// reverse
phi_r = sc[3]*sc[45];
Kc = exp(-g_RT[3] + g_RT[4] + g_RT[25] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[25]) + (h_RT[3] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[4] -= q;// N2O
wdot[25] -= q;// N
wdot[45] += q;// N2
// d()/d[NO]
dqdci =  - k_r*sc[45];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[163] -= dqdci;              // dwdot[N2O]/d[NO]
J[184] -= dqdci;              // dwdot[N]/d[NO]
J[204] += dqdci;              // dwdot[N2]/d[NO]
// d()/d[N2O]
dqdci =  + k_f*sc[25];
J[215] += dqdci;              // dwdot[NO]/d[N2O]
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[237] -= dqdci;              // dwdot[N]/d[N2O]
J[257] += dqdci;              // dwdot[N2]/d[N2O]
// d()/d[N]
dqdci =  + k_f*sc[4];
J[1328] += dqdci;             // dwdot[NO]/d[N]
J[1329] -= dqdci;             // dwdot[N2O]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
J[1370] += dqdci;             // dwdot[N2]/d[N]
// d()/d[N2]
dqdci =  - k_r*sc[3];
J[2388] += dqdci;             // dwdot[NO]/d[N2]
J[2389] -= dqdci;             // dwdot[N2O]/d[N2]
J[2410] -= dqdci;             // dwdot[N]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2781] -= dqdT;              // dwdot[N]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 256: N2O + NO <=> N2 + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[3]*sc[4];
k_f = 0.53
            * exp(2.23 * tc[0] - (23289.3705101082) * invT);
dlnkfdT = 2.23 * invT + (23289.3705101082) * invT2;
// reverse
phi_r = sc[19]*sc[45];
Kc = exp(g_RT[3] + g_RT[4] - g_RT[19] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[3] + h_RT[4]) + (h_RT[19] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] -= q;// NO
wdot[4] -= q;// N2O
wdot[19] += q;// NO2
wdot[45] += q;// N2
// d()/d[NO]
dqdci =  + k_f*sc[4];
J[162] -= dqdci;              // dwdot[NO]/d[NO]
J[163] -= dqdci;              // dwdot[N2O]/d[NO]
J[178] += dqdci;              // dwdot[NO2]/d[NO]
J[204] += dqdci;              // dwdot[N2]/d[NO]
// d()/d[N2O]
dqdci =  + k_f*sc[3];
J[215] -= dqdci;              // dwdot[NO]/d[N2O]
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[231] += dqdci;              // dwdot[NO2]/d[N2O]
J[257] += dqdci;              // dwdot[N2]/d[N2O]
// d()/d[NO2]
dqdci =  - k_r*sc[45];
J[1010] -= dqdci;             // dwdot[NO]/d[NO2]
J[1011] -= dqdci;             // dwdot[N2O]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1052] += dqdci;             // dwdot[N2]/d[NO2]
// d()/d[N2]
dqdci =  - k_r*sc[19];
J[2388] -= dqdci;             // dwdot[NO]/d[N2]
J[2389] -= dqdci;             // dwdot[N2O]/d[N2]
J[2404] += dqdci;             // dwdot[NO2]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2759] -= dqdT;              // dwdot[NO]/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 259: H + HNO2 <=> H2 + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[11]*sc[36];
k_f = 240
            * exp(1.5 * tc[0] - (2559.86317894861) * invT);
dlnkfdT = 1.5 * invT + (2559.86317894861) * invT2;
// reverse
phi_r = sc[9]*sc[19];
Kc = exp(-g_RT[9] + g_RT[11] - g_RT[19] + g_RT[36]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[11] + h_RT[36]) + (h_RT[9] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[9] += q;// H2
wdot[11] -= q;// H
wdot[19] += q;// NO2
wdot[36] -= q;// HNO2
// d()/d[H2]
dqdci =  - k_r*sc[19];
J[486] += dqdci;              // dwdot[H2]/d[H2]
J[488] -= dqdci;              // dwdot[H]/d[H2]
J[496] += dqdci;              // dwdot[NO2]/d[H2]
J[513] -= dqdci;              // dwdot[HNO2]/d[H2]
// d()/d[H]
dqdci =  + k_f*sc[36];
J[592] += dqdci;              // dwdot[H2]/d[H]
J[594] -= dqdci;              // dwdot[H]/d[H]
J[602] += dqdci;              // dwdot[NO2]/d[H]
J[619] -= dqdci;              // dwdot[HNO2]/d[H]
// d()/d[NO2]
dqdci =  - k_r*sc[9];
J[1016] += dqdci;             // dwdot[H2]/d[NO2]
J[1018] -= dqdci;             // dwdot[H]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1043] -= dqdci;             // dwdot[HNO2]/d[NO2]
// d()/d[HNO2]
dqdci =  + k_f*sc[11];
J[1917] += dqdci;             // dwdot[H2]/d[HNO2]
J[1919] -= dqdci;             // dwdot[H]/d[HNO2]
J[1927] += dqdci;             // dwdot[NO2]/d[HNO2]
J[1944] -= dqdci;             // dwdot[HNO2]/d[HNO2]
// d()/dT
J[2765] += dqdT;              // dwdot[H2]/dT
J[2767] -= dqdT;              // dwdot[H]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2792] -= dqdT;              // dwdot[HNO2]/dT

// reaction 260: HNO2 + O <=> NO2 + OH
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[36];
k_f = 170
            * exp(1.5 * tc[0] - (1519.71433073025) * invT);
dlnkfdT = 1.5 * invT + (1519.71433073025) * invT2;
// reverse
phi_r = sc[13]*sc[19];
Kc = exp(g_RT[12] - g_RT[13] - g_RT[19] + g_RT[36]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[36]) + (h_RT[13] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[13] += q;// OH
wdot[19] += q;// NO2
wdot[36] -= q;// HNO2
// d()/d[O]
dqdci =  + k_f*sc[36];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[649] += dqdci;              // dwdot[OH]/d[O]
J[655] += dqdci;              // dwdot[NO2]/d[O]
J[672] -= dqdci;              // dwdot[HNO2]/d[O]
// d()/d[OH]
dqdci =  - k_r*sc[19];
J[701] -= dqdci;              // dwdot[O]/d[OH]
J[702] += dqdci;              // dwdot[OH]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
J[725] -= dqdci;              // dwdot[HNO2]/d[OH]
// d()/d[NO2]
dqdci =  - k_r*sc[13];
J[1019] -= dqdci;             // dwdot[O]/d[NO2]
J[1020] += dqdci;             // dwdot[OH]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1043] -= dqdci;             // dwdot[HNO2]/d[NO2]
// d()/d[HNO2]
dqdci =  + k_f*sc[12];
J[1920] -= dqdci;             // dwdot[O]/d[HNO2]
J[1921] += dqdci;             // dwdot[OH]/d[HNO2]
J[1927] += dqdci;             // dwdot[NO2]/d[HNO2]
J[1944] -= dqdci;             // dwdot[HNO2]/d[HNO2]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2769] += dqdT;              // dwdot[OH]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2792] -= dqdT;              // dwdot[HNO2]/dT

// reaction 261: HNO2 + OH <=> H2O + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[13]*sc[36];
k_f = 1.2
            * exp(2 * tc[0] - (-299.917132819613) * invT);
dlnkfdT = 2 * invT + (-299.917132819613) * invT2;
// reverse
phi_r = sc[15]*sc[19];
Kc = exp(g_RT[13] - g_RT[15] - g_RT[19] + g_RT[36]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[13] + h_RT[36]) + (h_RT[15] + h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[13] -= q;// OH
wdot[15] += q;// H2O
wdot[19] += q;// NO2
wdot[36] -= q;// HNO2
// d()/d[OH]
dqdci =  + k_f*sc[36];
J[702] -= dqdci;              // dwdot[OH]/d[OH]
J[704] += dqdci;              // dwdot[H2O]/d[OH]
J[708] += dqdci;              // dwdot[NO2]/d[OH]
J[725] -= dqdci;              // dwdot[HNO2]/d[OH]
// d()/d[H2O]
dqdci =  - k_r*sc[19];
J[808] -= dqdci;              // dwdot[OH]/d[H2O]
J[810] += dqdci;              // dwdot[H2O]/d[H2O]
J[814] += dqdci;              // dwdot[NO2]/d[H2O]
J[831] -= dqdci;              // dwdot[HNO2]/d[H2O]
// d()/d[NO2]
dqdci =  - k_r*sc[15];
J[1020] -= dqdci;             // dwdot[OH]/d[NO2]
J[1022] += dqdci;             // dwdot[H2O]/d[NO2]
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1043] -= dqdci;             // dwdot[HNO2]/d[NO2]
// d()/d[HNO2]
dqdci =  + k_f*sc[13];
J[1921] -= dqdci;             // dwdot[OH]/d[HNO2]
J[1923] += dqdci;             // dwdot[H2O]/d[HNO2]
J[1927] += dqdci;             // dwdot[NO2]/d[HNO2]
J[1944] -= dqdci;             // dwdot[HNO2]/d[HNO2]
// d()/dT
J[2769] -= dqdT;              // dwdot[OH]/dT
J[2771] += dqdT;              // dwdot[H2O]/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2792] -= dqdT;              // dwdot[HNO2]/dT

// reaction 262: HNO2 <=> HONO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[36];
k_f = 1.3e+29
            * exp(-5.47 * tc[0] - (26576.8849878105) * invT);
dlnkfdT = -5.47 * invT + (26576.8849878105) * invT2;
// reverse
phi_r = sc[23];
Kc = exp(-g_RT[23] + g_RT[36]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[36]) + (h_RT[23]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[23] += q;// HONO
wdot[36] -= q;// HNO2
// d()/d[HONO]
dqdci =  - k_r;
J[1242] += dqdci;             // dwdot[HONO]/d[HONO]
J[1255] -= dqdci;             // dwdot[HNO2]/d[HONO]
// d()/d[HNO2]
dqdci =  + k_f;
J[1931] += dqdci;             // dwdot[HONO]/d[HNO2]
J[1944] -= dqdci;             // dwdot[HNO2]/d[HNO2]
// d()/dT
J[2779] += dqdT;              // dwdot[HONO]/dT
J[2792] -= dqdT;              // dwdot[HNO2]/dT

// reaction 263: HONO + NH2 <=> NH3 + NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[23]*sc[27];
k_f = 7.11e-05
            * exp(3.02 * tc[0] - (-2486.39354574112) * invT);
dlnkfdT = 3.02 * invT + (-2486.39354574112) * invT2;
// reverse
phi_r = sc[19]*sc[20];
Kc = exp(-g_RT[19] - g_RT[20] + g_RT[23] + g_RT[27]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[23] + h_RT[27]) + (h_RT[19] + h_RT[20]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[19] += q;// NO2
wdot[20] += q;// NH3
wdot[23] -= q;// HONO
wdot[27] -= q;// NH2
// d()/d[NO2]
dqdci =  - k_r*sc[20];
J[1026] += dqdci;             // dwdot[NO2]/d[NO2]
J[1027] += dqdci;             // dwdot[NH3]/d[NO2]
J[1030] -= dqdci;             // dwdot[HONO]/d[NO2]
J[1034] -= dqdci;             // dwdot[NH2]/d[NO2]
// d()/d[NH3]
dqdci =  - k_r*sc[19];
J[1079] += dqdci;             // dwdot[NO2]/d[NH3]
J[1080] += dqdci;             // dwdot[NH3]/d[NH3]
J[1083] -= dqdci;             // dwdot[HONO]/d[NH3]
J[1087] -= dqdci;             // dwdot[NH2]/d[NH3]
// d()/d[HONO]
dqdci =  + k_f*sc[27];
J[1238] += dqdci;             // dwdot[NO2]/d[HONO]
J[1239] += dqdci;             // dwdot[NH3]/d[HONO]
J[1242] -= dqdci;             // dwdot[HONO]/d[HONO]
J[1246] -= dqdci;             // dwdot[NH2]/d[HONO]
// d()/d[NH2]
dqdci =  + k_f*sc[23];
J[1450] += dqdci;             // dwdot[NO2]/d[NH2]
J[1451] += dqdci;             // dwdot[NH3]/d[NH2]
J[1454] -= dqdci;             // dwdot[HONO]/d[NH2]
J[1458] -= dqdci;             // dwdot[NH2]/d[NH2]
// d()/dT
J[2775] += dqdT;              // dwdot[NO2]/dT
J[2776] += dqdT;              // dwdot[NH3]/dT
J[2779] -= dqdT;              // dwdot[HONO]/dT
J[2783] -= dqdT;              // dwdot[NH2]/dT

// reaction 264: HNO + N <=> NH + NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[21]*sc[25];
k_f = 10000000
            * exp(- (1001.40116495139) * invT);
dlnkfdT = (1001.40116495139) * invT2;
// reverse
phi_r = sc[3]*sc[28];
Kc = exp(-g_RT[3] + g_RT[21] + g_RT[25] - g_RT[28]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[21] + h_RT[25]) + (h_RT[3] + h_RT[28]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[21] -= q;// HNO
wdot[25] -= q;// N
wdot[28] += q;// NH
// d()/d[NO]
dqdci =  - k_r*sc[28];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[180] -= dqdci;              // dwdot[HNO]/d[NO]
J[184] -= dqdci;              // dwdot[N]/d[NO]
J[187] += dqdci;              // dwdot[NH]/d[NO]
// d()/d[HNO]
dqdci =  + k_f*sc[25];
J[1116] += dqdci;             // dwdot[NO]/d[HNO]
J[1134] -= dqdci;             // dwdot[HNO]/d[HNO]
J[1138] -= dqdci;             // dwdot[N]/d[HNO]
J[1141] += dqdci;             // dwdot[NH]/d[HNO]
// d()/d[N]
dqdci =  + k_f*sc[21];
J[1328] += dqdci;             // dwdot[NO]/d[N]
J[1346] -= dqdci;             // dwdot[HNO]/d[N]
J[1350] -= dqdci;             // dwdot[N]/d[N]
J[1353] += dqdci;             // dwdot[NH]/d[N]
// d()/d[NH]
dqdci =  - k_r*sc[3];
J[1487] += dqdci;             // dwdot[NO]/d[NH]
J[1505] -= dqdci;             // dwdot[HNO]/d[NH]
J[1509] -= dqdci;             // dwdot[N]/d[NH]
J[1512] += dqdci;             // dwdot[NH]/d[NH]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2777] -= dqdT;              // dwdot[HNO]/dT
J[2781] -= dqdT;              // dwdot[N]/dT
J[2784] += dqdT;              // dwdot[NH]/dT

// reaction 265: N2O + O <=> N2 + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[12];
k_f = 3690000
            * exp(- (8023.28651959045) * invT);
dlnkfdT = (8023.28651959045) * invT2;
// reverse
phi_r = sc[8]*sc[45];
Kc = exp(g_RT[4] - g_RT[8] + g_RT[12] - g_RT[45]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[12]) + (h_RT[8] + h_RT[45]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[4] -= q;// N2O
wdot[8] += q;// O2
wdot[12] -= q;// O
wdot[45] += q;// N2
// d()/d[N2O]
dqdci =  + k_f*sc[12];
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[220] += dqdci;              // dwdot[O2]/d[N2O]
J[224] -= dqdci;              // dwdot[O]/d[N2O]
J[257] += dqdci;              // dwdot[N2]/d[N2O]
// d()/d[O2]
dqdci =  - k_r*sc[45];
J[428] -= dqdci;              // dwdot[N2O]/d[O2]
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[436] -= dqdci;              // dwdot[O]/d[O2]
J[469] += dqdci;              // dwdot[N2]/d[O2]
// d()/d[O]
dqdci =  + k_f*sc[4];
J[640] -= dqdci;              // dwdot[N2O]/d[O]
J[644] += dqdci;              // dwdot[O2]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[681] += dqdci;              // dwdot[N2]/d[O]
// d()/d[N2]
dqdci =  - k_r*sc[8];
J[2389] -= dqdci;             // dwdot[N2O]/d[N2]
J[2393] += dqdci;             // dwdot[O2]/d[N2]
J[2397] -= dqdci;             // dwdot[O]/d[N2]
J[2430] += dqdci;             // dwdot[N2]/d[N2]
// d()/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2801] += dqdT;              // dwdot[N2]/dT

// reaction 266: N2O + O <=> 2 NO
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[4]*sc[12];
k_f = 29000000
            * exp(- (11649.4658133793) * invT);
dlnkfdT = (11649.4658133793) * invT2;
// reverse
phi_r = (sc[3] * sc[3]);
Kc = exp(-2.000000*g_RT[3] + g_RT[4] + g_RT[12]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[4] + h_RT[12]) + (2.000000*h_RT[3]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += 2 * q;// NO
wdot[4] -= q;// N2O
wdot[12] -= q;// O
// d()/d[NO]
dqdci =  - k_r*2.000000*sc[3];
J[162] += 2 * dqdci;          // dwdot[NO]/d[NO]
J[163] -= dqdci;              // dwdot[N2O]/d[NO]
J[171] -= dqdci;              // dwdot[O]/d[NO]
// d()/d[N2O]
dqdci =  + k_f*sc[12];
J[215] += 2 * dqdci;          // dwdot[NO]/d[N2O]
J[216] -= dqdci;              // dwdot[N2O]/d[N2O]
J[224] -= dqdci;              // dwdot[O]/d[N2O]
// d()/d[O]
dqdci =  + k_f*sc[4];
J[639] += 2 * dqdci;          // dwdot[NO]/d[O]
J[640] -= dqdci;              // dwdot[N2O]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
// d()/dT
J[2759] += 2 * dqdT;          // dwdot[NO]/dT
J[2760] -= dqdT;              // dwdot[N2O]/dT
J[2768] -= dqdT;              // dwdot[O]/dT

// reaction 267: NO3 <=> NO + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[43];
k_f = 2500000
            * exp(- (6098.9859895532) * invT);
dlnkfdT = (6098.9859895532) * invT2;
// reverse
phi_r = sc[3]*sc[8];
Kc = refC * exp(-g_RT[3] - g_RT[8] + g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[43]) + (h_RT[3] + h_RT[8]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[3] += q;// NO
wdot[8] += q;// O2
wdot[43] -= q;// NO3
// d()/d[NO]
dqdci =  - k_r*sc[8];
J[162] += dqdci;              // dwdot[NO]/d[NO]
J[167] += dqdci;              // dwdot[O2]/d[NO]
J[202] -= dqdci;              // dwdot[NO3]/d[NO]
// d()/d[O2]
dqdci =  - k_r*sc[3];
J[427] += dqdci;              // dwdot[NO]/d[O2]
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[467] -= dqdci;              // dwdot[NO3]/d[O2]
// d()/d[NO3]
dqdci =  + k_f;
J[2282] += dqdci;             // dwdot[NO]/d[NO3]
J[2287] += dqdci;             // dwdot[O2]/d[NO3]
J[2322] -= dqdci;             // dwdot[NO3]/d[NO3]
// d()/dT
J[2759] += dqdT;              // dwdot[NO]/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2799] -= dqdT;              // dwdot[NO3]/dT

// reaction 268: 2 NO3 <=> 2 NO2 + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = (sc[43] * sc[43]);
k_f = 512000
            * exp(- (2450.66516246898) * invT);
dlnkfdT = (2450.66516246898) * invT2;
// reverse
phi_r = sc[8]*(sc[19] * sc[19]);
Kc = refC * exp(-g_RT[8] - 2.000000*g_RT[19] + 2.000000*g_RT[43]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(2.000000*h_RT[43]) + (h_RT[8] + 2.000000*h_RT[19]) - 1.000000);
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[19] += 2 * q;// NO2
wdot[43] -= 2 * q;// NO3
// d()/d[O2]
dqdci =  - k_r*sc[19]*sc[19];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[443] += 2 * dqdci;          // dwdot[NO2]/d[O2]
J[467] += -2 * dqdci;         // dwdot[NO3]/d[O2]
// d()/d[NO2]
dqdci =  - k_r*sc[8]*2.000000*sc[19];
J[1015] += dqdci;             // dwdot[O2]/d[NO2]
J[1026] += 2 * dqdci;         // dwdot[NO2]/d[NO2]
J[1050] += -2 * dqdci;        // dwdot[NO3]/d[NO2]
// d()/d[NO3]
dqdci =  + k_f*2.000000*sc[43];
J[2287] += dqdci;             // dwdot[O2]/d[NO3]
J[2298] += 2 * dqdci;         // dwdot[NO2]/d[NO3]
J[2322] += -2 * dqdci;        // dwdot[NO3]/d[NO3]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2775] += 2 * dqdT;          // dwdot[NO2]/dT
J[2799] += -2 * dqdT;         // dwdot[NO3]/dT

// reaction 270: N2O4 + O <=> N2O3 + O2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[37];
k_f = 1210000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = sc[8]*sc[38];
Kc = exp(-g_RT[8] + g_RT[12] + g_RT[37] - g_RT[38]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[37]) + (h_RT[8] + h_RT[38]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[8] += q;// O2
wdot[12] -= q;// O
wdot[37] -= q;// N2O4
wdot[38] += q;// N2O3
// d()/d[O2]
dqdci =  - k_r*sc[38];
J[432] += dqdci;              // dwdot[O2]/d[O2]
J[436] -= dqdci;              // dwdot[O]/d[O2]
J[461] -= dqdci;              // dwdot[N2O4]/d[O2]
J[462] += dqdci;              // dwdot[N2O3]/d[O2]
// d()/d[O]
dqdci =  + k_f*sc[37];
J[644] += dqdci;              // dwdot[O2]/d[O]
J[648] -= dqdci;              // dwdot[O]/d[O]
J[673] -= dqdci;              // dwdot[N2O4]/d[O]
J[674] += dqdci;              // dwdot[N2O3]/d[O]
// d()/d[N2O4]
dqdci =  + k_f*sc[12];
J[1969] += dqdci;             // dwdot[O2]/d[N2O4]
J[1973] -= dqdci;             // dwdot[O]/d[N2O4]
J[1998] -= dqdci;             // dwdot[N2O4]/d[N2O4]
J[1999] += dqdci;             // dwdot[N2O3]/d[N2O4]
// d()/d[N2O3]
dqdci =  - k_r*sc[8];
J[2022] += dqdci;             // dwdot[O2]/d[N2O3]
J[2026] -= dqdci;             // dwdot[O]/d[N2O3]
J[2051] -= dqdci;             // dwdot[N2O4]/d[N2O3]
J[2052] += dqdci;             // dwdot[N2O3]/d[N2O3]
// d()/dT
J[2764] += dqdT;              // dwdot[O2]/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2793] -= dqdT;              // dwdot[N2O4]/dT
J[2794] += dqdT;              // dwdot[N2O3]/dT

// reaction 271: N2O3 + O <=> 2 NO2
// a non-third-body and non-pressure-fall-off reaction
// forward
phi_f = sc[12]*sc[38];
k_f = 271000
           ;
dlnkfdT = 0.0;
// reverse
phi_r = (sc[19] * sc[19]);
Kc = exp(g_RT[12] - 2.000000*g_RT[19] + g_RT[38]);
k_r = k_f / Kc;
dlnKcdT = invT * (-(h_RT[12] + h_RT[38]) + (2.000000*h_RT[19]));
dkrdT = (dlnkfdT - dlnKcdT)*k_r;
// rate of progress
q = k_f*phi_f - k_r*phi_r;
dqdT = (dlnkfdT*k_f*phi_f - dkrdT*phi_r);
// update wdot
wdot[12] -= q;// O
wdot[19] += 2 * q;// NO2
wdot[38] -= q;// N2O3
// d()/d[O]
dqdci =  + k_f*sc[38];
J[648] -= dqdci;              // dwdot[O]/d[O]
J[655] += 2 * dqdci;          // dwdot[NO2]/d[O]
J[674] -= dqdci;              // dwdot[N2O3]/d[O]
// d()/d[NO2]
dqdci =  - k_r*2.000000*sc[19];
J[1019] -= dqdci;             // dwdot[O]/d[NO2]
J[1026] += 2 * dqdci;         // dwdot[NO2]/d[NO2]
J[1045] -= dqdci;             // dwdot[N2O3]/d[NO2]
// d()/d[N2O3]
dqdci =  + k_f*sc[12];
J[2026] -= dqdci;             // dwdot[O]/d[N2O3]
J[2033] += 2 * dqdci;         // dwdot[NO2]/d[N2O3]
J[2052] -= dqdci;             // dwdot[N2O3]/d[N2O3]
// d()/dT
J[2768] -= dqdT;              // dwdot[O]/dT
J[2775] += 2 * dqdT;          // dwdot[NO2]/dT
J[2794] -= dqdT;              // dwdot[N2O3]/dT

amrex::Real c_R[52], dcRdT[52], e_RT[52];
amrex::Real * eh_RT;
if (consP) {
cp_R(c_R, tc);
dcvpRdT(dcRdT, tc);
eh_RT = &h_RT[0];
}
else {
cv_R(c_R, tc);
dcvpRdT(dcRdT, tc);
speciesInternalEnergy(e_RT, tc);
eh_RT = &e_RT[0];
}

amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT=0.0, dehmixdT=0.0;
for (int k = 0; k < 52; ++k) {
cmix += c_R[k]*sc[k];
dcmixdT += dcRdT[k]*sc[k];
ehmix += eh_RT[k]*wdot[k];
dehmixdT += invT*(c_R[k]-eh_RT[k])*wdot[k] + eh_RT[k]*J[2756+k];
}

amrex::Real cmixinv = 1.0/cmix;
amrex::Real tmp1 = ehmix*cmixinv;
amrex::Real tmp3 = cmixinv*T;
amrex::Real tmp2 = tmp1*tmp3;
amrex::Real dehmixdc;
// dTdot/d[X]
for (int k = 0; k < 52; ++k) {
dehmixdc = 0.0;
for (int m = 0; m < 52; ++m) {
dehmixdc += eh_RT[m]*J[k*53+m];
}
J[k*53+52] = tmp2*c_R[k] - tmp3*dehmixdc;
}
// dTdot/dT
J[2808] = -tmp1 + tmp2*dcmixdT - tmp3*dehmixdT;
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void DWDOT(amrex::Real *  J, amrex::Real *  sc, amrex::Real *  Tp, const int * consP)
{
amrex::Real c[52];

for (int k=0; k<52; k++) {
c[k] = 1.e6 * sc[k];
}

aJacobian(J, c, *Tp, *consP);

// dwdot[k]/dT
// dTdot/d[X]
for (int k=0; k<52; k++) {
J[2756+k] *= 1.e-6;
J[k*53+52] *= 1.e6;
}

return;
}


// Transport function declarations 

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetLENIMC(int* LENIMC ) {
*LENIMC = 211;}


AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetLENRMC(int* LENRMC ) {
*LENRMC = 53404;}


AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetNO(int* NO ) {
*NO = 4;}


AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetKK(int* KK ) {
*KK = 52;}


AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetNLITE(int* NLITE ) {
*NLITE = 3;}


// Patm in ergs/cm3
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetPATM(amrex::Real* PATM) {
*PATM =   0.1013250000000000E+07;}

// the molecular weights in g/mol
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetWT(amrex::Real* WT ) {
WT[0] = 1.70070000E+01;
WT[1] = 2.70260000E+01;
WT[2] = 4.30250000E+01;
WT[3] = 3.00060000E+01;
WT[4] = 4.40130000E+01;
WT[5] = 2.80100000E+01;
WT[6] = 4.40090000E+01;
WT[7] = 2.70260000E+01;
WT[8] = 3.19980000E+01;
WT[9] = 2.01600000E+00;
WT[10] = 3.99500000E+01;
WT[11] = 1.00800000E+00;
WT[12] = 1.59990000E+01;
WT[13] = 1.70070000E+01;
WT[14] = 3.30060000E+01;
WT[15] = 1.80150000E+01;
WT[16] = 3.40140000E+01;
WT[17] = 2.90180000E+01;
WT[18] = 3.00260000E+01;
WT[19] = 4.60050000E+01;
WT[20] = 1.70310000E+01;
WT[21] = 3.10140000E+01;
WT[22] = 3.10140000E+01;
WT[23] = 4.70130000E+01;
WT[24] = 3.20220000E+01;
WT[25] = 1.40070000E+01;
WT[26] = 2.90220000E+01;
WT[27] = 1.60230000E+01;
WT[28] = 1.50150000E+01;
WT[29] = 2.60180000E+01;
WT[30] = 4.20170000E+01;
WT[31] = 5.20360000E+01;
WT[32] = 4.30250000E+01;
WT[33] = 4.30250000E+01;
WT[34] = 4.00250000E+01;
WT[35] = 4.00260200E+00;
WT[36] = 4.70130000E+01;
WT[37] = 9.20100000E+01;
WT[38] = 7.60110000E+01;
WT[39] = 1.30190000E+01;
WT[40] = 2.80340000E+01;
WT[41] = 2.80340000E+01;
WT[42] = 3.20220000E+01;
WT[43] = 6.20040000E+01;
WT[44] = 6.30120000E+01;
WT[45] = 2.80140000E+01;
WT[46] = 1.60430000E+01;
WT[47] = 3.00700000E+01;
WT[48] = 3.20460000E+01;
WT[49] = 3.10380000E+01;
WT[50] = 3.00300000E+01;
WT[51] = 3.00300000E+01;
}

// the lennard-jones potential well depth eps/kb in K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetEPS(amrex::Real* EPS ) {
EPS[0] = 8.00000000E+01;
EPS[1] = 5.69000000E+02;
EPS[2] = 2.32400000E+02;
EPS[3] = 9.75300000E+01;
EPS[4] = 2.32400000E+02;
EPS[5] = 9.81000000E+01;
EPS[6] = 2.44000000E+02;
EPS[7] = 5.69000000E+02;
EPS[8] = 1.07400000E+02;
EPS[9] = 3.80000000E+01;
EPS[10] = 1.36500000E+02;
EPS[11] = 1.45000000E+02;
EPS[12] = 8.00000000E+01;
EPS[13] = 8.00000000E+01;
EPS[14] = 1.07400000E+02;
EPS[15] = 5.72400000E+02;
EPS[16] = 1.07400000E+02;
EPS[17] = 4.98000000E+02;
EPS[18] = 4.98000000E+02;
EPS[19] = 2.00000000E+02;
EPS[20] = 4.81000000E+02;
EPS[21] = 1.16700000E+02;
EPS[22] = 1.16700000E+02;
EPS[23] = 3.50000000E+02;
EPS[24] = 1.16700000E+02;
EPS[25] = 7.14000000E+01;
EPS[26] = 7.14000000E+01;
EPS[27] = 8.00000000E+01;
EPS[28] = 8.00000000E+01;
EPS[29] = 7.50000000E+01;
EPS[30] = 2.32400000E+02;
EPS[31] = 3.49000000E+02;
EPS[32] = 2.32400000E+02;
EPS[33] = 2.32400000E+02;
EPS[34] = 2.32400000E+02;
EPS[35] = 1.02000000E+01;
EPS[36] = 3.50000000E+02;
EPS[37] = 4.00000000E+02;
EPS[38] = 4.00000000E+02;
EPS[39] = 8.00000000E+01;
EPS[40] = 5.69000000E+02;
EPS[41] = 5.69000000E+02;
EPS[42] = 1.16700000E+02;
EPS[43] = 4.00000000E+02;
EPS[44] = 4.00000000E+02;
EPS[45] = 9.75300000E+01;
EPS[46] = 1.41400000E+02;
EPS[47] = 2.47500000E+02;
EPS[48] = 2.05000000E+02;
EPS[49] = 2.00000000E+02;
EPS[50] = 7.14000000E+01;
EPS[51] = 7.14000000E+01;
}

// the lennard-jones collision diameter in Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetSIG(amrex::Real* SIG ) {
SIG[0] = 2.75000000E+00;
SIG[1] = 3.63000000E+00;
SIG[2] = 3.82800000E+00;
SIG[3] = 3.62100000E+00;
SIG[4] = 3.82800000E+00;
SIG[5] = 3.65000000E+00;
SIG[6] = 3.76300000E+00;
SIG[7] = 3.63000000E+00;
SIG[8] = 3.45800000E+00;
SIG[9] = 2.92000000E+00;
SIG[10] = 3.33000000E+00;
SIG[11] = 2.05000000E+00;
SIG[12] = 2.75000000E+00;
SIG[13] = 2.75000000E+00;
SIG[14] = 3.45800000E+00;
SIG[15] = 2.60500000E+00;
SIG[16] = 3.45800000E+00;
SIG[17] = 3.59000000E+00;
SIG[18] = 3.59000000E+00;
SIG[19] = 3.50000000E+00;
SIG[20] = 2.92000000E+00;
SIG[21] = 3.49200000E+00;
SIG[22] = 3.49200000E+00;
SIG[23] = 3.95000000E+00;
SIG[24] = 3.49200000E+00;
SIG[25] = 3.29800000E+00;
SIG[26] = 3.79800000E+00;
SIG[27] = 2.65000000E+00;
SIG[28] = 2.65000000E+00;
SIG[29] = 3.85600000E+00;
SIG[30] = 3.82800000E+00;
SIG[31] = 4.36100000E+00;
SIG[32] = 3.82800000E+00;
SIG[33] = 3.82800000E+00;
SIG[34] = 3.82800000E+00;
SIG[35] = 2.57600000E+00;
SIG[36] = 3.95000000E+00;
SIG[37] = 4.20000000E+00;
SIG[38] = 4.20000000E+00;
SIG[39] = 2.75000000E+00;
SIG[40] = 3.63000000E+00;
SIG[41] = 3.63000000E+00;
SIG[42] = 3.49200000E+00;
SIG[43] = 4.20000000E+00;
SIG[44] = 4.20000000E+00;
SIG[45] = 3.62100000E+00;
SIG[46] = 3.74600000E+00;
SIG[47] = 4.35000000E+00;
SIG[48] = 4.23000000E+00;
SIG[49] = 3.90000000E+00;
SIG[50] = 3.79800000E+00;
SIG[51] = 3.79800000E+00;
}

// the dipole moment in Debye
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetDIP(amrex::Real* DIP ) {
DIP[0] = 0.00000000E+00;
DIP[1] = 0.00000000E+00;
DIP[2] = 0.00000000E+00;
DIP[3] = 0.00000000E+00;
DIP[4] = 0.00000000E+00;
DIP[5] = 0.00000000E+00;
DIP[6] = 0.00000000E+00;
DIP[7] = 0.00000000E+00;
DIP[8] = 0.00000000E+00;
DIP[9] = 0.00000000E+00;
DIP[10] = 0.00000000E+00;
DIP[11] = 0.00000000E+00;
DIP[12] = 0.00000000E+00;
DIP[13] = 0.00000000E+00;
DIP[14] = 0.00000000E+00;
DIP[15] = 1.84400000E+00;
DIP[16] = 0.00000000E+00;
DIP[17] = 0.00000000E+00;
DIP[18] = 0.00000000E+00;
DIP[19] = 0.00000000E+00;
DIP[20] = 1.47000000E+00;
DIP[21] = 0.00000000E+00;
DIP[22] = 0.00000000E+00;
DIP[23] = 1.63900000E+00;
DIP[24] = 0.00000000E+00;
DIP[25] = 0.00000000E+00;
DIP[26] = 0.00000000E+00;
DIP[27] = 0.00000000E+00;
DIP[28] = 0.00000000E+00;
DIP[29] = 0.00000000E+00;
DIP[30] = 0.00000000E+00;
DIP[31] = 0.00000000E+00;
DIP[32] = 0.00000000E+00;
DIP[33] = 0.00000000E+00;
DIP[34] = 0.00000000E+00;
DIP[35] = 0.00000000E+00;
DIP[36] = 1.63900000E+00;
DIP[37] = 2.00000000E-01;
DIP[38] = 2.00000000E-01;
DIP[39] = 0.00000000E+00;
DIP[40] = 0.00000000E+00;
DIP[41] = 0.00000000E+00;
DIP[42] = 0.00000000E+00;
DIP[43] = 2.00000000E-01;
DIP[44] = 2.00000000E-01;
DIP[45] = 0.00000000E+00;
DIP[46] = 0.00000000E+00;
DIP[47] = 0.00000000E+00;
DIP[48] = 0.00000000E+00;
DIP[49] = 0.00000000E+00;
DIP[50] = 0.00000000E+00;
DIP[51] = 0.00000000E+00;
}

// the polarizability in cubic Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetPOL(amrex::Real* POL ) {
POL[0] = 0.00000000E+00;
POL[1] = 0.00000000E+00;
POL[2] = 0.00000000E+00;
POL[3] = 1.76000000E+00;
POL[4] = 0.00000000E+00;
POL[5] = 1.95000000E+00;
POL[6] = 2.65000000E+00;
POL[7] = 0.00000000E+00;
POL[8] = 1.60000000E+00;
POL[9] = 7.90000000E-01;
POL[10] = 0.00000000E+00;
POL[11] = 0.00000000E+00;
POL[12] = 0.00000000E+00;
POL[13] = 0.00000000E+00;
POL[14] = 0.00000000E+00;
POL[15] = 0.00000000E+00;
POL[16] = 0.00000000E+00;
POL[17] = 0.00000000E+00;
POL[18] = 0.00000000E+00;
POL[19] = 0.00000000E+00;
POL[20] = 0.00000000E+00;
POL[21] = 0.00000000E+00;
POL[22] = 0.00000000E+00;
POL[23] = 0.00000000E+00;
POL[24] = 0.00000000E+00;
POL[25] = 0.00000000E+00;
POL[26] = 0.00000000E+00;
POL[27] = 2.26000000E+00;
POL[28] = 0.00000000E+00;
POL[29] = 0.00000000E+00;
POL[30] = 0.00000000E+00;
POL[31] = 0.00000000E+00;
POL[32] = 0.00000000E+00;
POL[33] = 0.00000000E+00;
POL[34] = 0.00000000E+00;
POL[35] = 0.00000000E+00;
POL[36] = 0.00000000E+00;
POL[37] = 0.00000000E+00;
POL[38] = 0.00000000E+00;
POL[39] = 0.00000000E+00;
POL[40] = 0.00000000E+00;
POL[41] = 0.00000000E+00;
POL[42] = 0.00000000E+00;
POL[43] = 0.00000000E+00;
POL[44] = 0.00000000E+00;
POL[45] = 1.76000000E+00;
POL[46] = 2.60000000E+00;
POL[47] = 0.00000000E+00;
POL[48] = 4.26000000E+00;
POL[49] = 0.00000000E+00;
POL[50] = 0.00000000E+00;
POL[51] = 0.00000000E+00;
}

// the rotational relaxation collision number at 298 K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetZROT(amrex::Real* ZROT ) {
ZROT[0] = 0.00000000E+00;
ZROT[1] = 1.00000000E+00;
ZROT[2] = 1.00000000E+00;
ZROT[3] = 4.00000000E+00;
ZROT[4] = 1.00000000E+00;
ZROT[5] = 1.80000000E+00;
ZROT[6] = 2.10000000E+00;
ZROT[7] = 1.00000000E+00;
ZROT[8] = 3.80000000E+00;
ZROT[9] = 2.80000000E+02;
ZROT[10] = 0.00000000E+00;
ZROT[11] = 0.00000000E+00;
ZROT[12] = 0.00000000E+00;
ZROT[13] = 0.00000000E+00;
ZROT[14] = 1.00000000E+00;
ZROT[15] = 4.00000000E+00;
ZROT[16] = 3.80000000E+00;
ZROT[17] = 0.00000000E+00;
ZROT[18] = 2.00000000E+00;
ZROT[19] = 1.00000000E+00;
ZROT[20] = 1.00000000E+01;
ZROT[21] = 1.00000000E+00;
ZROT[22] = 1.00000000E+00;
ZROT[23] = 1.00000000E+00;
ZROT[24] = 1.00000000E+00;
ZROT[25] = 0.00000000E+00;
ZROT[26] = 1.00000000E+00;
ZROT[27] = 4.00000000E+00;
ZROT[28] = 4.00000000E+00;
ZROT[29] = 1.00000000E+00;
ZROT[30] = 1.00000000E+00;
ZROT[31] = 1.00000000E+00;
ZROT[32] = 1.00000000E+00;
ZROT[33] = 1.00000000E+00;
ZROT[34] = 1.00000000E+00;
ZROT[35] = 0.00000000E+00;
ZROT[36] = 1.00000000E+00;
ZROT[37] = 1.00000000E+00;
ZROT[38] = 1.00000000E+00;
ZROT[39] = 0.00000000E+00;
ZROT[40] = 1.00000000E+00;
ZROT[41] = 1.00000000E+00;
ZROT[42] = 1.00000000E+00;
ZROT[43] = 1.00000000E+00;
ZROT[44] = 1.00000000E+00;
ZROT[45] = 4.00000000E+00;
ZROT[46] = 1.30000000E+01;
ZROT[47] = 1.50000000E+00;
ZROT[48] = 1.50000000E+00;
ZROT[49] = 1.00000000E+00;
ZROT[50] = 1.00000000E+00;
ZROT[51] = 1.00000000E+00;
}

// 0: monoatomic, 1: linear, 2: nonlinear
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetNLIN(int* NLIN) {
NLIN[0] = 1;
NLIN[1] = 1;
NLIN[2] = 2;
NLIN[3] = 1;
NLIN[4] = 1;
NLIN[5] = 1;
NLIN[6] = 1;
NLIN[7] = 1;
NLIN[8] = 1;
NLIN[9] = 1;
NLIN[10] = 0;
NLIN[11] = 0;
NLIN[12] = 0;
NLIN[13] = 1;
NLIN[14] = 2;
NLIN[15] = 2;
NLIN[16] = 2;
NLIN[17] = 2;
NLIN[18] = 2;
NLIN[19] = 2;
NLIN[20] = 2;
NLIN[21] = 2;
NLIN[22] = 2;
NLIN[23] = 2;
NLIN[24] = 2;
NLIN[25] = 0;
NLIN[26] = 2;
NLIN[27] = 2;
NLIN[28] = 1;
NLIN[29] = 1;
NLIN[30] = 1;
NLIN[31] = 1;
NLIN[32] = 2;
NLIN[33] = 2;
NLIN[34] = 1;
NLIN[35] = 0;
NLIN[36] = 2;
NLIN[37] = 2;
NLIN[38] = 2;
NLIN[39] = 1;
NLIN[40] = 1;
NLIN[41] = 1;
NLIN[42] = 2;
NLIN[43] = 2;
NLIN[44] = 2;
NLIN[45] = 1;
NLIN[46] = 2;
NLIN[47] = 2;
NLIN[48] = 2;
NLIN[49] = 2;
NLIN[50] = 2;
NLIN[51] = 2;
}


// Poly fits for the viscosities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetCOFETA(amrex::Real* COFETA) {
COFETA[0] = -1.45022372E+01;
COFETA[1] = 1.67628298E+00;
COFETA[2] = -1.36586011E-01;
COFETA[3] = 6.02009005E-03;
COFETA[4] = -1.96997555E+01;
COFETA[5] = 2.56625733E+00;
COFETA[6] = -1.48487708E-01;
COFETA[7] = 2.53687976E-03;
COFETA[8] = -2.30608434E+01;
COFETA[9] = 4.74756155E+00;
COFETA[10] = -5.20324312E-01;
COFETA[11] = 2.20239489E-02;
COFETA[12] = -1.59390219E+01;
COFETA[13] = 2.12416328E+00;
COFETA[14] = -1.95139471E-01;
COFETA[15] = 8.57058122E-03;
COFETA[16] = -2.30494916E+01;
COFETA[17] = 4.74756155E+00;
COFETA[18] = -5.20324312E-01;
COFETA[19] = 2.20239489E-02;
COFETA[20] = -1.60226028E+01;
COFETA[21] = 2.13662660E+00;
COFETA[22] = -1.96738977E-01;
COFETA[23] = 8.63898199E-03;
COFETA[24] = -2.33572437E+01;
COFETA[25] = 4.85724263E+00;
COFETA[26] = -5.32102483E-01;
COFETA[27] = 2.24362161E-02;
COFETA[28] = -1.96997555E+01;
COFETA[29] = 2.56625733E+00;
COFETA[30] = -1.48487708E-01;
COFETA[31] = 2.53687976E-03;
COFETA[32] = -1.65122887E+01;
COFETA[33] = 2.39046525E+00;
COFETA[34] = -2.29715738E-01;
COFETA[35] = 1.00664463E-02;
COFETA[36] = -1.34911437E+01;
COFETA[37] = 8.49217713E-01;
COFETA[38] = -2.75872442E-02;
COFETA[39] = 1.23722694E-03;
COFETA[40] = -1.82296031E+01;
COFETA[41] = 3.10604173E+00;
COFETA[42] = -3.21070375E-01;
COFETA[43] = 1.39545761E-02;
COFETA[44] = -1.95281424E+01;
COFETA[45] = 3.26212115E+00;
COFETA[46] = -3.40404685E-01;
COFETA[47] = 1.47532537E-02;
COFETA[48] = -1.45327866E+01;
COFETA[49] = 1.67628298E+00;
COFETA[50] = -1.36586011E-01;
COFETA[51] = 6.02009005E-03;
COFETA[52] = -1.45022372E+01;
COFETA[53] = 1.67628298E+00;
COFETA[54] = -1.36586011E-01;
COFETA[55] = 6.02009005E-03;
COFETA[56] = -1.64967808E+01;
COFETA[57] = 2.39046525E+00;
COFETA[58] = -2.29715738E-01;
COFETA[59] = 1.00664463E-02;
COFETA[60] = -1.29340542E+01;
COFETA[61] = -3.14085289E-01;
COFETA[62] = 2.63797587E-01;
COFETA[63] = -1.64132666E-02;
COFETA[64] = -1.64817393E+01;
COFETA[65] = 2.39046525E+00;
COFETA[66] = -2.29715738E-01;
COFETA[67] = 1.00664463E-02;
COFETA[68] = -2.20177495E+01;
COFETA[69] = 3.66530272E+00;
COFETA[70] = -3.09756445E-01;
COFETA[71] = 1.02090749E-02;
COFETA[72] = -2.20006759E+01;
COFETA[73] = 3.66530272E+00;
COFETA[74] = -3.09756445E-01;
COFETA[75] = 1.02090749E-02;
COFETA[76] = -2.15899781E+01;
COFETA[77] = 4.31618079E+00;
COFETA[78] = -4.70289340E-01;
COFETA[79] = 2.00958387E-02;
COFETA[80] = -1.86592337E+01;
COFETA[81] = 2.27912410E+00;
COFETA[82] = -1.16023120E-01;
COFETA[83] = 1.36686991E-03;
COFETA[84] = -1.71005152E+01;
COFETA[85] = 2.59677504E+00;
COFETA[86] = -2.55937759E-01;
COFETA[87] = 1.11770604E-02;
COFETA[88] = -1.71005152E+01;
COFETA[89] = 2.59677504E+00;
COFETA[90] = -2.55937759E-01;
COFETA[91] = 1.11770604E-02;
COFETA[92] = -2.30729821E+01;
COFETA[93] = 4.38110273E+00;
COFETA[94] = -4.33280044E-01;
COFETA[95] = 1.67298028E-02;
COFETA[96] = -1.70845230E+01;
COFETA[97] = 2.59677504E+00;
COFETA[98] = -2.55937759E-01;
COFETA[99] = 1.11770604E-02;
COFETA[100] = -1.43353634E+01;
COFETA[101] = 1.43087484E+00;
COFETA[102] = -1.03712322E-01;
COFETA[103] = 4.55215415E-03;
COFETA[104] = -1.42534317E+01;
COFETA[105] = 1.43087484E+00;
COFETA[106] = -1.03712322E-01;
COFETA[107] = 4.55215415E-03;
COFETA[108] = -1.44579545E+01;
COFETA[109] = 1.67628298E+00;
COFETA[110] = -1.36586011E-01;
COFETA[111] = 6.02009005E-03;
COFETA[112] = -1.44904423E+01;
COFETA[113] = 1.67628298E+00;
COFETA[114] = -1.36586011E-01;
COFETA[115] = 6.02009005E-03;
COFETA[116] = -1.45892575E+01;
COFETA[117] = 1.53008849E+00;
COFETA[118] = -1.17175264E-01;
COFETA[119] = 5.16100784E-03;
COFETA[120] = -2.30726969E+01;
COFETA[121] = 4.74756155E+00;
COFETA[122] = -5.20324312E-01;
COFETA[123] = 2.20239489E-02;
COFETA[124] = -2.48836684E+01;
COFETA[125] = 5.12601394E+00;
COFETA[126] = -5.40841400E-01;
COFETA[127] = 2.17918713E-02;
COFETA[128] = -2.30608434E+01;
COFETA[129] = 4.74756155E+00;
COFETA[130] = -5.20324312E-01;
COFETA[131] = 2.20239489E-02;
COFETA[132] = -2.30608434E+01;
COFETA[133] = 4.74756155E+00;
COFETA[134] = -5.20324312E-01;
COFETA[135] = 2.20239489E-02;
COFETA[136] = -2.30969819E+01;
COFETA[137] = 4.74756155E+00;
COFETA[138] = -5.20324312E-01;
COFETA[139] = 2.20239489E-02;
COFETA[140] = -1.10322441E+01;
COFETA[141] = 1.63134850E-01;
COFETA[142] = 6.43300981E-02;
COFETA[143] = -2.77015433E-03;
COFETA[144] = -2.30729821E+01;
COFETA[145] = 4.38110273E+00;
COFETA[146] = -4.33280044E-01;
COFETA[147] = 1.67298028E-02;
COFETA[148] = -2.40542321E+01;
COFETA[149] = 4.81391209E+00;
COFETA[150] = -4.86301798E-01;
COFETA[151] = 1.88926146E-02;
COFETA[152] = -2.41497417E+01;
COFETA[153] = 4.81391209E+00;
COFETA[154] = -4.86301798E-01;
COFETA[155] = 1.88926146E-02;
COFETA[156] = -1.46358448E+01;
COFETA[157] = 1.67628298E+00;
COFETA[158] = -1.36586011E-01;
COFETA[159] = 6.02009005E-03;
COFETA[160] = -1.96814462E+01;
COFETA[161] = 2.56625733E+00;
COFETA[162] = -1.48487708E-01;
COFETA[163] = 2.53687976E-03;
COFETA[164] = -1.96814462E+01;
COFETA[165] = 2.56625733E+00;
COFETA[166] = -1.48487708E-01;
COFETA[167] = 2.53687976E-03;
COFETA[168] = -1.70845230E+01;
COFETA[169] = 2.59677504E+00;
COFETA[170] = -2.55937759E-01;
COFETA[171] = 1.11770604E-02;
COFETA[172] = -2.42515813E+01;
COFETA[173] = 4.81391209E+00;
COFETA[174] = -4.86301798E-01;
COFETA[175] = 1.88926146E-02;
COFETA[176] = -2.42435182E+01;
COFETA[177] = 4.81391209E+00;
COFETA[178] = -4.86301798E-01;
COFETA[179] = 1.88926146E-02;
COFETA[180] = -1.59733684E+01;
COFETA[181] = 2.12416328E+00;
COFETA[182] = -1.95139471E-01;
COFETA[183] = 8.57058122E-03;
COFETA[184] = -1.91726494E+01;
COFETA[185] = 3.19752754E+00;
COFETA[186] = -3.32398830E-01;
COFETA[187] = 1.44222031E-02;
COFETA[188] = -2.39150323E+01;
COFETA[189] = 4.87957850E+00;
COFETA[190] = -5.34166762E-01;
COFETA[191] = 2.24923677E-02;
COFETA[192] = -2.23538930E+01;
COFETA[193] = 4.38701800E+00;
COFETA[194] = -4.78611826E-01;
COFETA[195] = 2.04211305E-02;
COFETA[196] = -2.20031742E+01;
COFETA[197] = 4.31618079E+00;
COFETA[198] = -4.70289340E-01;
COFETA[199] = 2.00958387E-02;
COFETA[200] = -1.42363603E+01;
COFETA[201] = 1.43087484E+00;
COFETA[202] = -1.03712322E-01;
COFETA[203] = 4.55215415E-03;
COFETA[204] = -1.42363603E+01;
COFETA[205] = 1.43087484E+00;
COFETA[206] = -1.03712322E-01;
COFETA[207] = 4.55215415E-03;
}


// Poly fits for the conductivities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetCOFLAM(amrex::Real* COFLAM) {
COFLAM[0] = 1.68811410E+01;
COFLAM[1] = -4.46462525E+00;
COFLAM[2] = 7.15440092E-01;
COFLAM[3] = -3.22760638E-02;
COFLAM[4] = -1.80031005E+00;
COFLAM[5] = 1.40212598E+00;
COFLAM[6] = 9.93485701E-02;
COFLAM[7] = -1.15216192E-02;
COFLAM[8] = -1.15969103E+01;
COFLAM[9] = 6.05203644E+00;
COFLAM[10] = -5.95001209E-01;
COFLAM[11] = 2.18802881E-02;
COFLAM[12] = 6.49662490E+00;
COFLAM[13] = -7.78068065E-01;
COFLAM[14] = 2.56990145E-01;
COFLAM[15] = -1.38126979E-02;
COFLAM[16] = -1.21409784E+01;
COFLAM[17] = 6.30067012E+00;
COFLAM[18] = -6.38515058E-01;
COFLAM[19] = 2.39759965E-02;
COFLAM[20] = 9.06946537E+00;
COFLAM[21] = -1.89498280E+00;
COFLAM[22] = 4.14732699E-01;
COFLAM[23] = -2.10979321E-02;
COFLAM[24] = -1.22109114E+01;
COFLAM[25] = 6.27663277E+00;
COFLAM[26] = -6.29611372E-01;
COFLAM[27] = 2.34682102E-02;
COFLAM[28] = 1.41506626E+00;
COFLAM[29] = 2.77622419E-01;
COFLAM[30] = 2.29934011E-01;
COFLAM[31] = -1.65973169E-02;
COFLAM[32] = -2.56831875E+00;
COFLAM[33] = 3.18963968E+00;
COFLAM[34] = -3.17697060E-01;
COFLAM[35] = 1.39355766E-02;
COFLAM[36] = 1.21711378E+01;
COFLAM[37] = -1.79682082E+00;
COFLAM[38] = 3.15030656E-01;
COFLAM[39] = -1.24953503E-02;
COFLAM[40] = -2.35938293E+00;
COFLAM[41] = 3.10604173E+00;
COFLAM[42] = -3.21070375E-01;
COFLAM[43] = 1.39545761E-02;
COFLAM[44] = 2.17382828E-02;
COFLAM[45] = 3.26212115E+00;
COFLAM[46] = -3.40404685E-01;
COFLAM[47] = 1.47532537E-02;
COFLAM[48] = 2.25253606E+00;
COFLAM[49] = 1.67628298E+00;
COFLAM[50] = -1.36586011E-01;
COFLAM[51] = 6.02009005E-03;
COFLAM[52] = 1.51288410E+01;
COFLAM[53] = -3.69154698E+00;
COFLAM[54] = 6.01975174E-01;
COFLAM[55] = -2.67338269E-02;
COFLAM[56] = 2.45005228E+00;
COFLAM[57] = 7.54550782E-01;
COFLAM[58] = 6.94608935E-02;
COFLAM[59] = -5.51447936E-03;
COFLAM[60] = 2.08469948E+01;
COFLAM[61] = -7.85557701E+00;
COFLAM[62] = 1.36675619E+00;
COFLAM[63] = -6.80647076E-02;
COFLAM[64] = 7.01202185E-01;
COFLAM[65] = 1.40649582E+00;
COFLAM[66] = 4.32521239E-03;
COFLAM[67] = -3.62392210E-03;
COFLAM[68] = -2.55337547E+00;
COFLAM[69] = 1.90478334E+00;
COFLAM[70] = -4.27236762E-03;
COFLAM[71] = -4.93418281E-03;
COFLAM[72] = -2.32340447E+00;
COFLAM[73] = 1.08340218E+00;
COFLAM[74] = 2.20880569E-01;
COFLAM[75] = -2.02114695E-02;
COFLAM[76] = -1.15345872E+01;
COFLAM[77] = 6.15563887E+00;
COFLAM[78] = -6.23955977E-01;
COFLAM[79] = 2.34558014E-02;
COFLAM[80] = 1.14512563E+01;
COFLAM[81] = -4.21086289E+00;
COFLAM[82] = 9.20507940E-01;
COFLAM[83] = -5.05097788E-02;
COFLAM[84] = 2.81473886E+00;
COFLAM[85] = 3.64944802E-01;
COFLAM[86] = 1.60406236E-01;
COFLAM[87] = -1.16172025E-02;
COFLAM[88] = 4.50742007E+00;
COFLAM[89] = -3.66368286E-01;
COFLAM[90] = 2.64621827E-01;
COFLAM[91] = -1.65212634E-02;
COFLAM[92] = -1.42753182E+01;
COFLAM[93] = 6.76666250E+00;
COFLAM[94] = -6.55590269E-01;
COFLAM[95] = 2.31922944E-02;
COFLAM[96] = 1.10176660E+00;
COFLAM[97] = 8.92203232E-01;
COFLAM[98] = 1.17949226E-01;
COFLAM[99] = -1.05903591E-02;
COFLAM[100] = 2.58292826E+00;
COFLAM[101] = 1.43087484E+00;
COFLAM[102] = -1.03712322E-01;
COFLAM[103] = 4.55215415E-03;
COFLAM[104] = 4.92604865E+00;
COFLAM[105] = -4.39395530E-01;
COFLAM[106] = 2.59493554E-01;
COFLAM[107] = -1.56836113E-02;
COFLAM[108] = 1.44882614E+01;
COFLAM[109] = -3.71046052E+00;
COFLAM[110] = 6.55628449E-01;
COFLAM[111] = -3.07291408E-02;
COFLAM[112] = 1.04229366E+01;
COFLAM[113] = -1.64000311E+00;
COFLAM[114] = 3.16719058E-01;
COFLAM[115] = -1.34849250E-02;
COFLAM[116] = 4.89689201E+00;
COFLAM[117] = 1.02457145E-01;
COFLAM[118] = 9.66253736E-02;
COFLAM[119] = -4.36857965E-03;
COFLAM[120] = -1.35955121E+01;
COFLAM[121] = 6.96479174E+00;
COFLAM[122] = -7.33752868E-01;
COFLAM[123] = 2.83996907E-02;
COFLAM[124] = -9.67492218E+00;
COFLAM[125] = 5.07474893E+00;
COFLAM[126] = -4.53143555E-01;
COFLAM[127] = 1.49828894E-02;
COFLAM[128] = -6.42068424E+00;
COFLAM[129] = 3.88280108E+00;
COFLAM[130] = -2.98035976E-01;
COFLAM[131] = 8.44520288E-03;
COFLAM[132] = -1.45019139E+01;
COFLAM[133] = 7.35061303E+00;
COFLAM[134] = -7.80832706E-01;
COFLAM[135] = 3.05986299E-02;
COFLAM[136] = -1.50989826E+01;
COFLAM[137] = 7.80745560E+00;
COFLAM[138] = -8.72179564E-01;
COFLAM[139] = 3.55275679E-02;
COFLAM[140] = 7.13866008E+00;
COFLAM[141] = 1.63134850E-01;
COFLAM[142] = 6.43300981E-02;
COFLAM[143] = -2.77015433E-03;
COFLAM[144] = -1.41910648E+01;
COFLAM[145] = 6.30505883E+00;
COFLAM[146] = -5.43817518E-01;
COFLAM[147] = 1.62670599E-02;
COFLAM[148] = -2.07111117E+01;
COFLAM[149] = 9.46792254E+00;
COFLAM[150] = -1.02487863E+00;
COFLAM[151] = 3.97200180E-02;
COFLAM[152] = -1.09052260E+01;
COFLAM[153] = 5.62455956E+00;
COFLAM[154] = -5.31345869E-01;
COFLAM[155] = 1.86564505E-02;
COFLAM[156] = 2.24584822E+01;
COFLAM[157] = -6.99539413E+00;
COFLAM[158] = 1.09631053E+00;
COFLAM[159] = -5.07345715E-02;
COFLAM[160] = -6.96577137E+00;
COFLAM[161] = 3.19434878E+00;
COFLAM[162] = -9.27007217E-02;
COFLAM[163] = -4.95952591E-03;
COFLAM[164] = -3.16832998E+00;
COFLAM[165] = 1.50289314E+00;
COFLAM[166] = 1.56370867E-01;
COFLAM[167] = -1.70773168E-02;
COFLAM[168] = -5.46024611E+00;
COFLAM[169] = 3.63608576E+00;
COFLAM[170] = -2.56466904E-01;
COFLAM[171] = 6.09989801E-03;
COFLAM[172] = -2.94526048E+01;
COFLAM[173] = 1.30099902E+01;
COFLAM[174] = -1.51287277E+00;
COFLAM[175] = 6.19347044E-02;
COFLAM[176] = -2.48698434E+01;
COFLAM[177] = 1.08563438E+01;
COFLAM[178] = -1.17924927E+00;
COFLAM[179] = 4.53457942E-02;
COFLAM[180] = 1.07110584E+01;
COFLAM[181] = -2.53506500E+00;
COFLAM[182] = 4.98215156E-01;
COFLAM[183] = -2.46980657E-02;
COFLAM[184] = 3.10206474E+00;
COFLAM[185] = -3.45822264E-01;
COFLAM[186] = 3.40857133E-01;
COFLAM[187] = -2.19196596E-02;
COFLAM[188] = -1.40037331E+01;
COFLAM[189] = 6.09111891E+00;
COFLAM[190] = -4.63541127E-01;
COFLAM[191] = 1.08208825E-02;
COFLAM[192] = -1.32935272E+01;
COFLAM[193] = 6.45205976E+00;
COFLAM[194] = -6.00545998E-01;
COFLAM[195] = 2.04456274E-02;
COFLAM[196] = -7.44332848E+00;
COFLAM[197] = 4.01663666E+00;
COFLAM[198] = -2.64531890E-01;
COFLAM[199] = 5.03465000E-03;
COFLAM[200] = 2.58101463E+00;
COFLAM[201] = 1.45207809E-01;
COFLAM[202] = 2.34747114E-01;
COFLAM[203] = -1.65210447E-02;
COFLAM[204] = 9.90738103E+00;
COFLAM[205] = -2.95149424E+00;
COFLAM[206] = 6.63536546E-01;
COFLAM[207] = -3.60588773E-02;
}


// Poly fits for the diffusion coefficients, dim NO*KK*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetCOFD(amrex::Real* COFD) {
COFD[0] = -1.27916876E+01;
COFD[1] = 2.70797975E+00;
COFD[2] = -1.37895013E-01;
COFD[3] = 6.01030858E-03;
COFD[4] = -1.92798841E+01;
COFD[5] = 4.90190161E+00;
COFD[6] = -4.08908928E-01;
COFD[7] = 1.71998038E-02;
COFD[8] = -1.63413318E+01;
COFD[9] = 3.81860507E+00;
COFD[10] = -2.78482683E-01;
COFD[11] = 1.19505034E-02;
COFD[12] = -1.37081197E+01;
COFD[13] = 2.89678405E+00;
COFD[14] = -1.62418864E-01;
COFD[15] = 7.07300755E-03;
COFD[16] = -1.63445217E+01;
COFD[17] = 3.81860507E+00;
COFD[18] = -2.78482683E-01;
COFD[19] = 1.19505034E-02;
COFD[20] = -1.37195308E+01;
COFD[21] = 2.90243493E+00;
COFD[22] = -1.63148841E-01;
COFD[23] = 7.10447920E-03;
COFD[24] = -1.64527503E+01;
COFD[25] = 3.86315631E+00;
COFD[26] = -2.83800980E-01;
COFD[27] = 1.21619703E-02;
COFD[28] = -1.92798841E+01;
COFD[29] = 4.90190161E+00;
COFD[30] = -4.08908928E-01;
COFD[31] = 1.71998038E-02;
COFD[32] = -1.39004163E+01;
COFD[33] = 2.98298723E+00;
COFD[34] = -1.73428215E-01;
COFD[35] = 7.54224684E-03;
COFD[36] = -1.06286607E+01;
COFD[37] = 2.15819366E+00;
COFD[38] = -6.52830580E-02;
COFD[39] = 2.80657258E-03;
COFD[40] = -1.45329520E+01;
COFD[41] = 3.21910603E+00;
COFD[42] = -2.03442081E-01;
COFD[43] = 8.81515218E-03;
COFD[44] = -1.29727324E+01;
COFD[45] = 3.28440910E+00;
COFD[46] = -2.11707534E-01;
COFD[47] = 9.16419558E-03;
COFD[48] = -1.27761797E+01;
COFD[49] = 2.70797975E+00;
COFD[50] = -1.37895013E-01;
COFD[51] = 6.01030858E-03;
COFD[52] = -1.27916876E+01;
COFD[53] = 2.70797975E+00;
COFD[54] = -1.37895013E-01;
COFD[55] = 6.01030858E-03;
COFD[56] = -1.39057440E+01;
COFD[57] = 2.98298723E+00;
COFD[58] = -1.73428215E-01;
COFD[59] = 7.54224684E-03;
COFD[60] = -1.88572224E+01;
COFD[61] = 4.90686422E+00;
COFD[62] = -4.09428407E-01;
COFD[63] = 1.72173805E-02;
COFD[64] = -1.39108083E+01;
COFD[65] = 2.98298723E+00;
COFD[66] = -1.73428215E-01;
COFD[67] = 7.54224684E-03;
COFD[68] = -1.88494354E+01;
COFD[69] = 4.75778339E+00;
COFD[70] = -3.92510587E-01;
COFD[71] = 1.65802295E-02;
COFD[72] = -1.88556767E+01;
COFD[73] = 4.75778339E+00;
COFD[74] = -3.92510587E-01;
COFD[75] = 1.65802295E-02;
COFD[76] = -1.57478567E+01;
COFD[77] = 3.63667810E+00;
COFD[78] = -2.55876890E-01;
COFD[79] = 1.10128613E-02;
COFD[80] = -1.83797601E+01;
COFD[81] = 4.71208389E+00;
COFD[82] = -3.87053240E-01;
COFD[83] = 1.63622220E-02;
COFD[84] = -1.40991870E+01;
COFD[85] = 3.05361342E+00;
COFD[86] = -1.82331859E-01;
COFD[87] = 7.91667899E-03;
COFD[88] = -1.40991870E+01;
COFD[89] = 3.05361342E+00;
COFD[90] = -1.82331859E-01;
COFD[91] = 7.91667899E-03;
COFD[92] = -1.77028653E+01;
COFD[93] = 4.28431488E+00;
COFD[94] = -3.35035279E-01;
COFD[95] = 1.42440352E-02;
COFD[96] = -1.41047925E+01;
COFD[97] = 3.05361342E+00;
COFD[98] = -1.82331859E-01;
COFD[99] = 7.91667899E-03;
COFD[100] = -1.26418053E+01;
COFD[101] = 2.59809959E+00;
COFD[102] = -1.23503755E-01;
COFD[103] = 5.38095363E-03;
COFD[104] = -1.29675013E+01;
COFD[105] = 2.59809959E+00;
COFD[106] = -1.23503755E-01;
COFD[107] = 5.38095363E-03;
COFD[108] = -1.27398674E+01;
COFD[109] = 2.70797975E+00;
COFD[110] = -1.37895013E-01;
COFD[111] = 6.01030858E-03;
COFD[112] = -1.27228762E+01;
COFD[113] = 2.70797975E+00;
COFD[114] = -1.37895013E-01;
COFD[115] = 6.01030858E-03;
COFD[116] = -1.30891000E+01;
COFD[117] = 2.64561803E+00;
COFD[118] = -1.29737887E-01;
COFD[119] = 5.65422236E-03;
COFD[120] = -1.63379451E+01;
COFD[121] = 3.81860507E+00;
COFD[122] = -2.78482683E-01;
COFD[123] = 1.19505034E-02;
COFD[124] = -1.78222175E+01;
COFD[125] = 4.27963195E+00;
COFD[126] = -3.34447162E-01;
COFD[127] = 1.42193133E-02;
COFD[128] = -1.63413318E+01;
COFD[129] = 3.81860507E+00;
COFD[130] = -2.78482683E-01;
COFD[131] = 1.19505034E-02;
COFD[132] = -1.63413318E+01;
COFD[133] = 3.81860507E+00;
COFD[134] = -2.78482683E-01;
COFD[135] = 1.19505034E-02;
COFD[136] = -1.63308259E+01;
COFD[137] = 3.81860507E+00;
COFD[138] = -2.78482683E-01;
COFD[139] = 1.19505034E-02;
COFD[140] = -9.83138074E+00;
COFD[141] = 1.83095585E+00;
COFD[142] = -2.43017348E-02;
COFD[143] = 1.11147663E-03;
COFD[144] = -1.77028653E+01;
COFD[145] = 4.28431488E+00;
COFD[146] = -3.35035279E-01;
COFD[147] = 1.42440352E-02;
COFD[148] = -1.83540829E+01;
COFD[149] = 4.46715628E+00;
COFD[150] = -3.57521352E-01;
COFD[151] = 1.51703027E-02;
COFD[152] = -1.83379287E+01;
COFD[153] = 4.46715628E+00;
COFD[154] = -3.57521352E-01;
COFD[155] = 1.51703027E-02;
COFD[156] = -1.27204343E+01;
COFD[157] = 2.70797975E+00;
COFD[158] = -1.37895013E-01;
COFD[159] = 6.01030858E-03;
COFD[160] = -1.92868765E+01;
COFD[161] = 4.90190161E+00;
COFD[162] = -4.08908928E-01;
COFD[163] = 1.71998038E-02;
COFD[164] = -1.92868765E+01;
COFD[165] = 4.90190161E+00;
COFD[166] = -4.08908928E-01;
COFD[167] = 1.71998038E-02;
COFD[168] = -1.41047925E+01;
COFD[169] = 3.05361342E+00;
COFD[170] = -1.82331859E-01;
COFD[171] = 7.91667899E-03;
COFD[172] = -1.83176921E+01;
COFD[173] = 4.46715628E+00;
COFD[174] = -3.57521352E-01;
COFD[175] = 1.51703027E-02;
COFD[176] = -1.83194167E+01;
COFD[177] = 4.46715628E+00;
COFD[178] = -3.57521352E-01;
COFD[179] = 1.51703027E-02;
COFD[180] = -1.36954208E+01;
COFD[181] = 2.89678405E+00;
COFD[182] = -1.62418864E-01;
COFD[183] = 7.07300755E-03;
COFD[184] = -1.45865205E+01;
COFD[185] = 3.25814060E+00;
COFD[186] = -2.08402129E-01;
COFD[187] = 9.02544298E-03;
COFD[188] = -1.66006724E+01;
COFD[189] = 3.87564052E+00;
COFD[190] = -2.85285750E-01;
COFD[191] = 1.22208235E-02;
COFD[192] = -1.60070426E+01;
COFD[193] = 3.67153141E+00;
COFD[194] = -2.60291173E-01;
COFD[195] = 1.11995571E-02;
COFD[196] = -1.58107521E+01;
COFD[197] = 3.63667810E+00;
COFD[198] = -2.55876890E-01;
COFD[199] = 1.10128613E-02;
COFD[200] = -1.29737412E+01;
COFD[201] = 2.59809959E+00;
COFD[202] = -1.23503755E-01;
COFD[203] = 5.38095363E-03;
COFD[204] = -1.29737412E+01;
COFD[205] = 2.59809959E+00;
COFD[206] = -1.23503755E-01;
COFD[207] = 5.38095363E-03;
COFD[208] = -1.92798841E+01;
COFD[209] = 4.90190161E+00;
COFD[210] = -4.08908928E-01;
COFD[211] = 1.71998038E-02;
COFD[212] = -1.90725207E+01;
COFD[213] = 3.95772830E+00;
COFD[214] = -2.12919832E-01;
COFD[215] = 5.95934214E-03;
COFD[216] = -2.20247520E+01;
COFD[217] = 5.46748583E+00;
COFD[218] = -4.52712497E-01;
COFD[219] = 1.79643869E-02;
COFD[220] = -2.03611730E+01;
COFD[221] = 5.12499506E+00;
COFD[222] = -4.34164262E-01;
COFD[223] = 1.81499285E-02;
COFD[224] = -2.20291011E+01;
COFD[225] = 5.46748583E+00;
COFD[226] = -4.52712497E-01;
COFD[227] = 1.79643869E-02;
COFD[228] = -2.03712656E+01;
COFD[229] = 5.13106264E+00;
COFD[230] = -4.34831442E-01;
COFD[231] = 1.81741555E-02;
COFD[232] = -2.20104722E+01;
COFD[233] = 5.44978020E+00;
COFD[234] = -4.48659098E-01;
COFD[235] = 1.77239783E-02;
COFD[236] = -1.90725207E+01;
COFD[237] = 3.95772830E+00;
COFD[238] = -2.12919832E-01;
COFD[239] = 5.95934214E-03;
COFD[240] = -2.05770112E+01;
COFD[241] = 5.19851461E+00;
COFD[242] = -4.41448461E-01;
COFD[243] = 1.83776542E-02;
COFD[244] = -1.57928963E+01;
COFD[245] = 3.95657450E+00;
COFD[246] = -2.95018117E-01;
COFD[247] = 1.26116893E-02;
COFD[248] = -2.13182781E+01;
COFD[249] = 5.42583038E+00;
COFD[250] = -4.65284588E-01;
COFD[251] = 1.91927319E-02;
COFD[252] = -1.95948344E+01;
COFD[253] = 5.44168826E+00;
COFD[254] = -4.65452072E-01;
COFD[255] = 1.91268618E-02;
COFD[256] = -1.92609137E+01;
COFD[257] = 4.90190161E+00;
COFD[258] = -4.08908928E-01;
COFD[259] = 1.71998038E-02;
COFD[260] = -1.92798841E+01;
COFD[261] = 4.90190161E+00;
COFD[262] = -4.08908928E-01;
COFD[263] = 1.71998038E-02;
COFD[264] = -2.05840524E+01;
COFD[265] = 5.19851461E+00;
COFD[266] = -4.41448461E-01;
COFD[267] = 1.83776542E-02;
COFD[268] = -1.86106078E+01;
COFD[269] = 3.93632699E+00;
COFD[270] = -2.09772398E-01;
COFD[271] = 5.80951043E-03;
COFD[272] = -2.05907680E+01;
COFD[273] = 5.19851461E+00;
COFD[274] = -4.41448461E-01;
COFD[275] = 1.83776542E-02;
COFD[276] = -1.98801302E+01;
COFD[277] = 4.34170635E+00;
COFD[278] = -2.70199437E-01;
COFD[279] = 8.70997059E-03;
COFD[280] = -1.98882909E+01;
COFD[281] = 4.34170635E+00;
COFD[282] = -2.70199437E-01;
COFD[283] = 8.70997059E-03;
COFD[284] = -2.18726617E+01;
COFD[285] = 5.49119562E+00;
COFD[286] = -4.61230197E-01;
COFD[287] = 1.85376198E-02;
COFD[288] = -1.97232796E+01;
COFD[289] = 4.43158626E+00;
COFD[290] = -2.83750498E-01;
COFD[291] = 9.36547527E-03;
COFD[292] = -2.08591782E+01;
COFD[293] = 5.28883639E+00;
COFD[294] = -4.51325359E-01;
COFD[295] = 1.87342859E-02;
COFD[296] = -2.08591782E+01;
COFD[297] = 5.28883639E+00;
COFD[298] = -4.51325359E-01;
COFD[299] = 1.87342859E-02;
COFD[300] = -2.15319330E+01;
COFD[301] = 5.08422954E+00;
COFD[302] = -3.85024067E-01;
COFD[303] = 1.43625491E-02;
COFD[304] = -2.08665613E+01;
COFD[305] = 5.28883639E+00;
COFD[306] = -4.51325359E-01;
COFD[307] = 1.87342859E-02;
COFD[308] = -1.90199042E+01;
COFD[309] = 4.78118094E+00;
COFD[310] = -3.95246621E-01;
COFD[311] = 1.66869495E-02;
COFD[312] = -1.93676077E+01;
COFD[313] = 4.78118094E+00;
COFD[314] = -3.95246621E-01;
COFD[315] = 1.66869495E-02;
COFD[316] = -1.92297881E+01;
COFD[317] = 4.90190161E+00;
COFD[318] = -4.08908928E-01;
COFD[319] = 1.71998038E-02;
COFD[320] = -1.92091472E+01;
COFD[321] = 4.90190161E+00;
COFD[322] = -4.08908928E-01;
COFD[323] = 1.71998038E-02;
COFD[324] = -1.95197192E+01;
COFD[325] = 4.83644316E+00;
COFD[326] = -4.01608859E-01;
COFD[327] = 1.69307155E-02;
COFD[328] = -2.20201455E+01;
COFD[329] = 5.46748583E+00;
COFD[330] = -4.52712497E-01;
COFD[331] = 1.79643869E-02;
COFD[332] = -2.16632143E+01;
COFD[333] = 5.08860948E+00;
COFD[334] = -3.85736749E-01;
COFD[335] = 1.43988247E-02;
COFD[336] = -2.20247520E+01;
COFD[337] = 5.46748583E+00;
COFD[338] = -4.52712497E-01;
COFD[339] = 1.79643869E-02;
COFD[340] = -2.20247520E+01;
COFD[341] = 5.46748583E+00;
COFD[342] = -4.52712497E-01;
COFD[343] = 1.79643869E-02;
COFD[344] = -2.20104985E+01;
COFD[345] = 5.46748583E+00;
COFD[346] = -4.52712497E-01;
COFD[347] = 1.79643869E-02;
COFD[348] = -1.23391219E+01;
COFD[349] = 2.61360947E+00;
COFD[350] = -1.25541800E-01;
COFD[351] = 5.47045704E-03;
COFD[352] = -2.15319330E+01;
COFD[353] = 5.08422954E+00;
COFD[354] = -3.85024067E-01;
COFD[355] = 1.43625491E-02;
COFD[356] = -2.12431735E+01;
COFD[357] = 4.84340426E+00;
COFD[358] = -3.46976285E-01;
COFD[359] = 1.24627164E-02;
COFD[360] = -2.12198328E+01;
COFD[361] = 4.84340426E+00;
COFD[362] = -3.46976285E-01;
COFD[363] = 1.24627164E-02;
COFD[364] = -1.91937442E+01;
COFD[365] = 4.90190161E+00;
COFD[366] = -4.08908928E-01;
COFD[367] = 1.71998038E-02;
COFD[368] = -1.90815916E+01;
COFD[369] = 3.95772830E+00;
COFD[370] = -2.12919832E-01;
COFD[371] = 5.95934214E-03;
COFD[372] = -1.90815916E+01;
COFD[373] = 3.95772830E+00;
COFD[374] = -2.12919832E-01;
COFD[375] = 5.95934214E-03;
COFD[376] = -2.08665613E+01;
COFD[377] = 5.28883639E+00;
COFD[378] = -4.51325359E-01;
COFD[379] = 1.87342859E-02;
COFD[380] = -2.11910506E+01;
COFD[381] = 4.84340426E+00;
COFD[382] = -3.46976285E-01;
COFD[383] = 1.24627164E-02;
COFD[384] = -2.11934846E+01;
COFD[385] = 4.84340426E+00;
COFD[386] = -3.46976285E-01;
COFD[387] = 1.24627164E-02;
COFD[388] = -2.03446027E+01;
COFD[389] = 5.12499506E+00;
COFD[390] = -4.34164262E-01;
COFD[391] = 1.81499285E-02;
COFD[392] = -2.12540235E+01;
COFD[393] = 5.43685814E+00;
COFD[394] = -4.65636659E-01;
COFD[395] = 1.91663012E-02;
COFD[396] = -2.20815434E+01;
COFD[397] = 5.44442134E+00;
COFD[398] = -4.47436658E-01;
COFD[399] = 1.76514728E-02;
COFD[400] = -2.20100065E+01;
COFD[401] = 5.48895644E+00;
COFD[402] = -4.60008770E-01;
COFD[403] = 1.84492699E-02;
COFD[404] = -2.18997295E+01;
COFD[405] = 5.49119562E+00;
COFD[406] = -4.61230197E-01;
COFD[407] = 1.85376198E-02;
COFD[408] = -1.93757667E+01;
COFD[409] = 4.78118094E+00;
COFD[410] = -3.95246621E-01;
COFD[411] = 1.66869495E-02;
COFD[412] = -1.93757667E+01;
COFD[413] = 4.78118094E+00;
COFD[414] = -3.95246621E-01;
COFD[415] = 1.66869495E-02;
COFD[416] = -1.63413318E+01;
COFD[417] = 3.81860507E+00;
COFD[418] = -2.78482683E-01;
COFD[419] = 1.19505034E-02;
COFD[420] = -2.20247520E+01;
COFD[421] = 5.46748583E+00;
COFD[422] = -4.52712497E-01;
COFD[423] = 1.79643869E-02;
COFD[424] = -2.05980185E+01;
COFD[425] = 5.10002627E+00;
COFD[426] = -4.31492380E-01;
COFD[427] = 1.80562807E-02;
COFD[428] = -1.73129508E+01;
COFD[429] = 4.00684631E+00;
COFD[430] = -3.01155648E-01;
COFD[431] = 1.28621017E-02;
COFD[432] = -2.06036623E+01;
COFD[433] = 5.10002627E+00;
COFD[434] = -4.31492380E-01;
COFD[435] = 1.80562807E-02;
COFD[436] = -1.73191289E+01;
COFD[437] = 4.01345667E+00;
COFD[438] = -3.01941639E-01;
COFD[439] = 1.28932278E-02;
COFD[440] = -2.07321809E+01;
COFD[441] = 5.14637528E+00;
COFD[442] = -4.36484093E-01;
COFD[443] = 1.82327424E-02;
COFD[444] = -2.20247520E+01;
COFD[445] = 5.46748583E+00;
COFD[446] = -4.52712497E-01;
COFD[447] = 1.79643869E-02;
COFD[448] = -1.76083599E+01;
COFD[449] = 4.11950819E+00;
COFD[450] = -3.14655711E-01;
COFD[451] = 1.34014626E-02;
COFD[452] = -1.32537150E+01;
COFD[453] = 3.00584146E+00;
COFD[454] = -1.76313628E-01;
COFD[455] = 7.66376173E-03;
COFD[456] = -1.85669389E+01;
COFD[457] = 4.45677518E+00;
COFD[458] = -3.56271969E-01;
COFD[459] = 1.51199595E-02;
COFD[460] = -1.68421339E+01;
COFD[461] = 4.52301031E+00;
COFD[462] = -3.64086327E-01;
COFD[463] = 1.54280659E-02;
COFD[464] = -1.63192492E+01;
COFD[465] = 3.81860507E+00;
COFD[466] = -2.78482683E-01;
COFD[467] = 1.19505034E-02;
COFD[468] = -1.63413318E+01;
COFD[469] = 3.81860507E+00;
COFD[470] = -2.78482683E-01;
COFD[471] = 1.19505034E-02;
COFD[472] = -1.76171946E+01;
COFD[473] = 4.11950819E+00;
COFD[474] = -3.14655711E-01;
COFD[475] = 1.34014626E-02;
COFD[476] = -2.15944623E+01;
COFD[477] = 5.46509995E+00;
COFD[478] = -4.52185064E-01;
COFD[479] = 1.79334715E-02;
COFD[480] = -1.76256507E+01;
COFD[481] = 4.11950819E+00;
COFD[482] = -3.14655711E-01;
COFD[483] = 1.34014626E-02;
COFD[484] = -2.19732795E+01;
COFD[485] = 5.49000112E+00;
COFD[486] = -4.60439480E-01;
COFD[487] = 1.84791361E-02;
COFD[488] = -2.19834059E+01;
COFD[489] = 5.49000112E+00;
COFD[490] = -4.60439480E-01;
COFD[491] = 1.84791361E-02;
COFD[492] = -2.00084012E+01;
COFD[493] = 4.92657613E+00;
COFD[494] = -4.11730248E-01;
COFD[495] = 1.73070472E-02;
COFD[496] = -2.15779365E+01;
COFD[497] = 5.49050988E+00;
COFD[498] = -4.61803086E-01;
COFD[499] = 1.85876911E-02;
COFD[500] = -1.79279827E+01;
COFD[501] = 4.23476606E+00;
COFD[502] = -3.28847162E-01;
COFD[503] = 1.39854168E-02;
COFD[504] = -1.79279827E+01;
COFD[505] = 4.23476606E+00;
COFD[506] = -3.28847162E-01;
COFD[507] = 1.39854168E-02;
COFD[508] = -2.17760485E+01;
COFD[509] = 5.43916361E+00;
COFD[510] = -4.65585351E-01;
COFD[511] = 1.91505033E-02;
COFD[512] = -1.79372136E+01;
COFD[513] = 4.23476606E+00;
COFD[514] = -3.28847162E-01;
COFD[515] = 1.39854168E-02;
COFD[516] = -1.60671247E+01;
COFD[517] = 3.68775110E+00;
COFD[518] = -2.62341411E-01;
COFD[519] = 1.12860938E-02;
COFD[520] = -1.64501469E+01;
COFD[521] = 3.68775110E+00;
COFD[522] = -2.62341411E-01;
COFD[523] = 1.12860938E-02;
COFD[524] = -1.62891576E+01;
COFD[525] = 3.81860507E+00;
COFD[526] = -2.78482683E-01;
COFD[527] = 1.19505034E-02;
COFD[528] = -1.62652790E+01;
COFD[529] = 3.81860507E+00;
COFD[530] = -2.78482683E-01;
COFD[531] = 1.19505034E-02;
COFD[532] = -1.66010112E+01;
COFD[533] = 3.74948342E+00;
COFD[534] = -2.70041311E-01;
COFD[535] = 1.16066900E-02;
COFD[536] = -2.05920567E+01;
COFD[537] = 5.10002627E+00;
COFD[538] = -4.31492380E-01;
COFD[539] = 1.80562807E-02;
COFD[540] = -2.18988182E+01;
COFD[541] = 5.43855098E+00;
COFD[542] = -4.65597511E-01;
COFD[543] = 1.91545792E-02;
COFD[544] = -2.05980185E+01;
COFD[545] = 5.10002627E+00;
COFD[546] = -4.31492380E-01;
COFD[547] = 1.80562807E-02;
COFD[548] = -2.05980185E+01;
COFD[549] = 5.10002627E+00;
COFD[550] = -4.31492380E-01;
COFD[551] = 1.80562807E-02;
COFD[552] = -2.05796228E+01;
COFD[553] = 5.10002627E+00;
COFD[554] = -4.31492380E-01;
COFD[555] = 1.80562807E-02;
COFD[556] = -1.15084979E+01;
COFD[557] = 2.30622063E+00;
COFD[558] = -8.87775848E-02;
COFD[559] = 4.01974335E-03;
COFD[560] = -2.17760485E+01;
COFD[561] = 5.43916361E+00;
COFD[562] = -4.65585351E-01;
COFD[563] = 1.91505033E-02;
COFD[564] = -2.21491003E+01;
COFD[565] = 5.46734534E+00;
COFD[566] = -4.65041652E-01;
COFD[567] = 1.89657101E-02;
COFD[568] = -2.21166448E+01;
COFD[569] = 5.46734534E+00;
COFD[570] = -4.65041652E-01;
COFD[571] = 1.89657101E-02;
COFD[572] = -1.62420946E+01;
COFD[573] = 3.81860507E+00;
COFD[574] = -2.78482683E-01;
COFD[575] = 1.19505034E-02;
COFD[576] = -2.20359179E+01;
COFD[577] = 5.46748583E+00;
COFD[578] = -4.52712497E-01;
COFD[579] = 1.79643869E-02;
COFD[580] = -2.20359179E+01;
COFD[581] = 5.46748583E+00;
COFD[582] = -4.52712497E-01;
COFD[583] = 1.79643869E-02;
COFD[584] = -1.79372136E+01;
COFD[585] = 4.23476606E+00;
COFD[586] = -3.28847162E-01;
COFD[587] = 1.39854168E-02;
COFD[588] = -2.20773999E+01;
COFD[589] = 5.46734534E+00;
COFD[590] = -4.65041652E-01;
COFD[591] = 1.89657101E-02;
COFD[592] = -2.20806872E+01;
COFD[593] = 5.46734534E+00;
COFD[594] = -4.65041652E-01;
COFD[595] = 1.89657101E-02;
COFD[596] = -1.72924318E+01;
COFD[597] = 4.00684631E+00;
COFD[598] = -3.01155648E-01;
COFD[599] = 1.28621017E-02;
COFD[600] = -1.85108813E+01;
COFD[601] = 4.49767237E+00;
COFD[602] = -3.61159649E-01;
COFD[603] = 1.53154259E-02;
COFD[604] = -2.08211963E+01;
COFD[605] = 5.16017453E+00;
COFD[606] = -4.37976881E-01;
COFD[607] = 1.82858770E-02;
COFD[608] = -2.02000482E+01;
COFD[609] = 4.96009703E+00;
COFD[610] = -4.15667692E-01;
COFD[611] = 1.74615095E-02;
COFD[612] = -2.00099559E+01;
COFD[613] = 4.92657613E+00;
COFD[614] = -4.11730248E-01;
COFD[615] = 1.73070472E-02;
COFD[616] = -1.64602713E+01;
COFD[617] = 3.68775110E+00;
COFD[618] = -2.62341411E-01;
COFD[619] = 1.12860938E-02;
COFD[620] = -1.64602713E+01;
COFD[621] = 3.68775110E+00;
COFD[622] = -2.62341411E-01;
COFD[623] = 1.12860938E-02;
COFD[624] = -1.37081197E+01;
COFD[625] = 2.89678405E+00;
COFD[626] = -1.62418864E-01;
COFD[627] = 7.07300755E-03;
COFD[628] = -2.03611730E+01;
COFD[629] = 5.12499506E+00;
COFD[630] = -4.34164262E-01;
COFD[631] = 1.81499285E-02;
COFD[632] = -1.73129508E+01;
COFD[633] = 4.00684631E+00;
COFD[634] = -3.01155648E-01;
COFD[635] = 1.28621017E-02;
COFD[636] = -1.45942592E+01;
COFD[637] = 3.06880733E+00;
COFD[638] = -1.84232163E-01;
COFD[639] = 7.99594639E-03;
COFD[640] = -1.73175837E+01;
COFD[641] = 4.00684631E+00;
COFD[642] = -3.01155648E-01;
COFD[643] = 1.28621017E-02;
COFD[644] = -1.45975234E+01;
COFD[645] = 3.07340947E+00;
COFD[646] = -1.84805140E-01;
COFD[647] = 8.01973216E-03;
COFD[648] = -1.74577462E+01;
COFD[649] = 4.06188586E+00;
COFD[650] = -3.07715468E-01;
COFD[651] = 1.31226885E-02;
COFD[652] = -2.03611730E+01;
COFD[653] = 5.12499506E+00;
COFD[654] = -4.34164262E-01;
COFD[655] = 1.81499285E-02;
COFD[656] = -1.48313878E+01;
COFD[657] = 3.16773813E+00;
COFD[658] = -1.96823168E-01;
COFD[659] = 8.53058072E-03;
COFD[660] = -1.11094036E+01;
COFD[661] = 2.21467976E+00;
COFD[662] = -7.20501534E-02;
COFD[663] = 3.07515437E-03;
COFD[664] = -1.55155212E+01;
COFD[665] = 3.41295809E+00;
COFD[666] = -2.27626583E-01;
COFD[667] = 9.82158260E-03;
COFD[668] = -1.38233396E+01;
COFD[669] = 3.46560000E+00;
COFD[670] = -2.34075114E-01;
COFD[671] = 1.00849661E-02;
COFD[672] = -1.36884074E+01;
COFD[673] = 2.89678405E+00;
COFD[674] = -1.62418864E-01;
COFD[675] = 7.07300755E-03;
COFD[676] = -1.37081197E+01;
COFD[677] = 2.89678405E+00;
COFD[678] = -1.62418864E-01;
COFD[679] = 7.07300755E-03;
COFD[680] = -1.48388326E+01;
COFD[681] = 3.16773813E+00;
COFD[682] = -1.96823168E-01;
COFD[683] = 8.53058072E-03;
COFD[684] = -2.06209560E+01;
COFD[685] = 5.33386551E+00;
COFD[686] = -4.56343451E-01;
COFD[687] = 1.89202797E-02;
COFD[688] = -1.48459389E+01;
COFD[689] = 3.16773813E+00;
COFD[690] = -1.96823168E-01;
COFD[691] = 8.53058072E-03;
COFD[692] = -1.99439348E+01;
COFD[693] = 4.98617709E+00;
COFD[694] = -4.18736053E-01;
COFD[695] = 1.75821344E-02;
COFD[696] = -1.99525417E+01;
COFD[697] = 4.98617709E+00;
COFD[698] = -4.18736053E-01;
COFD[699] = 1.75821344E-02;
COFD[700] = -1.68255854E+01;
COFD[701] = 3.86251333E+00;
COFD[702] = -2.83724399E-01;
COFD[703] = 1.21589320E-02;
COFD[704] = -1.98547414E+01;
COFD[705] = 5.07012033E+00;
COFD[706] = -4.28341021E-01;
COFD[707] = 1.79480600E-02;
COFD[708] = -1.50924406E+01;
COFD[709] = 3.26459489E+00;
COFD[710] = -2.09215287E-01;
COFD[711] = 9.05961407E-03;
COFD[712] = -1.50924406E+01;
COFD[713] = 3.26459489E+00;
COFD[714] = -2.09215287E-01;
COFD[715] = 9.05961407E-03;
COFD[716] = -1.91048368E+01;
COFD[717] = 4.62560030E+00;
COFD[718] = -3.76498522E-01;
COFD[719] = 1.59308956E-02;
COFD[720] = -1.51002407E+01;
COFD[721] = 3.26459489E+00;
COFD[722] = -2.09215287E-01;
COFD[723] = 9.05961407E-03;
COFD[724] = -1.35094169E+01;
COFD[725] = 2.78343819E+00;
COFD[726] = -1.47679033E-01;
COFD[727] = 6.43347681E-03;
COFD[728] = -1.38664480E+01;
COFD[729] = 2.78343819E+00;
COFD[730] = -1.47679033E-01;
COFD[731] = 6.43347681E-03;
COFD[732] = -1.36572548E+01;
COFD[733] = 2.89678405E+00;
COFD[734] = -1.62418864E-01;
COFD[735] = 7.07300755E-03;
COFD[736] = -1.36358384E+01;
COFD[737] = 2.89678405E+00;
COFD[738] = -1.62418864E-01;
COFD[739] = 7.07300755E-03;
COFD[740] = -1.39734826E+01;
COFD[741] = 2.82860807E+00;
COFD[742] = -1.53540725E-01;
COFD[743] = 6.68730174E-03;
COFD[744] = -1.73080465E+01;
COFD[745] = 4.00684631E+00;
COFD[746] = -3.01155648E-01;
COFD[747] = 1.28621017E-02;
COFD[748] = -1.89663618E+01;
COFD[749] = 4.53386131E+00;
COFD[750] = -3.65361236E-01;
COFD[751] = 1.54781318E-02;
COFD[752] = -1.73129508E+01;
COFD[753] = 4.00684631E+00;
COFD[754] = -3.01155648E-01;
COFD[755] = 1.28621017E-02;
COFD[756] = -1.73129508E+01;
COFD[757] = 4.00684631E+00;
COFD[758] = -3.01155648E-01;
COFD[759] = 1.28621017E-02;
COFD[760] = -1.72977853E+01;
COFD[761] = 4.00684631E+00;
COFD[762] = -3.01155648E-01;
COFD[763] = 1.28621017E-02;
COFD[764] = -1.01389623E+01;
COFD[765] = 1.80391843E+00;
COFD[766] = -1.99275570E-02;
COFD[767] = 8.81933064E-04;
COFD[768] = -1.91048368E+01;
COFD[769] = 4.62560030E+00;
COFD[770] = -3.76498522E-01;
COFD[771] = 1.59308956E-02;
COFD[772] = -1.95664237E+01;
COFD[773] = 4.73109179E+00;
COFD[774] = -3.89322712E-01;
COFD[775] = 1.64528637E-02;
COFD[776] = -1.95411905E+01;
COFD[777] = 4.73109179E+00;
COFD[778] = -3.89322712E-01;
COFD[779] = 1.64528637E-02;
COFD[780] = -1.36188335E+01;
COFD[781] = 2.89678405E+00;
COFD[782] = -1.62418864E-01;
COFD[783] = 7.07300755E-03;
COFD[784] = -2.03707224E+01;
COFD[785] = 5.12499506E+00;
COFD[786] = -4.34164262E-01;
COFD[787] = 1.81499285E-02;
COFD[788] = -2.03707224E+01;
COFD[789] = 5.12499506E+00;
COFD[790] = -4.34164262E-01;
COFD[791] = 1.81499285E-02;
COFD[792] = -1.51002407E+01;
COFD[793] = 3.26459489E+00;
COFD[794] = -2.09215287E-01;
COFD[795] = 9.05961407E-03;
COFD[796] = -1.95102020E+01;
COFD[797] = 4.73109179E+00;
COFD[798] = -3.89322712E-01;
COFD[799] = 1.64528637E-02;
COFD[800] = -1.95128172E+01;
COFD[801] = 4.73109179E+00;
COFD[802] = -3.89322712E-01;
COFD[803] = 1.64528637E-02;
COFD[804] = -1.45767911E+01;
COFD[805] = 3.06880733E+00;
COFD[806] = -1.84232163E-01;
COFD[807] = 7.99594639E-03;
COFD[808] = -1.54695743E+01;
COFD[809] = 3.44303981E+00;
COFD[810] = -2.31296721E-01;
COFD[811] = 9.97079557E-03;
COFD[812] = -1.75710607E+01;
COFD[813] = 4.07809359E+00;
COFD[814] = -3.09646036E-01;
COFD[815] = 1.31992743E-02;
COFD[816] = -1.70041735E+01;
COFD[817] = 3.88423663E+00;
COFD[818] = -2.86310885E-01;
COFD[819] = 1.22615996E-02;
COFD[820] = -1.68477599E+01;
COFD[821] = 3.86251333E+00;
COFD[822] = -2.83724399E-01;
COFD[823] = 1.21589320E-02;
COFD[824] = -1.38750532E+01;
COFD[825] = 2.78343819E+00;
COFD[826] = -1.47679033E-01;
COFD[827] = 6.43347681E-03;
COFD[828] = -1.38750532E+01;
COFD[829] = 2.78343819E+00;
COFD[830] = -1.47679033E-01;
COFD[831] = 6.43347681E-03;
COFD[832] = -1.63445217E+01;
COFD[833] = 3.81860507E+00;
COFD[834] = -2.78482683E-01;
COFD[835] = 1.19505034E-02;
COFD[836] = -2.20291011E+01;
COFD[837] = 5.46748583E+00;
COFD[838] = -4.52712497E-01;
COFD[839] = 1.79643869E-02;
COFD[840] = -2.06036623E+01;
COFD[841] = 5.10002627E+00;
COFD[842] = -4.31492380E-01;
COFD[843] = 1.80562807E-02;
COFD[844] = -1.73175837E+01;
COFD[845] = 4.00684631E+00;
COFD[846] = -3.01155648E-01;
COFD[847] = 1.28621017E-02;
COFD[848] = -2.06093704E+01;
COFD[849] = 5.10002627E+00;
COFD[850] = -4.31492380E-01;
COFD[851] = 1.80562807E-02;
COFD[852] = -1.73235743E+01;
COFD[853] = 4.01345667E+00;
COFD[854] = -3.01941639E-01;
COFD[855] = 1.28932278E-02;
COFD[856] = -2.07378887E+01;
COFD[857] = 5.14637528E+00;
COFD[858] = -4.36484093E-01;
COFD[859] = 1.82327424E-02;
COFD[860] = -2.20291011E+01;
COFD[861] = 5.46748583E+00;
COFD[862] = -4.52712497E-01;
COFD[863] = 1.79643869E-02;
COFD[864] = -1.76131700E+01;
COFD[865] = 4.11950819E+00;
COFD[866] = -3.14655711E-01;
COFD[867] = 1.34014626E-02;
COFD[868] = -1.32542177E+01;
COFD[869] = 3.00584146E+00;
COFD[870] = -1.76313628E-01;
COFD[871] = 7.66376173E-03;
COFD[872] = -1.85723724E+01;
COFD[873] = 4.45677518E+00;
COFD[874] = -3.56271969E-01;
COFD[875] = 1.51199595E-02;
COFD[876] = -1.68423909E+01;
COFD[877] = 4.52301031E+00;
COFD[878] = -3.64086327E-01;
COFD[879] = 1.54280659E-02;
COFD[880] = -1.63223009E+01;
COFD[881] = 3.81860507E+00;
COFD[882] = -2.78482683E-01;
COFD[883] = 1.19505034E-02;
COFD[884] = -1.63445217E+01;
COFD[885] = 3.81860507E+00;
COFD[886] = -2.78482683E-01;
COFD[887] = 1.19505034E-02;
COFD[888] = -1.76220910E+01;
COFD[889] = 4.11950819E+00;
COFD[890] = -3.14655711E-01;
COFD[891] = 1.34014626E-02;
COFD[892] = -2.15977859E+01;
COFD[893] = 5.46509995E+00;
COFD[894] = -4.52185064E-01;
COFD[895] = 1.79334715E-02;
COFD[896] = -1.76306310E+01;
COFD[897] = 4.11950819E+00;
COFD[898] = -3.14655711E-01;
COFD[899] = 1.34014626E-02;
COFD[900] = -2.19778210E+01;
COFD[901] = 5.49000112E+00;
COFD[902] = -4.60439480E-01;
COFD[903] = 1.84791361E-02;
COFD[904] = -2.19880407E+01;
COFD[905] = 5.49000112E+00;
COFD[906] = -4.60439480E-01;
COFD[907] = 1.84791361E-02;
COFD[908] = -2.00142349E+01;
COFD[909] = 4.92657613E+00;
COFD[910] = -4.11730248E-01;
COFD[911] = 1.73070472E-02;
COFD[912] = -2.15811296E+01;
COFD[913] = 5.49050988E+00;
COFD[914] = -4.61803086E-01;
COFD[915] = 1.85876911E-02;
COFD[916] = -1.79327065E+01;
COFD[917] = 4.23476606E+00;
COFD[918] = -3.28847162E-01;
COFD[919] = 1.39854168E-02;
COFD[920] = -1.79327065E+01;
COFD[921] = 4.23476606E+00;
COFD[922] = -3.28847162E-01;
COFD[923] = 1.39854168E-02;
COFD[924] = -2.17819436E+01;
COFD[925] = 5.43916361E+00;
COFD[926] = -4.65585351E-01;
COFD[927] = 1.91505033E-02;
COFD[928] = -1.79420259E+01;
COFD[929] = 4.23476606E+00;
COFD[930] = -3.28847162E-01;
COFD[931] = 1.39854168E-02;
COFD[932] = -1.60698889E+01;
COFD[933] = 3.68775110E+00;
COFD[934] = -2.62341411E-01;
COFD[935] = 1.12860938E-02;
COFD[936] = -1.64546887E+01;
COFD[937] = 3.68775110E+00;
COFD[938] = -2.62341411E-01;
COFD[939] = 1.12860938E-02;
COFD[940] = -1.62922126E+01;
COFD[941] = 3.81860507E+00;
COFD[942] = -2.78482683E-01;
COFD[943] = 1.19505034E-02;
COFD[944] = -1.62681911E+01;
COFD[945] = 3.81860507E+00;
COFD[946] = -2.78482683E-01;
COFD[947] = 1.19505034E-02;
COFD[948] = -1.66052588E+01;
COFD[949] = 3.74948342E+00;
COFD[950] = -2.70041311E-01;
COFD[951] = 1.16066900E-02;
COFD[952] = -2.05976331E+01;
COFD[953] = 5.10002627E+00;
COFD[954] = -4.31492380E-01;
COFD[955] = 1.80562807E-02;
COFD[956] = -2.19050002E+01;
COFD[957] = 5.43855098E+00;
COFD[958] = -4.65597511E-01;
COFD[959] = 1.91545792E-02;
COFD[960] = -2.06036623E+01;
COFD[961] = 5.10002627E+00;
COFD[962] = -4.31492380E-01;
COFD[963] = 1.80562807E-02;
COFD[964] = -2.06036623E+01;
COFD[965] = 5.10002627E+00;
COFD[966] = -4.31492380E-01;
COFD[967] = 1.80562807E-02;
COFD[968] = -2.05850616E+01;
COFD[969] = 5.10002627E+00;
COFD[970] = -4.31492380E-01;
COFD[971] = 1.80562807E-02;
COFD[972] = -1.15094541E+01;
COFD[973] = 2.30622063E+00;
COFD[974] = -8.87775848E-02;
COFD[975] = 4.01974335E-03;
COFD[976] = -2.17819436E+01;
COFD[977] = 5.43916361E+00;
COFD[978] = -4.65585351E-01;
COFD[979] = 1.91505033E-02;
COFD[980] = -2.21568072E+01;
COFD[981] = 5.46734534E+00;
COFD[982] = -4.65041652E-01;
COFD[983] = 1.89657101E-02;
COFD[984] = -2.21238637E+01;
COFD[985] = 5.46734534E+00;
COFD[986] = -4.65041652E-01;
COFD[987] = 1.89657101E-02;
COFD[988] = -1.62447087E+01;
COFD[989] = 3.81860507E+00;
COFD[990] = -2.78482683E-01;
COFD[991] = 1.19505034E-02;
COFD[992] = -2.20403656E+01;
COFD[993] = 5.46748583E+00;
COFD[994] = -4.52712497E-01;
COFD[995] = 1.79643869E-02;
COFD[996] = -2.20403656E+01;
COFD[997] = 5.46748583E+00;
COFD[998] = -4.52712497E-01;
COFD[999] = 1.79643869E-02;
COFD[1000] = -1.79420259E+01;
COFD[1001] = 4.23476606E+00;
COFD[1002] = -3.28847162E-01;
COFD[1003] = 1.39854168E-02;
COFD[1004] = -2.20840703E+01;
COFD[1005] = 5.46734534E+00;
COFD[1006] = -4.65041652E-01;
COFD[1007] = 1.89657101E-02;
COFD[1008] = -2.20874019E+01;
COFD[1009] = 5.46734534E+00;
COFD[1010] = -4.65041652E-01;
COFD[1011] = 1.89657101E-02;
COFD[1012] = -1.72968776E+01;
COFD[1013] = 4.00684631E+00;
COFD[1014] = -3.01155648E-01;
COFD[1015] = 1.28621017E-02;
COFD[1016] = -1.85139391E+01;
COFD[1017] = 4.49767237E+00;
COFD[1018] = -3.61159649E-01;
COFD[1019] = 1.53154259E-02;
COFD[1020] = -2.08258351E+01;
COFD[1021] = 5.16017453E+00;
COFD[1022] = -4.37976881E-01;
COFD[1023] = 1.82858770E-02;
COFD[1024] = -2.02048626E+01;
COFD[1025] = 4.96009703E+00;
COFD[1026] = -4.15667692E-01;
COFD[1027] = 1.74615095E-02;
COFD[1028] = -2.00146818E+01;
COFD[1029] = 4.92657613E+00;
COFD[1030] = -4.11730248E-01;
COFD[1031] = 1.73070472E-02;
COFD[1032] = -1.64649064E+01;
COFD[1033] = 3.68775110E+00;
COFD[1034] = -2.62341411E-01;
COFD[1035] = 1.12860938E-02;
COFD[1036] = -1.64649064E+01;
COFD[1037] = 3.68775110E+00;
COFD[1038] = -2.62341411E-01;
COFD[1039] = 1.12860938E-02;
COFD[1040] = -1.37195308E+01;
COFD[1041] = 2.90243493E+00;
COFD[1042] = -1.63148841E-01;
COFD[1043] = 7.10447920E-03;
COFD[1044] = -2.03712656E+01;
COFD[1045] = 5.13106264E+00;
COFD[1046] = -4.34831442E-01;
COFD[1047] = 1.81741555E-02;
COFD[1048] = -1.73191289E+01;
COFD[1049] = 4.01345667E+00;
COFD[1050] = -3.01941639E-01;
COFD[1051] = 1.28932278E-02;
COFD[1052] = -1.45975234E+01;
COFD[1053] = 3.07340947E+00;
COFD[1054] = -1.84805140E-01;
COFD[1055] = 8.01973216E-03;
COFD[1056] = -1.73235743E+01;
COFD[1057] = 4.01345667E+00;
COFD[1058] = -3.01941639E-01;
COFD[1059] = 1.28932278E-02;
COFD[1060] = -1.46011781E+01;
COFD[1061] = 3.07793917E+00;
COFD[1062] = -1.85367944E-01;
COFD[1063] = 8.04304684E-03;
COFD[1064] = -1.74636172E+01;
COFD[1065] = 4.06842532E+00;
COFD[1066] = -3.08492475E-01;
COFD[1067] = 1.31534275E-02;
COFD[1068] = -2.03712656E+01;
COFD[1069] = 5.13106264E+00;
COFD[1070] = -4.34831442E-01;
COFD[1071] = 1.81741555E-02;
COFD[1072] = -1.48406309E+01;
COFD[1073] = 3.17494843E+00;
COFD[1074] = -1.97752410E-01;
COFD[1075] = 8.57054106E-03;
COFD[1076] = -1.11288741E+01;
COFD[1077] = 2.21964693E+00;
COFD[1078] = -7.27132181E-02;
COFD[1079] = 3.10467640E-03;
COFD[1080] = -1.55177889E+01;
COFD[1081] = 3.41787106E+00;
COFD[1082] = -2.28225407E-01;
COFD[1083] = 9.84590642E-03;
COFD[1084] = -1.38467772E+01;
COFD[1085] = 3.47073417E+00;
COFD[1086] = -2.34706158E-01;
COFD[1087] = 1.01108517E-02;
COFD[1088] = -1.37003044E+01;
COFD[1089] = 2.90243493E+00;
COFD[1090] = -1.63148841E-01;
COFD[1091] = 7.10447920E-03;
COFD[1092] = -1.37195308E+01;
COFD[1093] = 2.90243493E+00;
COFD[1094] = -1.63148841E-01;
COFD[1095] = 7.10447920E-03;
COFD[1096] = -1.48478097E+01;
COFD[1097] = 3.17494843E+00;
COFD[1098] = -1.97752410E-01;
COFD[1099] = 8.57054106E-03;
COFD[1100] = -2.06859021E+01;
COFD[1101] = 5.35499382E+00;
COFD[1102] = -4.58577046E-01;
COFD[1103] = 1.89976318E-02;
COFD[1104] = -1.48546585E+01;
COFD[1105] = 3.17494843E+00;
COFD[1106] = -1.97752410E-01;
COFD[1107] = 8.57054106E-03;
COFD[1108] = -1.99576934E+01;
COFD[1109] = 4.99411384E+00;
COFD[1110] = -4.19672196E-01;
COFD[1111] = 1.76190456E-02;
COFD[1112] = -1.99660065E+01;
COFD[1113] = 4.99411384E+00;
COFD[1114] = -4.19672196E-01;
COFD[1115] = 1.76190456E-02;
COFD[1116] = -1.68274036E+01;
COFD[1117] = 3.86762857E+00;
COFD[1118] = -2.84331684E-01;
COFD[1119] = 1.21829423E-02;
COFD[1120] = -1.98907500E+01;
COFD[1121] = 5.08242638E+00;
COFD[1122] = -4.29646094E-01;
COFD[1123] = 1.79932937E-02;
COFD[1124] = -1.50992879E+01;
COFD[1125] = 3.27065235E+00;
COFD[1126] = -2.09978212E-01;
COFD[1127] = 9.09167155E-03;
COFD[1128] = -1.50992879E+01;
COFD[1129] = 3.27065235E+00;
COFD[1130] = -2.09978212E-01;
COFD[1131] = 9.09167155E-03;
COFD[1132] = -1.91395940E+01;
COFD[1133] = 4.64293684E+00;
COFD[1134] = -3.78633702E-01;
COFD[1135] = 1.60189825E-02;
COFD[1136] = -1.51068133E+01;
COFD[1137] = 3.27065235E+00;
COFD[1138] = -2.09978212E-01;
COFD[1139] = 9.09167155E-03;
COFD[1140] = -1.35207569E+01;
COFD[1141] = 2.78878811E+00;
COFD[1142] = -1.48374416E-01;
COFD[1143] = 6.46363543E-03;
COFD[1144] = -1.38712196E+01;
COFD[1145] = 2.78878811E+00;
COFD[1146] = -1.48374416E-01;
COFD[1147] = 6.46363543E-03;
COFD[1148] = -1.36692846E+01;
COFD[1149] = 2.90243493E+00;
COFD[1150] = -1.63148841E-01;
COFD[1151] = 7.10447920E-03;
COFD[1152] = -1.36483759E+01;
COFD[1153] = 2.90243493E+00;
COFD[1154] = -1.63148841E-01;
COFD[1155] = 7.10447920E-03;
COFD[1156] = -1.39807418E+01;
COFD[1157] = 2.83461288E+00;
COFD[1158] = -1.54324769E-01;
COFD[1159] = 6.72145133E-03;
COFD[1160] = -1.73144212E+01;
COFD[1161] = 4.01345667E+00;
COFD[1162] = -3.01941639E-01;
COFD[1163] = 1.28932278E-02;
COFD[1164] = -1.89701106E+01;
COFD[1165] = 4.54025830E+00;
COFD[1166] = -3.66114939E-01;
COFD[1167] = 1.55078211E-02;
COFD[1168] = -1.73191289E+01;
COFD[1169] = 4.01345667E+00;
COFD[1170] = -3.01941639E-01;
COFD[1171] = 1.28932278E-02;
COFD[1172] = -1.73191289E+01;
COFD[1173] = 4.01345667E+00;
COFD[1174] = -3.01941639E-01;
COFD[1175] = 1.28932278E-02;
COFD[1176] = -1.73045655E+01;
COFD[1177] = 4.01345667E+00;
COFD[1178] = -3.01941639E-01;
COFD[1179] = 1.28932278E-02;
COFD[1180] = -1.01383439E+01;
COFD[1181] = 1.80106060E+00;
COFD[1182] = -1.94978950E-02;
COFD[1183] = 8.60733672E-04;
COFD[1184] = -1.91395940E+01;
COFD[1185] = 4.64293684E+00;
COFD[1186] = -3.78633702E-01;
COFD[1187] = 1.60189825E-02;
COFD[1188] = -1.95697274E+01;
COFD[1189] = 4.73880084E+00;
COFD[1190] = -3.90242532E-01;
COFD[1191] = 1.64895743E-02;
COFD[1192] = -1.95457506E+01;
COFD[1193] = 4.73880084E+00;
COFD[1194] = -3.90242532E-01;
COFD[1195] = 1.64895743E-02;
COFD[1196] = -1.36323037E+01;
COFD[1197] = 2.90243493E+00;
COFD[1198] = -1.63148841E-01;
COFD[1199] = 7.10447920E-03;
COFD[1200] = -2.03805001E+01;
COFD[1201] = 5.13106264E+00;
COFD[1202] = -4.34831442E-01;
COFD[1203] = 1.81741555E-02;
COFD[1204] = -2.03805001E+01;
COFD[1205] = 5.13106264E+00;
COFD[1206] = -4.34831442E-01;
COFD[1207] = 1.81741555E-02;
COFD[1208] = -1.51068133E+01;
COFD[1209] = 3.27065235E+00;
COFD[1210] = -2.09978212E-01;
COFD[1211] = 9.09167155E-03;
COFD[1212] = -1.95162248E+01;
COFD[1213] = 4.73880084E+00;
COFD[1214] = -3.90242532E-01;
COFD[1215] = 1.64895743E-02;
COFD[1216] = -1.95187199E+01;
COFD[1217] = 4.73880084E+00;
COFD[1218] = -3.90242532E-01;
COFD[1219] = 1.64895743E-02;
COFD[1220] = -1.45806462E+01;
COFD[1221] = 3.07340947E+00;
COFD[1222] = -1.84805140E-01;
COFD[1223] = 8.01973216E-03;
COFD[1224] = -1.54796731E+01;
COFD[1225] = 3.44821689E+00;
COFD[1226] = -2.31932994E-01;
COFD[1227] = 9.99688061E-03;
COFD[1228] = -1.75803708E+01;
COFD[1229] = 4.08497111E+00;
COFD[1230] = -3.10470821E-01;
COFD[1231] = 1.32322450E-02;
COFD[1232] = -1.70084229E+01;
COFD[1233] = 3.88943604E+00;
COFD[1234] = -2.86933580E-01;
COFD[1235] = 1.22865010E-02;
COFD[1236] = -1.68524637E+01;
COFD[1237] = 3.86762857E+00;
COFD[1238] = -2.84331684E-01;
COFD[1239] = 1.21829423E-02;
COFD[1240] = -1.38795311E+01;
COFD[1241] = 2.78878811E+00;
COFD[1242] = -1.48374416E-01;
COFD[1243] = 6.46363543E-03;
COFD[1244] = -1.38795311E+01;
COFD[1245] = 2.78878811E+00;
COFD[1246] = -1.48374416E-01;
COFD[1247] = 6.46363543E-03;
COFD[1248] = -1.64527503E+01;
COFD[1249] = 3.86315631E+00;
COFD[1250] = -2.83800980E-01;
COFD[1251] = 1.21619703E-02;
COFD[1252] = -2.20104722E+01;
COFD[1253] = 5.44978020E+00;
COFD[1254] = -4.48659098E-01;
COFD[1255] = 1.77239783E-02;
COFD[1256] = -2.07321809E+01;
COFD[1257] = 5.14637528E+00;
COFD[1258] = -4.36484093E-01;
COFD[1259] = 1.82327424E-02;
COFD[1260] = -1.74577462E+01;
COFD[1261] = 4.06188586E+00;
COFD[1262] = -3.07715468E-01;
COFD[1263] = 1.31226885E-02;
COFD[1264] = -2.07378887E+01;
COFD[1265] = 5.14637528E+00;
COFD[1266] = -4.36484093E-01;
COFD[1267] = 1.82327424E-02;
COFD[1268] = -1.74636172E+01;
COFD[1269] = 4.06842532E+00;
COFD[1270] = -3.08492475E-01;
COFD[1271] = 1.31534275E-02;
COFD[1272] = -2.08457766E+01;
COFD[1273] = 5.18382353E+00;
COFD[1274] = -4.40210428E-01;
COFD[1275] = 1.83500882E-02;
COFD[1276] = -2.20104722E+01;
COFD[1277] = 5.44978020E+00;
COFD[1278] = -4.48659098E-01;
COFD[1279] = 1.77239783E-02;
COFD[1280] = -1.77768887E+01;
COFD[1281] = 4.18471443E+00;
COFD[1282] = -3.22640353E-01;
COFD[1283] = 1.37280239E-02;
COFD[1284] = -1.33494517E+01;
COFD[1285] = 3.04769365E+00;
COFD[1286] = -1.81586731E-01;
COFD[1287] = 7.88540063E-03;
COFD[1288] = -1.87105665E+01;
COFD[1289] = 4.51083589E+00;
COFD[1290] = -3.62668743E-01;
COFD[1291] = 1.53729786E-02;
COFD[1292] = -1.69855851E+01;
COFD[1293] = 4.58049527E+00;
COFD[1294] = -3.70921885E-01;
COFD[1295] = 1.56999324E-02;
COFD[1296] = -1.64305301E+01;
COFD[1297] = 3.86315631E+00;
COFD[1298] = -2.83800980E-01;
COFD[1299] = 1.21619703E-02;
COFD[1300] = -1.64527503E+01;
COFD[1301] = 3.86315631E+00;
COFD[1302] = -2.83800980E-01;
COFD[1303] = 1.21619703E-02;
COFD[1304] = -1.77858093E+01;
COFD[1305] = 4.18471443E+00;
COFD[1306] = -3.22640353E-01;
COFD[1307] = 1.37280239E-02;
COFD[1308] = -2.14098900E+01;
COFD[1309] = 5.30121360E+00;
COFD[1310] = -4.21263162E-01;
COFD[1311] = 1.62329471E-02;
COFD[1312] = -1.77943490E+01;
COFD[1313] = 4.18471443E+00;
COFD[1314] = -3.22640353E-01;
COFD[1315] = 1.37280239E-02;
COFD[1316] = -2.19879513E+01;
COFD[1317] = 5.48342675E+00;
COFD[1318] = -4.57782070E-01;
COFD[1319] = 1.82957850E-02;
COFD[1320] = -2.19981706E+01;
COFD[1321] = 5.48342675E+00;
COFD[1322] = -4.57782070E-01;
COFD[1323] = 1.82957850E-02;
COFD[1324] = -2.01878286E+01;
COFD[1325] = 4.99261696E+00;
COFD[1326] = -4.19495726E-01;
COFD[1327] = 1.76120917E-02;
COFD[1328] = -2.16555839E+01;
COFD[1329] = 5.47509909E+00;
COFD[1330] = -4.54734352E-01;
COFD[1331] = 1.80903154E-02;
COFD[1332] = -1.81241123E+01;
COFD[1333] = 4.31155904E+00;
COFD[1334] = -3.38455014E-01;
COFD[1335] = 1.43877323E-02;
COFD[1336] = -1.81241123E+01;
COFD[1337] = 4.31155904E+00;
COFD[1338] = -3.38455014E-01;
COFD[1339] = 1.43877323E-02;
COFD[1340] = -2.19096275E+01;
COFD[1341] = 5.46291511E+00;
COFD[1342] = -4.65480345E-01;
COFD[1343] = 1.90232930E-02;
COFD[1344] = -1.81334314E+01;
COFD[1345] = 4.31155904E+00;
COFD[1346] = -3.38455014E-01;
COFD[1347] = 1.43877323E-02;
COFD[1348] = -1.62191158E+01;
COFD[1349] = 3.74895195E+00;
COFD[1350] = -2.69976179E-01;
COFD[1351] = 1.16040269E-02;
COFD[1352] = -1.66051152E+01;
COFD[1353] = 3.74895195E+00;
COFD[1354] = -2.69976179E-01;
COFD[1355] = 1.16040269E-02;
COFD[1356] = -1.64001336E+01;
COFD[1357] = 3.86315631E+00;
COFD[1358] = -2.83800980E-01;
COFD[1359] = 1.21619703E-02;
COFD[1360] = -1.63761127E+01;
COFD[1361] = 3.86315631E+00;
COFD[1362] = -2.83800980E-01;
COFD[1363] = 1.21619703E-02;
COFD[1364] = -1.67389257E+01;
COFD[1365] = 3.80352352E+00;
COFD[1366] = -2.76674296E-01;
COFD[1367] = 1.18782923E-02;
COFD[1368] = -2.07261520E+01;
COFD[1369] = 5.14637528E+00;
COFD[1370] = -4.36484093E-01;
COFD[1371] = 1.82327424E-02;
COFD[1372] = -2.19510778E+01;
COFD[1373] = 5.44777707E+00;
COFD[1374] = -4.65239323E-01;
COFD[1375] = 1.90789713E-02;
COFD[1376] = -2.07321809E+01;
COFD[1377] = 5.14637528E+00;
COFD[1378] = -4.36484093E-01;
COFD[1379] = 1.82327424E-02;
COFD[1380] = -2.07321809E+01;
COFD[1381] = 5.14637528E+00;
COFD[1382] = -4.36484093E-01;
COFD[1383] = 1.82327424E-02;
COFD[1384] = -2.07135810E+01;
COFD[1385] = 5.14637528E+00;
COFD[1386] = -4.36484093E-01;
COFD[1387] = 1.82327424E-02;
COFD[1388] = -1.14898855E+01;
COFD[1389] = 2.30236974E+00;
COFD[1390] = -8.78955327E-02;
COFD[1391] = 3.96380921E-03;
COFD[1392] = -2.19096275E+01;
COFD[1393] = 5.46291511E+00;
COFD[1394] = -4.65480345E-01;
COFD[1395] = 1.90232930E-02;
COFD[1396] = -2.21818691E+01;
COFD[1397] = 5.46752046E+00;
COFD[1398] = -4.63419210E-01;
COFD[1399] = 1.88328134E-02;
COFD[1400] = -2.21489275E+01;
COFD[1401] = 5.46752046E+00;
COFD[1402] = -4.63419210E-01;
COFD[1403] = 1.88328134E-02;
COFD[1404] = -1.63529396E+01;
COFD[1405] = 3.86315631E+00;
COFD[1406] = -2.83800980E-01;
COFD[1407] = 1.21619703E-02;
COFD[1408] = -2.20217363E+01;
COFD[1409] = 5.44978020E+00;
COFD[1410] = -4.48659098E-01;
COFD[1411] = 1.77239783E-02;
COFD[1412] = -2.20217363E+01;
COFD[1413] = 5.44978020E+00;
COFD[1414] = -4.48659098E-01;
COFD[1415] = 1.77239783E-02;
COFD[1416] = -1.81334314E+01;
COFD[1417] = 4.31155904E+00;
COFD[1418] = -3.38455014E-01;
COFD[1419] = 1.43877323E-02;
COFD[1420] = -2.21091363E+01;
COFD[1421] = 5.46752046E+00;
COFD[1422] = -4.63419210E-01;
COFD[1423] = 1.88328134E-02;
COFD[1424] = -2.21124678E+01;
COFD[1425] = 5.46752046E+00;
COFD[1426] = -4.63419210E-01;
COFD[1427] = 1.88328134E-02;
COFD[1428] = -1.74370408E+01;
COFD[1429] = 4.06188586E+00;
COFD[1430] = -3.07715468E-01;
COFD[1431] = 1.31226885E-02;
COFD[1432] = -1.86463567E+01;
COFD[1433] = 4.54862236E+00;
COFD[1434] = -3.67096821E-01;
COFD[1435] = 1.55463252E-02;
COFD[1436] = -2.09219786E+01;
COFD[1437] = 5.19204548E+00;
COFD[1438] = -4.40915128E-01;
COFD[1439] = 1.83664930E-02;
COFD[1440] = -2.03779663E+01;
COFD[1441] = 5.02534340E+00;
COFD[1442] = -4.23333855E-01;
COFD[1443] = 1.77624138E-02;
COFD[1444] = -2.01892061E+01;
COFD[1445] = 4.99261696E+00;
COFD[1446] = -4.19495726E-01;
COFD[1447] = 1.76120917E-02;
COFD[1448] = -1.66153326E+01;
COFD[1449] = 3.74895195E+00;
COFD[1450] = -2.69976179E-01;
COFD[1451] = 1.16040269E-02;
COFD[1452] = -1.66153326E+01;
COFD[1453] = 3.74895195E+00;
COFD[1454] = -2.69976179E-01;
COFD[1455] = 1.16040269E-02;
COFD[1456] = -1.92798841E+01;
COFD[1457] = 4.90190161E+00;
COFD[1458] = -4.08908928E-01;
COFD[1459] = 1.71998038E-02;
COFD[1460] = -1.90725207E+01;
COFD[1461] = 3.95772830E+00;
COFD[1462] = -2.12919832E-01;
COFD[1463] = 5.95934214E-03;
COFD[1464] = -2.20247520E+01;
COFD[1465] = 5.46748583E+00;
COFD[1466] = -4.52712497E-01;
COFD[1467] = 1.79643869E-02;
COFD[1468] = -2.03611730E+01;
COFD[1469] = 5.12499506E+00;
COFD[1470] = -4.34164262E-01;
COFD[1471] = 1.81499285E-02;
COFD[1472] = -2.20291011E+01;
COFD[1473] = 5.46748583E+00;
COFD[1474] = -4.52712497E-01;
COFD[1475] = 1.79643869E-02;
COFD[1476] = -2.03712656E+01;
COFD[1477] = 5.13106264E+00;
COFD[1478] = -4.34831442E-01;
COFD[1479] = 1.81741555E-02;
COFD[1480] = -2.20104722E+01;
COFD[1481] = 5.44978020E+00;
COFD[1482] = -4.48659098E-01;
COFD[1483] = 1.77239783E-02;
COFD[1484] = -1.90725207E+01;
COFD[1485] = 3.95772830E+00;
COFD[1486] = -2.12919832E-01;
COFD[1487] = 5.95934214E-03;
COFD[1488] = -2.05770112E+01;
COFD[1489] = 5.19851461E+00;
COFD[1490] = -4.41448461E-01;
COFD[1491] = 1.83776542E-02;
COFD[1492] = -1.57928963E+01;
COFD[1493] = 3.95657450E+00;
COFD[1494] = -2.95018117E-01;
COFD[1495] = 1.26116893E-02;
COFD[1496] = -2.13182781E+01;
COFD[1497] = 5.42583038E+00;
COFD[1498] = -4.65284588E-01;
COFD[1499] = 1.91927319E-02;
COFD[1500] = -1.95948344E+01;
COFD[1501] = 5.44168826E+00;
COFD[1502] = -4.65452072E-01;
COFD[1503] = 1.91268618E-02;
COFD[1504] = -1.92609137E+01;
COFD[1505] = 4.90190161E+00;
COFD[1506] = -4.08908928E-01;
COFD[1507] = 1.71998038E-02;
COFD[1508] = -1.92798841E+01;
COFD[1509] = 4.90190161E+00;
COFD[1510] = -4.08908928E-01;
COFD[1511] = 1.71998038E-02;
COFD[1512] = -2.05840524E+01;
COFD[1513] = 5.19851461E+00;
COFD[1514] = -4.41448461E-01;
COFD[1515] = 1.83776542E-02;
COFD[1516] = -1.86106078E+01;
COFD[1517] = 3.93632699E+00;
COFD[1518] = -2.09772398E-01;
COFD[1519] = 5.80951043E-03;
COFD[1520] = -2.05907680E+01;
COFD[1521] = 5.19851461E+00;
COFD[1522] = -4.41448461E-01;
COFD[1523] = 1.83776542E-02;
COFD[1524] = -1.98801302E+01;
COFD[1525] = 4.34170635E+00;
COFD[1526] = -2.70199437E-01;
COFD[1527] = 8.70997059E-03;
COFD[1528] = -1.98882909E+01;
COFD[1529] = 4.34170635E+00;
COFD[1530] = -2.70199437E-01;
COFD[1531] = 8.70997059E-03;
COFD[1532] = -2.18726617E+01;
COFD[1533] = 5.49119562E+00;
COFD[1534] = -4.61230197E-01;
COFD[1535] = 1.85376198E-02;
COFD[1536] = -1.97232796E+01;
COFD[1537] = 4.43158626E+00;
COFD[1538] = -2.83750498E-01;
COFD[1539] = 9.36547527E-03;
COFD[1540] = -2.08591782E+01;
COFD[1541] = 5.28883639E+00;
COFD[1542] = -4.51325359E-01;
COFD[1543] = 1.87342859E-02;
COFD[1544] = -2.08591782E+01;
COFD[1545] = 5.28883639E+00;
COFD[1546] = -4.51325359E-01;
COFD[1547] = 1.87342859E-02;
COFD[1548] = -2.15319330E+01;
COFD[1549] = 5.08422954E+00;
COFD[1550] = -3.85024067E-01;
COFD[1551] = 1.43625491E-02;
COFD[1552] = -2.08665613E+01;
COFD[1553] = 5.28883639E+00;
COFD[1554] = -4.51325359E-01;
COFD[1555] = 1.87342859E-02;
COFD[1556] = -1.90199042E+01;
COFD[1557] = 4.78118094E+00;
COFD[1558] = -3.95246621E-01;
COFD[1559] = 1.66869495E-02;
COFD[1560] = -1.93676077E+01;
COFD[1561] = 4.78118094E+00;
COFD[1562] = -3.95246621E-01;
COFD[1563] = 1.66869495E-02;
COFD[1564] = -1.92297881E+01;
COFD[1565] = 4.90190161E+00;
COFD[1566] = -4.08908928E-01;
COFD[1567] = 1.71998038E-02;
COFD[1568] = -1.92091472E+01;
COFD[1569] = 4.90190161E+00;
COFD[1570] = -4.08908928E-01;
COFD[1571] = 1.71998038E-02;
COFD[1572] = -1.95197192E+01;
COFD[1573] = 4.83644316E+00;
COFD[1574] = -4.01608859E-01;
COFD[1575] = 1.69307155E-02;
COFD[1576] = -2.20201455E+01;
COFD[1577] = 5.46748583E+00;
COFD[1578] = -4.52712497E-01;
COFD[1579] = 1.79643869E-02;
COFD[1580] = -2.16632143E+01;
COFD[1581] = 5.08860948E+00;
COFD[1582] = -3.85736749E-01;
COFD[1583] = 1.43988247E-02;
COFD[1584] = -2.20247520E+01;
COFD[1585] = 5.46748583E+00;
COFD[1586] = -4.52712497E-01;
COFD[1587] = 1.79643869E-02;
COFD[1588] = -2.20247520E+01;
COFD[1589] = 5.46748583E+00;
COFD[1590] = -4.52712497E-01;
COFD[1591] = 1.79643869E-02;
COFD[1592] = -2.20104985E+01;
COFD[1593] = 5.46748583E+00;
COFD[1594] = -4.52712497E-01;
COFD[1595] = 1.79643869E-02;
COFD[1596] = -1.23391219E+01;
COFD[1597] = 2.61360947E+00;
COFD[1598] = -1.25541800E-01;
COFD[1599] = 5.47045704E-03;
COFD[1600] = -2.15319330E+01;
COFD[1601] = 5.08422954E+00;
COFD[1602] = -3.85024067E-01;
COFD[1603] = 1.43625491E-02;
COFD[1604] = -2.12431735E+01;
COFD[1605] = 4.84340426E+00;
COFD[1606] = -3.46976285E-01;
COFD[1607] = 1.24627164E-02;
COFD[1608] = -2.12198328E+01;
COFD[1609] = 4.84340426E+00;
COFD[1610] = -3.46976285E-01;
COFD[1611] = 1.24627164E-02;
COFD[1612] = -1.91937442E+01;
COFD[1613] = 4.90190161E+00;
COFD[1614] = -4.08908928E-01;
COFD[1615] = 1.71998038E-02;
COFD[1616] = -1.90815916E+01;
COFD[1617] = 3.95772830E+00;
COFD[1618] = -2.12919832E-01;
COFD[1619] = 5.95934214E-03;
COFD[1620] = -1.90815916E+01;
COFD[1621] = 3.95772830E+00;
COFD[1622] = -2.12919832E-01;
COFD[1623] = 5.95934214E-03;
COFD[1624] = -2.08665613E+01;
COFD[1625] = 5.28883639E+00;
COFD[1626] = -4.51325359E-01;
COFD[1627] = 1.87342859E-02;
COFD[1628] = -2.11910506E+01;
COFD[1629] = 4.84340426E+00;
COFD[1630] = -3.46976285E-01;
COFD[1631] = 1.24627164E-02;
COFD[1632] = -2.11934846E+01;
COFD[1633] = 4.84340426E+00;
COFD[1634] = -3.46976285E-01;
COFD[1635] = 1.24627164E-02;
COFD[1636] = -2.03446027E+01;
COFD[1637] = 5.12499506E+00;
COFD[1638] = -4.34164262E-01;
COFD[1639] = 1.81499285E-02;
COFD[1640] = -2.12540235E+01;
COFD[1641] = 5.43685814E+00;
COFD[1642] = -4.65636659E-01;
COFD[1643] = 1.91663012E-02;
COFD[1644] = -2.20815434E+01;
COFD[1645] = 5.44442134E+00;
COFD[1646] = -4.47436658E-01;
COFD[1647] = 1.76514728E-02;
COFD[1648] = -2.20100065E+01;
COFD[1649] = 5.48895644E+00;
COFD[1650] = -4.60008770E-01;
COFD[1651] = 1.84492699E-02;
COFD[1652] = -2.18997295E+01;
COFD[1653] = 5.49119562E+00;
COFD[1654] = -4.61230197E-01;
COFD[1655] = 1.85376198E-02;
COFD[1656] = -1.93757667E+01;
COFD[1657] = 4.78118094E+00;
COFD[1658] = -3.95246621E-01;
COFD[1659] = 1.66869495E-02;
COFD[1660] = -1.93757667E+01;
COFD[1661] = 4.78118094E+00;
COFD[1662] = -3.95246621E-01;
COFD[1663] = 1.66869495E-02;
COFD[1664] = -1.39004163E+01;
COFD[1665] = 2.98298723E+00;
COFD[1666] = -1.73428215E-01;
COFD[1667] = 7.54224684E-03;
COFD[1668] = -2.05770112E+01;
COFD[1669] = 5.19851461E+00;
COFD[1670] = -4.41448461E-01;
COFD[1671] = 1.83776542E-02;
COFD[1672] = -1.76083599E+01;
COFD[1673] = 4.11950819E+00;
COFD[1674] = -3.14655711E-01;
COFD[1675] = 1.34014626E-02;
COFD[1676] = -1.48313878E+01;
COFD[1677] = 3.16773813E+00;
COFD[1678] = -1.96823168E-01;
COFD[1679] = 8.53058072E-03;
COFD[1680] = -1.76131700E+01;
COFD[1681] = 4.11950819E+00;
COFD[1682] = -3.14655711E-01;
COFD[1683] = 1.34014626E-02;
COFD[1684] = -1.48406309E+01;
COFD[1685] = 3.17494843E+00;
COFD[1686] = -1.97752410E-01;
COFD[1687] = 8.57054106E-03;
COFD[1688] = -1.77768887E+01;
COFD[1689] = 4.18471443E+00;
COFD[1690] = -3.22640353E-01;
COFD[1691] = 1.37280239E-02;
COFD[1692] = -2.05770112E+01;
COFD[1693] = 5.19851461E+00;
COFD[1694] = -4.41448461E-01;
COFD[1695] = 1.83776542E-02;
COFD[1696] = -1.50981757E+01;
COFD[1697] = 3.27853241E+00;
COFD[1698] = -2.10970532E-01;
COFD[1699] = 9.13336403E-03;
COFD[1700] = -1.12814363E+01;
COFD[1701] = 2.30017030E+00;
COFD[1702] = -8.34928497E-02;
COFD[1703] = 3.58611589E-03;
COFD[1704] = -1.57532700E+01;
COFD[1705] = 3.50974553E+00;
COFD[1706] = -2.39671533E-01;
COFD[1707] = 1.03219510E-02;
COFD[1708] = -1.41183749E+01;
COFD[1709] = 3.59720720E+00;
COFD[1710] = -2.50852412E-01;
COFD[1711] = 1.07992653E-02;
COFD[1712] = -1.38802589E+01;
COFD[1713] = 2.98298723E+00;
COFD[1714] = -1.73428215E-01;
COFD[1715] = 7.54224684E-03;
COFD[1716] = -1.39004163E+01;
COFD[1717] = 2.98298723E+00;
COFD[1718] = -1.73428215E-01;
COFD[1719] = 7.54224684E-03;
COFD[1720] = -1.51058696E+01;
COFD[1721] = 3.27853241E+00;
COFD[1722] = -2.10970532E-01;
COFD[1723] = 9.13336403E-03;
COFD[1724] = -2.08507538E+01;
COFD[1725] = 5.41592516E+00;
COFD[1726] = -4.64640996E-01;
COFD[1727] = 1.91895972E-02;
COFD[1728] = -1.51132171E+01;
COFD[1729] = 3.27853241E+00;
COFD[1730] = -2.10970532E-01;
COFD[1731] = 9.13336403E-03;
COFD[1732] = -2.02330474E+01;
COFD[1733] = 5.09185655E+00;
COFD[1734] = -4.30641631E-01;
COFD[1735] = 1.80275784E-02;
COFD[1736] = -2.02419285E+01;
COFD[1737] = 5.09185655E+00;
COFD[1738] = -4.30641631E-01;
COFD[1739] = 1.80275784E-02;
COFD[1740] = -1.70494293E+01;
COFD[1741] = 3.94998946E+00;
COFD[1742] = -2.94215257E-01;
COFD[1743] = 1.25789510E-02;
COFD[1744] = -2.00945931E+01;
COFD[1745] = 5.15838205E+00;
COFD[1746] = -4.37782020E-01;
COFD[1747] = 1.82788934E-02;
COFD[1748] = -1.53273699E+01;
COFD[1749] = 3.36125353E+00;
COFD[1750] = -2.21308349E-01;
COFD[1751] = 9.56431936E-03;
COFD[1752] = -1.53273699E+01;
COFD[1753] = 3.36125353E+00;
COFD[1754] = -2.21308349E-01;
COFD[1755] = 9.56431936E-03;
COFD[1756] = -1.94697438E+01;
COFD[1757] = 4.76361685E+00;
COFD[1758] = -3.93208188E-01;
COFD[1759] = 1.66081354E-02;
COFD[1760] = -1.53354270E+01;
COFD[1761] = 3.36125353E+00;
COFD[1762] = -2.21308349E-01;
COFD[1763] = 9.56431936E-03;
COFD[1764] = -1.37252376E+01;
COFD[1765] = 2.87937412E+00;
COFD[1766] = -1.60161971E-01;
COFD[1767] = 6.97536928E-03;
COFD[1768] = -1.40910557E+01;
COFD[1769] = 2.87937412E+00;
COFD[1770] = -1.60161971E-01;
COFD[1771] = 6.97536928E-03;
COFD[1772] = -1.38482796E+01;
COFD[1773] = 2.98298723E+00;
COFD[1774] = -1.73428215E-01;
COFD[1775] = 7.54224684E-03;
COFD[1776] = -1.38263990E+01;
COFD[1777] = 2.98298723E+00;
COFD[1778] = -1.73428215E-01;
COFD[1779] = 7.54224684E-03;
COFD[1780] = -1.42046439E+01;
COFD[1781] = 2.92706247E+00;
COFD[1782] = -1.66320963E-01;
COFD[1783] = 7.24082478E-03;
COFD[1784] = -1.76032698E+01;
COFD[1785] = 4.11950819E+00;
COFD[1786] = -3.14655711E-01;
COFD[1787] = 1.34014626E-02;
COFD[1788] = -1.93379314E+01;
COFD[1789] = 4.67401892E+00;
COFD[1790] = -3.82438975E-01;
COFD[1791] = 1.61749699E-02;
COFD[1792] = -1.76083599E+01;
COFD[1793] = 4.11950819E+00;
COFD[1794] = -3.14655711E-01;
COFD[1795] = 1.34014626E-02;
COFD[1796] = -1.76083599E+01;
COFD[1797] = 4.11950819E+00;
COFD[1798] = -3.14655711E-01;
COFD[1799] = 1.34014626E-02;
COFD[1800] = -1.75926259E+01;
COFD[1801] = 4.11950819E+00;
COFD[1802] = -3.14655711E-01;
COFD[1803] = 1.34014626E-02;
COFD[1804] = -1.00964417E+01;
COFD[1805] = 1.80154868E+00;
COFD[1806] = -1.93107773E-02;
COFD[1807] = 8.41365140E-04;
COFD[1808] = -1.94697438E+01;
COFD[1809] = 4.76361685E+00;
COFD[1810] = -3.93208188E-01;
COFD[1811] = 1.66081354E-02;
COFD[1812] = -1.98814388E+01;
COFD[1813] = 4.84483615E+00;
COFD[1814] = -4.02575093E-01;
COFD[1815] = 1.69677331E-02;
COFD[1816] = -1.98549949E+01;
COFD[1817] = 4.84483615E+00;
COFD[1818] = -4.02575093E-01;
COFD[1819] = 1.69677331E-02;
COFD[1820] = -1.38092498E+01;
COFD[1821] = 2.98298723E+00;
COFD[1822] = -1.73428215E-01;
COFD[1823] = 7.54224684E-03;
COFD[1824] = -2.05868537E+01;
COFD[1825] = 5.19851461E+00;
COFD[1826] = -4.41448461E-01;
COFD[1827] = 1.83776542E-02;
COFD[1828] = -2.05868537E+01;
COFD[1829] = 5.19851461E+00;
COFD[1830] = -4.41448461E-01;
COFD[1831] = 1.83776542E-02;
COFD[1832] = -1.53354270E+01;
COFD[1833] = 3.36125353E+00;
COFD[1834] = -2.21308349E-01;
COFD[1835] = 9.56431936E-03;
COFD[1836] = -1.98226046E+01;
COFD[1837] = 4.84483615E+00;
COFD[1838] = -4.02575093E-01;
COFD[1839] = 1.69677331E-02;
COFD[1840] = -1.98253347E+01;
COFD[1841] = 4.84483615E+00;
COFD[1842] = -4.02575093E-01;
COFD[1843] = 1.69677331E-02;
COFD[1844] = -1.48133685E+01;
COFD[1845] = 3.16773813E+00;
COFD[1846] = -1.96823168E-01;
COFD[1847] = 8.53058072E-03;
COFD[1848] = -1.57555863E+01;
COFD[1849] = 3.56140952E+00;
COFD[1850] = -2.46282892E-01;
COFD[1851] = 1.06044757E-02;
COFD[1852] = -1.79002453E+01;
COFD[1853] = 4.20508193E+00;
COFD[1854] = -3.25158699E-01;
COFD[1855] = 1.38321131E-02;
COFD[1856] = -1.72362340E+01;
COFD[1857] = 3.97457749E+00;
COFD[1858] = -2.97207135E-01;
COFD[1859] = 1.27006632E-02;
COFD[1860] = -1.70709732E+01;
COFD[1861] = 3.94998946E+00;
COFD[1862] = -2.94215257E-01;
COFD[1863] = 1.25789510E-02;
COFD[1864] = -1.40999350E+01;
COFD[1865] = 2.87937412E+00;
COFD[1866] = -1.60161971E-01;
COFD[1867] = 6.97536928E-03;
COFD[1868] = -1.40999350E+01;
COFD[1869] = 2.87937412E+00;
COFD[1870] = -1.60161971E-01;
COFD[1871] = 6.97536928E-03;
COFD[1872] = -1.06286607E+01;
COFD[1873] = 2.15819366E+00;
COFD[1874] = -6.52830580E-02;
COFD[1875] = 2.80657258E-03;
COFD[1876] = -1.57928963E+01;
COFD[1877] = 3.95657450E+00;
COFD[1878] = -2.95018117E-01;
COFD[1879] = 1.26116893E-02;
COFD[1880] = -1.32537150E+01;
COFD[1881] = 3.00584146E+00;
COFD[1882] = -1.76313628E-01;
COFD[1883] = 7.66376173E-03;
COFD[1884] = -1.11094036E+01;
COFD[1885] = 2.21467976E+00;
COFD[1886] = -7.20501534E-02;
COFD[1887] = 3.07515437E-03;
COFD[1888] = -1.32542177E+01;
COFD[1889] = 3.00584146E+00;
COFD[1890] = -1.76313628E-01;
COFD[1891] = 7.66376173E-03;
COFD[1892] = -1.11288741E+01;
COFD[1893] = 2.21964693E+00;
COFD[1894] = -7.27132181E-02;
COFD[1895] = 3.10467640E-03;
COFD[1896] = -1.33494517E+01;
COFD[1897] = 3.04769365E+00;
COFD[1898] = -1.81586731E-01;
COFD[1899] = 7.88540063E-03;
COFD[1900] = -1.57928963E+01;
COFD[1901] = 3.95657450E+00;
COFD[1902] = -2.95018117E-01;
COFD[1903] = 1.26116893E-02;
COFD[1904] = -1.12814363E+01;
COFD[1905] = 2.30017030E+00;
COFD[1906] = -8.34928497E-02;
COFD[1907] = 3.58611589E-03;
COFD[1908] = -9.78882649E+00;
COFD[1909] = 1.95527707E+00;
COFD[1910] = -4.07233312E-02;
COFD[1911] = 1.83285363E-03;
COFD[1912] = -1.17868360E+01;
COFD[1913] = 2.50982230E+00;
COFD[1914] = -1.11658803E-01;
COFD[1915] = 4.85020269E-03;
COFD[1916] = -1.09419421E+01;
COFD[1917] = 2.56365104E+00;
COFD[1918] = -1.18913262E-01;
COFD[1919] = 5.17669825E-03;
COFD[1920] = -1.06253333E+01;
COFD[1921] = 2.15819366E+00;
COFD[1922] = -6.52830580E-02;
COFD[1923] = 2.80657258E-03;
COFD[1924] = -1.06286607E+01;
COFD[1925] = 2.15819366E+00;
COFD[1926] = -6.52830580E-02;
COFD[1927] = 2.80657258E-03;
COFD[1928] = -1.12823422E+01;
COFD[1929] = 2.30017030E+00;
COFD[1930] = -8.34928497E-02;
COFD[1931] = 3.58611589E-03;
COFD[1932] = -1.65320372E+01;
COFD[1933] = 4.34135715E+00;
COFD[1934] = -3.42166667E-01;
COFD[1935] = 1.45425451E-02;
COFD[1936] = -1.12831958E+01;
COFD[1937] = 2.30017030E+00;
COFD[1938] = -8.34928497E-02;
COFD[1939] = 3.58611589E-03;
COFD[1940] = -1.54350257E+01;
COFD[1941] = 3.83529069E+00;
COFD[1942] = -2.80481778E-01;
COFD[1943] = 1.20302770E-02;
COFD[1944] = -1.54361173E+01;
COFD[1945] = 3.83529069E+00;
COFD[1946] = -2.80481778E-01;
COFD[1947] = 1.20302770E-02;
COFD[1948] = -1.27891150E+01;
COFD[1949] = 2.86989894E+00;
COFD[1950] = -1.58928038E-01;
COFD[1951] = 6.92176252E-03;
COFD[1952] = -1.54914778E+01;
COFD[1953] = 3.93394014E+00;
COFD[1954] = -2.92267339E-01;
COFD[1955] = 1.24999144E-02;
COFD[1956] = -1.14841469E+01;
COFD[1957] = 2.37509888E+00;
COFD[1958] = -9.35410216E-02;
COFD[1959] = 4.03605551E-03;
COFD[1960] = -1.14841469E+01;
COFD[1961] = 2.37509888E+00;
COFD[1962] = -9.35410216E-02;
COFD[1963] = 4.03605551E-03;
COFD[1964] = -1.46300048E+01;
COFD[1965] = 3.49269849E+00;
COFD[1966] = -2.37487444E-01;
COFD[1967] = 1.02285147E-02;
COFD[1968] = -1.14851085E+01;
COFD[1969] = 2.37509888E+00;
COFD[1970] = -9.35410216E-02;
COFD[1971] = 4.03605551E-03;
COFD[1972] = -1.10204977E+01;
COFD[1973] = 2.26529435E+00;
COFD[1974] = -8.17536844E-02;
COFD[1975] = 3.63649607E-03;
COFD[1976] = -1.12088370E+01;
COFD[1977] = 2.26529435E+00;
COFD[1978] = -8.17536844E-02;
COFD[1979] = 3.63649607E-03;
COFD[1980] = -1.05898290E+01;
COFD[1981] = 2.15819366E+00;
COFD[1982] = -6.52830580E-02;
COFD[1983] = 2.80657258E-03;
COFD[1984] = -1.05860917E+01;
COFD[1985] = 2.15819366E+00;
COFD[1986] = -6.52830580E-02;
COFD[1987] = 2.80657258E-03;
COFD[1988] = -1.09872152E+01;
COFD[1989] = 2.15703817E+00;
COFD[1990] = -6.55910408E-02;
COFD[1991] = 2.84055596E-03;
COFD[1992] = -1.32531784E+01;
COFD[1993] = 3.00584146E+00;
COFD[1994] = -1.76313628E-01;
COFD[1995] = 7.66376173E-03;
COFD[1996] = -1.45101897E+01;
COFD[1997] = 3.40975263E+00;
COFD[1998] = -2.27236279E-01;
COFD[1999] = 9.80574711E-03;
COFD[2000] = -1.32537150E+01;
COFD[2001] = 3.00584146E+00;
COFD[2002] = -1.76313628E-01;
COFD[2003] = 7.66376173E-03;
COFD[2004] = -1.32537150E+01;
COFD[2005] = 3.00584146E+00;
COFD[2006] = -1.76313628E-01;
COFD[2007] = 7.66376173E-03;
COFD[2008] = -1.32520404E+01;
COFD[2009] = 3.00584146E+00;
COFD[2010] = -1.76313628E-01;
COFD[2011] = 7.66376173E-03;
COFD[2012] = -9.97002631E+00;
COFD[2013] = 2.09989861E+00;
COFD[2014] = -6.57792049E-02;
COFD[2015] = 3.22150287E-03;
COFD[2016] = -1.46300048E+01;
COFD[2017] = 3.49269849E+00;
COFD[2018] = -2.37487444E-01;
COFD[2019] = 1.02285147E-02;
COFD[2020] = -1.48946762E+01;
COFD[2021] = 3.56409697E+00;
COFD[2022] = -2.46625546E-01;
COFD[2023] = 1.06190657E-02;
COFD[2024] = -1.48924248E+01;
COFD[2025] = 3.56409697E+00;
COFD[2026] = -2.46625546E-01;
COFD[2027] = 1.06190657E-02;
COFD[2028] = -1.06126871E+01;
COFD[2029] = 2.15819366E+00;
COFD[2030] = -6.52830580E-02;
COFD[2031] = 2.80657258E-03;
COFD[2032] = -1.57941459E+01;
COFD[2033] = 3.95657450E+00;
COFD[2034] = -2.95018117E-01;
COFD[2035] = 1.26116893E-02;
COFD[2036] = -1.57941459E+01;
COFD[2037] = 3.95657450E+00;
COFD[2038] = -2.95018117E-01;
COFD[2039] = 1.26116893E-02;
COFD[2040] = -1.14851085E+01;
COFD[2041] = 2.37509888E+00;
COFD[2042] = -9.35410216E-02;
COFD[2043] = 4.03605551E-03;
COFD[2044] = -1.48895149E+01;
COFD[2045] = 3.56409697E+00;
COFD[2046] = -2.46625546E-01;
COFD[2047] = 1.06190657E-02;
COFD[2048] = -1.48897669E+01;
COFD[2049] = 3.56409697E+00;
COFD[2050] = -2.46625546E-01;
COFD[2051] = 1.06190657E-02;
COFD[2052] = -1.11071703E+01;
COFD[2053] = 2.21467976E+00;
COFD[2054] = -7.20501534E-02;
COFD[2055] = 3.07515437E-03;
COFD[2056] = -1.19609478E+01;
COFD[2057] = 2.54091639E+00;
COFD[2058] = -1.15850475E-01;
COFD[2059] = 5.03893346E-03;
COFD[2060] = -1.35411048E+01;
COFD[2061] = 3.05984388E+00;
COFD[2062] = -1.83114865E-01;
COFD[2063] = 7.94950068E-03;
COFD[2064] = -1.30624677E+01;
COFD[2065] = 2.89523765E+00;
COFD[2066] = -1.62218987E-01;
COFD[2067] = 7.06438445E-03;
COFD[2068] = -1.28999767E+01;
COFD[2069] = 2.86989894E+00;
COFD[2070] = -1.58928038E-01;
COFD[2071] = 6.92176252E-03;
COFD[2072] = -1.12099283E+01;
COFD[2073] = 2.26529435E+00;
COFD[2074] = -8.17536844E-02;
COFD[2075] = 3.63649607E-03;
COFD[2076] = -1.12099283E+01;
COFD[2077] = 2.26529435E+00;
COFD[2078] = -8.17536844E-02;
COFD[2079] = 3.63649607E-03;
COFD[2080] = -1.45329520E+01;
COFD[2081] = 3.21910603E+00;
COFD[2082] = -2.03442081E-01;
COFD[2083] = 8.81515218E-03;
COFD[2084] = -2.13182781E+01;
COFD[2085] = 5.42583038E+00;
COFD[2086] = -4.65284588E-01;
COFD[2087] = 1.91927319E-02;
COFD[2088] = -1.85669389E+01;
COFD[2089] = 4.45677518E+00;
COFD[2090] = -3.56271969E-01;
COFD[2091] = 1.51199595E-02;
COFD[2092] = -1.55155212E+01;
COFD[2093] = 3.41295809E+00;
COFD[2094] = -2.27626583E-01;
COFD[2095] = 9.82158260E-03;
COFD[2096] = -1.85723724E+01;
COFD[2097] = 4.45677518E+00;
COFD[2098] = -3.56271969E-01;
COFD[2099] = 1.51199595E-02;
COFD[2100] = -1.55177889E+01;
COFD[2101] = 3.41787106E+00;
COFD[2102] = -2.28225407E-01;
COFD[2103] = 9.84590642E-03;
COFD[2104] = -1.87105665E+01;
COFD[2105] = 4.51083589E+00;
COFD[2106] = -3.62668743E-01;
COFD[2107] = 1.53729786E-02;
COFD[2108] = -2.13182781E+01;
COFD[2109] = 5.42583038E+00;
COFD[2110] = -4.65284588E-01;
COFD[2111] = 1.91927319E-02;
COFD[2112] = -1.57532700E+01;
COFD[2113] = 3.50974553E+00;
COFD[2114] = -2.39671533E-01;
COFD[2115] = 1.03219510E-02;
COFD[2116] = -1.17868360E+01;
COFD[2117] = 2.50982230E+00;
COFD[2118] = -1.11658803E-01;
COFD[2119] = 4.85020269E-03;
COFD[2120] = -1.66187963E+01;
COFD[2121] = 3.82058833E+00;
COFD[2122] = -2.78718863E-01;
COFD[2123] = 1.19598617E-02;
COFD[2124] = -1.48437362E+01;
COFD[2125] = 3.87530644E+00;
COFD[2126] = -2.85245928E-01;
COFD[2127] = 1.22192406E-02;
COFD[2128] = -1.45113307E+01;
COFD[2129] = 3.21910603E+00;
COFD[2130] = -2.03442081E-01;
COFD[2131] = 8.81515218E-03;
COFD[2132] = -1.45329520E+01;
COFD[2133] = 3.21910603E+00;
COFD[2134] = -2.03442081E-01;
COFD[2135] = 8.81515218E-03;
COFD[2136] = -1.57618215E+01;
COFD[2137] = 3.50974553E+00;
COFD[2138] = -2.39671533E-01;
COFD[2139] = 1.03219510E-02;
COFD[2140] = -2.08796817E+01;
COFD[2141] = 5.42825002E+00;
COFD[2142] = -4.65423681E-01;
COFD[2143] = 1.91920177E-02;
COFD[2144] = -1.57700020E+01;
COFD[2145] = 3.50974553E+00;
COFD[2146] = -2.39671533E-01;
COFD[2147] = 1.03219510E-02;
COFD[2148] = -2.09600405E+01;
COFD[2149] = 5.31589192E+00;
COFD[2150] = -4.54344889E-01;
COFD[2151] = 1.88463890E-02;
COFD[2152] = -2.09698593E+01;
COFD[2153] = 5.31589192E+00;
COFD[2154] = -4.54344889E-01;
COFD[2155] = 1.88463890E-02;
COFD[2156] = -1.79027363E+01;
COFD[2157] = 4.24498090E+00;
COFD[2158] = -3.30123845E-01;
COFD[2159] = 1.40388009E-02;
COFD[2160] = -2.04615561E+01;
COFD[2161] = 5.27516202E+00;
COFD[2162] = -4.49784854E-01;
COFD[2163] = 1.86764670E-02;
COFD[2164] = -1.60767172E+01;
COFD[2165] = 3.63047782E+00;
COFD[2166] = -2.55092110E-01;
COFD[2167] = 1.09796900E-02;
COFD[2168] = -1.60767172E+01;
COFD[2169] = 3.63047782E+00;
COFD[2170] = -2.55092110E-01;
COFD[2171] = 1.09796900E-02;
COFD[2172] = -2.00888847E+01;
COFD[2173] = 4.96384472E+00;
COFD[2174] = -4.16107673E-01;
COFD[2175] = 1.74787619E-02;
COFD[2176] = -1.60856572E+01;
COFD[2177] = 3.63047782E+00;
COFD[2178] = -2.55092110E-01;
COFD[2179] = 1.09796900E-02;
COFD[2180] = -1.42859349E+01;
COFD[2181] = 3.08809301E+00;
COFD[2182] = -1.86635579E-01;
COFD[2183] = 8.09582723E-03;
COFD[2184] = -1.46728819E+01;
COFD[2185] = 3.08809301E+00;
COFD[2186] = -1.86635579E-01;
COFD[2187] = 8.09582723E-03;
COFD[2188] = -1.44786974E+01;
COFD[2189] = 3.21910603E+00;
COFD[2190] = -2.03442081E-01;
COFD[2191] = 8.81515218E-03;
COFD[2192] = -1.44552961E+01;
COFD[2193] = 3.21910603E+00;
COFD[2194] = -2.03442081E-01;
COFD[2195] = 8.81515218E-03;
COFD[2196] = -1.47954210E+01;
COFD[2197] = 3.13965685E+00;
COFD[2198] = -1.93213276E-01;
COFD[2199] = 8.37577892E-03;
COFD[2200] = -1.85611967E+01;
COFD[2201] = 4.45677518E+00;
COFD[2202] = -3.56271969E-01;
COFD[2203] = 1.51199595E-02;
COFD[2204] = -2.02102361E+01;
COFD[2205] = 4.95999803E+00;
COFD[2206] = -4.15656064E-01;
COFD[2207] = 1.74610534E-02;
COFD[2208] = -1.85669389E+01;
COFD[2209] = 4.45677518E+00;
COFD[2210] = -3.56271969E-01;
COFD[2211] = 1.51199595E-02;
COFD[2212] = -1.85669389E+01;
COFD[2213] = 4.45677518E+00;
COFD[2214] = -3.56271969E-01;
COFD[2215] = 1.51199595E-02;
COFD[2216] = -1.85492130E+01;
COFD[2217] = 4.45677518E+00;
COFD[2218] = -3.56271969E-01;
COFD[2219] = 1.51199595E-02;
COFD[2220] = -1.04249896E+01;
COFD[2221] = 1.94512965E+00;
COFD[2222] = -3.93510095E-02;
COFD[2223] = 1.77030865E-03;
COFD[2224] = -2.00888847E+01;
COFD[2225] = 4.96384472E+00;
COFD[2226] = -4.16107673E-01;
COFD[2227] = 1.74787619E-02;
COFD[2228] = -2.07240365E+01;
COFD[2229] = 5.10938713E+00;
COFD[2230] = -4.32476478E-01;
COFD[2231] = 1.80899364E-02;
COFD[2232] = -2.06931494E+01;
COFD[2233] = 5.10938713E+00;
COFD[2234] = -4.32476478E-01;
COFD[2235] = 1.80899364E-02;
COFD[2236] = -1.44356393E+01;
COFD[2237] = 3.21910603E+00;
COFD[2238] = -2.03442081E-01;
COFD[2239] = 8.81515218E-03;
COFD[2240] = -2.13291184E+01;
COFD[2241] = 5.42583038E+00;
COFD[2242] = -4.65284588E-01;
COFD[2243] = 1.91927319E-02;
COFD[2244] = -2.13291184E+01;
COFD[2245] = 5.42583038E+00;
COFD[2246] = -4.65284588E-01;
COFD[2247] = 1.91927319E-02;
COFD[2248] = -1.60856572E+01;
COFD[2249] = 3.63047782E+00;
COFD[2250] = -2.55092110E-01;
COFD[2251] = 1.09796900E-02;
COFD[2252] = -2.06556759E+01;
COFD[2253] = 5.10938713E+00;
COFD[2254] = -4.32476478E-01;
COFD[2255] = 1.80899364E-02;
COFD[2256] = -2.06588199E+01;
COFD[2257] = 5.10938713E+00;
COFD[2258] = -4.32476478E-01;
COFD[2259] = 1.80899364E-02;
COFD[2260] = -1.54956188E+01;
COFD[2261] = 3.41295809E+00;
COFD[2262] = -2.27626583E-01;
COFD[2263] = 9.82158260E-03;
COFD[2264] = -1.65553272E+01;
COFD[2265] = 3.85326861E+00;
COFD[2266] = -2.82628431E-01;
COFD[2267] = 1.21156819E-02;
COFD[2268] = -1.88136421E+01;
COFD[2269] = 4.52571936E+00;
COFD[2270] = -3.64403779E-01;
COFD[2271] = 1.54404961E-02;
COFD[2272] = -1.81182878E+01;
COFD[2273] = 4.28329304E+00;
COFD[2274] = -3.34906965E-01;
COFD[2275] = 1.42386421E-02;
COFD[2276] = -1.79154526E+01;
COFD[2277] = 4.24498090E+00;
COFD[2278] = -3.30123845E-01;
COFD[2279] = 1.40388009E-02;
COFD[2280] = -1.46826989E+01;
COFD[2281] = 3.08809301E+00;
COFD[2282] = -1.86635579E-01;
COFD[2283] = 8.09582723E-03;
COFD[2284] = -1.46826989E+01;
COFD[2285] = 3.08809301E+00;
COFD[2286] = -1.86635579E-01;
COFD[2287] = 8.09582723E-03;
COFD[2288] = -1.29727324E+01;
COFD[2289] = 3.28440910E+00;
COFD[2290] = -2.11707534E-01;
COFD[2291] = 9.16419558E-03;
COFD[2292] = -1.95948344E+01;
COFD[2293] = 5.44168826E+00;
COFD[2294] = -4.65452072E-01;
COFD[2295] = 1.91268618E-02;
COFD[2296] = -1.68421339E+01;
COFD[2297] = 4.52301031E+00;
COFD[2298] = -3.64086327E-01;
COFD[2299] = 1.54280659E-02;
COFD[2300] = -1.38233396E+01;
COFD[2301] = 3.46560000E+00;
COFD[2302] = -2.34075114E-01;
COFD[2303] = 1.00849661E-02;
COFD[2304] = -1.68423909E+01;
COFD[2305] = 4.52301031E+00;
COFD[2306] = -3.64086327E-01;
COFD[2307] = 1.54280659E-02;
COFD[2308] = -1.38467772E+01;
COFD[2309] = 3.47073417E+00;
COFD[2310] = -2.34706158E-01;
COFD[2311] = 1.01108517E-02;
COFD[2312] = -1.69855851E+01;
COFD[2313] = 4.58049527E+00;
COFD[2314] = -3.70921885E-01;
COFD[2315] = 1.56999324E-02;
COFD[2316] = -1.95948344E+01;
COFD[2317] = 5.44168826E+00;
COFD[2318] = -4.65452072E-01;
COFD[2319] = 1.91268618E-02;
COFD[2320] = -1.41183749E+01;
COFD[2321] = 3.59720720E+00;
COFD[2322] = -2.50852412E-01;
COFD[2323] = 1.07992653E-02;
COFD[2324] = -1.09419421E+01;
COFD[2325] = 2.56365104E+00;
COFD[2326] = -1.18913262E-01;
COFD[2327] = 5.17669825E-03;
COFD[2328] = -1.48437362E+01;
COFD[2329] = 3.87530644E+00;
COFD[2330] = -2.85245928E-01;
COFD[2331] = 1.22192406E-02;
COFD[2332] = -1.41218850E+01;
COFD[2333] = 3.92946227E+00;
COFD[2334] = -2.91729340E-01;
COFD[2335] = 1.24783320E-02;
COFD[2336] = -1.29709728E+01;
COFD[2337] = 3.28440910E+00;
COFD[2338] = -2.11707534E-01;
COFD[2339] = 9.16419558E-03;
COFD[2340] = -1.29727324E+01;
COFD[2341] = 3.28440910E+00;
COFD[2342] = -2.11707534E-01;
COFD[2343] = 9.16419558E-03;
COFD[2344] = -1.41188415E+01;
COFD[2345] = 3.59720720E+00;
COFD[2346] = -2.50852412E-01;
COFD[2347] = 1.07992653E-02;
COFD[2348] = -1.91953111E+01;
COFD[2349] = 5.44274135E+00;
COFD[2350] = -4.65397833E-01;
COFD[2351] = 1.91171363E-02;
COFD[2352] = -1.41192808E+01;
COFD[2353] = 3.59720720E+00;
COFD[2354] = -2.50852412E-01;
COFD[2355] = 1.07992653E-02;
COFD[2356] = -1.93167278E+01;
COFD[2357] = 5.37588635E+00;
COFD[2358] = -4.60762834E-01;
COFD[2359] = 1.90722493E-02;
COFD[2360] = -1.93172916E+01;
COFD[2361] = 5.37588635E+00;
COFD[2362] = -4.60762834E-01;
COFD[2363] = 1.90722493E-02;
COFD[2364] = -1.62068677E+01;
COFD[2365] = 4.33926971E+00;
COFD[2366] = -3.41907355E-01;
COFD[2367] = 1.45317558E-02;
COFD[2368] = -1.89481451E+01;
COFD[2369] = 5.34360281E+00;
COFD[2370] = -4.57384674E-01;
COFD[2371] = 1.89568876E-02;
COFD[2372] = -1.44429294E+01;
COFD[2373] = 3.71325476E+00;
COFD[2374] = -2.65538326E-01;
COFD[2375] = 1.14199023E-02;
COFD[2376] = -1.44429294E+01;
COFD[2377] = 3.71325476E+00;
COFD[2378] = -2.65538326E-01;
COFD[2379] = 1.14199023E-02;
COFD[2380] = -1.83921909E+01;
COFD[2381] = 5.04400884E+00;
COFD[2382] = -4.25512519E-01;
COFD[2383] = 1.78473004E-02;
COFD[2384] = -1.44434251E+01;
COFD[2385] = 3.71325476E+00;
COFD[2386] = -2.65538326E-01;
COFD[2387] = 1.14199023E-02;
COFD[2388] = -1.28316361E+01;
COFD[2389] = 3.15334729E+00;
COFD[2390] = -1.94972021E-01;
COFD[2391] = 8.45114576E-03;
COFD[2392] = -1.30280651E+01;
COFD[2393] = 3.15334729E+00;
COFD[2394] = -1.94972021E-01;
COFD[2395] = 8.45114576E-03;
COFD[2396] = -1.29289104E+01;
COFD[2397] = 3.28440910E+00;
COFD[2398] = -2.11707534E-01;
COFD[2399] = 9.16419558E-03;
COFD[2400] = -1.29269277E+01;
COFD[2401] = 3.28440910E+00;
COFD[2402] = -2.11707534E-01;
COFD[2403] = 9.16419558E-03;
COFD[2404] = -1.32072236E+01;
COFD[2405] = 3.21416496E+00;
COFD[2406] = -2.02807281E-01;
COFD[2407] = 8.78793759E-03;
COFD[2408] = -1.68418594E+01;
COFD[2409] = 4.52301031E+00;
COFD[2410] = -3.64086327E-01;
COFD[2411] = 1.54280659E-02;
COFD[2412] = -1.85150083E+01;
COFD[2413] = 5.04034608E+00;
COFD[2414] = -4.25085381E-01;
COFD[2415] = 1.78306733E-02;
COFD[2416] = -1.68421339E+01;
COFD[2417] = 4.52301031E+00;
COFD[2418] = -3.64086327E-01;
COFD[2419] = 1.54280659E-02;
COFD[2420] = -1.68421339E+01;
COFD[2421] = 4.52301031E+00;
COFD[2422] = -3.64086327E-01;
COFD[2423] = 1.54280659E-02;
COFD[2424] = -1.68412767E+01;
COFD[2425] = 4.52301031E+00;
COFD[2426] = -3.64086327E-01;
COFD[2427] = 1.54280659E-02;
COFD[2428] = -9.28658890E+00;
COFD[2429] = 1.98664968E+00;
COFD[2430] = -4.51158213E-02;
COFD[2431] = 2.03667696E-03;
COFD[2432] = -1.83921909E+01;
COFD[2433] = 5.04400884E+00;
COFD[2434] = -4.25512519E-01;
COFD[2435] = 1.78473004E-02;
COFD[2436] = -1.88703282E+01;
COFD[2437] = 5.16817593E+00;
COFD[2438] = -4.38840667E-01;
COFD[2439] = 1.83165432E-02;
COFD[2440] = -1.88691890E+01;
COFD[2441] = 5.16817593E+00;
COFD[2442] = -4.38840667E-01;
COFD[2443] = 1.83165432E-02;
COFD[2444] = -1.29642351E+01;
COFD[2445] = 3.28440910E+00;
COFD[2446] = -2.11707534E-01;
COFD[2447] = 9.16419558E-03;
COFD[2448] = -1.95954813E+01;
COFD[2449] = 5.44168826E+00;
COFD[2450] = -4.65452072E-01;
COFD[2451] = 1.91268618E-02;
COFD[2452] = -1.95954813E+01;
COFD[2453] = 5.44168826E+00;
COFD[2454] = -4.65452072E-01;
COFD[2455] = 1.91268618E-02;
COFD[2456] = -1.44434251E+01;
COFD[2457] = 3.71325476E+00;
COFD[2458] = -2.65538326E-01;
COFD[2459] = 1.14199023E-02;
COFD[2460] = -1.88677129E+01;
COFD[2461] = 5.16817593E+00;
COFD[2462] = -4.38840667E-01;
COFD[2463] = 1.83165432E-02;
COFD[2464] = -1.88678409E+01;
COFD[2465] = 5.16817593E+00;
COFD[2466] = -4.38840667E-01;
COFD[2467] = 1.83165432E-02;
COFD[2468] = -1.38221854E+01;
COFD[2469] = 3.46560000E+00;
COFD[2470] = -2.34075114E-01;
COFD[2471] = 1.00849661E-02;
COFD[2472] = -1.50643904E+01;
COFD[2473] = 3.90641370E+00;
COFD[2474] = -2.88957677E-01;
COFD[2475] = 1.23669987E-02;
COFD[2476] = -1.72388691E+01;
COFD[2477] = 4.60447813E+00;
COFD[2478] = -3.73889368E-01;
COFD[2479] = 1.58229235E-02;
COFD[2480] = -1.65467319E+01;
COFD[2481] = 4.37452141E+00;
COFD[2482] = -3.46268170E-01;
COFD[2483] = 1.47124301E-02;
COFD[2484] = -1.63409112E+01;
COFD[2485] = 4.33926971E+00;
COFD[2486] = -3.41907355E-01;
COFD[2487] = 1.45317558E-02;
COFD[2488] = -1.30286287E+01;
COFD[2489] = 3.15334729E+00;
COFD[2490] = -1.94972021E-01;
COFD[2491] = 8.45114576E-03;
COFD[2492] = -1.30286287E+01;
COFD[2493] = 3.15334729E+00;
COFD[2494] = -1.94972021E-01;
COFD[2495] = 8.45114576E-03;
COFD[2496] = -1.27761797E+01;
COFD[2497] = 2.70797975E+00;
COFD[2498] = -1.37895013E-01;
COFD[2499] = 6.01030858E-03;
COFD[2500] = -1.92609137E+01;
COFD[2501] = 4.90190161E+00;
COFD[2502] = -4.08908928E-01;
COFD[2503] = 1.71998038E-02;
COFD[2504] = -1.63192492E+01;
COFD[2505] = 3.81860507E+00;
COFD[2506] = -2.78482683E-01;
COFD[2507] = 1.19505034E-02;
COFD[2508] = -1.36884074E+01;
COFD[2509] = 2.89678405E+00;
COFD[2510] = -1.62418864E-01;
COFD[2511] = 7.07300755E-03;
COFD[2512] = -1.63223009E+01;
COFD[2513] = 3.81860507E+00;
COFD[2514] = -2.78482683E-01;
COFD[2515] = 1.19505034E-02;
COFD[2516] = -1.37003044E+01;
COFD[2517] = 2.90243493E+00;
COFD[2518] = -1.63148841E-01;
COFD[2519] = 7.10447920E-03;
COFD[2520] = -1.64305301E+01;
COFD[2521] = 3.86315631E+00;
COFD[2522] = -2.83800980E-01;
COFD[2523] = 1.21619703E-02;
COFD[2524] = -1.92609137E+01;
COFD[2525] = 4.90190161E+00;
COFD[2526] = -4.08908928E-01;
COFD[2527] = 1.71998038E-02;
COFD[2528] = -1.38802589E+01;
COFD[2529] = 2.98298723E+00;
COFD[2530] = -1.73428215E-01;
COFD[2531] = 7.54224684E-03;
COFD[2532] = -1.06253333E+01;
COFD[2533] = 2.15819366E+00;
COFD[2534] = -6.52830580E-02;
COFD[2535] = 2.80657258E-03;
COFD[2536] = -1.45113307E+01;
COFD[2537] = 3.21910603E+00;
COFD[2538] = -2.03442081E-01;
COFD[2539] = 8.81515218E-03;
COFD[2540] = -1.29709728E+01;
COFD[2541] = 3.28440910E+00;
COFD[2542] = -2.11707534E-01;
COFD[2543] = 9.16419558E-03;
COFD[2544] = -1.27611382E+01;
COFD[2545] = 2.70797975E+00;
COFD[2546] = -1.37895013E-01;
COFD[2547] = 6.01030858E-03;
COFD[2548] = -1.27761797E+01;
COFD[2549] = 2.70797975E+00;
COFD[2550] = -1.37895013E-01;
COFD[2551] = 6.01030858E-03;
COFD[2552] = -1.38853749E+01;
COFD[2553] = 2.98298723E+00;
COFD[2554] = -1.73428215E-01;
COFD[2555] = 7.54224684E-03;
COFD[2556] = -1.88412751E+01;
COFD[2557] = 4.90686422E+00;
COFD[2558] = -4.09428407E-01;
COFD[2559] = 1.72173805E-02;
COFD[2560] = -1.38902360E+01;
COFD[2561] = 2.98298723E+00;
COFD[2562] = -1.73428215E-01;
COFD[2563] = 7.54224684E-03;
COFD[2564] = -1.88299583E+01;
COFD[2565] = 4.75778339E+00;
COFD[2566] = -3.92510587E-01;
COFD[2567] = 1.65802295E-02;
COFD[2568] = -1.88359597E+01;
COFD[2569] = 4.75778339E+00;
COFD[2570] = -3.92510587E-01;
COFD[2571] = 1.65802295E-02;
COFD[2572] = -1.57253704E+01;
COFD[2573] = 3.63667810E+00;
COFD[2574] = -2.55876890E-01;
COFD[2575] = 1.10128613E-02;
COFD[2576] = -1.83642414E+01;
COFD[2577] = 4.71208389E+00;
COFD[2578] = -3.87053240E-01;
COFD[2579] = 1.63622220E-02;
COFD[2580] = -1.40792448E+01;
COFD[2581] = 3.05361342E+00;
COFD[2582] = -1.82331859E-01;
COFD[2583] = 7.91667899E-03;
COFD[2584] = -1.40792448E+01;
COFD[2585] = 3.05361342E+00;
COFD[2586] = -1.82331859E-01;
COFD[2587] = 7.91667899E-03;
COFD[2588] = -1.76802511E+01;
COFD[2589] = 4.28431488E+00;
COFD[2590] = -3.35035279E-01;
COFD[2591] = 1.42440352E-02;
COFD[2592] = -1.40846299E+01;
COFD[2593] = 3.05361342E+00;
COFD[2594] = -1.82331859E-01;
COFD[2595] = 7.91667899E-03;
COFD[2596] = -1.26277765E+01;
COFD[2597] = 2.59809959E+00;
COFD[2598] = -1.23503755E-01;
COFD[2599] = 5.38095363E-03;
COFD[2600] = -1.29480232E+01;
COFD[2601] = 2.59809959E+00;
COFD[2602] = -1.23503755E-01;
COFD[2603] = 5.38095363E-03;
COFD[2604] = -1.27248146E+01;
COFD[2605] = 2.70797975E+00;
COFD[2606] = -1.37895013E-01;
COFD[2607] = 6.01030858E-03;
COFD[2608] = -1.27083190E+01;
COFD[2609] = 2.70797975E+00;
COFD[2610] = -1.37895013E-01;
COFD[2611] = 6.01030858E-03;
COFD[2612] = -1.30704041E+01;
COFD[2613] = 2.64561803E+00;
COFD[2614] = -1.29737887E-01;
COFD[2615] = 5.65422236E-03;
COFD[2616] = -1.63160084E+01;
COFD[2617] = 3.81860507E+00;
COFD[2618] = -2.78482683E-01;
COFD[2619] = 1.19505034E-02;
COFD[2620] = -1.77990217E+01;
COFD[2621] = 4.27963195E+00;
COFD[2622] = -3.34447162E-01;
COFD[2623] = 1.42193133E-02;
COFD[2624] = -1.63192492E+01;
COFD[2625] = 3.81860507E+00;
COFD[2626] = -2.78482683E-01;
COFD[2627] = 1.19505034E-02;
COFD[2628] = -1.63192492E+01;
COFD[2629] = 3.81860507E+00;
COFD[2630] = -2.78482683E-01;
COFD[2631] = 1.19505034E-02;
COFD[2632] = -1.63091927E+01;
COFD[2633] = 3.81860507E+00;
COFD[2634] = -2.78482683E-01;
COFD[2635] = 1.19505034E-02;
COFD[2636] = -9.82541494E+00;
COFD[2637] = 1.83095585E+00;
COFD[2638] = -2.43017348E-02;
COFD[2639] = 1.11147663E-03;
COFD[2640] = -1.76802511E+01;
COFD[2641] = 4.28431488E+00;
COFD[2642] = -3.35035279E-01;
COFD[2643] = 1.42440352E-02;
COFD[2644] = -1.83281781E+01;
COFD[2645] = 4.46715628E+00;
COFD[2646] = -3.57521352E-01;
COFD[2647] = 1.51703027E-02;
COFD[2648] = -1.83128272E+01;
COFD[2649] = 4.46715628E+00;
COFD[2650] = -3.57521352E-01;
COFD[2651] = 1.51703027E-02;
COFD[2652] = -1.27069586E+01;
COFD[2653] = 2.70797975E+00;
COFD[2654] = -1.37895013E-01;
COFD[2655] = 6.01030858E-03;
COFD[2656] = -1.92676440E+01;
COFD[2657] = 4.90190161E+00;
COFD[2658] = -4.08908928E-01;
COFD[2659] = 1.71998038E-02;
COFD[2660] = -1.92676440E+01;
COFD[2661] = 4.90190161E+00;
COFD[2662] = -4.08908928E-01;
COFD[2663] = 1.71998038E-02;
COFD[2664] = -1.40846299E+01;
COFD[2665] = 3.05361342E+00;
COFD[2666] = -1.82331859E-01;
COFD[2667] = 7.91667899E-03;
COFD[2668] = -1.82935626E+01;
COFD[2669] = 4.46715628E+00;
COFD[2670] = -3.57521352E-01;
COFD[2671] = 1.51703027E-02;
COFD[2672] = -1.82952058E+01;
COFD[2673] = 4.46715628E+00;
COFD[2674] = -3.57521352E-01;
COFD[2675] = 1.51703027E-02;
COFD[2676] = -1.36761934E+01;
COFD[2677] = 2.89678405E+00;
COFD[2678] = -1.62418864E-01;
COFD[2679] = 7.07300755E-03;
COFD[2680] = -1.45714581E+01;
COFD[2681] = 3.25814060E+00;
COFD[2682] = -2.08402129E-01;
COFD[2683] = 9.02544298E-03;
COFD[2684] = -1.65809452E+01;
COFD[2685] = 3.87564052E+00;
COFD[2686] = -2.85285750E-01;
COFD[2687] = 1.22208235E-02;
COFD[2688] = -1.59868749E+01;
COFD[2689] = 3.67153141E+00;
COFD[2690] = -2.60291173E-01;
COFD[2691] = 1.11995571E-02;
COFD[2692] = -1.57908045E+01;
COFD[2693] = 3.63667810E+00;
COFD[2694] = -2.55876890E-01;
COFD[2695] = 1.10128613E-02;
COFD[2696] = -1.29540233E+01;
COFD[2697] = 2.59809959E+00;
COFD[2698] = -1.23503755E-01;
COFD[2699] = 5.38095363E-03;
COFD[2700] = -1.29540233E+01;
COFD[2701] = 2.59809959E+00;
COFD[2702] = -1.23503755E-01;
COFD[2703] = 5.38095363E-03;
COFD[2704] = -1.27916876E+01;
COFD[2705] = 2.70797975E+00;
COFD[2706] = -1.37895013E-01;
COFD[2707] = 6.01030858E-03;
COFD[2708] = -1.92798841E+01;
COFD[2709] = 4.90190161E+00;
COFD[2710] = -4.08908928E-01;
COFD[2711] = 1.71998038E-02;
COFD[2712] = -1.63413318E+01;
COFD[2713] = 3.81860507E+00;
COFD[2714] = -2.78482683E-01;
COFD[2715] = 1.19505034E-02;
COFD[2716] = -1.37081197E+01;
COFD[2717] = 2.89678405E+00;
COFD[2718] = -1.62418864E-01;
COFD[2719] = 7.07300755E-03;
COFD[2720] = -1.63445217E+01;
COFD[2721] = 3.81860507E+00;
COFD[2722] = -2.78482683E-01;
COFD[2723] = 1.19505034E-02;
COFD[2724] = -1.37195308E+01;
COFD[2725] = 2.90243493E+00;
COFD[2726] = -1.63148841E-01;
COFD[2727] = 7.10447920E-03;
COFD[2728] = -1.64527503E+01;
COFD[2729] = 3.86315631E+00;
COFD[2730] = -2.83800980E-01;
COFD[2731] = 1.21619703E-02;
COFD[2732] = -1.92798841E+01;
COFD[2733] = 4.90190161E+00;
COFD[2734] = -4.08908928E-01;
COFD[2735] = 1.71998038E-02;
COFD[2736] = -1.39004163E+01;
COFD[2737] = 2.98298723E+00;
COFD[2738] = -1.73428215E-01;
COFD[2739] = 7.54224684E-03;
COFD[2740] = -1.06286607E+01;
COFD[2741] = 2.15819366E+00;
COFD[2742] = -6.52830580E-02;
COFD[2743] = 2.80657258E-03;
COFD[2744] = -1.45329520E+01;
COFD[2745] = 3.21910603E+00;
COFD[2746] = -2.03442081E-01;
COFD[2747] = 8.81515218E-03;
COFD[2748] = -1.29727324E+01;
COFD[2749] = 3.28440910E+00;
COFD[2750] = -2.11707534E-01;
COFD[2751] = 9.16419558E-03;
COFD[2752] = -1.27761797E+01;
COFD[2753] = 2.70797975E+00;
COFD[2754] = -1.37895013E-01;
COFD[2755] = 6.01030858E-03;
COFD[2756] = -1.27916876E+01;
COFD[2757] = 2.70797975E+00;
COFD[2758] = -1.37895013E-01;
COFD[2759] = 6.01030858E-03;
COFD[2760] = -1.39057440E+01;
COFD[2761] = 2.98298723E+00;
COFD[2762] = -1.73428215E-01;
COFD[2763] = 7.54224684E-03;
COFD[2764] = -1.88572224E+01;
COFD[2765] = 4.90686422E+00;
COFD[2766] = -4.09428407E-01;
COFD[2767] = 1.72173805E-02;
COFD[2768] = -1.39108083E+01;
COFD[2769] = 2.98298723E+00;
COFD[2770] = -1.73428215E-01;
COFD[2771] = 7.54224684E-03;
COFD[2772] = -1.88494354E+01;
COFD[2773] = 4.75778339E+00;
COFD[2774] = -3.92510587E-01;
COFD[2775] = 1.65802295E-02;
COFD[2776] = -1.88556767E+01;
COFD[2777] = 4.75778339E+00;
COFD[2778] = -3.92510587E-01;
COFD[2779] = 1.65802295E-02;
COFD[2780] = -1.57478567E+01;
COFD[2781] = 3.63667810E+00;
COFD[2782] = -2.55876890E-01;
COFD[2783] = 1.10128613E-02;
COFD[2784] = -1.83797601E+01;
COFD[2785] = 4.71208389E+00;
COFD[2786] = -3.87053240E-01;
COFD[2787] = 1.63622220E-02;
COFD[2788] = -1.40991870E+01;
COFD[2789] = 3.05361342E+00;
COFD[2790] = -1.82331859E-01;
COFD[2791] = 7.91667899E-03;
COFD[2792] = -1.40991870E+01;
COFD[2793] = 3.05361342E+00;
COFD[2794] = -1.82331859E-01;
COFD[2795] = 7.91667899E-03;
COFD[2796] = -1.77028653E+01;
COFD[2797] = 4.28431488E+00;
COFD[2798] = -3.35035279E-01;
COFD[2799] = 1.42440352E-02;
COFD[2800] = -1.41047925E+01;
COFD[2801] = 3.05361342E+00;
COFD[2802] = -1.82331859E-01;
COFD[2803] = 7.91667899E-03;
COFD[2804] = -1.26418053E+01;
COFD[2805] = 2.59809959E+00;
COFD[2806] = -1.23503755E-01;
COFD[2807] = 5.38095363E-03;
COFD[2808] = -1.29675013E+01;
COFD[2809] = 2.59809959E+00;
COFD[2810] = -1.23503755E-01;
COFD[2811] = 5.38095363E-03;
COFD[2812] = -1.27398674E+01;
COFD[2813] = 2.70797975E+00;
COFD[2814] = -1.37895013E-01;
COFD[2815] = 6.01030858E-03;
COFD[2816] = -1.27228762E+01;
COFD[2817] = 2.70797975E+00;
COFD[2818] = -1.37895013E-01;
COFD[2819] = 6.01030858E-03;
COFD[2820] = -1.30891000E+01;
COFD[2821] = 2.64561803E+00;
COFD[2822] = -1.29737887E-01;
COFD[2823] = 5.65422236E-03;
COFD[2824] = -1.63379451E+01;
COFD[2825] = 3.81860507E+00;
COFD[2826] = -2.78482683E-01;
COFD[2827] = 1.19505034E-02;
COFD[2828] = -1.78222175E+01;
COFD[2829] = 4.27963195E+00;
COFD[2830] = -3.34447162E-01;
COFD[2831] = 1.42193133E-02;
COFD[2832] = -1.63413318E+01;
COFD[2833] = 3.81860507E+00;
COFD[2834] = -2.78482683E-01;
COFD[2835] = 1.19505034E-02;
COFD[2836] = -1.63413318E+01;
COFD[2837] = 3.81860507E+00;
COFD[2838] = -2.78482683E-01;
COFD[2839] = 1.19505034E-02;
COFD[2840] = -1.63308259E+01;
COFD[2841] = 3.81860507E+00;
COFD[2842] = -2.78482683E-01;
COFD[2843] = 1.19505034E-02;
COFD[2844] = -9.83138074E+00;
COFD[2845] = 1.83095585E+00;
COFD[2846] = -2.43017348E-02;
COFD[2847] = 1.11147663E-03;
COFD[2848] = -1.77028653E+01;
COFD[2849] = 4.28431488E+00;
COFD[2850] = -3.35035279E-01;
COFD[2851] = 1.42440352E-02;
COFD[2852] = -1.83540829E+01;
COFD[2853] = 4.46715628E+00;
COFD[2854] = -3.57521352E-01;
COFD[2855] = 1.51703027E-02;
COFD[2856] = -1.83379287E+01;
COFD[2857] = 4.46715628E+00;
COFD[2858] = -3.57521352E-01;
COFD[2859] = 1.51703027E-02;
COFD[2860] = -1.27204343E+01;
COFD[2861] = 2.70797975E+00;
COFD[2862] = -1.37895013E-01;
COFD[2863] = 6.01030858E-03;
COFD[2864] = -1.92868765E+01;
COFD[2865] = 4.90190161E+00;
COFD[2866] = -4.08908928E-01;
COFD[2867] = 1.71998038E-02;
COFD[2868] = -1.92868765E+01;
COFD[2869] = 4.90190161E+00;
COFD[2870] = -4.08908928E-01;
COFD[2871] = 1.71998038E-02;
COFD[2872] = -1.41047925E+01;
COFD[2873] = 3.05361342E+00;
COFD[2874] = -1.82331859E-01;
COFD[2875] = 7.91667899E-03;
COFD[2876] = -1.83176921E+01;
COFD[2877] = 4.46715628E+00;
COFD[2878] = -3.57521352E-01;
COFD[2879] = 1.51703027E-02;
COFD[2880] = -1.83194167E+01;
COFD[2881] = 4.46715628E+00;
COFD[2882] = -3.57521352E-01;
COFD[2883] = 1.51703027E-02;
COFD[2884] = -1.36954208E+01;
COFD[2885] = 2.89678405E+00;
COFD[2886] = -1.62418864E-01;
COFD[2887] = 7.07300755E-03;
COFD[2888] = -1.45865205E+01;
COFD[2889] = 3.25814060E+00;
COFD[2890] = -2.08402129E-01;
COFD[2891] = 9.02544298E-03;
COFD[2892] = -1.66006724E+01;
COFD[2893] = 3.87564052E+00;
COFD[2894] = -2.85285750E-01;
COFD[2895] = 1.22208235E-02;
COFD[2896] = -1.60070426E+01;
COFD[2897] = 3.67153141E+00;
COFD[2898] = -2.60291173E-01;
COFD[2899] = 1.11995571E-02;
COFD[2900] = -1.58107521E+01;
COFD[2901] = 3.63667810E+00;
COFD[2902] = -2.55876890E-01;
COFD[2903] = 1.10128613E-02;
COFD[2904] = -1.29737412E+01;
COFD[2905] = 2.59809959E+00;
COFD[2906] = -1.23503755E-01;
COFD[2907] = 5.38095363E-03;
COFD[2908] = -1.29737412E+01;
COFD[2909] = 2.59809959E+00;
COFD[2910] = -1.23503755E-01;
COFD[2911] = 5.38095363E-03;
COFD[2912] = -1.39057440E+01;
COFD[2913] = 2.98298723E+00;
COFD[2914] = -1.73428215E-01;
COFD[2915] = 7.54224684E-03;
COFD[2916] = -2.05840524E+01;
COFD[2917] = 5.19851461E+00;
COFD[2918] = -4.41448461E-01;
COFD[2919] = 1.83776542E-02;
COFD[2920] = -1.76171946E+01;
COFD[2921] = 4.11950819E+00;
COFD[2922] = -3.14655711E-01;
COFD[2923] = 1.34014626E-02;
COFD[2924] = -1.48388326E+01;
COFD[2925] = 3.16773813E+00;
COFD[2926] = -1.96823168E-01;
COFD[2927] = 8.53058072E-03;
COFD[2928] = -1.76220910E+01;
COFD[2929] = 4.11950819E+00;
COFD[2930] = -3.14655711E-01;
COFD[2931] = 1.34014626E-02;
COFD[2932] = -1.48478097E+01;
COFD[2933] = 3.17494843E+00;
COFD[2934] = -1.97752410E-01;
COFD[2935] = 8.57054106E-03;
COFD[2936] = -1.77858093E+01;
COFD[2937] = 4.18471443E+00;
COFD[2938] = -3.22640353E-01;
COFD[2939] = 1.37280239E-02;
COFD[2940] = -2.05840524E+01;
COFD[2941] = 5.19851461E+00;
COFD[2942] = -4.41448461E-01;
COFD[2943] = 1.83776542E-02;
COFD[2944] = -1.51058696E+01;
COFD[2945] = 3.27853241E+00;
COFD[2946] = -2.10970532E-01;
COFD[2947] = 9.13336403E-03;
COFD[2948] = -1.12823422E+01;
COFD[2949] = 2.30017030E+00;
COFD[2950] = -8.34928497E-02;
COFD[2951] = 3.58611589E-03;
COFD[2952] = -1.57618215E+01;
COFD[2953] = 3.50974553E+00;
COFD[2954] = -2.39671533E-01;
COFD[2955] = 1.03219510E-02;
COFD[2956] = -1.41188415E+01;
COFD[2957] = 3.59720720E+00;
COFD[2958] = -2.50852412E-01;
COFD[2959] = 1.07992653E-02;
COFD[2960] = -1.38853749E+01;
COFD[2961] = 2.98298723E+00;
COFD[2962] = -1.73428215E-01;
COFD[2963] = 7.54224684E-03;
COFD[2964] = -1.39057440E+01;
COFD[2965] = 2.98298723E+00;
COFD[2966] = -1.73428215E-01;
COFD[2967] = 7.54224684E-03;
COFD[2968] = -1.51136837E+01;
COFD[2969] = 3.27853241E+00;
COFD[2970] = -2.10970532E-01;
COFD[2971] = 9.13336403E-03;
COFD[2972] = -2.01625751E+01;
COFD[2973] = 5.20184446E+00;
COFD[2974] = -4.41727448E-01;
COFD[2975] = 1.83837722E-02;
COFD[2976] = -1.51211478E+01;
COFD[2977] = 3.27853241E+00;
COFD[2978] = -2.10970532E-01;
COFD[2979] = 9.13336403E-03;
COFD[2980] = -2.02403628E+01;
COFD[2981] = 5.09185655E+00;
COFD[2982] = -4.30641631E-01;
COFD[2983] = 1.80275784E-02;
COFD[2984] = -2.02493759E+01;
COFD[2985] = 5.09185655E+00;
COFD[2986] = -4.30641631E-01;
COFD[2987] = 1.80275784E-02;
COFD[2988] = -1.70585174E+01;
COFD[2989] = 3.94998946E+00;
COFD[2990] = -2.94215257E-01;
COFD[2991] = 1.25789510E-02;
COFD[2992] = -1.97847039E+01;
COFD[2993] = 5.06148428E+00;
COFD[2994] = -4.27422345E-01;
COFD[2995] = 1.79160853E-02;
COFD[2996] = -1.53349427E+01;
COFD[2997] = 3.36125353E+00;
COFD[2998] = -2.21308349E-01;
COFD[2999] = 9.56431936E-03;
COFD[3000] = -1.53349427E+01;
COFD[3001] = 3.36125353E+00;
COFD[3002] = -2.21308349E-01;
COFD[3003] = 9.56431936E-03;
COFD[3004] = -1.92307434E+01;
COFD[3005] = 4.67811496E+00;
COFD[3006] = -3.82933409E-01;
COFD[3007] = 1.61949349E-02;
COFD[3008] = -1.53431237E+01;
COFD[3009] = 3.36125353E+00;
COFD[3010] = -2.21308349E-01;
COFD[3011] = 9.56431936E-03;
COFD[3012] = -1.37299086E+01;
COFD[3013] = 2.87937412E+00;
COFD[3014] = -1.60161971E-01;
COFD[3015] = 6.97536928E-03;
COFD[3016] = -1.40983716E+01;
COFD[3017] = 2.87937412E+00;
COFD[3018] = -1.60161971E-01;
COFD[3019] = 6.97536928E-03;
COFD[3020] = -1.38534008E+01;
COFD[3021] = 2.98298723E+00;
COFD[3022] = -1.73428215E-01;
COFD[3023] = 7.54224684E-03;
COFD[3024] = -1.38312998E+01;
COFD[3025] = 2.98298723E+00;
COFD[3026] = -1.73428215E-01;
COFD[3027] = 7.54224684E-03;
COFD[3028] = -1.42115392E+01;
COFD[3029] = 2.92706247E+00;
COFD[3030] = -1.66320963E-01;
COFD[3031] = 7.24082478E-03;
COFD[3032] = -1.76120143E+01;
COFD[3033] = 4.11950819E+00;
COFD[3034] = -3.14655711E-01;
COFD[3035] = 1.34014626E-02;
COFD[3036] = -1.93474775E+01;
COFD[3037] = 4.67401892E+00;
COFD[3038] = -3.82438975E-01;
COFD[3039] = 1.61749699E-02;
COFD[3040] = -1.76171946E+01;
COFD[3041] = 4.11950819E+00;
COFD[3042] = -3.14655711E-01;
COFD[3043] = 1.34014626E-02;
COFD[3044] = -1.76171946E+01;
COFD[3045] = 4.11950819E+00;
COFD[3046] = -3.14655711E-01;
COFD[3047] = 1.34014626E-02;
COFD[3048] = -1.76011847E+01;
COFD[3049] = 4.11950819E+00;
COFD[3050] = -3.14655711E-01;
COFD[3051] = 1.34014626E-02;
COFD[3052] = -1.00981423E+01;
COFD[3053] = 1.80154868E+00;
COFD[3054] = -1.93107773E-02;
COFD[3055] = 8.41365140E-04;
COFD[3056] = -1.92307434E+01;
COFD[3057] = 4.67811496E+00;
COFD[3058] = -3.82933409E-01;
COFD[3059] = 1.61949349E-02;
COFD[3060] = -1.98905429E+01;
COFD[3061] = 4.84407524E+00;
COFD[3062] = -4.02489256E-01;
COFD[3063] = 1.69645233E-02;
COFD[3064] = -1.98635022E+01;
COFD[3065] = 4.84407524E+00;
COFD[3066] = -4.02489256E-01;
COFD[3067] = 1.69645233E-02;
COFD[3068] = -1.38136855E+01;
COFD[3069] = 2.98298723E+00;
COFD[3070] = -1.73428215E-01;
COFD[3071] = 7.54224684E-03;
COFD[3072] = -2.05940359E+01;
COFD[3073] = 5.19851461E+00;
COFD[3074] = -4.41448461E-01;
COFD[3075] = 1.83776542E-02;
COFD[3076] = -2.05940359E+01;
COFD[3077] = 5.19851461E+00;
COFD[3078] = -4.41448461E-01;
COFD[3079] = 1.83776542E-02;
COFD[3080] = -1.53431237E+01;
COFD[3081] = 3.36125353E+00;
COFD[3082] = -2.21308349E-01;
COFD[3083] = 9.56431936E-03;
COFD[3084] = -1.98304235E+01;
COFD[3085] = 4.84407524E+00;
COFD[3086] = -4.02489256E-01;
COFD[3087] = 1.69645233E-02;
COFD[3088] = -1.98332098E+01;
COFD[3089] = 4.84407524E+00;
COFD[3090] = -4.02489256E-01;
COFD[3091] = 1.69645233E-02;
COFD[3092] = -1.48205479E+01;
COFD[3093] = 3.16773813E+00;
COFD[3094] = -1.96823168E-01;
COFD[3095] = 8.53058072E-03;
COFD[3096] = -1.57607118E+01;
COFD[3097] = 3.56140952E+00;
COFD[3098] = -2.46282892E-01;
COFD[3099] = 1.06044757E-02;
COFD[3100] = -1.79076984E+01;
COFD[3101] = 4.20508193E+00;
COFD[3102] = -3.25158699E-01;
COFD[3103] = 1.38321131E-02;
COFD[3104] = -1.72439337E+01;
COFD[3105] = 3.97457749E+00;
COFD[3106] = -2.97207135E-01;
COFD[3107] = 1.27006632E-02;
COFD[3108] = -1.70785490E+01;
COFD[3109] = 3.94998946E+00;
COFD[3110] = -2.94215257E-01;
COFD[3111] = 1.25789510E-02;
COFD[3112] = -1.41073829E+01;
COFD[3113] = 2.87937412E+00;
COFD[3114] = -1.60161971E-01;
COFD[3115] = 6.97536928E-03;
COFD[3116] = -1.41073829E+01;
COFD[3117] = 2.87937412E+00;
COFD[3118] = -1.60161971E-01;
COFD[3119] = 6.97536928E-03;
COFD[3120] = -1.88572224E+01;
COFD[3121] = 4.90686422E+00;
COFD[3122] = -4.09428407E-01;
COFD[3123] = 1.72173805E-02;
COFD[3124] = -1.86106078E+01;
COFD[3125] = 3.93632699E+00;
COFD[3126] = -2.09772398E-01;
COFD[3127] = 5.80951043E-03;
COFD[3128] = -2.15944623E+01;
COFD[3129] = 5.46509995E+00;
COFD[3130] = -4.52185064E-01;
COFD[3131] = 1.79334715E-02;
COFD[3132] = -2.06209560E+01;
COFD[3133] = 5.33386551E+00;
COFD[3134] = -4.56343451E-01;
COFD[3135] = 1.89202797E-02;
COFD[3136] = -2.15977859E+01;
COFD[3137] = 5.46509995E+00;
COFD[3138] = -4.52185064E-01;
COFD[3139] = 1.79334715E-02;
COFD[3140] = -2.06859021E+01;
COFD[3141] = 5.35499382E+00;
COFD[3142] = -4.58577046E-01;
COFD[3143] = 1.89976318E-02;
COFD[3144] = -2.14098900E+01;
COFD[3145] = 5.30121360E+00;
COFD[3146] = -4.21263162E-01;
COFD[3147] = 1.62329471E-02;
COFD[3148] = -1.86106078E+01;
COFD[3149] = 3.93632699E+00;
COFD[3150] = -2.09772398E-01;
COFD[3151] = 5.80951043E-03;
COFD[3152] = -2.08507538E+01;
COFD[3153] = 5.41592516E+00;
COFD[3154] = -4.64640996E-01;
COFD[3155] = 1.91895972E-02;
COFD[3156] = -1.65320372E+01;
COFD[3157] = 4.34135715E+00;
COFD[3158] = -3.42166667E-01;
COFD[3159] = 1.45425451E-02;
COFD[3160] = -2.08796817E+01;
COFD[3161] = 5.42825002E+00;
COFD[3162] = -4.65423681E-01;
COFD[3163] = 1.91920177E-02;
COFD[3164] = -1.91953111E+01;
COFD[3165] = 5.44274135E+00;
COFD[3166] = -4.65397833E-01;
COFD[3167] = 1.91171363E-02;
COFD[3168] = -1.88412751E+01;
COFD[3169] = 4.90686422E+00;
COFD[3170] = -4.09428407E-01;
COFD[3171] = 1.72173805E-02;
COFD[3172] = -1.88572224E+01;
COFD[3173] = 4.90686422E+00;
COFD[3174] = -4.09428407E-01;
COFD[3175] = 1.72173805E-02;
COFD[3176] = -2.01625751E+01;
COFD[3177] = 5.20184446E+00;
COFD[3178] = -4.41727448E-01;
COFD[3179] = 1.83837722E-02;
COFD[3180] = -1.42050400E+01;
COFD[3181] = 1.94854229E+00;
COFD[3182] = 9.16765545E-02;
COFD[3183] = -8.62878516E-03;
COFD[3184] = -2.01678346E+01;
COFD[3185] = 5.20184446E+00;
COFD[3186] = -4.41727448E-01;
COFD[3187] = 1.83837722E-02;
COFD[3188] = -1.94264358E+01;
COFD[3189] = 4.32601172E+00;
COFD[3190] = -2.67841680E-01;
COFD[3191] = 8.59623460E-03;
COFD[3192] = -1.94329068E+01;
COFD[3193] = 4.32601172E+00;
COFD[3194] = -2.67841680E-01;
COFD[3195] = 8.59623460E-03;
COFD[3196] = -2.14310740E+01;
COFD[3197] = 5.49133594E+00;
COFD[3198] = -4.61028475E-01;
COFD[3199] = 1.85204974E-02;
COFD[3200] = -1.67361923E+01;
COFD[3201] = 3.16504366E+00;
COFD[3202] = -9.19485624E-02;
COFD[3203] = 1.39362133E-04;
COFD[3204] = -2.04514811E+01;
COFD[3205] = 5.29593785E+00;
COFD[3206] = -4.52123029E-01;
COFD[3207] = 1.87641215E-02;
COFD[3208] = -2.04514811E+01;
COFD[3209] = 5.29593785E+00;
COFD[3210] = -4.52123029E-01;
COFD[3211] = 1.87641215E-02;
COFD[3212] = -1.94067705E+01;
COFD[3213] = 4.24747903E+00;
COFD[3214] = -2.57724392E-01;
COFD[3215] = 8.18869465E-03;
COFD[3216] = -2.04572980E+01;
COFD[3217] = 5.29593785E+00;
COFD[3218] = -4.52123029E-01;
COFD[3219] = 1.87641215E-02;
COFD[3220] = -1.86401817E+01;
COFD[3221] = 4.78767270E+00;
COFD[3222] = -3.95990323E-01;
COFD[3223] = 1.67152840E-02;
COFD[3224] = -1.89747864E+01;
COFD[3225] = 4.78767270E+00;
COFD[3226] = -3.95990323E-01;
COFD[3227] = 1.67152840E-02;
COFD[3228] = -2.07528924E+01;
COFD[3229] = 5.46746294E+00;
COFD[3230] = -4.64612142E-01;
COFD[3231] = 1.89302169E-02;
COFD[3232] = -1.87865134E+01;
COFD[3233] = 4.90686422E+00;
COFD[3234] = -4.09428407E-01;
COFD[3235] = 1.72173805E-02;
COFD[3236] = -1.91358693E+01;
COFD[3237] = 4.84334777E+00;
COFD[3238] = -4.02407198E-01;
COFD[3239] = 1.69614552E-02;
COFD[3240] = -2.15909346E+01;
COFD[3241] = 5.46509995E+00;
COFD[3242] = -4.52185064E-01;
COFD[3243] = 1.79334715E-02;
COFD[3244] = -2.12301920E+01;
COFD[3245] = 5.07946443E+00;
COFD[3246] = -3.84249491E-01;
COFD[3247] = 1.43231475E-02;
COFD[3248] = -2.15944623E+01;
COFD[3249] = 5.46509995E+00;
COFD[3250] = -4.52185064E-01;
COFD[3251] = 1.79334715E-02;
COFD[3252] = -2.15944623E+01;
COFD[3253] = 5.46509995E+00;
COFD[3254] = -4.52185064E-01;
COFD[3255] = 1.79334715E-02;
COFD[3256] = -2.15835223E+01;
COFD[3257] = 5.46509995E+00;
COFD[3258] = -4.52185064E-01;
COFD[3259] = 1.79334715E-02;
COFD[3260] = -1.19621564E+01;
COFD[3261] = 2.61946046E+00;
COFD[3262] = -1.26311090E-01;
COFD[3263] = 5.50425635E-03;
COFD[3264] = -1.94067705E+01;
COFD[3265] = 4.24747903E+00;
COFD[3266] = -2.57724392E-01;
COFD[3267] = 8.18869465E-03;
COFD[3268] = -2.06394730E+01;
COFD[3269] = 4.77630610E+00;
COFD[3270] = -3.37759268E-01;
COFD[3271] = 1.20457679E-02;
COFD[3272] = -2.06225315E+01;
COFD[3273] = 4.77630610E+00;
COFD[3274] = -3.37759268E-01;
COFD[3275] = 1.20457679E-02;
COFD[3276] = -1.87840613E+01;
COFD[3277] = 4.90686422E+00;
COFD[3278] = -4.09428407E-01;
COFD[3279] = 1.72173805E-02;
COFD[3280] = -1.86178507E+01;
COFD[3281] = 3.93632699E+00;
COFD[3282] = -2.09772398E-01;
COFD[3283] = 5.80951043E-03;
COFD[3284] = -1.86178507E+01;
COFD[3285] = 3.93632699E+00;
COFD[3286] = -2.09772398E-01;
COFD[3287] = 5.80951043E-03;
COFD[3288] = -2.04572980E+01;
COFD[3289] = 5.29593785E+00;
COFD[3290] = -4.52123029E-01;
COFD[3291] = 1.87641215E-02;
COFD[3292] = -2.06013456E+01;
COFD[3293] = 4.77630610E+00;
COFD[3294] = -3.37759268E-01;
COFD[3295] = 1.20457679E-02;
COFD[3296] = -2.06031495E+01;
COFD[3297] = 4.77630610E+00;
COFD[3298] = -3.37759268E-01;
COFD[3299] = 1.20457679E-02;
COFD[3300] = -2.06077929E+01;
COFD[3301] = 5.33386551E+00;
COFD[3302] = -4.56343451E-01;
COFD[3303] = 1.89202797E-02;
COFD[3304] = -2.11989225E+01;
COFD[3305] = 5.48294383E+00;
COFD[3306] = -4.63910525E-01;
COFD[3307] = 1.87967249E-02;
COFD[3308] = -2.16940439E+01;
COFD[3309] = 5.44394964E+00;
COFD[3310] = -4.47152201E-01;
COFD[3311] = 1.76308159E-02;
COFD[3312] = -2.16668312E+01;
COFD[3313] = 5.42073101E+00;
COFD[3314] = -4.42623106E-01;
COFD[3315] = 1.73774544E-02;
COFD[3316] = -2.14943782E+01;
COFD[3317] = 5.49133594E+00;
COFD[3318] = -4.61028475E-01;
COFD[3319] = 1.85204974E-02;
COFD[3320] = -1.89812560E+01;
COFD[3321] = 4.78767270E+00;
COFD[3322] = -3.95990323E-01;
COFD[3323] = 1.67152840E-02;
COFD[3324] = -1.89812560E+01;
COFD[3325] = 4.78767270E+00;
COFD[3326] = -3.95990323E-01;
COFD[3327] = 1.67152840E-02;
COFD[3328] = -1.39108083E+01;
COFD[3329] = 2.98298723E+00;
COFD[3330] = -1.73428215E-01;
COFD[3331] = 7.54224684E-03;
COFD[3332] = -2.05907680E+01;
COFD[3333] = 5.19851461E+00;
COFD[3334] = -4.41448461E-01;
COFD[3335] = 1.83776542E-02;
COFD[3336] = -1.76256507E+01;
COFD[3337] = 4.11950819E+00;
COFD[3338] = -3.14655711E-01;
COFD[3339] = 1.34014626E-02;
COFD[3340] = -1.48459389E+01;
COFD[3341] = 3.16773813E+00;
COFD[3342] = -1.96823168E-01;
COFD[3343] = 8.53058072E-03;
COFD[3344] = -1.76306310E+01;
COFD[3345] = 4.11950819E+00;
COFD[3346] = -3.14655711E-01;
COFD[3347] = 1.34014626E-02;
COFD[3348] = -1.48546585E+01;
COFD[3349] = 3.17494843E+00;
COFD[3350] = -1.97752410E-01;
COFD[3351] = 8.57054106E-03;
COFD[3352] = -1.77943490E+01;
COFD[3353] = 4.18471443E+00;
COFD[3354] = -3.22640353E-01;
COFD[3355] = 1.37280239E-02;
COFD[3356] = -2.05907680E+01;
COFD[3357] = 5.19851461E+00;
COFD[3358] = -4.41448461E-01;
COFD[3359] = 1.83776542E-02;
COFD[3360] = -1.51132171E+01;
COFD[3361] = 3.27853241E+00;
COFD[3362] = -2.10970532E-01;
COFD[3363] = 9.13336403E-03;
COFD[3364] = -1.12831958E+01;
COFD[3365] = 2.30017030E+00;
COFD[3366] = -8.34928497E-02;
COFD[3367] = 3.58611589E-03;
COFD[3368] = -1.57700020E+01;
COFD[3369] = 3.50974553E+00;
COFD[3370] = -2.39671533E-01;
COFD[3371] = 1.03219510E-02;
COFD[3372] = -1.41192808E+01;
COFD[3373] = 3.59720720E+00;
COFD[3374] = -2.50852412E-01;
COFD[3375] = 1.07992653E-02;
COFD[3376] = -1.38902360E+01;
COFD[3377] = 2.98298723E+00;
COFD[3378] = -1.73428215E-01;
COFD[3379] = 7.54224684E-03;
COFD[3380] = -1.39108083E+01;
COFD[3381] = 2.98298723E+00;
COFD[3382] = -1.73428215E-01;
COFD[3383] = 7.54224684E-03;
COFD[3384] = -1.51211478E+01;
COFD[3385] = 3.27853241E+00;
COFD[3386] = -2.10970532E-01;
COFD[3387] = 9.13336403E-03;
COFD[3388] = -2.01678346E+01;
COFD[3389] = 5.20184446E+00;
COFD[3390] = -4.41727448E-01;
COFD[3391] = 1.83837722E-02;
COFD[3392] = -1.51287251E+01;
COFD[3393] = 3.27853241E+00;
COFD[3394] = -2.10970532E-01;
COFD[3395] = 9.13336403E-03;
COFD[3396] = -2.02473436E+01;
COFD[3397] = 5.09185655E+00;
COFD[3398] = -4.30641631E-01;
COFD[3399] = 1.80275784E-02;
COFD[3400] = -2.02564846E+01;
COFD[3401] = 5.09185655E+00;
COFD[3402] = -4.30641631E-01;
COFD[3403] = 1.80275784E-02;
COFD[3404] = -1.70672203E+01;
COFD[3405] = 3.94998946E+00;
COFD[3406] = -2.94215257E-01;
COFD[3407] = 1.25789510E-02;
COFD[3408] = -1.97897729E+01;
COFD[3409] = 5.06148428E+00;
COFD[3410] = -4.27422345E-01;
COFD[3411] = 1.79160853E-02;
COFD[3412] = -1.53421729E+01;
COFD[3413] = 3.36125353E+00;
COFD[3414] = -2.21308349E-01;
COFD[3415] = 9.56431936E-03;
COFD[3416] = -1.53421729E+01;
COFD[3417] = 3.36125353E+00;
COFD[3418] = -2.21308349E-01;
COFD[3419] = 9.56431936E-03;
COFD[3420] = -1.92395256E+01;
COFD[3421] = 4.67811496E+00;
COFD[3422] = -3.82933409E-01;
COFD[3423] = 1.61949349E-02;
COFD[3424] = -1.53504741E+01;
COFD[3425] = 3.36125353E+00;
COFD[3426] = -2.21308349E-01;
COFD[3427] = 9.56431936E-03;
COFD[3428] = -1.37343429E+01;
COFD[3429] = 2.87937412E+00;
COFD[3430] = -1.60161971E-01;
COFD[3431] = 6.97536928E-03;
COFD[3432] = -1.41053530E+01;
COFD[3433] = 2.87937412E+00;
COFD[3434] = -1.60161971E-01;
COFD[3435] = 6.97536928E-03;
COFD[3436] = -1.38582668E+01;
COFD[3437] = 2.98298723E+00;
COFD[3438] = -1.73428215E-01;
COFD[3439] = 7.54224684E-03;
COFD[3440] = -1.38359545E+01;
COFD[3441] = 2.98298723E+00;
COFD[3442] = -1.73428215E-01;
COFD[3443] = 7.54224684E-03;
COFD[3444] = -1.42181138E+01;
COFD[3445] = 2.92706247E+00;
COFD[3446] = -1.66320963E-01;
COFD[3447] = 7.24082478E-03;
COFD[3448] = -1.76203825E+01;
COFD[3449] = 4.11950819E+00;
COFD[3450] = -3.14655711E-01;
COFD[3451] = 1.34014626E-02;
COFD[3452] = -1.93566272E+01;
COFD[3453] = 4.67401892E+00;
COFD[3454] = -3.82438975E-01;
COFD[3455] = 1.61749699E-02;
COFD[3456] = -1.76256507E+01;
COFD[3457] = 4.11950819E+00;
COFD[3458] = -3.14655711E-01;
COFD[3459] = 1.34014626E-02;
COFD[3460] = -1.76256507E+01;
COFD[3461] = 4.11950819E+00;
COFD[3462] = -3.14655711E-01;
COFD[3463] = 1.34014626E-02;
COFD[3464] = -1.76093721E+01;
COFD[3465] = 4.11950819E+00;
COFD[3466] = -3.14655711E-01;
COFD[3467] = 1.34014626E-02;
COFD[3468] = -1.00997475E+01;
COFD[3469] = 1.80154868E+00;
COFD[3470] = -1.93107773E-02;
COFD[3471] = 8.41365140E-04;
COFD[3472] = -1.92395256E+01;
COFD[3473] = 4.67811496E+00;
COFD[3474] = -3.82933409E-01;
COFD[3475] = 1.61949349E-02;
COFD[3476] = -1.99015690E+01;
COFD[3477] = 4.84407524E+00;
COFD[3478] = -4.02489256E-01;
COFD[3479] = 1.69645233E-02;
COFD[3480] = -1.98739417E+01;
COFD[3481] = 4.84407524E+00;
COFD[3482] = -4.02489256E-01;
COFD[3483] = 1.69645233E-02;
COFD[3484] = -1.38178946E+01;
COFD[3485] = 2.98298723E+00;
COFD[3486] = -1.73428215E-01;
COFD[3487] = 7.54224684E-03;
COFD[3488] = -2.06008879E+01;
COFD[3489] = 5.19851461E+00;
COFD[3490] = -4.41448461E-01;
COFD[3491] = 1.83776542E-02;
COFD[3492] = -2.06008879E+01;
COFD[3493] = 5.19851461E+00;
COFD[3494] = -4.41448461E-01;
COFD[3495] = 1.83776542E-02;
COFD[3496] = -1.53504741E+01;
COFD[3497] = 3.36125353E+00;
COFD[3498] = -2.21308349E-01;
COFD[3499] = 9.56431936E-03;
COFD[3500] = -1.98401881E+01;
COFD[3501] = 4.84407524E+00;
COFD[3502] = -4.02489256E-01;
COFD[3503] = 1.69645233E-02;
COFD[3504] = -1.98430296E+01;
COFD[3505] = 4.84407524E+00;
COFD[3506] = -4.02489256E-01;
COFD[3507] = 1.69645233E-02;
COFD[3508] = -1.48273972E+01;
COFD[3509] = 3.16773813E+00;
COFD[3510] = -1.96823168E-01;
COFD[3511] = 8.53058072E-03;
COFD[3512] = -1.57655820E+01;
COFD[3513] = 3.56140952E+00;
COFD[3514] = -2.46282892E-01;
COFD[3515] = 1.06044757E-02;
COFD[3516] = -1.79148126E+01;
COFD[3517] = 4.20508193E+00;
COFD[3518] = -3.25158699E-01;
COFD[3519] = 1.38321131E-02;
COFD[3520] = -1.72512868E+01;
COFD[3521] = 3.97457749E+00;
COFD[3522] = -2.97207135E-01;
COFD[3523] = 1.27006632E-02;
COFD[3524] = -1.70857821E+01;
COFD[3525] = 3.94998946E+00;
COFD[3526] = -2.94215257E-01;
COFD[3527] = 1.25789510E-02;
COFD[3528] = -1.41144922E+01;
COFD[3529] = 2.87937412E+00;
COFD[3530] = -1.60161971E-01;
COFD[3531] = 6.97536928E-03;
COFD[3532] = -1.41144922E+01;
COFD[3533] = 2.87937412E+00;
COFD[3534] = -1.60161971E-01;
COFD[3535] = 6.97536928E-03;
COFD[3536] = -1.88494354E+01;
COFD[3537] = 4.75778339E+00;
COFD[3538] = -3.92510587E-01;
COFD[3539] = 1.65802295E-02;
COFD[3540] = -1.98801302E+01;
COFD[3541] = 4.34170635E+00;
COFD[3542] = -2.70199437E-01;
COFD[3543] = 8.70997059E-03;
COFD[3544] = -2.19732795E+01;
COFD[3545] = 5.49000112E+00;
COFD[3546] = -4.60439480E-01;
COFD[3547] = 1.84791361E-02;
COFD[3548] = -1.99439348E+01;
COFD[3549] = 4.98617709E+00;
COFD[3550] = -4.18736053E-01;
COFD[3551] = 1.75821344E-02;
COFD[3552] = -2.19778210E+01;
COFD[3553] = 5.49000112E+00;
COFD[3554] = -4.60439480E-01;
COFD[3555] = 1.84791361E-02;
COFD[3556] = -1.99576934E+01;
COFD[3557] = 4.99411384E+00;
COFD[3558] = -4.19672196E-01;
COFD[3559] = 1.76190456E-02;
COFD[3560] = -2.19879513E+01;
COFD[3561] = 5.48342675E+00;
COFD[3562] = -4.57782070E-01;
COFD[3563] = 1.82957850E-02;
COFD[3564] = -1.98801302E+01;
COFD[3565] = 4.34170635E+00;
COFD[3566] = -2.70199437E-01;
COFD[3567] = 8.70997059E-03;
COFD[3568] = -2.02330474E+01;
COFD[3569] = 5.09185655E+00;
COFD[3570] = -4.30641631E-01;
COFD[3571] = 1.80275784E-02;
COFD[3572] = -1.54350257E+01;
COFD[3573] = 3.83529069E+00;
COFD[3574] = -2.80481778E-01;
COFD[3575] = 1.20302770E-02;
COFD[3576] = -2.09600405E+01;
COFD[3577] = 5.31589192E+00;
COFD[3578] = -4.54344889E-01;
COFD[3579] = 1.88463890E-02;
COFD[3580] = -1.93167278E+01;
COFD[3581] = 5.37588635E+00;
COFD[3582] = -4.60762834E-01;
COFD[3583] = 1.90722493E-02;
COFD[3584] = -1.88299583E+01;
COFD[3585] = 4.75778339E+00;
COFD[3586] = -3.92510587E-01;
COFD[3587] = 1.65802295E-02;
COFD[3588] = -1.88494354E+01;
COFD[3589] = 4.75778339E+00;
COFD[3590] = -3.92510587E-01;
COFD[3591] = 1.65802295E-02;
COFD[3592] = -2.02403628E+01;
COFD[3593] = 5.09185655E+00;
COFD[3594] = -4.30641631E-01;
COFD[3595] = 1.80275784E-02;
COFD[3596] = -1.94264358E+01;
COFD[3597] = 4.32601172E+00;
COFD[3598] = -2.67841680E-01;
COFD[3599] = 8.59623460E-03;
COFD[3600] = -2.02473436E+01;
COFD[3601] = 5.09185655E+00;
COFD[3602] = -4.30641631E-01;
COFD[3603] = 1.80275784E-02;
COFD[3604] = -2.05109138E+01;
COFD[3605] = 4.65341631E+00;
COFD[3606] = -3.17798333E-01;
COFD[3607] = 1.10326172E-02;
COFD[3608] = -2.05193777E+01;
COFD[3609] = 4.65341631E+00;
COFD[3610] = -3.17798333E-01;
COFD[3611] = 1.10326172E-02;
COFD[3612] = -2.17230964E+01;
COFD[3613] = 5.47335592E+00;
COFD[3614] = -4.63541517E-01;
COFD[3615] = 1.88139284E-02;
COFD[3616] = -2.03314818E+01;
COFD[3617] = 4.73645660E+00;
COFD[3618] = -3.30449561E-01;
COFD[3619] = 1.16495551E-02;
COFD[3620] = -2.04799329E+01;
COFD[3621] = 5.16940940E+00;
COFD[3622] = -4.38949310E-01;
COFD[3623] = 1.83192313E-02;
COFD[3624] = -2.04799329E+01;
COFD[3625] = 5.16940940E+00;
COFD[3626] = -4.38949310E-01;
COFD[3627] = 1.83192313E-02;
COFD[3628] = -2.18346072E+01;
COFD[3629] = 5.25786660E+00;
COFD[3630] = -4.13869825E-01;
COFD[3631] = 1.58469961E-02;
COFD[3632] = -2.04875993E+01;
COFD[3633] = 5.16940940E+00;
COFD[3634] = -4.38949310E-01;
COFD[3635] = 1.83192313E-02;
COFD[3636] = -1.84784072E+01;
COFD[3637] = 4.58893676E+00;
COFD[3638] = -3.71964754E-01;
COFD[3639] = 1.57430700E-02;
COFD[3640] = -1.88331328E+01;
COFD[3641] = 4.58893676E+00;
COFD[3642] = -3.71964754E-01;
COFD[3643] = 1.57430700E-02;
COFD[3644] = -1.87986441E+01;
COFD[3645] = 4.75778339E+00;
COFD[3646] = -3.92510587E-01;
COFD[3647] = 1.65802295E-02;
COFD[3648] = -1.87774732E+01;
COFD[3649] = 4.75778339E+00;
COFD[3650] = -3.92510587E-01;
COFD[3651] = 1.65802295E-02;
COFD[3652] = -1.90412181E+01;
COFD[3653] = 4.66860843E+00;
COFD[3654] = -3.81778771E-01;
COFD[3655] = 1.61480037E-02;
COFD[3656] = -2.19684712E+01;
COFD[3657] = 5.49000112E+00;
COFD[3658] = -4.60439480E-01;
COFD[3659] = 1.84791361E-02;
COFD[3660] = -2.19648348E+01;
COFD[3661] = 5.26116815E+00;
COFD[3662] = -4.14426924E-01;
COFD[3663] = 1.58759137E-02;
COFD[3664] = -2.19732795E+01;
COFD[3665] = 5.49000112E+00;
COFD[3666] = -4.60439480E-01;
COFD[3667] = 1.84791361E-02;
COFD[3668] = -2.19732795E+01;
COFD[3669] = 5.49000112E+00;
COFD[3670] = -4.60439480E-01;
COFD[3671] = 1.84791361E-02;
COFD[3672] = -2.19584078E+01;
COFD[3673] = 5.49000112E+00;
COFD[3674] = -4.60439480E-01;
COFD[3675] = 1.84791361E-02;
COFD[3676] = -1.20165846E+01;
COFD[3677] = 2.49189009E+00;
COFD[3678] = -1.09242845E-01;
COFD[3679] = 4.74144793E-03;
COFD[3680] = -2.18346072E+01;
COFD[3681] = 5.25786660E+00;
COFD[3682] = -4.13869825E-01;
COFD[3683] = 1.58469961E-02;
COFD[3684] = -2.17114866E+01;
COFD[3685] = 5.08384420E+00;
COFD[3686] = -3.84961399E-01;
COFD[3687] = 1.43593603E-02;
COFD[3688] = -2.16868697E+01;
COFD[3689] = 5.08384420E+00;
COFD[3690] = -3.84961399E-01;
COFD[3691] = 1.43593603E-02;
COFD[3692] = -1.87611451E+01;
COFD[3693] = 4.75778339E+00;
COFD[3694] = -3.92510587E-01;
COFD[3695] = 1.65802295E-02;
COFD[3696] = -1.98895266E+01;
COFD[3697] = 4.34170635E+00;
COFD[3698] = -2.70199437E-01;
COFD[3699] = 8.70997059E-03;
COFD[3700] = -1.98895266E+01;
COFD[3701] = 4.34170635E+00;
COFD[3702] = -2.70199437E-01;
COFD[3703] = 8.70997059E-03;
COFD[3704] = -2.04875993E+01;
COFD[3705] = 5.16940940E+00;
COFD[3706] = -4.38949310E-01;
COFD[3707] = 1.83192313E-02;
COFD[3708] = -2.16565978E+01;
COFD[3709] = 5.08384420E+00;
COFD[3710] = -3.84961399E-01;
COFD[3711] = 1.43593603E-02;
COFD[3712] = -2.16591542E+01;
COFD[3713] = 5.08384420E+00;
COFD[3714] = -3.84961399E-01;
COFD[3715] = 1.43593603E-02;
COFD[3716] = -1.99267541E+01;
COFD[3717] = 4.98617709E+00;
COFD[3718] = -4.18736053E-01;
COFD[3719] = 1.75821344E-02;
COFD[3720] = -2.09478839E+01;
COFD[3721] = 5.35250010E+00;
COFD[3722] = -4.58316703E-01;
COFD[3723] = 1.89887690E-02;
COFD[3724] = -2.20664856E+01;
COFD[3725] = 5.48219421E+00;
COFD[3726] = -4.57118011E-01;
COFD[3727] = 1.82481275E-02;
COFD[3728] = -2.18827753E+01;
COFD[3729] = 5.48189012E+00;
COFD[3730] = -4.63867746E-01;
COFD[3731] = 1.87984282E-02;
COFD[3732] = -2.17473530E+01;
COFD[3733] = 5.47335592E+00;
COFD[3734] = -4.63541517E-01;
COFD[3735] = 1.88139284E-02;
COFD[3736] = -1.88415950E+01;
COFD[3737] = 4.58893676E+00;
COFD[3738] = -3.71964754E-01;
COFD[3739] = 1.57430700E-02;
COFD[3740] = -1.88415950E+01;
COFD[3741] = 4.58893676E+00;
COFD[3742] = -3.71964754E-01;
COFD[3743] = 1.57430700E-02;
COFD[3744] = -1.88556767E+01;
COFD[3745] = 4.75778339E+00;
COFD[3746] = -3.92510587E-01;
COFD[3747] = 1.65802295E-02;
COFD[3748] = -1.98882909E+01;
COFD[3749] = 4.34170635E+00;
COFD[3750] = -2.70199437E-01;
COFD[3751] = 8.70997059E-03;
COFD[3752] = -2.19834059E+01;
COFD[3753] = 5.49000112E+00;
COFD[3754] = -4.60439480E-01;
COFD[3755] = 1.84791361E-02;
COFD[3756] = -1.99525417E+01;
COFD[3757] = 4.98617709E+00;
COFD[3758] = -4.18736053E-01;
COFD[3759] = 1.75821344E-02;
COFD[3760] = -2.19880407E+01;
COFD[3761] = 5.49000112E+00;
COFD[3762] = -4.60439480E-01;
COFD[3763] = 1.84791361E-02;
COFD[3764] = -1.99660065E+01;
COFD[3765] = 4.99411384E+00;
COFD[3766] = -4.19672196E-01;
COFD[3767] = 1.76190456E-02;
COFD[3768] = -2.19981706E+01;
COFD[3769] = 5.48342675E+00;
COFD[3770] = -4.57782070E-01;
COFD[3771] = 1.82957850E-02;
COFD[3772] = -1.98882909E+01;
COFD[3773] = 4.34170635E+00;
COFD[3774] = -2.70199437E-01;
COFD[3775] = 8.70997059E-03;
COFD[3776] = -2.02419285E+01;
COFD[3777] = 5.09185655E+00;
COFD[3778] = -4.30641631E-01;
COFD[3779] = 1.80275784E-02;
COFD[3780] = -1.54361173E+01;
COFD[3781] = 3.83529069E+00;
COFD[3782] = -2.80481778E-01;
COFD[3783] = 1.20302770E-02;
COFD[3784] = -2.09698593E+01;
COFD[3785] = 5.31589192E+00;
COFD[3786] = -4.54344889E-01;
COFD[3787] = 1.88463890E-02;
COFD[3788] = -1.93172916E+01;
COFD[3789] = 5.37588635E+00;
COFD[3790] = -4.60762834E-01;
COFD[3791] = 1.90722493E-02;
COFD[3792] = -1.88359597E+01;
COFD[3793] = 4.75778339E+00;
COFD[3794] = -3.92510587E-01;
COFD[3795] = 1.65802295E-02;
COFD[3796] = -1.88556767E+01;
COFD[3797] = 4.75778339E+00;
COFD[3798] = -3.92510587E-01;
COFD[3799] = 1.65802295E-02;
COFD[3800] = -2.02493759E+01;
COFD[3801] = 5.09185655E+00;
COFD[3802] = -4.30641631E-01;
COFD[3803] = 1.80275784E-02;
COFD[3804] = -1.94329068E+01;
COFD[3805] = 4.32601172E+00;
COFD[3806] = -2.67841680E-01;
COFD[3807] = 8.59623460E-03;
COFD[3808] = -2.02564846E+01;
COFD[3809] = 5.09185655E+00;
COFD[3810] = -4.30641631E-01;
COFD[3811] = 1.80275784E-02;
COFD[3812] = -2.05193777E+01;
COFD[3813] = 4.65341631E+00;
COFD[3814] = -3.17798333E-01;
COFD[3815] = 1.10326172E-02;
COFD[3816] = -2.05279874E+01;
COFD[3817] = 4.65341631E+00;
COFD[3818] = -3.17798333E-01;
COFD[3819] = 1.10326172E-02;
COFD[3820] = -2.17334969E+01;
COFD[3821] = 5.47335592E+00;
COFD[3822] = -4.63541517E-01;
COFD[3823] = 1.88139284E-02;
COFD[3824] = -2.03377287E+01;
COFD[3825] = 4.73645660E+00;
COFD[3826] = -3.30449561E-01;
COFD[3827] = 1.16495551E-02;
COFD[3828] = -2.04886808E+01;
COFD[3829] = 5.16940940E+00;
COFD[3830] = -4.38949310E-01;
COFD[3831] = 1.83192313E-02;
COFD[3832] = -2.04886808E+01;
COFD[3833] = 5.16940940E+00;
COFD[3834] = -4.38949310E-01;
COFD[3835] = 1.83192313E-02;
COFD[3836] = -2.18450955E+01;
COFD[3837] = 5.25786660E+00;
COFD[3838] = -4.13869825E-01;
COFD[3839] = 1.58469961E-02;
COFD[3840] = -2.04964835E+01;
COFD[3841] = 5.16940940E+00;
COFD[3842] = -4.38949310E-01;
COFD[3843] = 1.83192313E-02;
COFD[3844] = -1.84839019E+01;
COFD[3845] = 4.58893676E+00;
COFD[3846] = -3.71964754E-01;
COFD[3847] = 1.57430700E-02;
COFD[3848] = -1.88415973E+01;
COFD[3849] = 4.58893676E+00;
COFD[3850] = -3.71964754E-01;
COFD[3851] = 1.57430700E-02;
COFD[3852] = -1.88046513E+01;
COFD[3853] = 4.75778339E+00;
COFD[3854] = -3.92510587E-01;
COFD[3855] = 1.65802295E-02;
COFD[3856] = -1.87832300E+01;
COFD[3857] = 4.75778339E+00;
COFD[3858] = -3.92510587E-01;
COFD[3859] = 1.65802295E-02;
COFD[3860] = -1.90492170E+01;
COFD[3861] = 4.66860843E+00;
COFD[3862] = -3.81778771E-01;
COFD[3863] = 1.61480037E-02;
COFD[3864] = -2.19784997E+01;
COFD[3865] = 5.49000112E+00;
COFD[3866] = -4.60439480E-01;
COFD[3867] = 1.84791361E-02;
COFD[3868] = -2.19757288E+01;
COFD[3869] = 5.26116815E+00;
COFD[3870] = -4.14426924E-01;
COFD[3871] = 1.58759137E-02;
COFD[3872] = -2.19834059E+01;
COFD[3873] = 5.49000112E+00;
COFD[3874] = -4.60439480E-01;
COFD[3875] = 1.84791361E-02;
COFD[3876] = -2.19834059E+01;
COFD[3877] = 5.49000112E+00;
COFD[3878] = -4.60439480E-01;
COFD[3879] = 1.84791361E-02;
COFD[3880] = -2.19682345E+01;
COFD[3881] = 5.49000112E+00;
COFD[3882] = -4.60439480E-01;
COFD[3883] = 1.84791361E-02;
COFD[3884] = -1.20186234E+01;
COFD[3885] = 2.49189009E+00;
COFD[3886] = -1.09242845E-01;
COFD[3887] = 4.74144793E-03;
COFD[3888] = -2.18450955E+01;
COFD[3889] = 5.25786660E+00;
COFD[3890] = -4.13869825E-01;
COFD[3891] = 1.58469961E-02;
COFD[3892] = -2.17244132E+01;
COFD[3893] = 5.08384420E+00;
COFD[3894] = -3.84961399E-01;
COFD[3895] = 1.43593603E-02;
COFD[3896] = -2.16991676E+01;
COFD[3897] = 5.08384420E+00;
COFD[3898] = -3.84961399E-01;
COFD[3899] = 1.43593603E-02;
COFD[3900] = -1.87663708E+01;
COFD[3901] = 4.75778339E+00;
COFD[3902] = -3.92510587E-01;
COFD[3903] = 1.65802295E-02;
COFD[3904] = -1.98978433E+01;
COFD[3905] = 4.34170635E+00;
COFD[3906] = -2.70199437E-01;
COFD[3907] = 8.70997059E-03;
COFD[3908] = -1.98978433E+01;
COFD[3909] = 4.34170635E+00;
COFD[3910] = -2.70199437E-01;
COFD[3911] = 8.70997059E-03;
COFD[3912] = -2.04964835E+01;
COFD[3913] = 5.16940940E+00;
COFD[3914] = -4.38949310E-01;
COFD[3915] = 1.83192313E-02;
COFD[3916] = -2.16681648E+01;
COFD[3917] = 5.08384420E+00;
COFD[3918] = -3.84961399E-01;
COFD[3919] = 1.43593603E-02;
COFD[3920] = -2.16707812E+01;
COFD[3921] = 5.08384420E+00;
COFD[3922] = -3.84961399E-01;
COFD[3923] = 1.43593603E-02;
COFD[3924] = -1.99350678E+01;
COFD[3925] = 4.98617709E+00;
COFD[3926] = -4.18736053E-01;
COFD[3927] = 1.75821344E-02;
COFD[3928] = -2.09538960E+01;
COFD[3929] = 5.35250010E+00;
COFD[3930] = -4.58316703E-01;
COFD[3931] = 1.89887690E-02;
COFD[3932] = -2.20751016E+01;
COFD[3933] = 5.48219421E+00;
COFD[3934] = -4.57118011E-01;
COFD[3935] = 1.82481275E-02;
COFD[3936] = -2.18916627E+01;
COFD[3937] = 5.48189012E+00;
COFD[3938] = -4.63867746E-01;
COFD[3939] = 1.87984282E-02;
COFD[3940] = -2.17561042E+01;
COFD[3941] = 5.47335592E+00;
COFD[3942] = -4.63541517E-01;
COFD[3943] = 1.88139284E-02;
COFD[3944] = -1.88502053E+01;
COFD[3945] = 4.58893676E+00;
COFD[3946] = -3.71964754E-01;
COFD[3947] = 1.57430700E-02;
COFD[3948] = -1.88502053E+01;
COFD[3949] = 4.58893676E+00;
COFD[3950] = -3.71964754E-01;
COFD[3951] = 1.57430700E-02;
COFD[3952] = -1.57478567E+01;
COFD[3953] = 3.63667810E+00;
COFD[3954] = -2.55876890E-01;
COFD[3955] = 1.10128613E-02;
COFD[3956] = -2.18726617E+01;
COFD[3957] = 5.49119562E+00;
COFD[3958] = -4.61230197E-01;
COFD[3959] = 1.85376198E-02;
COFD[3960] = -2.00084012E+01;
COFD[3961] = 4.92657613E+00;
COFD[3962] = -4.11730248E-01;
COFD[3963] = 1.73070472E-02;
COFD[3964] = -1.68255854E+01;
COFD[3965] = 3.86251333E+00;
COFD[3966] = -2.83724399E-01;
COFD[3967] = 1.21589320E-02;
COFD[3968] = -2.00142349E+01;
COFD[3969] = 4.92657613E+00;
COFD[3970] = -4.11730248E-01;
COFD[3971] = 1.73070472E-02;
COFD[3972] = -1.68274036E+01;
COFD[3973] = 3.86762857E+00;
COFD[3974] = -2.84331684E-01;
COFD[3975] = 1.21829423E-02;
COFD[3976] = -2.01878286E+01;
COFD[3977] = 4.99261696E+00;
COFD[3978] = -4.19495726E-01;
COFD[3979] = 1.76120917E-02;
COFD[3980] = -2.18726617E+01;
COFD[3981] = 5.49119562E+00;
COFD[3982] = -4.61230197E-01;
COFD[3983] = 1.85376198E-02;
COFD[3984] = -1.70494293E+01;
COFD[3985] = 3.94998946E+00;
COFD[3986] = -2.94215257E-01;
COFD[3987] = 1.25789510E-02;
COFD[3988] = -1.27891150E+01;
COFD[3989] = 2.86989894E+00;
COFD[3990] = -1.58928038E-01;
COFD[3991] = 6.92176252E-03;
COFD[3992] = -1.79027363E+01;
COFD[3993] = 4.24498090E+00;
COFD[3994] = -3.30123845E-01;
COFD[3995] = 1.40388009E-02;
COFD[3996] = -1.62068677E+01;
COFD[3997] = 4.33926971E+00;
COFD[3998] = -3.41907355E-01;
COFD[3999] = 1.45317558E-02;
COFD[4000] = -1.57253704E+01;
COFD[4001] = 3.63667810E+00;
COFD[4002] = -2.55876890E-01;
COFD[4003] = 1.10128613E-02;
COFD[4004] = -1.57478567E+01;
COFD[4005] = 3.63667810E+00;
COFD[4006] = -2.55876890E-01;
COFD[4007] = 1.10128613E-02;
COFD[4008] = -1.70585174E+01;
COFD[4009] = 3.94998946E+00;
COFD[4010] = -2.94215257E-01;
COFD[4011] = 1.25789510E-02;
COFD[4012] = -2.14310740E+01;
COFD[4013] = 5.49133594E+00;
COFD[4014] = -4.61028475E-01;
COFD[4015] = 1.85204974E-02;
COFD[4016] = -1.70672203E+01;
COFD[4017] = 3.94998946E+00;
COFD[4018] = -2.94215257E-01;
COFD[4019] = 1.25789510E-02;
COFD[4020] = -2.17230964E+01;
COFD[4021] = 5.47335592E+00;
COFD[4022] = -4.63541517E-01;
COFD[4023] = 1.88139284E-02;
COFD[4024] = -2.17334969E+01;
COFD[4025] = 5.47335592E+00;
COFD[4026] = -4.63541517E-01;
COFD[4027] = 1.88139284E-02;
COFD[4028] = -1.94443917E+01;
COFD[4029] = 4.76313424E+00;
COFD[4030] = -3.93150913E-01;
COFD[4031] = 1.66058644E-02;
COFD[4032] = -2.13011004E+01;
COFD[4033] = 5.46721890E+00;
COFD[4034] = -4.63882055E-01;
COFD[4035] = 1.88719903E-02;
COFD[4036] = -1.73040188E+01;
COFD[4037] = 4.03969426E+00;
COFD[4038] = -3.05064314E-01;
COFD[4039] = 1.30170956E-02;
COFD[4040] = -1.73040188E+01;
COFD[4041] = 4.03969426E+00;
COFD[4042] = -3.05064314E-01;
COFD[4043] = 1.30170956E-02;
COFD[4044] = -2.13666362E+01;
COFD[4045] = 5.34700929E+00;
COFD[4046] = -4.57742322E-01;
COFD[4047] = 1.89691609E-02;
COFD[4048] = -1.73135097E+01;
COFD[4049] = 4.03969426E+00;
COFD[4050] = -3.05064314E-01;
COFD[4051] = 1.30170956E-02;
COFD[4052] = -1.54093883E+01;
COFD[4053] = 3.47420753E+00;
COFD[4054] = -2.35134222E-01;
COFD[4055] = 1.01284662E-02;
COFD[4056] = -1.58039288E+01;
COFD[4057] = 3.47420753E+00;
COFD[4058] = -2.35134222E-01;
COFD[4059] = 1.01284662E-02;
COFD[4060] = -1.56936676E+01;
COFD[4061] = 3.63667810E+00;
COFD[4062] = -2.55876890E-01;
COFD[4063] = 1.10128613E-02;
COFD[4064] = -1.56693720E+01;
COFD[4065] = 3.63667810E+00;
COFD[4066] = -2.55876890E-01;
COFD[4067] = 1.10128613E-02;
COFD[4068] = -1.59707359E+01;
COFD[4069] = 3.54361729E+00;
COFD[4070] = -2.44007529E-01;
COFD[4071] = 1.05072797E-02;
COFD[4072] = -2.00022410E+01;
COFD[4073] = 4.92657613E+00;
COFD[4074] = -4.11730248E-01;
COFD[4075] = 1.73070472E-02;
COFD[4076] = -2.14899377E+01;
COFD[4077] = 5.34434931E+00;
COFD[4078] = -4.57463510E-01;
COFD[4079] = 1.89596163E-02;
COFD[4080] = -2.00084012E+01;
COFD[4081] = 4.92657613E+00;
COFD[4082] = -4.11730248E-01;
COFD[4083] = 1.73070472E-02;
COFD[4084] = -2.00084012E+01;
COFD[4085] = 4.92657613E+00;
COFD[4086] = -4.11730248E-01;
COFD[4087] = 1.73070472E-02;
COFD[4088] = -1.99894013E+01;
COFD[4089] = 4.92657613E+00;
COFD[4090] = -4.11730248E-01;
COFD[4091] = 1.73070472E-02;
COFD[4092] = -1.12637288E+01;
COFD[4093] = 2.25713623E+00;
COFD[4094] = -8.27150060E-02;
COFD[4095] = 3.77397157E-03;
COFD[4096] = -2.13666362E+01;
COFD[4097] = 5.34700929E+00;
COFD[4098] = -4.57742322E-01;
COFD[4099] = 1.89691609E-02;
COFD[4100] = -2.18894089E+01;
COFD[4101] = 5.43564723E+00;
COFD[4102] = -4.65662187E-01;
COFD[4103] = 1.91744823E-02;
COFD[4104] = -2.18555044E+01;
COFD[4105] = 5.43564723E+00;
COFD[4106] = -4.65662187E-01;
COFD[4107] = 1.91744823E-02;
COFD[4108] = -1.56469396E+01;
COFD[4109] = 3.63667810E+00;
COFD[4110] = -2.55876890E-01;
COFD[4111] = 1.10128613E-02;
COFD[4112] = -2.18841170E+01;
COFD[4113] = 5.49119562E+00;
COFD[4114] = -4.61230197E-01;
COFD[4115] = 1.85376198E-02;
COFD[4116] = -2.18841170E+01;
COFD[4117] = 5.49119562E+00;
COFD[4118] = -4.61230197E-01;
COFD[4119] = 1.85376198E-02;
COFD[4120] = -1.73135097E+01;
COFD[4121] = 4.03969426E+00;
COFD[4122] = -3.05064314E-01;
COFD[4123] = 1.30170956E-02;
COFD[4124] = -2.18146336E+01;
COFD[4125] = 5.43564723E+00;
COFD[4126] = -4.65662187E-01;
COFD[4127] = 1.91744823E-02;
COFD[4128] = -2.18180521E+01;
COFD[4129] = 5.43564723E+00;
COFD[4130] = -4.65662187E-01;
COFD[4131] = 1.91744823E-02;
COFD[4132] = -1.68045170E+01;
COFD[4133] = 3.86251333E+00;
COFD[4134] = -2.83724399E-01;
COFD[4135] = 1.21589320E-02;
COFD[4136] = -1.78791358E+01;
COFD[4137] = 4.30050846E+00;
COFD[4138] = -3.37068745E-01;
COFD[4139] = 1.43295133E-02;
COFD[4140] = -2.02922971E+01;
COFD[4141] = 5.01169135E+00;
COFD[4142] = -4.21737204E-01;
COFD[4143] = 1.77000781E-02;
COFD[4144] = -1.96269497E+01;
COFD[4145] = 4.79115365E+00;
COFD[4146] = -3.96388963E-01;
COFD[4147] = 1.67304643E-02;
COFD[4148] = -1.94475293E+01;
COFD[4149] = 4.76313424E+00;
COFD[4150] = -3.93150913E-01;
COFD[4151] = 1.66058644E-02;
COFD[4152] = -1.58143273E+01;
COFD[4153] = 3.47420753E+00;
COFD[4154] = -2.35134222E-01;
COFD[4155] = 1.01284662E-02;
COFD[4156] = -1.58143273E+01;
COFD[4157] = 3.47420753E+00;
COFD[4158] = -2.35134222E-01;
COFD[4159] = 1.01284662E-02;
COFD[4160] = -1.83797601E+01;
COFD[4161] = 4.71208389E+00;
COFD[4162] = -3.87053240E-01;
COFD[4163] = 1.63622220E-02;
COFD[4164] = -1.97232796E+01;
COFD[4165] = 4.43158626E+00;
COFD[4166] = -2.83750498E-01;
COFD[4167] = 9.36547527E-03;
COFD[4168] = -2.15779365E+01;
COFD[4169] = 5.49050988E+00;
COFD[4170] = -4.61803086E-01;
COFD[4171] = 1.85876911E-02;
COFD[4172] = -1.98547414E+01;
COFD[4173] = 5.07012033E+00;
COFD[4174] = -4.28341021E-01;
COFD[4175] = 1.79480600E-02;
COFD[4176] = -2.15811296E+01;
COFD[4177] = 5.49050988E+00;
COFD[4178] = -4.61803086E-01;
COFD[4179] = 1.85876911E-02;
COFD[4180] = -1.98907500E+01;
COFD[4181] = 5.08242638E+00;
COFD[4182] = -4.29646094E-01;
COFD[4183] = 1.79932937E-02;
COFD[4184] = -2.16555839E+01;
COFD[4185] = 5.47509909E+00;
COFD[4186] = -4.54734352E-01;
COFD[4187] = 1.80903154E-02;
COFD[4188] = -1.97232796E+01;
COFD[4189] = 4.43158626E+00;
COFD[4190] = -2.83750498E-01;
COFD[4191] = 9.36547527E-03;
COFD[4192] = -2.00945931E+01;
COFD[4193] = 5.15838205E+00;
COFD[4194] = -4.37782020E-01;
COFD[4195] = 1.82788934E-02;
COFD[4196] = -1.54914778E+01;
COFD[4197] = 3.93394014E+00;
COFD[4198] = -2.92267339E-01;
COFD[4199] = 1.24999144E-02;
COFD[4200] = -2.04615561E+01;
COFD[4201] = 5.27516202E+00;
COFD[4202] = -4.49784854E-01;
COFD[4203] = 1.86764670E-02;
COFD[4204] = -1.89481451E+01;
COFD[4205] = 5.34360281E+00;
COFD[4206] = -4.57384674E-01;
COFD[4207] = 1.89568876E-02;
COFD[4208] = -1.83642414E+01;
COFD[4209] = 4.71208389E+00;
COFD[4210] = -3.87053240E-01;
COFD[4211] = 1.63622220E-02;
COFD[4212] = -1.83797601E+01;
COFD[4213] = 4.71208389E+00;
COFD[4214] = -3.87053240E-01;
COFD[4215] = 1.63622220E-02;
COFD[4216] = -1.97847039E+01;
COFD[4217] = 5.06148428E+00;
COFD[4218] = -4.27422345E-01;
COFD[4219] = 1.79160853E-02;
COFD[4220] = -1.67361923E+01;
COFD[4221] = 3.16504366E+00;
COFD[4222] = -9.19485624E-02;
COFD[4223] = 1.39362133E-04;
COFD[4224] = -1.97897729E+01;
COFD[4225] = 5.06148428E+00;
COFD[4226] = -4.27422345E-01;
COFD[4227] = 1.79160853E-02;
COFD[4228] = -2.03314818E+01;
COFD[4229] = 4.73645660E+00;
COFD[4230] = -3.30449561E-01;
COFD[4231] = 1.16495551E-02;
COFD[4232] = -2.03377287E+01;
COFD[4233] = 4.73645660E+00;
COFD[4234] = -3.30449561E-01;
COFD[4235] = 1.16495551E-02;
COFD[4236] = -2.13011004E+01;
COFD[4237] = 5.46721890E+00;
COFD[4238] = -4.63882055E-01;
COFD[4239] = 1.88719903E-02;
COFD[4240] = -1.83814844E+01;
COFD[4241] = 3.96858583E+00;
COFD[4242] = -2.16338446E-01;
COFD[4243] = 6.21110478E-03;
COFD[4244] = -2.00227826E+01;
COFD[4245] = 5.13666604E+00;
COFD[4246] = -4.35440428E-01;
COFD[4247] = 1.81959353E-02;
COFD[4248] = -2.00227826E+01;
COFD[4249] = 5.13666604E+00;
COFD[4250] = -4.35440428E-01;
COFD[4251] = 1.81959353E-02;
COFD[4252] = -2.04138562E+01;
COFD[4253] = 4.76200250E+00;
COFD[4254] = -3.40173961E-01;
COFD[4255] = 1.23201686E-02;
COFD[4256] = -2.00283932E+01;
COFD[4257] = 5.13666604E+00;
COFD[4258] = -4.35440428E-01;
COFD[4259] = 1.81959353E-02;
COFD[4260] = -1.80419342E+01;
COFD[4261] = 4.54362305E+00;
COFD[4262] = -3.66509821E-01;
COFD[4263] = 1.55233015E-02;
COFD[4264] = -1.83635768E+01;
COFD[4265] = 4.54362305E+00;
COFD[4266] = -3.66509821E-01;
COFD[4267] = 1.55233015E-02;
COFD[4268] = -1.96096776E+01;
COFD[4269] = 5.13046828E+00;
COFD[4270] = -4.34766301E-01;
COFD[4271] = 1.81718003E-02;
COFD[4272] = -1.83120369E+01;
COFD[4273] = 4.71208389E+00;
COFD[4274] = -3.87053240E-01;
COFD[4275] = 1.63622220E-02;
COFD[4276] = -1.85551642E+01;
COFD[4277] = 4.61313730E+00;
COFD[4278] = -3.74959998E-01;
COFD[4279] = 1.58672706E-02;
COFD[4280] = -2.15745464E+01;
COFD[4281] = 5.49050988E+00;
COFD[4282] = -4.61803086E-01;
COFD[4283] = 1.85876911E-02;
COFD[4284] = -2.16607004E+01;
COFD[4285] = 5.29855301E+00;
COFD[4286] = -4.20802111E-01;
COFD[4287] = 1.62086826E-02;
COFD[4288] = -2.15779365E+01;
COFD[4289] = 5.49050988E+00;
COFD[4290] = -4.61803086E-01;
COFD[4291] = 1.85876911E-02;
COFD[4292] = -2.15779365E+01;
COFD[4293] = 5.49050988E+00;
COFD[4294] = -4.61803086E-01;
COFD[4295] = 1.85876911E-02;
COFD[4296] = -2.15674201E+01;
COFD[4297] = 5.49050988E+00;
COFD[4298] = -4.61803086E-01;
COFD[4299] = 1.85876911E-02;
COFD[4300] = -1.16700746E+01;
COFD[4301] = 2.46254894E+00;
COFD[4302] = -1.05290016E-01;
COFD[4303] = 4.56346575E-03;
COFD[4304] = -2.04138562E+01;
COFD[4305] = 4.76200250E+00;
COFD[4306] = -3.40173961E-01;
COFD[4307] = 1.23201686E-02;
COFD[4308] = -2.13108025E+01;
COFD[4309] = 5.09638614E+00;
COFD[4310] = -3.88177504E-01;
COFD[4311] = 1.45586613E-02;
COFD[4312] = -2.12946294E+01;
COFD[4313] = 5.09638614E+00;
COFD[4314] = -3.88177504E-01;
COFD[4315] = 1.45586613E-02;
COFD[4316] = -1.83084600E+01;
COFD[4317] = 4.71208389E+00;
COFD[4318] = -3.87053240E-01;
COFD[4319] = 1.63622220E-02;
COFD[4320] = -1.97302781E+01;
COFD[4321] = 4.43158626E+00;
COFD[4322] = -2.83750498E-01;
COFD[4323] = 9.36547527E-03;
COFD[4324] = -1.97302781E+01;
COFD[4325] = 4.43158626E+00;
COFD[4326] = -2.83750498E-01;
COFD[4327] = 9.36547527E-03;
COFD[4328] = -2.00283932E+01;
COFD[4329] = 5.13666604E+00;
COFD[4330] = -4.35440428E-01;
COFD[4331] = 1.81959353E-02;
COFD[4332] = -2.12743699E+01;
COFD[4333] = 5.09638614E+00;
COFD[4334] = -3.88177504E-01;
COFD[4335] = 1.45586613E-02;
COFD[4336] = -2.12760964E+01;
COFD[4337] = 5.09638614E+00;
COFD[4338] = -3.88177504E-01;
COFD[4339] = 1.45586613E-02;
COFD[4340] = -1.98420312E+01;
COFD[4341] = 5.07012033E+00;
COFD[4342] = -4.28341021E-01;
COFD[4343] = 1.79480600E-02;
COFD[4344] = -2.08799158E+01;
COFD[4345] = 5.41943549E+00;
COFD[4346] = -4.64901055E-01;
COFD[4347] = 1.91933156E-02;
COFD[4348] = -2.17153391E+01;
COFD[4349] = 5.48583309E+00;
COFD[4350] = -4.58836911E-01;
COFD[4351] = 1.83694276E-02;
COFD[4352] = -2.16476156E+01;
COFD[4353] = 5.49222808E+00;
COFD[4354] = -4.62572220E-01;
COFD[4355] = 1.86418684E-02;
COFD[4356] = -2.13607484E+01;
COFD[4357] = 5.46721890E+00;
COFD[4358] = -4.63882055E-01;
COFD[4359] = 1.88719903E-02;
COFD[4360] = -1.83698223E+01;
COFD[4361] = 4.54362305E+00;
COFD[4362] = -3.66509821E-01;
COFD[4363] = 1.55233015E-02;
COFD[4364] = -1.83698223E+01;
COFD[4365] = 4.54362305E+00;
COFD[4366] = -3.66509821E-01;
COFD[4367] = 1.55233015E-02;
COFD[4368] = -1.40991870E+01;
COFD[4369] = 3.05361342E+00;
COFD[4370] = -1.82331859E-01;
COFD[4371] = 7.91667899E-03;
COFD[4372] = -2.08591782E+01;
COFD[4373] = 5.28883639E+00;
COFD[4374] = -4.51325359E-01;
COFD[4375] = 1.87342859E-02;
COFD[4376] = -1.79279827E+01;
COFD[4377] = 4.23476606E+00;
COFD[4378] = -3.28847162E-01;
COFD[4379] = 1.39854168E-02;
COFD[4380] = -1.50924406E+01;
COFD[4381] = 3.26459489E+00;
COFD[4382] = -2.09215287E-01;
COFD[4383] = 9.05961407E-03;
COFD[4384] = -1.79327065E+01;
COFD[4385] = 4.23476606E+00;
COFD[4386] = -3.28847162E-01;
COFD[4387] = 1.39854168E-02;
COFD[4388] = -1.50992879E+01;
COFD[4389] = 3.27065235E+00;
COFD[4390] = -2.09978212E-01;
COFD[4391] = 9.09167155E-03;
COFD[4392] = -1.81241123E+01;
COFD[4393] = 4.31155904E+00;
COFD[4394] = -3.38455014E-01;
COFD[4395] = 1.43877323E-02;
COFD[4396] = -2.08591782E+01;
COFD[4397] = 5.28883639E+00;
COFD[4398] = -4.51325359E-01;
COFD[4399] = 1.87342859E-02;
COFD[4400] = -1.53273699E+01;
COFD[4401] = 3.36125353E+00;
COFD[4402] = -2.21308349E-01;
COFD[4403] = 9.56431936E-03;
COFD[4404] = -1.14841469E+01;
COFD[4405] = 2.37509888E+00;
COFD[4406] = -9.35410216E-02;
COFD[4407] = 4.03605551E-03;
COFD[4408] = -1.60767172E+01;
COFD[4409] = 3.63047782E+00;
COFD[4410] = -2.55092110E-01;
COFD[4411] = 1.09796900E-02;
COFD[4412] = -1.44429294E+01;
COFD[4413] = 3.71325476E+00;
COFD[4414] = -2.65538326E-01;
COFD[4415] = 1.14199023E-02;
COFD[4416] = -1.40792448E+01;
COFD[4417] = 3.05361342E+00;
COFD[4418] = -1.82331859E-01;
COFD[4419] = 7.91667899E-03;
COFD[4420] = -1.40991870E+01;
COFD[4421] = 3.05361342E+00;
COFD[4422] = -1.82331859E-01;
COFD[4423] = 7.91667899E-03;
COFD[4424] = -1.53349427E+01;
COFD[4425] = 3.36125353E+00;
COFD[4426] = -2.21308349E-01;
COFD[4427] = 9.56431936E-03;
COFD[4428] = -2.04514811E+01;
COFD[4429] = 5.29593785E+00;
COFD[4430] = -4.52123029E-01;
COFD[4431] = 1.87641215E-02;
COFD[4432] = -1.53421729E+01;
COFD[4433] = 3.36125353E+00;
COFD[4434] = -2.21308349E-01;
COFD[4435] = 9.56431936E-03;
COFD[4436] = -2.04799329E+01;
COFD[4437] = 5.16940940E+00;
COFD[4438] = -4.38949310E-01;
COFD[4439] = 1.83192313E-02;
COFD[4440] = -2.04886808E+01;
COFD[4441] = 5.16940940E+00;
COFD[4442] = -4.38949310E-01;
COFD[4443] = 1.83192313E-02;
COFD[4444] = -1.73040188E+01;
COFD[4445] = 4.03969426E+00;
COFD[4446] = -3.05064314E-01;
COFD[4447] = 1.30170956E-02;
COFD[4448] = -2.00227826E+01;
COFD[4449] = 5.13666604E+00;
COFD[4450] = -4.35440428E-01;
COFD[4451] = 1.81959353E-02;
COFD[4452] = -1.55291510E+01;
COFD[4453] = 3.43207521E+00;
COFD[4454] = -2.29953304E-01;
COFD[4455] = 9.91591599E-03;
COFD[4456] = -1.55291510E+01;
COFD[4457] = 3.43207521E+00;
COFD[4458] = -2.29953304E-01;
COFD[4459] = 9.91591599E-03;
COFD[4460] = -1.95333395E+01;
COFD[4461] = 4.78702268E+00;
COFD[4462] = -3.95915871E-01;
COFD[4463] = 1.67124483E-02;
COFD[4464] = -1.55370831E+01;
COFD[4465] = 3.43207521E+00;
COFD[4466] = -2.29953304E-01;
COFD[4467] = 9.91591599E-03;
COFD[4468] = -1.39390941E+01;
COFD[4469] = 2.95722149E+00;
COFD[4470] = -1.70165913E-01;
COFD[4471] = 7.40439932E-03;
COFD[4472] = -1.43015402E+01;
COFD[4473] = 2.95722149E+00;
COFD[4474] = -1.70165913E-01;
COFD[4475] = 7.40439932E-03;
COFD[4476] = -1.40474386E+01;
COFD[4477] = 3.05361342E+00;
COFD[4478] = -1.82331859E-01;
COFD[4479] = 7.91667899E-03;
COFD[4480] = -1.40257823E+01;
COFD[4481] = 3.05361342E+00;
COFD[4482] = -1.82331859E-01;
COFD[4483] = 7.91667899E-03;
COFD[4484] = -1.43998769E+01;
COFD[4485] = 2.99798504E+00;
COFD[4486] = -1.75316659E-01;
COFD[4487] = 7.62155848E-03;
COFD[4488] = -1.79229832E+01;
COFD[4489] = 4.23476606E+00;
COFD[4490] = -3.28847162E-01;
COFD[4491] = 1.39854168E-02;
COFD[4492] = -1.96511331E+01;
COFD[4493] = 4.78390436E+00;
COFD[4494] = -3.95558661E-01;
COFD[4495] = 1.66988403E-02;
COFD[4496] = -1.79279827E+01;
COFD[4497] = 4.23476606E+00;
COFD[4498] = -3.28847162E-01;
COFD[4499] = 1.39854168E-02;
COFD[4500] = -1.79279827E+01;
COFD[4501] = 4.23476606E+00;
COFD[4502] = -3.28847162E-01;
COFD[4503] = 1.39854168E-02;
COFD[4504] = -1.79125256E+01;
COFD[4505] = 4.23476606E+00;
COFD[4506] = -3.28847162E-01;
COFD[4507] = 1.39854168E-02;
COFD[4508] = -1.02357775E+01;
COFD[4509] = 1.85324333E+00;
COFD[4510] = -2.65008845E-02;
COFD[4511] = 1.17336026E-03;
COFD[4512] = -1.95333395E+01;
COFD[4513] = 4.78702268E+00;
COFD[4514] = -3.95915871E-01;
COFD[4515] = 1.67124483E-02;
COFD[4516] = -2.01436223E+01;
COFD[4517] = 4.93246609E+00;
COFD[4518] = -4.12422852E-01;
COFD[4519] = 1.73342490E-02;
COFD[4520] = -2.01177712E+01;
COFD[4521] = 4.93246609E+00;
COFD[4522] = -4.12422852E-01;
COFD[4523] = 1.73342490E-02;
COFD[4524] = -1.40089290E+01;
COFD[4525] = 3.05361342E+00;
COFD[4526] = -1.82331859E-01;
COFD[4527] = 7.91667899E-03;
COFD[4528] = -2.08688784E+01;
COFD[4529] = 5.28883639E+00;
COFD[4530] = -4.51325359E-01;
COFD[4531] = 1.87342859E-02;
COFD[4532] = -2.08688784E+01;
COFD[4533] = 5.28883639E+00;
COFD[4534] = -4.51325359E-01;
COFD[4535] = 1.87342859E-02;
COFD[4536] = -1.55370831E+01;
COFD[4537] = 3.43207521E+00;
COFD[4538] = -2.29953304E-01;
COFD[4539] = 9.91591599E-03;
COFD[4540] = -2.00860663E+01;
COFD[4541] = 4.93246609E+00;
COFD[4542] = -4.12422852E-01;
COFD[4543] = 1.73342490E-02;
COFD[4544] = -2.00887403E+01;
COFD[4545] = 4.93246609E+00;
COFD[4546] = -4.12422852E-01;
COFD[4547] = 1.73342490E-02;
COFD[4548] = -1.50746890E+01;
COFD[4549] = 3.26459489E+00;
COFD[4550] = -2.09215287E-01;
COFD[4551] = 9.05961407E-03;
COFD[4552] = -1.60780487E+01;
COFD[4553] = 3.68013605E+00;
COFD[4554] = -2.61380238E-01;
COFD[4555] = 1.12455884E-02;
COFD[4556] = -1.82515930E+01;
COFD[4557] = 4.33330928E+00;
COFD[4558] = -3.41166504E-01;
COFD[4559] = 1.45009138E-02;
COFD[4560] = -1.75022922E+01;
COFD[4561] = 4.06781474E+00;
COFD[4562] = -3.08419808E-01;
COFD[4563] = 1.31505475E-02;
COFD[4564] = -1.73265530E+01;
COFD[4565] = 4.03969426E+00;
COFD[4566] = -3.05064314E-01;
COFD[4567] = 1.30170956E-02;
COFD[4568] = -1.43102863E+01;
COFD[4569] = 2.95722149E+00;
COFD[4570] = -1.70165913E-01;
COFD[4571] = 7.40439932E-03;
COFD[4572] = -1.43102863E+01;
COFD[4573] = 2.95722149E+00;
COFD[4574] = -1.70165913E-01;
COFD[4575] = 7.40439932E-03;
COFD[4576] = -1.40991870E+01;
COFD[4577] = 3.05361342E+00;
COFD[4578] = -1.82331859E-01;
COFD[4579] = 7.91667899E-03;
COFD[4580] = -2.08591782E+01;
COFD[4581] = 5.28883639E+00;
COFD[4582] = -4.51325359E-01;
COFD[4583] = 1.87342859E-02;
COFD[4584] = -1.79279827E+01;
COFD[4585] = 4.23476606E+00;
COFD[4586] = -3.28847162E-01;
COFD[4587] = 1.39854168E-02;
COFD[4588] = -1.50924406E+01;
COFD[4589] = 3.26459489E+00;
COFD[4590] = -2.09215287E-01;
COFD[4591] = 9.05961407E-03;
COFD[4592] = -1.79327065E+01;
COFD[4593] = 4.23476606E+00;
COFD[4594] = -3.28847162E-01;
COFD[4595] = 1.39854168E-02;
COFD[4596] = -1.50992879E+01;
COFD[4597] = 3.27065235E+00;
COFD[4598] = -2.09978212E-01;
COFD[4599] = 9.09167155E-03;
COFD[4600] = -1.81241123E+01;
COFD[4601] = 4.31155904E+00;
COFD[4602] = -3.38455014E-01;
COFD[4603] = 1.43877323E-02;
COFD[4604] = -2.08591782E+01;
COFD[4605] = 5.28883639E+00;
COFD[4606] = -4.51325359E-01;
COFD[4607] = 1.87342859E-02;
COFD[4608] = -1.53273699E+01;
COFD[4609] = 3.36125353E+00;
COFD[4610] = -2.21308349E-01;
COFD[4611] = 9.56431936E-03;
COFD[4612] = -1.14841469E+01;
COFD[4613] = 2.37509888E+00;
COFD[4614] = -9.35410216E-02;
COFD[4615] = 4.03605551E-03;
COFD[4616] = -1.60767172E+01;
COFD[4617] = 3.63047782E+00;
COFD[4618] = -2.55092110E-01;
COFD[4619] = 1.09796900E-02;
COFD[4620] = -1.44429294E+01;
COFD[4621] = 3.71325476E+00;
COFD[4622] = -2.65538326E-01;
COFD[4623] = 1.14199023E-02;
COFD[4624] = -1.40792448E+01;
COFD[4625] = 3.05361342E+00;
COFD[4626] = -1.82331859E-01;
COFD[4627] = 7.91667899E-03;
COFD[4628] = -1.40991870E+01;
COFD[4629] = 3.05361342E+00;
COFD[4630] = -1.82331859E-01;
COFD[4631] = 7.91667899E-03;
COFD[4632] = -1.53349427E+01;
COFD[4633] = 3.36125353E+00;
COFD[4634] = -2.21308349E-01;
COFD[4635] = 9.56431936E-03;
COFD[4636] = -2.04514811E+01;
COFD[4637] = 5.29593785E+00;
COFD[4638] = -4.52123029E-01;
COFD[4639] = 1.87641215E-02;
COFD[4640] = -1.53421729E+01;
COFD[4641] = 3.36125353E+00;
COFD[4642] = -2.21308349E-01;
COFD[4643] = 9.56431936E-03;
COFD[4644] = -2.04799329E+01;
COFD[4645] = 5.16940940E+00;
COFD[4646] = -4.38949310E-01;
COFD[4647] = 1.83192313E-02;
COFD[4648] = -2.04886808E+01;
COFD[4649] = 5.16940940E+00;
COFD[4650] = -4.38949310E-01;
COFD[4651] = 1.83192313E-02;
COFD[4652] = -1.73040188E+01;
COFD[4653] = 4.03969426E+00;
COFD[4654] = -3.05064314E-01;
COFD[4655] = 1.30170956E-02;
COFD[4656] = -2.00227826E+01;
COFD[4657] = 5.13666604E+00;
COFD[4658] = -4.35440428E-01;
COFD[4659] = 1.81959353E-02;
COFD[4660] = -1.55291510E+01;
COFD[4661] = 3.43207521E+00;
COFD[4662] = -2.29953304E-01;
COFD[4663] = 9.91591599E-03;
COFD[4664] = -1.55291510E+01;
COFD[4665] = 3.43207521E+00;
COFD[4666] = -2.29953304E-01;
COFD[4667] = 9.91591599E-03;
COFD[4668] = -1.95333395E+01;
COFD[4669] = 4.78702268E+00;
COFD[4670] = -3.95915871E-01;
COFD[4671] = 1.67124483E-02;
COFD[4672] = -1.55370831E+01;
COFD[4673] = 3.43207521E+00;
COFD[4674] = -2.29953304E-01;
COFD[4675] = 9.91591599E-03;
COFD[4676] = -1.39390941E+01;
COFD[4677] = 2.95722149E+00;
COFD[4678] = -1.70165913E-01;
COFD[4679] = 7.40439932E-03;
COFD[4680] = -1.43015402E+01;
COFD[4681] = 2.95722149E+00;
COFD[4682] = -1.70165913E-01;
COFD[4683] = 7.40439932E-03;
COFD[4684] = -1.40474386E+01;
COFD[4685] = 3.05361342E+00;
COFD[4686] = -1.82331859E-01;
COFD[4687] = 7.91667899E-03;
COFD[4688] = -1.40257823E+01;
COFD[4689] = 3.05361342E+00;
COFD[4690] = -1.82331859E-01;
COFD[4691] = 7.91667899E-03;
COFD[4692] = -1.43998769E+01;
COFD[4693] = 2.99798504E+00;
COFD[4694] = -1.75316659E-01;
COFD[4695] = 7.62155848E-03;
COFD[4696] = -1.79229832E+01;
COFD[4697] = 4.23476606E+00;
COFD[4698] = -3.28847162E-01;
COFD[4699] = 1.39854168E-02;
COFD[4700] = -1.96511331E+01;
COFD[4701] = 4.78390436E+00;
COFD[4702] = -3.95558661E-01;
COFD[4703] = 1.66988403E-02;
COFD[4704] = -1.79279827E+01;
COFD[4705] = 4.23476606E+00;
COFD[4706] = -3.28847162E-01;
COFD[4707] = 1.39854168E-02;
COFD[4708] = -1.79279827E+01;
COFD[4709] = 4.23476606E+00;
COFD[4710] = -3.28847162E-01;
COFD[4711] = 1.39854168E-02;
COFD[4712] = -1.79125256E+01;
COFD[4713] = 4.23476606E+00;
COFD[4714] = -3.28847162E-01;
COFD[4715] = 1.39854168E-02;
COFD[4716] = -1.02357775E+01;
COFD[4717] = 1.85324333E+00;
COFD[4718] = -2.65008845E-02;
COFD[4719] = 1.17336026E-03;
COFD[4720] = -1.95333395E+01;
COFD[4721] = 4.78702268E+00;
COFD[4722] = -3.95915871E-01;
COFD[4723] = 1.67124483E-02;
COFD[4724] = -2.01436223E+01;
COFD[4725] = 4.93246609E+00;
COFD[4726] = -4.12422852E-01;
COFD[4727] = 1.73342490E-02;
COFD[4728] = -2.01177712E+01;
COFD[4729] = 4.93246609E+00;
COFD[4730] = -4.12422852E-01;
COFD[4731] = 1.73342490E-02;
COFD[4732] = -1.40089290E+01;
COFD[4733] = 3.05361342E+00;
COFD[4734] = -1.82331859E-01;
COFD[4735] = 7.91667899E-03;
COFD[4736] = -2.08688784E+01;
COFD[4737] = 5.28883639E+00;
COFD[4738] = -4.51325359E-01;
COFD[4739] = 1.87342859E-02;
COFD[4740] = -2.08688784E+01;
COFD[4741] = 5.28883639E+00;
COFD[4742] = -4.51325359E-01;
COFD[4743] = 1.87342859E-02;
COFD[4744] = -1.55370831E+01;
COFD[4745] = 3.43207521E+00;
COFD[4746] = -2.29953304E-01;
COFD[4747] = 9.91591599E-03;
COFD[4748] = -2.00860663E+01;
COFD[4749] = 4.93246609E+00;
COFD[4750] = -4.12422852E-01;
COFD[4751] = 1.73342490E-02;
COFD[4752] = -2.00887403E+01;
COFD[4753] = 4.93246609E+00;
COFD[4754] = -4.12422852E-01;
COFD[4755] = 1.73342490E-02;
COFD[4756] = -1.50746890E+01;
COFD[4757] = 3.26459489E+00;
COFD[4758] = -2.09215287E-01;
COFD[4759] = 9.05961407E-03;
COFD[4760] = -1.60780487E+01;
COFD[4761] = 3.68013605E+00;
COFD[4762] = -2.61380238E-01;
COFD[4763] = 1.12455884E-02;
COFD[4764] = -1.82515930E+01;
COFD[4765] = 4.33330928E+00;
COFD[4766] = -3.41166504E-01;
COFD[4767] = 1.45009138E-02;
COFD[4768] = -1.75022922E+01;
COFD[4769] = 4.06781474E+00;
COFD[4770] = -3.08419808E-01;
COFD[4771] = 1.31505475E-02;
COFD[4772] = -1.73265530E+01;
COFD[4773] = 4.03969426E+00;
COFD[4774] = -3.05064314E-01;
COFD[4775] = 1.30170956E-02;
COFD[4776] = -1.43102863E+01;
COFD[4777] = 2.95722149E+00;
COFD[4778] = -1.70165913E-01;
COFD[4779] = 7.40439932E-03;
COFD[4780] = -1.43102863E+01;
COFD[4781] = 2.95722149E+00;
COFD[4782] = -1.70165913E-01;
COFD[4783] = 7.40439932E-03;
COFD[4784] = -1.77028653E+01;
COFD[4785] = 4.28431488E+00;
COFD[4786] = -3.35035279E-01;
COFD[4787] = 1.42440352E-02;
COFD[4788] = -2.15319330E+01;
COFD[4789] = 5.08422954E+00;
COFD[4790] = -3.85024067E-01;
COFD[4791] = 1.43625491E-02;
COFD[4792] = -2.17760485E+01;
COFD[4793] = 5.43916361E+00;
COFD[4794] = -4.65585351E-01;
COFD[4795] = 1.91505033E-02;
COFD[4796] = -1.91048368E+01;
COFD[4797] = 4.62560030E+00;
COFD[4798] = -3.76498522E-01;
COFD[4799] = 1.59308956E-02;
COFD[4800] = -2.17819436E+01;
COFD[4801] = 5.43916361E+00;
COFD[4802] = -4.65585351E-01;
COFD[4803] = 1.91505033E-02;
COFD[4804] = -1.91395940E+01;
COFD[4805] = 4.64293684E+00;
COFD[4806] = -3.78633702E-01;
COFD[4807] = 1.60189825E-02;
COFD[4808] = -2.19096275E+01;
COFD[4809] = 5.46291511E+00;
COFD[4810] = -4.65480345E-01;
COFD[4811] = 1.90232930E-02;
COFD[4812] = -2.15319330E+01;
COFD[4813] = 5.08422954E+00;
COFD[4814] = -3.85024067E-01;
COFD[4815] = 1.43625491E-02;
COFD[4816] = -1.94697438E+01;
COFD[4817] = 4.76361685E+00;
COFD[4818] = -3.93208188E-01;
COFD[4819] = 1.66081354E-02;
COFD[4820] = -1.46300048E+01;
COFD[4821] = 3.49269849E+00;
COFD[4822] = -2.37487444E-01;
COFD[4823] = 1.02285147E-02;
COFD[4824] = -2.00888847E+01;
COFD[4825] = 4.96384472E+00;
COFD[4826] = -4.16107673E-01;
COFD[4827] = 1.74787619E-02;
COFD[4828] = -1.83921909E+01;
COFD[4829] = 5.04400884E+00;
COFD[4830] = -4.25512519E-01;
COFD[4831] = 1.78473004E-02;
COFD[4832] = -1.76802511E+01;
COFD[4833] = 4.28431488E+00;
COFD[4834] = -3.35035279E-01;
COFD[4835] = 1.42440352E-02;
COFD[4836] = -1.77028653E+01;
COFD[4837] = 4.28431488E+00;
COFD[4838] = -3.35035279E-01;
COFD[4839] = 1.42440352E-02;
COFD[4840] = -1.92307434E+01;
COFD[4841] = 4.67811496E+00;
COFD[4842] = -3.82933409E-01;
COFD[4843] = 1.61949349E-02;
COFD[4844] = -1.94067705E+01;
COFD[4845] = 4.24747903E+00;
COFD[4846] = -2.57724392E-01;
COFD[4847] = 8.18869465E-03;
COFD[4848] = -1.92395256E+01;
COFD[4849] = 4.67811496E+00;
COFD[4850] = -3.82933409E-01;
COFD[4851] = 1.61949349E-02;
COFD[4852] = -2.18346072E+01;
COFD[4853] = 5.25786660E+00;
COFD[4854] = -4.13869825E-01;
COFD[4855] = 1.58469961E-02;
COFD[4856] = -2.18450955E+01;
COFD[4857] = 5.25786660E+00;
COFD[4858] = -4.13869825E-01;
COFD[4859] = 1.58469961E-02;
COFD[4860] = -2.13666362E+01;
COFD[4861] = 5.34700929E+00;
COFD[4862] = -4.57742322E-01;
COFD[4863] = 1.89691609E-02;
COFD[4864] = -2.04138562E+01;
COFD[4865] = 4.76200250E+00;
COFD[4866] = -3.40173961E-01;
COFD[4867] = 1.23201686E-02;
COFD[4868] = -1.95333395E+01;
COFD[4869] = 4.78702268E+00;
COFD[4870] = -3.95915871E-01;
COFD[4871] = 1.67124483E-02;
COFD[4872] = -1.95333395E+01;
COFD[4873] = 4.78702268E+00;
COFD[4874] = -3.95915871E-01;
COFD[4875] = 1.67124483E-02;
COFD[4876] = -2.17041214E+01;
COFD[4877] = 5.18838797E+00;
COFD[4878] = -4.11659348E-01;
COFD[4879] = 1.60095368E-02;
COFD[4880] = -1.95429138E+01;
COFD[4881] = 4.78702268E+00;
COFD[4882] = -3.95915871E-01;
COFD[4883] = 1.67124483E-02;
COFD[4884] = -1.73368170E+01;
COFD[4885] = 4.12106098E+00;
COFD[4886] = -3.14844590E-01;
COFD[4887] = 1.34091315E-02;
COFD[4888] = -1.77244878E+01;
COFD[4889] = 4.12106098E+00;
COFD[4890] = -3.14844590E-01;
COFD[4891] = 1.34091315E-02;
COFD[4892] = -1.84598404E+01;
COFD[4893] = 4.56402409E+00;
COFD[4894] = -3.68907695E-01;
COFD[4895] = 1.56174551E-02;
COFD[4896] = -1.76263067E+01;
COFD[4897] = 4.28431488E+00;
COFD[4898] = -3.35035279E-01;
COFD[4899] = 1.42440352E-02;
COFD[4900] = -1.78887976E+01;
COFD[4901] = 4.18708982E+00;
COFD[4902] = -3.22933489E-01;
COFD[4903] = 1.37401166E-02;
COFD[4904] = -2.17698242E+01;
COFD[4905] = 5.43916361E+00;
COFD[4906] = -4.65585351E-01;
COFD[4907] = 1.91505033E-02;
COFD[4908] = -2.24090193E+01;
COFD[4909] = 5.48297806E+00;
COFD[4910] = -4.57538266E-01;
COFD[4911] = 1.82782678E-02;
COFD[4912] = -2.17760485E+01;
COFD[4913] = 5.43916361E+00;
COFD[4914] = -4.65585351E-01;
COFD[4915] = 1.91505033E-02;
COFD[4916] = -2.17760485E+01;
COFD[4917] = 5.43916361E+00;
COFD[4918] = -4.65585351E-01;
COFD[4919] = 1.91505033E-02;
COFD[4920] = -2.17568534E+01;
COFD[4921] = 5.43916361E+00;
COFD[4922] = -4.65585351E-01;
COFD[4923] = 1.91505033E-02;
COFD[4924] = -1.13697262E+01;
COFD[4925] = 2.18828110E+00;
COFD[4926] = -6.85678803E-02;
COFD[4927] = 2.92186630E-03;
COFD[4928] = -2.17041214E+01;
COFD[4929] = 5.18838797E+00;
COFD[4930] = -4.11659348E-01;
COFD[4931] = 1.60095368E-02;
COFD[4932] = -2.24422447E+01;
COFD[4933] = 5.41684253E+00;
COFD[4934] = -4.43902129E-01;
COFD[4935] = 1.74998380E-02;
COFD[4936] = -2.24078651E+01;
COFD[4937] = 5.41684253E+00;
COFD[4938] = -4.43902129E-01;
COFD[4939] = 1.74998380E-02;
COFD[4940] = -1.76014166E+01;
COFD[4941] = 4.28431488E+00;
COFD[4942] = -3.35035279E-01;
COFD[4943] = 1.42440352E-02;
COFD[4944] = -2.15434811E+01;
COFD[4945] = 5.08422954E+00;
COFD[4946] = -3.85024067E-01;
COFD[4947] = 1.43625491E-02;
COFD[4948] = -2.15434811E+01;
COFD[4949] = 5.08422954E+00;
COFD[4950] = -3.85024067E-01;
COFD[4951] = 1.43625491E-02;
COFD[4952] = -1.95429138E+01;
COFD[4953] = 4.78702268E+00;
COFD[4954] = -3.95915871E-01;
COFD[4955] = 1.67124483E-02;
COFD[4956] = -2.23664633E+01;
COFD[4957] = 5.41684253E+00;
COFD[4958] = -4.43902129E-01;
COFD[4959] = 1.74998380E-02;
COFD[4960] = -2.23699245E+01;
COFD[4961] = 5.41684253E+00;
COFD[4962] = -4.43902129E-01;
COFD[4963] = 1.74998380E-02;
COFD[4964] = -1.90835924E+01;
COFD[4965] = 4.62560030E+00;
COFD[4966] = -3.76498522E-01;
COFD[4967] = 1.59308956E-02;
COFD[4968] = -2.02721454E+01;
COFD[4969] = 5.08491126E+00;
COFD[4970] = -4.29909057E-01;
COFD[4971] = 1.80023812E-02;
COFD[4972] = -2.18866888E+01;
COFD[4973] = 5.45199693E+00;
COFD[4974] = -4.65259658E-01;
COFD[4975] = 1.90596237E-02;
COFD[4976] = -2.17061558E+01;
COFD[4977] = 5.42020598E+00;
COFD[4978] = -4.64948899E-01;
COFD[4979] = 1.91933808E-02;
COFD[4980] = -2.13621816E+01;
COFD[4981] = 5.34700929E+00;
COFD[4982] = -4.57742322E-01;
COFD[4983] = 1.89691609E-02;
COFD[4984] = -1.77349742E+01;
COFD[4985] = 4.12106098E+00;
COFD[4986] = -3.14844590E-01;
COFD[4987] = 1.34091315E-02;
COFD[4988] = -1.77349742E+01;
COFD[4989] = 4.12106098E+00;
COFD[4990] = -3.14844590E-01;
COFD[4991] = 1.34091315E-02;
COFD[4992] = -1.41047925E+01;
COFD[4993] = 3.05361342E+00;
COFD[4994] = -1.82331859E-01;
COFD[4995] = 7.91667899E-03;
COFD[4996] = -2.08665613E+01;
COFD[4997] = 5.28883639E+00;
COFD[4998] = -4.51325359E-01;
COFD[4999] = 1.87342859E-02;
COFD[5000] = -1.79372136E+01;
COFD[5001] = 4.23476606E+00;
COFD[5002] = -3.28847162E-01;
COFD[5003] = 1.39854168E-02;
COFD[5004] = -1.51002407E+01;
COFD[5005] = 3.26459489E+00;
COFD[5006] = -2.09215287E-01;
COFD[5007] = 9.05961407E-03;
COFD[5008] = -1.79420259E+01;
COFD[5009] = 4.23476606E+00;
COFD[5010] = -3.28847162E-01;
COFD[5011] = 1.39854168E-02;
COFD[5012] = -1.51068133E+01;
COFD[5013] = 3.27065235E+00;
COFD[5014] = -2.09978212E-01;
COFD[5015] = 9.09167155E-03;
COFD[5016] = -1.81334314E+01;
COFD[5017] = 4.31155904E+00;
COFD[5018] = -3.38455014E-01;
COFD[5019] = 1.43877323E-02;
COFD[5020] = -2.08665613E+01;
COFD[5021] = 5.28883639E+00;
COFD[5022] = -4.51325359E-01;
COFD[5023] = 1.87342859E-02;
COFD[5024] = -1.53354270E+01;
COFD[5025] = 3.36125353E+00;
COFD[5026] = -2.21308349E-01;
COFD[5027] = 9.56431936E-03;
COFD[5028] = -1.14851085E+01;
COFD[5029] = 2.37509888E+00;
COFD[5030] = -9.35410216E-02;
COFD[5031] = 4.03605551E-03;
COFD[5032] = -1.60856572E+01;
COFD[5033] = 3.63047782E+00;
COFD[5034] = -2.55092110E-01;
COFD[5035] = 1.09796900E-02;
COFD[5036] = -1.44434251E+01;
COFD[5037] = 3.71325476E+00;
COFD[5038] = -2.65538326E-01;
COFD[5039] = 1.14199023E-02;
COFD[5040] = -1.40846299E+01;
COFD[5041] = 3.05361342E+00;
COFD[5042] = -1.82331859E-01;
COFD[5043] = 7.91667899E-03;
COFD[5044] = -1.41047925E+01;
COFD[5045] = 3.05361342E+00;
COFD[5046] = -1.82331859E-01;
COFD[5047] = 7.91667899E-03;
COFD[5048] = -1.53431237E+01;
COFD[5049] = 3.36125353E+00;
COFD[5050] = -2.21308349E-01;
COFD[5051] = 9.56431936E-03;
COFD[5052] = -2.04572980E+01;
COFD[5053] = 5.29593785E+00;
COFD[5054] = -4.52123029E-01;
COFD[5055] = 1.87641215E-02;
COFD[5056] = -1.53504741E+01;
COFD[5057] = 3.36125353E+00;
COFD[5058] = -2.21308349E-01;
COFD[5059] = 9.56431936E-03;
COFD[5060] = -2.04875993E+01;
COFD[5061] = 5.16940940E+00;
COFD[5062] = -4.38949310E-01;
COFD[5063] = 1.83192313E-02;
COFD[5064] = -2.04964835E+01;
COFD[5065] = 5.16940940E+00;
COFD[5066] = -4.38949310E-01;
COFD[5067] = 1.83192313E-02;
COFD[5068] = -1.73135097E+01;
COFD[5069] = 4.03969426E+00;
COFD[5070] = -3.05064314E-01;
COFD[5071] = 1.30170956E-02;
COFD[5072] = -2.00283932E+01;
COFD[5073] = 5.13666604E+00;
COFD[5074] = -4.35440428E-01;
COFD[5075] = 1.81959353E-02;
COFD[5076] = -1.55370831E+01;
COFD[5077] = 3.43207521E+00;
COFD[5078] = -2.29953304E-01;
COFD[5079] = 9.91591599E-03;
COFD[5080] = -1.55370831E+01;
COFD[5081] = 3.43207521E+00;
COFD[5082] = -2.29953304E-01;
COFD[5083] = 9.91591599E-03;
COFD[5084] = -1.95429138E+01;
COFD[5085] = 4.78702268E+00;
COFD[5086] = -3.95915871E-01;
COFD[5087] = 1.67124483E-02;
COFD[5088] = -1.55451432E+01;
COFD[5089] = 3.43207521E+00;
COFD[5090] = -2.29953304E-01;
COFD[5091] = 9.91591599E-03;
COFD[5092] = -1.39440151E+01;
COFD[5093] = 2.95722149E+00;
COFD[5094] = -1.70165913E-01;
COFD[5095] = 7.40439932E-03;
COFD[5096] = -1.43092071E+01;
COFD[5097] = 2.95722149E+00;
COFD[5098] = -1.70165913E-01;
COFD[5099] = 7.40439932E-03;
COFD[5100] = -1.40528291E+01;
COFD[5101] = 3.05361342E+00;
COFD[5102] = -1.82331859E-01;
COFD[5103] = 7.91667899E-03;
COFD[5104] = -1.40309431E+01;
COFD[5105] = 3.05361342E+00;
COFD[5106] = -1.82331859E-01;
COFD[5107] = 7.91667899E-03;
COFD[5108] = -1.44071092E+01;
COFD[5109] = 2.99798504E+00;
COFD[5110] = -1.75316659E-01;
COFD[5111] = 7.62155848E-03;
COFD[5112] = -1.79321214E+01;
COFD[5113] = 4.23476606E+00;
COFD[5114] = -3.28847162E-01;
COFD[5115] = 1.39854168E-02;
COFD[5116] = -1.96610932E+01;
COFD[5117] = 4.78390436E+00;
COFD[5118] = -3.95558661E-01;
COFD[5119] = 1.66988403E-02;
COFD[5120] = -1.79372136E+01;
COFD[5121] = 4.23476606E+00;
COFD[5122] = -3.28847162E-01;
COFD[5123] = 1.39854168E-02;
COFD[5124] = -1.79372136E+01;
COFD[5125] = 4.23476606E+00;
COFD[5126] = -3.28847162E-01;
COFD[5127] = 1.39854168E-02;
COFD[5128] = -1.79214730E+01;
COFD[5129] = 4.23476606E+00;
COFD[5130] = -3.28847162E-01;
COFD[5131] = 1.39854168E-02;
COFD[5132] = -1.02375799E+01;
COFD[5133] = 1.85324333E+00;
COFD[5134] = -2.65008845E-02;
COFD[5135] = 1.17336026E-03;
COFD[5136] = -1.95429138E+01;
COFD[5137] = 4.78702268E+00;
COFD[5138] = -3.95915871E-01;
COFD[5139] = 1.67124483E-02;
COFD[5140] = -2.01555344E+01;
COFD[5141] = 4.93246609E+00;
COFD[5142] = -4.12422852E-01;
COFD[5143] = 1.73342490E-02;
COFD[5144] = -2.01290763E+01;
COFD[5145] = 4.93246609E+00;
COFD[5146] = -4.12422852E-01;
COFD[5147] = 1.73342490E-02;
COFD[5148] = -1.40136043E+01;
COFD[5149] = 3.05361342E+00;
COFD[5150] = -1.82331859E-01;
COFD[5151] = 7.91667899E-03;
COFD[5152] = -2.08764072E+01;
COFD[5153] = 5.28883639E+00;
COFD[5154] = -4.51325359E-01;
COFD[5155] = 1.87342859E-02;
COFD[5156] = -2.08764072E+01;
COFD[5157] = 5.28883639E+00;
COFD[5158] = -4.51325359E-01;
COFD[5159] = 1.87342859E-02;
COFD[5160] = -1.55451432E+01;
COFD[5161] = 3.43207521E+00;
COFD[5162] = -2.29953304E-01;
COFD[5163] = 9.91591599E-03;
COFD[5164] = -2.00966694E+01;
COFD[5165] = 4.93246609E+00;
COFD[5166] = -4.12422852E-01;
COFD[5167] = 1.73342490E-02;
COFD[5168] = -2.00994008E+01;
COFD[5169] = 4.93246609E+00;
COFD[5170] = -4.12422852E-01;
COFD[5171] = 1.73342490E-02;
COFD[5172] = -1.50822150E+01;
COFD[5173] = 3.26459489E+00;
COFD[5174] = -2.09215287E-01;
COFD[5175] = 9.05961407E-03;
COFD[5176] = -1.60834436E+01;
COFD[5177] = 3.68013605E+00;
COFD[5178] = -2.61380238E-01;
COFD[5179] = 1.12455884E-02;
COFD[5180] = -1.82594016E+01;
COFD[5181] = 4.33330928E+00;
COFD[5182] = -3.41166504E-01;
COFD[5183] = 1.45009138E-02;
COFD[5184] = -1.75103553E+01;
COFD[5185] = 4.06781474E+00;
COFD[5186] = -3.08419808E-01;
COFD[5187] = 1.31505475E-02;
COFD[5188] = -1.73344883E+01;
COFD[5189] = 4.03969426E+00;
COFD[5190] = -3.05064314E-01;
COFD[5191] = 1.30170956E-02;
COFD[5192] = -1.43180896E+01;
COFD[5193] = 2.95722149E+00;
COFD[5194] = -1.70165913E-01;
COFD[5195] = 7.40439932E-03;
COFD[5196] = -1.43180896E+01;
COFD[5197] = 2.95722149E+00;
COFD[5198] = -1.70165913E-01;
COFD[5199] = 7.40439932E-03;
COFD[5200] = -1.26418053E+01;
COFD[5201] = 2.59809959E+00;
COFD[5202] = -1.23503755E-01;
COFD[5203] = 5.38095363E-03;
COFD[5204] = -1.90199042E+01;
COFD[5205] = 4.78118094E+00;
COFD[5206] = -3.95246621E-01;
COFD[5207] = 1.66869495E-02;
COFD[5208] = -1.60671247E+01;
COFD[5209] = 3.68775110E+00;
COFD[5210] = -2.62341411E-01;
COFD[5211] = 1.12860938E-02;
COFD[5212] = -1.35094169E+01;
COFD[5213] = 2.78343819E+00;
COFD[5214] = -1.47679033E-01;
COFD[5215] = 6.43347681E-03;
COFD[5216] = -1.60698889E+01;
COFD[5217] = 3.68775110E+00;
COFD[5218] = -2.62341411E-01;
COFD[5219] = 1.12860938E-02;
COFD[5220] = -1.35207569E+01;
COFD[5221] = 2.78878811E+00;
COFD[5222] = -1.48374416E-01;
COFD[5223] = 6.46363543E-03;
COFD[5224] = -1.62191158E+01;
COFD[5225] = 3.74895195E+00;
COFD[5226] = -2.69976179E-01;
COFD[5227] = 1.16040269E-02;
COFD[5228] = -1.90199042E+01;
COFD[5229] = 4.78118094E+00;
COFD[5230] = -3.95246621E-01;
COFD[5231] = 1.66869495E-02;
COFD[5232] = -1.37252376E+01;
COFD[5233] = 2.87937412E+00;
COFD[5234] = -1.60161971E-01;
COFD[5235] = 6.97536928E-03;
COFD[5236] = -1.10204977E+01;
COFD[5237] = 2.26529435E+00;
COFD[5238] = -8.17536844E-02;
COFD[5239] = 3.63649607E-03;
COFD[5240] = -1.42859349E+01;
COFD[5241] = 3.08809301E+00;
COFD[5242] = -1.86635579E-01;
COFD[5243] = 8.09582723E-03;
COFD[5244] = -1.28316361E+01;
COFD[5245] = 3.15334729E+00;
COFD[5246] = -1.94972021E-01;
COFD[5247] = 8.45114576E-03;
COFD[5248] = -1.26277765E+01;
COFD[5249] = 2.59809959E+00;
COFD[5250] = -1.23503755E-01;
COFD[5251] = 5.38095363E-03;
COFD[5252] = -1.26418053E+01;
COFD[5253] = 2.59809959E+00;
COFD[5254] = -1.23503755E-01;
COFD[5255] = 5.38095363E-03;
COFD[5256] = -1.37299086E+01;
COFD[5257] = 2.87937412E+00;
COFD[5258] = -1.60161971E-01;
COFD[5259] = 6.97536928E-03;
COFD[5260] = -1.86401817E+01;
COFD[5261] = 4.78767270E+00;
COFD[5262] = -3.95990323E-01;
COFD[5263] = 1.67152840E-02;
COFD[5264] = -1.37343429E+01;
COFD[5265] = 2.87937412E+00;
COFD[5266] = -1.60161971E-01;
COFD[5267] = 6.97536928E-03;
COFD[5268] = -1.84784072E+01;
COFD[5269] = 4.58893676E+00;
COFD[5270] = -3.71964754E-01;
COFD[5271] = 1.57430700E-02;
COFD[5272] = -1.84839019E+01;
COFD[5273] = 4.58893676E+00;
COFD[5274] = -3.71964754E-01;
COFD[5275] = 1.57430700E-02;
COFD[5276] = -1.54093883E+01;
COFD[5277] = 3.47420753E+00;
COFD[5278] = -2.35134222E-01;
COFD[5279] = 1.01284662E-02;
COFD[5280] = -1.80419342E+01;
COFD[5281] = 4.54362305E+00;
COFD[5282] = -3.66509821E-01;
COFD[5283] = 1.55233015E-02;
COFD[5284] = -1.39390941E+01;
COFD[5285] = 2.95722149E+00;
COFD[5286] = -1.70165913E-01;
COFD[5287] = 7.40439932E-03;
COFD[5288] = -1.39390941E+01;
COFD[5289] = 2.95722149E+00;
COFD[5290] = -1.70165913E-01;
COFD[5291] = 7.40439932E-03;
COFD[5292] = -1.73368170E+01;
COFD[5293] = 4.12106098E+00;
COFD[5294] = -3.14844590E-01;
COFD[5295] = 1.34091315E-02;
COFD[5296] = -1.39440151E+01;
COFD[5297] = 2.95722149E+00;
COFD[5298] = -1.70165913E-01;
COFD[5299] = 7.40439932E-03;
COFD[5300] = -1.25036297E+01;
COFD[5301] = 2.49495041E+00;
COFD[5302] = -1.09654828E-01;
COFD[5303] = 4.75997939E-03;
COFD[5304] = -1.27994289E+01;
COFD[5305] = 2.49495041E+00;
COFD[5306] = -1.09654828E-01;
COFD[5307] = 4.75997939E-03;
COFD[5308] = -1.25947810E+01;
COFD[5309] = 2.59809959E+00;
COFD[5310] = -1.23503755E-01;
COFD[5311] = 5.38095363E-03;
COFD[5312] = -1.25793647E+01;
COFD[5313] = 2.59809959E+00;
COFD[5314] = -1.23503755E-01;
COFD[5315] = 5.38095363E-03;
COFD[5316] = -1.29073742E+01;
COFD[5317] = 2.53781964E+00;
COFD[5318] = -1.15432437E-01;
COFD[5319] = 5.02009146E-03;
COFD[5320] = -1.60641874E+01;
COFD[5321] = 3.68775110E+00;
COFD[5322] = -2.62341411E-01;
COFD[5323] = 1.12860938E-02;
COFD[5324] = -1.74480558E+01;
COFD[5325] = 4.11739834E+00;
COFD[5326] = -3.14399199E-01;
COFD[5327] = 1.33910534E-02;
COFD[5328] = -1.60671247E+01;
COFD[5329] = 3.68775110E+00;
COFD[5330] = -2.62341411E-01;
COFD[5331] = 1.12860938E-02;
COFD[5332] = -1.60671247E+01;
COFD[5333] = 3.68775110E+00;
COFD[5334] = -2.62341411E-01;
COFD[5335] = 1.12860938E-02;
COFD[5336] = -1.60580042E+01;
COFD[5337] = 3.68775110E+00;
COFD[5338] = -2.62341411E-01;
COFD[5339] = 1.12860938E-02;
COFD[5340] = -1.00487549E+01;
COFD[5341] = 1.85510219E+00;
COFD[5342] = -2.80877616E-02;
COFD[5343] = 1.30613884E-03;
COFD[5344] = -1.73368170E+01;
COFD[5345] = 4.12106098E+00;
COFD[5346] = -3.14844590E-01;
COFD[5347] = 1.34091315E-02;
COFD[5348] = -1.80014016E+01;
COFD[5349] = 4.31633461E+00;
COFD[5350] = -3.39053638E-01;
COFD[5351] = 1.44128540E-02;
COFD[5352] = -1.79876869E+01;
COFD[5353] = 4.31633461E+00;
COFD[5354] = -3.39053638E-01;
COFD[5355] = 1.44128540E-02;
COFD[5356] = -1.25770173E+01;
COFD[5357] = 2.59809959E+00;
COFD[5358] = -1.23503755E-01;
COFD[5359] = 5.38095363E-03;
COFD[5360] = -1.90260792E+01;
COFD[5361] = 4.78118094E+00;
COFD[5362] = -3.95246621E-01;
COFD[5363] = 1.66869495E-02;
COFD[5364] = -1.90260792E+01;
COFD[5365] = 4.78118094E+00;
COFD[5366] = -3.95246621E-01;
COFD[5367] = 1.66869495E-02;
COFD[5368] = -1.39440151E+01;
COFD[5369] = 2.95722149E+00;
COFD[5370] = -1.70165913E-01;
COFD[5371] = 7.40439932E-03;
COFD[5372] = -1.79704131E+01;
COFD[5373] = 4.31633461E+00;
COFD[5374] = -3.39053638E-01;
COFD[5375] = 1.44128540E-02;
COFD[5376] = -1.79718892E+01;
COFD[5377] = 4.31633461E+00;
COFD[5378] = -3.39053638E-01;
COFD[5379] = 1.44128540E-02;
COFD[5380] = -1.34982282E+01;
COFD[5381] = 2.78343819E+00;
COFD[5382] = -1.47679033E-01;
COFD[5383] = 6.43347681E-03;
COFD[5384] = -1.43371454E+01;
COFD[5385] = 3.12244025E+00;
COFD[5386] = -1.90997489E-01;
COFD[5387] = 8.28063944E-03;
COFD[5388] = -1.63710509E+01;
COFD[5389] = 3.76527235E+00;
COFD[5390] = -2.71989986E-01;
COFD[5391] = 1.16869799E-02;
COFD[5392] = -1.56537703E+01;
COFD[5393] = 3.50740180E+00;
COFD[5394] = -2.39371413E-01;
COFD[5395] = 1.03091202E-02;
COFD[5396] = -1.54704102E+01;
COFD[5397] = 3.47420753E+00;
COFD[5398] = -2.35134222E-01;
COFD[5399] = 1.01284662E-02;
COFD[5400] = -1.28049223E+01;
COFD[5401] = 2.49495041E+00;
COFD[5402] = -1.09654828E-01;
COFD[5403] = 4.75997939E-03;
COFD[5404] = -1.28049223E+01;
COFD[5405] = 2.49495041E+00;
COFD[5406] = -1.09654828E-01;
COFD[5407] = 4.75997939E-03;
COFD[5408] = -1.29675013E+01;
COFD[5409] = 2.59809959E+00;
COFD[5410] = -1.23503755E-01;
COFD[5411] = 5.38095363E-03;
COFD[5412] = -1.93676077E+01;
COFD[5413] = 4.78118094E+00;
COFD[5414] = -3.95246621E-01;
COFD[5415] = 1.66869495E-02;
COFD[5416] = -1.64501469E+01;
COFD[5417] = 3.68775110E+00;
COFD[5418] = -2.62341411E-01;
COFD[5419] = 1.12860938E-02;
COFD[5420] = -1.38664480E+01;
COFD[5421] = 2.78343819E+00;
COFD[5422] = -1.47679033E-01;
COFD[5423] = 6.43347681E-03;
COFD[5424] = -1.64546887E+01;
COFD[5425] = 3.68775110E+00;
COFD[5426] = -2.62341411E-01;
COFD[5427] = 1.12860938E-02;
COFD[5428] = -1.38712196E+01;
COFD[5429] = 2.78878811E+00;
COFD[5430] = -1.48374416E-01;
COFD[5431] = 6.46363543E-03;
COFD[5432] = -1.66051152E+01;
COFD[5433] = 3.74895195E+00;
COFD[5434] = -2.69976179E-01;
COFD[5435] = 1.16040269E-02;
COFD[5436] = -1.93676077E+01;
COFD[5437] = 4.78118094E+00;
COFD[5438] = -3.95246621E-01;
COFD[5439] = 1.66869495E-02;
COFD[5440] = -1.40910557E+01;
COFD[5441] = 2.87937412E+00;
COFD[5442] = -1.60161971E-01;
COFD[5443] = 6.97536928E-03;
COFD[5444] = -1.12088370E+01;
COFD[5445] = 2.26529435E+00;
COFD[5446] = -8.17536844E-02;
COFD[5447] = 3.63649607E-03;
COFD[5448] = -1.46728819E+01;
COFD[5449] = 3.08809301E+00;
COFD[5450] = -1.86635579E-01;
COFD[5451] = 8.09582723E-03;
COFD[5452] = -1.30280651E+01;
COFD[5453] = 3.15334729E+00;
COFD[5454] = -1.94972021E-01;
COFD[5455] = 8.45114576E-03;
COFD[5456] = -1.29480232E+01;
COFD[5457] = 2.59809959E+00;
COFD[5458] = -1.23503755E-01;
COFD[5459] = 5.38095363E-03;
COFD[5460] = -1.29675013E+01;
COFD[5461] = 2.59809959E+00;
COFD[5462] = -1.23503755E-01;
COFD[5463] = 5.38095363E-03;
COFD[5464] = -1.40983716E+01;
COFD[5465] = 2.87937412E+00;
COFD[5466] = -1.60161971E-01;
COFD[5467] = 6.97536928E-03;
COFD[5468] = -1.89747864E+01;
COFD[5469] = 4.78767270E+00;
COFD[5470] = -3.95990323E-01;
COFD[5471] = 1.67152840E-02;
COFD[5472] = -1.41053530E+01;
COFD[5473] = 2.87937412E+00;
COFD[5474] = -1.60161971E-01;
COFD[5475] = 6.97536928E-03;
COFD[5476] = -1.88331328E+01;
COFD[5477] = 4.58893676E+00;
COFD[5478] = -3.71964754E-01;
COFD[5479] = 1.57430700E-02;
COFD[5480] = -1.88415973E+01;
COFD[5481] = 4.58893676E+00;
COFD[5482] = -3.71964754E-01;
COFD[5483] = 1.57430700E-02;
COFD[5484] = -1.58039288E+01;
COFD[5485] = 3.47420753E+00;
COFD[5486] = -2.35134222E-01;
COFD[5487] = 1.01284662E-02;
COFD[5488] = -1.83635768E+01;
COFD[5489] = 4.54362305E+00;
COFD[5490] = -3.66509821E-01;
COFD[5491] = 1.55233015E-02;
COFD[5492] = -1.43015402E+01;
COFD[5493] = 2.95722149E+00;
COFD[5494] = -1.70165913E-01;
COFD[5495] = 7.40439932E-03;
COFD[5496] = -1.43015402E+01;
COFD[5497] = 2.95722149E+00;
COFD[5498] = -1.70165913E-01;
COFD[5499] = 7.40439932E-03;
COFD[5500] = -1.77244878E+01;
COFD[5501] = 4.12106098E+00;
COFD[5502] = -3.14844590E-01;
COFD[5503] = 1.34091315E-02;
COFD[5504] = -1.43092071E+01;
COFD[5505] = 2.95722149E+00;
COFD[5506] = -1.70165913E-01;
COFD[5507] = 7.40439932E-03;
COFD[5508] = -1.27994289E+01;
COFD[5509] = 2.49495041E+00;
COFD[5510] = -1.09654828E-01;
COFD[5511] = 4.75997939E-03;
COFD[5512] = -1.31501950E+01;
COFD[5513] = 2.49495041E+00;
COFD[5514] = -1.09654828E-01;
COFD[5515] = 4.75997939E-03;
COFD[5516] = -1.29177269E+01;
COFD[5517] = 2.59809959E+00;
COFD[5518] = -1.23503755E-01;
COFD[5519] = 5.38095363E-03;
COFD[5520] = -1.28965551E+01;
COFD[5521] = 2.59809959E+00;
COFD[5522] = -1.23503755E-01;
COFD[5523] = 5.38095363E-03;
COFD[5524] = -1.32474582E+01;
COFD[5525] = 2.53781964E+00;
COFD[5526] = -1.15432437E-01;
COFD[5527] = 5.02009146E-03;
COFD[5528] = -1.64453382E+01;
COFD[5529] = 3.68775110E+00;
COFD[5530] = -2.62341411E-01;
COFD[5531] = 1.12860938E-02;
COFD[5532] = -1.78363552E+01;
COFD[5533] = 4.11739834E+00;
COFD[5534] = -3.14399199E-01;
COFD[5535] = 1.33910534E-02;
COFD[5536] = -1.64501469E+01;
COFD[5537] = 3.68775110E+00;
COFD[5538] = -2.62341411E-01;
COFD[5539] = 1.12860938E-02;
COFD[5540] = -1.64501469E+01;
COFD[5541] = 3.68775110E+00;
COFD[5542] = -2.62341411E-01;
COFD[5543] = 1.12860938E-02;
COFD[5544] = -1.64352740E+01;
COFD[5545] = 3.68775110E+00;
COFD[5546] = -2.62341411E-01;
COFD[5547] = 1.12860938E-02;
COFD[5548] = -1.02732123E+01;
COFD[5549] = 1.85510219E+00;
COFD[5550] = -2.80877616E-02;
COFD[5551] = 1.30613884E-03;
COFD[5552] = -1.77244878E+01;
COFD[5553] = 4.12106098E+00;
COFD[5554] = -3.14844590E-01;
COFD[5555] = 1.34091315E-02;
COFD[5556] = -1.84285327E+01;
COFD[5557] = 4.31633461E+00;
COFD[5558] = -3.39053638E-01;
COFD[5559] = 1.44128540E-02;
COFD[5560] = -1.84039133E+01;
COFD[5561] = 4.31633461E+00;
COFD[5562] = -3.39053638E-01;
COFD[5563] = 1.44128540E-02;
COFD[5564] = -1.28792069E+01;
COFD[5565] = 2.59809959E+00;
COFD[5566] = -1.23503755E-01;
COFD[5567] = 5.38095363E-03;
COFD[5568] = -1.93770047E+01;
COFD[5569] = 4.78118094E+00;
COFD[5570] = -3.95246621E-01;
COFD[5571] = 1.66869495E-02;
COFD[5572] = -1.93770047E+01;
COFD[5573] = 4.78118094E+00;
COFD[5574] = -3.95246621E-01;
COFD[5575] = 1.66869495E-02;
COFD[5576] = -1.43092071E+01;
COFD[5577] = 2.95722149E+00;
COFD[5578] = -1.70165913E-01;
COFD[5579] = 7.40439932E-03;
COFD[5580] = -1.83736384E+01;
COFD[5581] = 4.31633461E+00;
COFD[5582] = -3.39053638E-01;
COFD[5583] = 1.44128540E-02;
COFD[5584] = -1.83761951E+01;
COFD[5585] = 4.31633461E+00;
COFD[5586] = -3.39053638E-01;
COFD[5587] = 1.44128540E-02;
COFD[5588] = -1.38492662E+01;
COFD[5589] = 2.78343819E+00;
COFD[5590] = -1.47679033E-01;
COFD[5591] = 6.43347681E-03;
COFD[5592] = -1.46359250E+01;
COFD[5593] = 3.12244025E+00;
COFD[5594] = -1.90997489E-01;
COFD[5595] = 8.28063944E-03;
COFD[5596] = -1.67153773E+01;
COFD[5597] = 3.76527235E+00;
COFD[5598] = -2.71989986E-01;
COFD[5599] = 1.16869799E-02;
COFD[5600] = -1.60055333E+01;
COFD[5601] = 3.50740180E+00;
COFD[5602] = -2.39371413E-01;
COFD[5603] = 1.03091202E-02;
COFD[5604] = -1.58251323E+01;
COFD[5605] = 3.47420753E+00;
COFD[5606] = -2.35134222E-01;
COFD[5607] = 1.01284662E-02;
COFD[5608] = -1.31586578E+01;
COFD[5609] = 2.49495041E+00;
COFD[5610] = -1.09654828E-01;
COFD[5611] = 4.75997939E-03;
COFD[5612] = -1.31586578E+01;
COFD[5613] = 2.49495041E+00;
COFD[5614] = -1.09654828E-01;
COFD[5615] = 4.75997939E-03;
COFD[5616] = -1.27398674E+01;
COFD[5617] = 2.70797975E+00;
COFD[5618] = -1.37895013E-01;
COFD[5619] = 6.01030858E-03;
COFD[5620] = -1.92297881E+01;
COFD[5621] = 4.90190161E+00;
COFD[5622] = -4.08908928E-01;
COFD[5623] = 1.71998038E-02;
COFD[5624] = -1.62891576E+01;
COFD[5625] = 3.81860507E+00;
COFD[5626] = -2.78482683E-01;
COFD[5627] = 1.19505034E-02;
COFD[5628] = -1.36572548E+01;
COFD[5629] = 2.89678405E+00;
COFD[5630] = -1.62418864E-01;
COFD[5631] = 7.07300755E-03;
COFD[5632] = -1.62922126E+01;
COFD[5633] = 3.81860507E+00;
COFD[5634] = -2.78482683E-01;
COFD[5635] = 1.19505034E-02;
COFD[5636] = -1.36692846E+01;
COFD[5637] = 2.90243493E+00;
COFD[5638] = -1.63148841E-01;
COFD[5639] = 7.10447920E-03;
COFD[5640] = -1.64001336E+01;
COFD[5641] = 3.86315631E+00;
COFD[5642] = -2.83800980E-01;
COFD[5643] = 1.21619703E-02;
COFD[5644] = -1.92297881E+01;
COFD[5645] = 4.90190161E+00;
COFD[5646] = -4.08908928E-01;
COFD[5647] = 1.71998038E-02;
COFD[5648] = -1.38482796E+01;
COFD[5649] = 2.98298723E+00;
COFD[5650] = -1.73428215E-01;
COFD[5651] = 7.54224684E-03;
COFD[5652] = -1.05898290E+01;
COFD[5653] = 2.15819366E+00;
COFD[5654] = -6.52830580E-02;
COFD[5655] = 2.80657258E-03;
COFD[5656] = -1.44786974E+01;
COFD[5657] = 3.21910603E+00;
COFD[5658] = -2.03442081E-01;
COFD[5659] = 8.81515218E-03;
COFD[5660] = -1.29289104E+01;
COFD[5661] = 3.28440910E+00;
COFD[5662] = -2.11707534E-01;
COFD[5663] = 9.16419558E-03;
COFD[5664] = -1.27248146E+01;
COFD[5665] = 2.70797975E+00;
COFD[5666] = -1.37895013E-01;
COFD[5667] = 6.01030858E-03;
COFD[5668] = -1.27398674E+01;
COFD[5669] = 2.70797975E+00;
COFD[5670] = -1.37895013E-01;
COFD[5671] = 6.01030858E-03;
COFD[5672] = -1.38534008E+01;
COFD[5673] = 2.98298723E+00;
COFD[5674] = -1.73428215E-01;
COFD[5675] = 7.54224684E-03;
COFD[5676] = -2.07528924E+01;
COFD[5677] = 5.46746294E+00;
COFD[5678] = -4.64612142E-01;
COFD[5679] = 1.89302169E-02;
COFD[5680] = -1.38582668E+01;
COFD[5681] = 2.98298723E+00;
COFD[5682] = -1.73428215E-01;
COFD[5683] = 7.54224684E-03;
COFD[5684] = -1.87986441E+01;
COFD[5685] = 4.75778339E+00;
COFD[5686] = -3.92510587E-01;
COFD[5687] = 1.65802295E-02;
COFD[5688] = -1.88046513E+01;
COFD[5689] = 4.75778339E+00;
COFD[5690] = -3.92510587E-01;
COFD[5691] = 1.65802295E-02;
COFD[5692] = -1.56936676E+01;
COFD[5693] = 3.63667810E+00;
COFD[5694] = -2.55876890E-01;
COFD[5695] = 1.10128613E-02;
COFD[5696] = -1.96096776E+01;
COFD[5697] = 5.13046828E+00;
COFD[5698] = -4.34766301E-01;
COFD[5699] = 1.81718003E-02;
COFD[5700] = -1.40474386E+01;
COFD[5701] = 3.05361342E+00;
COFD[5702] = -1.82331859E-01;
COFD[5703] = 7.91667899E-03;
COFD[5704] = -1.40474386E+01;
COFD[5705] = 3.05361342E+00;
COFD[5706] = -1.82331859E-01;
COFD[5707] = 7.91667899E-03;
COFD[5708] = -1.84598404E+01;
COFD[5709] = 4.56402409E+00;
COFD[5710] = -3.68907695E-01;
COFD[5711] = 1.56174551E-02;
COFD[5712] = -1.40528291E+01;
COFD[5713] = 3.05361342E+00;
COFD[5714] = -1.82331859E-01;
COFD[5715] = 7.91667899E-03;
COFD[5716] = -1.25947810E+01;
COFD[5717] = 2.59809959E+00;
COFD[5718] = -1.23503755E-01;
COFD[5719] = 5.38095363E-03;
COFD[5720] = -1.29177269E+01;
COFD[5721] = 2.59809959E+00;
COFD[5722] = -1.23503755E-01;
COFD[5723] = 5.38095363E-03;
COFD[5724] = -1.26878052E+01;
COFD[5725] = 2.70797975E+00;
COFD[5726] = -1.37895013E-01;
COFD[5727] = 6.01030858E-03;
COFD[5728] = -1.26712975E+01;
COFD[5729] = 2.70797975E+00;
COFD[5730] = -1.37895013E-01;
COFD[5731] = 6.01030858E-03;
COFD[5732] = -1.30403611E+01;
COFD[5733] = 2.64561803E+00;
COFD[5734] = -1.29737887E-01;
COFD[5735] = 5.65422236E-03;
COFD[5736] = -1.62859132E+01;
COFD[5737] = 3.81860507E+00;
COFD[5738] = -2.78482683E-01;
COFD[5739] = 1.19505034E-02;
COFD[5740] = -1.77712698E+01;
COFD[5741] = 4.27963195E+00;
COFD[5742] = -3.34447162E-01;
COFD[5743] = 1.42193133E-02;
COFD[5744] = -1.62891576E+01;
COFD[5745] = 3.81860507E+00;
COFD[5746] = -2.78482683E-01;
COFD[5747] = 1.19505034E-02;
COFD[5748] = -1.62891576E+01;
COFD[5749] = 3.81860507E+00;
COFD[5750] = -2.78482683E-01;
COFD[5751] = 1.19505034E-02;
COFD[5752] = -1.62790902E+01;
COFD[5753] = 3.81860507E+00;
COFD[5754] = -2.78482683E-01;
COFD[5755] = 1.19505034E-02;
COFD[5756] = -9.78765619E+00;
COFD[5757] = 1.83095585E+00;
COFD[5758] = -2.43017348E-02;
COFD[5759] = 1.11147663E-03;
COFD[5760] = -1.84598404E+01;
COFD[5761] = 4.56402409E+00;
COFD[5762] = -3.68907695E-01;
COFD[5763] = 1.56174551E-02;
COFD[5764] = -1.83090676E+01;
COFD[5765] = 4.47032474E+00;
COFD[5766] = -3.57902803E-01;
COFD[5767] = 1.51856790E-02;
COFD[5768] = -1.82936973E+01;
COFD[5769] = 4.47032474E+00;
COFD[5770] = -3.57902803E-01;
COFD[5771] = 1.51856790E-02;
COFD[5772] = -1.26705964E+01;
COFD[5773] = 2.70797975E+00;
COFD[5774] = -1.37895013E-01;
COFD[5775] = 6.01030858E-03;
COFD[5776] = -1.92365248E+01;
COFD[5777] = 4.90190161E+00;
COFD[5778] = -4.08908928E-01;
COFD[5779] = 1.71998038E-02;
COFD[5780] = -1.92365248E+01;
COFD[5781] = 4.90190161E+00;
COFD[5782] = -4.08908928E-01;
COFD[5783] = 1.71998038E-02;
COFD[5784] = -1.40528291E+01;
COFD[5785] = 3.05361342E+00;
COFD[5786] = -1.82331859E-01;
COFD[5787] = 7.91667899E-03;
COFD[5788] = -1.82744093E+01;
COFD[5789] = 4.47032474E+00;
COFD[5790] = -3.57902803E-01;
COFD[5791] = 1.51856790E-02;
COFD[5792] = -1.82760545E+01;
COFD[5793] = 4.47032474E+00;
COFD[5794] = -3.57902803E-01;
COFD[5795] = 1.51856790E-02;
COFD[5796] = -1.36450291E+01;
COFD[5797] = 2.89678405E+00;
COFD[5798] = -1.62418864E-01;
COFD[5799] = 7.07300755E-03;
COFD[5800] = -1.45408056E+01;
COFD[5801] = 3.25814060E+00;
COFD[5802] = -2.08402129E-01;
COFD[5803] = 9.02544298E-03;
COFD[5804] = -1.65530650E+01;
COFD[5805] = 3.87564052E+00;
COFD[5806] = -2.85285750E-01;
COFD[5807] = 1.22208235E-02;
COFD[5808] = -1.59585141E+01;
COFD[5809] = 3.67153141E+00;
COFD[5810] = -2.60291173E-01;
COFD[5811] = 1.11995571E-02;
COFD[5812] = -1.57609953E+01;
COFD[5813] = 3.63667810E+00;
COFD[5814] = -2.55876890E-01;
COFD[5815] = 1.10128613E-02;
COFD[5816] = -1.29237328E+01;
COFD[5817] = 2.59809959E+00;
COFD[5818] = -1.23503755E-01;
COFD[5819] = 5.38095363E-03;
COFD[5820] = -1.29237328E+01;
COFD[5821] = 2.59809959E+00;
COFD[5822] = -1.23503755E-01;
COFD[5823] = 5.38095363E-03;
COFD[5824] = -1.27228762E+01;
COFD[5825] = 2.70797975E+00;
COFD[5826] = -1.37895013E-01;
COFD[5827] = 6.01030858E-03;
COFD[5828] = -1.92091472E+01;
COFD[5829] = 4.90190161E+00;
COFD[5830] = -4.08908928E-01;
COFD[5831] = 1.71998038E-02;
COFD[5832] = -1.62652790E+01;
COFD[5833] = 3.81860507E+00;
COFD[5834] = -2.78482683E-01;
COFD[5835] = 1.19505034E-02;
COFD[5836] = -1.36358384E+01;
COFD[5837] = 2.89678405E+00;
COFD[5838] = -1.62418864E-01;
COFD[5839] = 7.07300755E-03;
COFD[5840] = -1.62681911E+01;
COFD[5841] = 3.81860507E+00;
COFD[5842] = -2.78482683E-01;
COFD[5843] = 1.19505034E-02;
COFD[5844] = -1.36483759E+01;
COFD[5845] = 2.90243493E+00;
COFD[5846] = -1.63148841E-01;
COFD[5847] = 7.10447920E-03;
COFD[5848] = -1.63761127E+01;
COFD[5849] = 3.86315631E+00;
COFD[5850] = -2.83800980E-01;
COFD[5851] = 1.21619703E-02;
COFD[5852] = -1.92091472E+01;
COFD[5853] = 4.90190161E+00;
COFD[5854] = -4.08908928E-01;
COFD[5855] = 1.71998038E-02;
COFD[5856] = -1.38263990E+01;
COFD[5857] = 2.98298723E+00;
COFD[5858] = -1.73428215E-01;
COFD[5859] = 7.54224684E-03;
COFD[5860] = -1.05860917E+01;
COFD[5861] = 2.15819366E+00;
COFD[5862] = -6.52830580E-02;
COFD[5863] = 2.80657258E-03;
COFD[5864] = -1.44552961E+01;
COFD[5865] = 3.21910603E+00;
COFD[5866] = -2.03442081E-01;
COFD[5867] = 8.81515218E-03;
COFD[5868] = -1.29269277E+01;
COFD[5869] = 3.28440910E+00;
COFD[5870] = -2.11707534E-01;
COFD[5871] = 9.16419558E-03;
COFD[5872] = -1.27083190E+01;
COFD[5873] = 2.70797975E+00;
COFD[5874] = -1.37895013E-01;
COFD[5875] = 6.01030858E-03;
COFD[5876] = -1.27228762E+01;
COFD[5877] = 2.70797975E+00;
COFD[5878] = -1.37895013E-01;
COFD[5879] = 6.01030858E-03;
COFD[5880] = -1.38312998E+01;
COFD[5881] = 2.98298723E+00;
COFD[5882] = -1.73428215E-01;
COFD[5883] = 7.54224684E-03;
COFD[5884] = -1.87865134E+01;
COFD[5885] = 4.90686422E+00;
COFD[5886] = -4.09428407E-01;
COFD[5887] = 1.72173805E-02;
COFD[5888] = -1.38359545E+01;
COFD[5889] = 2.98298723E+00;
COFD[5890] = -1.73428215E-01;
COFD[5891] = 7.54224684E-03;
COFD[5892] = -1.87774732E+01;
COFD[5893] = 4.75778339E+00;
COFD[5894] = -3.92510587E-01;
COFD[5895] = 1.65802295E-02;
COFD[5896] = -1.87832300E+01;
COFD[5897] = 4.75778339E+00;
COFD[5898] = -3.92510587E-01;
COFD[5899] = 1.65802295E-02;
COFD[5900] = -1.56693720E+01;
COFD[5901] = 3.63667810E+00;
COFD[5902] = -2.55876890E-01;
COFD[5903] = 1.10128613E-02;
COFD[5904] = -1.83120369E+01;
COFD[5905] = 4.71208389E+00;
COFD[5906] = -3.87053240E-01;
COFD[5907] = 1.63622220E-02;
COFD[5908] = -1.40257823E+01;
COFD[5909] = 3.05361342E+00;
COFD[5910] = -1.82331859E-01;
COFD[5911] = 7.91667899E-03;
COFD[5912] = -1.40257823E+01;
COFD[5913] = 3.05361342E+00;
COFD[5914] = -1.82331859E-01;
COFD[5915] = 7.91667899E-03;
COFD[5916] = -1.76263067E+01;
COFD[5917] = 4.28431488E+00;
COFD[5918] = -3.35035279E-01;
COFD[5919] = 1.42440352E-02;
COFD[5920] = -1.40309431E+01;
COFD[5921] = 3.05361342E+00;
COFD[5922] = -1.82331859E-01;
COFD[5923] = 7.91667899E-03;
COFD[5924] = -1.25793647E+01;
COFD[5925] = 2.59809959E+00;
COFD[5926] = -1.23503755E-01;
COFD[5927] = 5.38095363E-03;
COFD[5928] = -1.28965551E+01;
COFD[5929] = 2.59809959E+00;
COFD[5930] = -1.23503755E-01;
COFD[5931] = 5.38095363E-03;
COFD[5932] = -1.26712975E+01;
COFD[5933] = 2.70797975E+00;
COFD[5934] = -1.37895013E-01;
COFD[5935] = 6.01030858E-03;
COFD[5936] = -1.26553174E+01;
COFD[5937] = 2.70797975E+00;
COFD[5938] = -1.37895013E-01;
COFD[5939] = 6.01030858E-03;
COFD[5940] = -1.30200077E+01;
COFD[5941] = 2.64561803E+00;
COFD[5942] = -1.29737887E-01;
COFD[5943] = 5.65422236E-03;
COFD[5944] = -1.62621854E+01;
COFD[5945] = 3.81860507E+00;
COFD[5946] = -2.78482683E-01;
COFD[5947] = 1.19505034E-02;
COFD[5948] = -1.77462428E+01;
COFD[5949] = 4.27963195E+00;
COFD[5950] = -3.34447162E-01;
COFD[5951] = 1.42193133E-02;
COFD[5952] = -1.62652790E+01;
COFD[5953] = 3.81860507E+00;
COFD[5954] = -2.78482683E-01;
COFD[5955] = 1.19505034E-02;
COFD[5956] = -1.62652790E+01;
COFD[5957] = 3.81860507E+00;
COFD[5958] = -2.78482683E-01;
COFD[5959] = 1.19505034E-02;
COFD[5960] = -1.62556766E+01;
COFD[5961] = 3.81860507E+00;
COFD[5962] = -2.78482683E-01;
COFD[5963] = 1.19505034E-02;
COFD[5964] = -9.78099173E+00;
COFD[5965] = 1.83095585E+00;
COFD[5966] = -2.43017348E-02;
COFD[5967] = 1.11147663E-03;
COFD[5968] = -1.76263067E+01;
COFD[5969] = 4.28431488E+00;
COFD[5970] = -3.35035279E-01;
COFD[5971] = 1.42440352E-02;
COFD[5972] = -1.82720299E+01;
COFD[5973] = 4.46715628E+00;
COFD[5974] = -3.57521352E-01;
COFD[5975] = 1.51703027E-02;
COFD[5976] = -1.82574790E+01;
COFD[5977] = 4.46715628E+00;
COFD[5978] = -3.57521352E-01;
COFD[5979] = 1.51703027E-02;
COFD[5980] = -1.26557712E+01;
COFD[5981] = 2.70797975E+00;
COFD[5982] = -1.37895013E-01;
COFD[5983] = 6.01030858E-03;
COFD[5984] = -1.92156097E+01;
COFD[5985] = 4.90190161E+00;
COFD[5986] = -4.08908928E-01;
COFD[5987] = 1.71998038E-02;
COFD[5988] = -1.92156097E+01;
COFD[5989] = 4.90190161E+00;
COFD[5990] = -4.08908928E-01;
COFD[5991] = 1.71998038E-02;
COFD[5992] = -1.40309431E+01;
COFD[5993] = 3.05361342E+00;
COFD[5994] = -1.82331859E-01;
COFD[5995] = 7.91667899E-03;
COFD[5996] = -1.82391859E+01;
COFD[5997] = 4.46715628E+00;
COFD[5998] = -3.57521352E-01;
COFD[5999] = 1.51703027E-02;
COFD[6000] = -1.82407476E+01;
COFD[6001] = 4.46715628E+00;
COFD[6002] = -3.57521352E-01;
COFD[6003] = 1.51703027E-02;
COFD[6004] = -1.36241193E+01;
COFD[6005] = 2.89678405E+00;
COFD[6006] = -1.62418864E-01;
COFD[6007] = 7.07300755E-03;
COFD[6008] = -1.45242878E+01;
COFD[6009] = 3.25814060E+00;
COFD[6010] = -2.08402129E-01;
COFD[6011] = 9.02544298E-03;
COFD[6012] = -1.65316330E+01;
COFD[6013] = 3.87564052E+00;
COFD[6014] = -2.85285750E-01;
COFD[6015] = 1.22208235E-02;
COFD[6016] = -1.59366228E+01;
COFD[6017] = 3.67153141E+00;
COFD[6018] = -2.60291173E-01;
COFD[6019] = 1.11995571E-02;
COFD[6020] = -1.57393334E+01;
COFD[6021] = 3.63667810E+00;
COFD[6022] = -2.55876890E-01;
COFD[6023] = 1.10128613E-02;
COFD[6024] = -1.29023105E+01;
COFD[6025] = 2.59809959E+00;
COFD[6026] = -1.23503755E-01;
COFD[6027] = 5.38095363E-03;
COFD[6028] = -1.29023105E+01;
COFD[6029] = 2.59809959E+00;
COFD[6030] = -1.23503755E-01;
COFD[6031] = 5.38095363E-03;
COFD[6032] = -1.30891000E+01;
COFD[6033] = 2.64561803E+00;
COFD[6034] = -1.29737887E-01;
COFD[6035] = 5.65422236E-03;
COFD[6036] = -1.95197192E+01;
COFD[6037] = 4.83644316E+00;
COFD[6038] = -4.01608859E-01;
COFD[6039] = 1.69307155E-02;
COFD[6040] = -1.66010112E+01;
COFD[6041] = 3.74948342E+00;
COFD[6042] = -2.70041311E-01;
COFD[6043] = 1.16066900E-02;
COFD[6044] = -1.39734826E+01;
COFD[6045] = 2.82860807E+00;
COFD[6046] = -1.53540725E-01;
COFD[6047] = 6.68730174E-03;
COFD[6048] = -1.66052588E+01;
COFD[6049] = 3.74948342E+00;
COFD[6050] = -2.70041311E-01;
COFD[6051] = 1.16066900E-02;
COFD[6052] = -1.39807418E+01;
COFD[6053] = 2.83461288E+00;
COFD[6054] = -1.54324769E-01;
COFD[6055] = 6.72145133E-03;
COFD[6056] = -1.67389257E+01;
COFD[6057] = 3.80352352E+00;
COFD[6058] = -2.76674296E-01;
COFD[6059] = 1.18782923E-02;
COFD[6060] = -1.95197192E+01;
COFD[6061] = 4.83644316E+00;
COFD[6062] = -4.01608859E-01;
COFD[6063] = 1.69307155E-02;
COFD[6064] = -1.42046439E+01;
COFD[6065] = 2.92706247E+00;
COFD[6066] = -1.66320963E-01;
COFD[6067] = 7.24082478E-03;
COFD[6068] = -1.09872152E+01;
COFD[6069] = 2.15703817E+00;
COFD[6070] = -6.55910408E-02;
COFD[6071] = 2.84055596E-03;
COFD[6072] = -1.47954210E+01;
COFD[6073] = 3.13965685E+00;
COFD[6074] = -1.93213276E-01;
COFD[6075] = 8.37577892E-03;
COFD[6076] = -1.32072236E+01;
COFD[6077] = 3.21416496E+00;
COFD[6078] = -2.02807281E-01;
COFD[6079] = 8.78793759E-03;
COFD[6080] = -1.30704041E+01;
COFD[6081] = 2.64561803E+00;
COFD[6082] = -1.29737887E-01;
COFD[6083] = 5.65422236E-03;
COFD[6084] = -1.30891000E+01;
COFD[6085] = 2.64561803E+00;
COFD[6086] = -1.29737887E-01;
COFD[6087] = 5.65422236E-03;
COFD[6088] = -1.42115392E+01;
COFD[6089] = 2.92706247E+00;
COFD[6090] = -1.66320963E-01;
COFD[6091] = 7.24082478E-03;
COFD[6092] = -1.91358693E+01;
COFD[6093] = 4.84334777E+00;
COFD[6094] = -4.02407198E-01;
COFD[6095] = 1.69614552E-02;
COFD[6096] = -1.42181138E+01;
COFD[6097] = 2.92706247E+00;
COFD[6098] = -1.66320963E-01;
COFD[6099] = 7.24082478E-03;
COFD[6100] = -1.90412181E+01;
COFD[6101] = 4.66860843E+00;
COFD[6102] = -3.81778771E-01;
COFD[6103] = 1.61480037E-02;
COFD[6104] = -1.90492170E+01;
COFD[6105] = 4.66860843E+00;
COFD[6106] = -3.81778771E-01;
COFD[6107] = 1.61480037E-02;
COFD[6108] = -1.59707359E+01;
COFD[6109] = 3.54361729E+00;
COFD[6110] = -2.44007529E-01;
COFD[6111] = 1.05072797E-02;
COFD[6112] = -1.85551642E+01;
COFD[6113] = 4.61313730E+00;
COFD[6114] = -3.74959998E-01;
COFD[6115] = 1.58672706E-02;
COFD[6116] = -1.43998769E+01;
COFD[6117] = 2.99798504E+00;
COFD[6118] = -1.75316659E-01;
COFD[6119] = 7.62155848E-03;
COFD[6120] = -1.43998769E+01;
COFD[6121] = 2.99798504E+00;
COFD[6122] = -1.75316659E-01;
COFD[6123] = 7.62155848E-03;
COFD[6124] = -1.78887976E+01;
COFD[6125] = 4.18708982E+00;
COFD[6126] = -3.22933489E-01;
COFD[6127] = 1.37401166E-02;
COFD[6128] = -1.44071092E+01;
COFD[6129] = 2.99798504E+00;
COFD[6130] = -1.75316659E-01;
COFD[6131] = 7.62155848E-03;
COFD[6132] = -1.29073742E+01;
COFD[6133] = 2.53781964E+00;
COFD[6134] = -1.15432437E-01;
COFD[6135] = 5.02009146E-03;
COFD[6136] = -1.32474582E+01;
COFD[6137] = 2.53781964E+00;
COFD[6138] = -1.15432437E-01;
COFD[6139] = 5.02009146E-03;
COFD[6140] = -1.30403611E+01;
COFD[6141] = 2.64561803E+00;
COFD[6142] = -1.29737887E-01;
COFD[6143] = 5.65422236E-03;
COFD[6144] = -1.30200077E+01;
COFD[6145] = 2.64561803E+00;
COFD[6146] = -1.29737887E-01;
COFD[6147] = 5.65422236E-03;
COFD[6148] = -1.33476478E+01;
COFD[6149] = 2.58120083E+00;
COFD[6150] = -1.21261106E-01;
COFD[6151] = 5.28159417E-03;
COFD[6152] = -1.65965113E+01;
COFD[6153] = 3.74948342E+00;
COFD[6154] = -2.70041311E-01;
COFD[6155] = 1.16066900E-02;
COFD[6156] = -1.79978366E+01;
COFD[6157] = 4.18308174E+00;
COFD[6158] = -3.22438966E-01;
COFD[6159] = 1.37197203E-02;
COFD[6160] = -1.66010112E+01;
COFD[6161] = 3.74948342E+00;
COFD[6162] = -2.70041311E-01;
COFD[6163] = 1.16066900E-02;
COFD[6164] = -1.66010112E+01;
COFD[6165] = 3.74948342E+00;
COFD[6166] = -2.70041311E-01;
COFD[6167] = 1.16066900E-02;
COFD[6168] = -1.65870844E+01;
COFD[6169] = 3.74948342E+00;
COFD[6170] = -2.70041311E-01;
COFD[6171] = 1.16066900E-02;
COFD[6172] = -1.02813706E+01;
COFD[6173] = 1.85115087E+00;
COFD[6174] = -2.73821713E-02;
COFD[6175] = 1.26610909E-03;
COFD[6176] = -1.78887976E+01;
COFD[6177] = 4.18708982E+00;
COFD[6178] = -3.22933489E-01;
COFD[6179] = 1.37401166E-02;
COFD[6180] = -1.85956646E+01;
COFD[6181] = 4.38688939E+00;
COFD[6182] = -3.47787055E-01;
COFD[6183] = 1.47749241E-02;
COFD[6184] = -1.85729874E+01;
COFD[6185] = 4.38688939E+00;
COFD[6186] = -3.47787055E-01;
COFD[6187] = 1.47749241E-02;
COFD[6188] = -1.30041281E+01;
COFD[6189] = 2.64561803E+00;
COFD[6190] = -1.29737887E-01;
COFD[6191] = 5.65422236E-03;
COFD[6192] = -1.95286161E+01;
COFD[6193] = 4.83644316E+00;
COFD[6194] = -4.01608859E-01;
COFD[6195] = 1.69307155E-02;
COFD[6196] = -1.95286161E+01;
COFD[6197] = 4.83644316E+00;
COFD[6198] = -4.01608859E-01;
COFD[6199] = 1.69307155E-02;
COFD[6200] = -1.44071092E+01;
COFD[6201] = 2.99798504E+00;
COFD[6202] = -1.75316659E-01;
COFD[6203] = 7.62155848E-03;
COFD[6204] = -1.85449830E+01;
COFD[6205] = 4.38688939E+00;
COFD[6206] = -3.47787055E-01;
COFD[6207] = 1.47749241E-02;
COFD[6208] = -1.85473529E+01;
COFD[6209] = 4.38688939E+00;
COFD[6210] = -3.47787055E-01;
COFD[6211] = 1.47749241E-02;
COFD[6212] = -1.39572379E+01;
COFD[6213] = 2.82860807E+00;
COFD[6214] = -1.53540725E-01;
COFD[6215] = 6.68730174E-03;
COFD[6216] = -1.47925494E+01;
COFD[6217] = 3.18325094E+00;
COFD[6218] = -1.98825485E-01;
COFD[6219] = 8.61681746E-03;
COFD[6220] = -1.68468462E+01;
COFD[6221] = 3.81715097E+00;
COFD[6222] = -2.78309582E-01;
COFD[6223] = 1.19436476E-02;
COFD[6224] = -1.61808331E+01;
COFD[6225] = 3.57878051E+00;
COFD[6226] = -2.48496434E-01;
COFD[6227] = 1.06986647E-02;
COFD[6228] = -1.59963440E+01;
COFD[6229] = 3.54361729E+00;
COFD[6230] = -2.44007529E-01;
COFD[6231] = 1.05072797E-02;
COFD[6232] = -1.32554554E+01;
COFD[6233] = 2.53781964E+00;
COFD[6234] = -1.15432437E-01;
COFD[6235] = 5.02009146E-03;
COFD[6236] = -1.32554554E+01;
COFD[6237] = 2.53781964E+00;
COFD[6238] = -1.15432437E-01;
COFD[6239] = 5.02009146E-03;
COFD[6240] = -1.63379451E+01;
COFD[6241] = 3.81860507E+00;
COFD[6242] = -2.78482683E-01;
COFD[6243] = 1.19505034E-02;
COFD[6244] = -2.20201455E+01;
COFD[6245] = 5.46748583E+00;
COFD[6246] = -4.52712497E-01;
COFD[6247] = 1.79643869E-02;
COFD[6248] = -2.05920567E+01;
COFD[6249] = 5.10002627E+00;
COFD[6250] = -4.31492380E-01;
COFD[6251] = 1.80562807E-02;
COFD[6252] = -1.73080465E+01;
COFD[6253] = 4.00684631E+00;
COFD[6254] = -3.01155648E-01;
COFD[6255] = 1.28621017E-02;
COFD[6256] = -2.05976331E+01;
COFD[6257] = 5.10002627E+00;
COFD[6258] = -4.31492380E-01;
COFD[6259] = 1.80562807E-02;
COFD[6260] = -1.73144212E+01;
COFD[6261] = 4.01345667E+00;
COFD[6262] = -3.01941639E-01;
COFD[6263] = 1.28932278E-02;
COFD[6264] = -2.07261520E+01;
COFD[6265] = 5.14637528E+00;
COFD[6266] = -4.36484093E-01;
COFD[6267] = 1.82327424E-02;
COFD[6268] = -2.20201455E+01;
COFD[6269] = 5.46748583E+00;
COFD[6270] = -4.52712497E-01;
COFD[6271] = 1.79643869E-02;
COFD[6272] = -1.76032698E+01;
COFD[6273] = 4.11950819E+00;
COFD[6274] = -3.14655711E-01;
COFD[6275] = 1.34014626E-02;
COFD[6276] = -1.32531784E+01;
COFD[6277] = 3.00584146E+00;
COFD[6278] = -1.76313628E-01;
COFD[6279] = 7.66376173E-03;
COFD[6280] = -1.85611967E+01;
COFD[6281] = 4.45677518E+00;
COFD[6282] = -3.56271969E-01;
COFD[6283] = 1.51199595E-02;
COFD[6284] = -1.68418594E+01;
COFD[6285] = 4.52301031E+00;
COFD[6286] = -3.64086327E-01;
COFD[6287] = 1.54280659E-02;
COFD[6288] = -1.63160084E+01;
COFD[6289] = 3.81860507E+00;
COFD[6290] = -2.78482683E-01;
COFD[6291] = 1.19505034E-02;
COFD[6292] = -1.63379451E+01;
COFD[6293] = 3.81860507E+00;
COFD[6294] = -2.78482683E-01;
COFD[6295] = 1.19505034E-02;
COFD[6296] = -1.76120143E+01;
COFD[6297] = 4.11950819E+00;
COFD[6298] = -3.14655711E-01;
COFD[6299] = 1.34014626E-02;
COFD[6300] = -2.15909346E+01;
COFD[6301] = 5.46509995E+00;
COFD[6302] = -4.52185064E-01;
COFD[6303] = 1.79334715E-02;
COFD[6304] = -1.76203825E+01;
COFD[6305] = 4.11950819E+00;
COFD[6306] = -3.14655711E-01;
COFD[6307] = 1.34014626E-02;
COFD[6308] = -2.19684712E+01;
COFD[6309] = 5.49000112E+00;
COFD[6310] = -4.60439480E-01;
COFD[6311] = 1.84791361E-02;
COFD[6312] = -2.19784997E+01;
COFD[6313] = 5.49000112E+00;
COFD[6314] = -4.60439480E-01;
COFD[6315] = 1.84791361E-02;
COFD[6316] = -2.00022410E+01;
COFD[6317] = 4.92657613E+00;
COFD[6318] = -4.11730248E-01;
COFD[6319] = 1.73070472E-02;
COFD[6320] = -2.15745464E+01;
COFD[6321] = 5.49050988E+00;
COFD[6322] = -4.61803086E-01;
COFD[6323] = 1.85876911E-02;
COFD[6324] = -1.79229832E+01;
COFD[6325] = 4.23476606E+00;
COFD[6326] = -3.28847162E-01;
COFD[6327] = 1.39854168E-02;
COFD[6328] = -1.79229832E+01;
COFD[6329] = 4.23476606E+00;
COFD[6330] = -3.28847162E-01;
COFD[6331] = 1.39854168E-02;
COFD[6332] = -2.17698242E+01;
COFD[6333] = 5.43916361E+00;
COFD[6334] = -4.65585351E-01;
COFD[6335] = 1.91505033E-02;
COFD[6336] = -1.79321214E+01;
COFD[6337] = 4.23476606E+00;
COFD[6338] = -3.28847162E-01;
COFD[6339] = 1.39854168E-02;
COFD[6340] = -1.60641874E+01;
COFD[6341] = 3.68775110E+00;
COFD[6342] = -2.62341411E-01;
COFD[6343] = 1.12860938E-02;
COFD[6344] = -1.64453382E+01;
COFD[6345] = 3.68775110E+00;
COFD[6346] = -2.62341411E-01;
COFD[6347] = 1.12860938E-02;
COFD[6348] = -1.62859132E+01;
COFD[6349] = 3.81860507E+00;
COFD[6350] = -2.78482683E-01;
COFD[6351] = 1.19505034E-02;
COFD[6352] = -1.62621854E+01;
COFD[6353] = 3.81860507E+00;
COFD[6354] = -2.78482683E-01;
COFD[6355] = 1.19505034E-02;
COFD[6356] = -1.65965113E+01;
COFD[6357] = 3.74948342E+00;
COFD[6358] = -2.70041311E-01;
COFD[6359] = 1.16066900E-02;
COFD[6360] = -2.05861650E+01;
COFD[6361] = 5.10002627E+00;
COFD[6362] = -4.31492380E-01;
COFD[6363] = 1.80562807E-02;
COFD[6364] = -2.18922949E+01;
COFD[6365] = 5.43855098E+00;
COFD[6366] = -4.65597511E-01;
COFD[6367] = 1.91545792E-02;
COFD[6368] = -2.05920567E+01;
COFD[6369] = 5.10002627E+00;
COFD[6370] = -4.31492380E-01;
COFD[6371] = 1.80562807E-02;
COFD[6372] = -2.05920567E+01;
COFD[6373] = 5.10002627E+00;
COFD[6374] = -4.31492380E-01;
COFD[6375] = 1.80562807E-02;
COFD[6376] = -2.05738751E+01;
COFD[6377] = 5.10002627E+00;
COFD[6378] = -4.31492380E-01;
COFD[6379] = 1.80562807E-02;
COFD[6380] = -1.15074780E+01;
COFD[6381] = 2.30622063E+00;
COFD[6382] = -8.87775848E-02;
COFD[6383] = 4.01974335E-03;
COFD[6384] = -2.17698242E+01;
COFD[6385] = 5.43916361E+00;
COFD[6386] = -4.65585351E-01;
COFD[6387] = 1.91505033E-02;
COFD[6388] = -2.21409932E+01;
COFD[6389] = 5.46734534E+00;
COFD[6390] = -4.65041652E-01;
COFD[6391] = 1.89657101E-02;
COFD[6392] = -2.21090433E+01;
COFD[6393] = 5.46734534E+00;
COFD[6394] = -4.65041652E-01;
COFD[6395] = 1.89657101E-02;
COFD[6396] = -1.62393158E+01;
COFD[6397] = 3.81860507E+00;
COFD[6398] = -2.78482683E-01;
COFD[6399] = 1.19505034E-02;
COFD[6400] = -2.20312078E+01;
COFD[6401] = 5.46748583E+00;
COFD[6402] = -4.52712497E-01;
COFD[6403] = 1.79643869E-02;
COFD[6404] = -2.20312078E+01;
COFD[6405] = 5.46748583E+00;
COFD[6406] = -4.52712497E-01;
COFD[6407] = 1.79643869E-02;
COFD[6408] = -1.79321214E+01;
COFD[6409] = 4.23476606E+00;
COFD[6410] = -3.28847162E-01;
COFD[6411] = 1.39854168E-02;
COFD[6412] = -2.20703682E+01;
COFD[6413] = 5.46734534E+00;
COFD[6414] = -4.65041652E-01;
COFD[6415] = 1.89657101E-02;
COFD[6416] = -2.20736095E+01;
COFD[6417] = 5.46734534E+00;
COFD[6418] = -4.65041652E-01;
COFD[6419] = 1.89657101E-02;
COFD[6420] = -1.72877238E+01;
COFD[6421] = 4.00684631E+00;
COFD[6422] = -3.01155648E-01;
COFD[6423] = 1.28621017E-02;
COFD[6424] = -1.85076340E+01;
COFD[6425] = 4.49767237E+00;
COFD[6426] = -3.61159649E-01;
COFD[6427] = 1.53154259E-02;
COFD[6428] = -2.08162859E+01;
COFD[6429] = 5.16017453E+00;
COFD[6430] = -4.37976881E-01;
COFD[6431] = 1.82858770E-02;
COFD[6432] = -2.01949538E+01;
COFD[6433] = 4.96009703E+00;
COFD[6434] = -4.15667692E-01;
COFD[6435] = 1.74615095E-02;
COFD[6436] = -2.00049541E+01;
COFD[6437] = 4.92657613E+00;
COFD[6438] = -4.11730248E-01;
COFD[6439] = 1.73070472E-02;
COFD[6440] = -1.64553647E+01;
COFD[6441] = 3.68775110E+00;
COFD[6442] = -2.62341411E-01;
COFD[6443] = 1.12860938E-02;
COFD[6444] = -1.64553647E+01;
COFD[6445] = 3.68775110E+00;
COFD[6446] = -2.62341411E-01;
COFD[6447] = 1.12860938E-02;
COFD[6448] = -1.78222175E+01;
COFD[6449] = 4.27963195E+00;
COFD[6450] = -3.34447162E-01;
COFD[6451] = 1.42193133E-02;
COFD[6452] = -2.16632143E+01;
COFD[6453] = 5.08860948E+00;
COFD[6454] = -3.85736749E-01;
COFD[6455] = 1.43988247E-02;
COFD[6456] = -2.18988182E+01;
COFD[6457] = 5.43855098E+00;
COFD[6458] = -4.65597511E-01;
COFD[6459] = 1.91545792E-02;
COFD[6460] = -1.89663618E+01;
COFD[6461] = 4.53386131E+00;
COFD[6462] = -3.65361236E-01;
COFD[6463] = 1.54781318E-02;
COFD[6464] = -2.19050002E+01;
COFD[6465] = 5.43855098E+00;
COFD[6466] = -4.65597511E-01;
COFD[6467] = 1.91545792E-02;
COFD[6468] = -1.89701106E+01;
COFD[6469] = 4.54025830E+00;
COFD[6470] = -3.66114939E-01;
COFD[6471] = 1.55078211E-02;
COFD[6472] = -2.19510778E+01;
COFD[6473] = 5.44777707E+00;
COFD[6474] = -4.65239323E-01;
COFD[6475] = 1.90789713E-02;
COFD[6476] = -2.16632143E+01;
COFD[6477] = 5.08860948E+00;
COFD[6478] = -3.85736749E-01;
COFD[6479] = 1.43988247E-02;
COFD[6480] = -1.93379314E+01;
COFD[6481] = 4.67401892E+00;
COFD[6482] = -3.82438975E-01;
COFD[6483] = 1.61749699E-02;
COFD[6484] = -1.45101897E+01;
COFD[6485] = 3.40975263E+00;
COFD[6486] = -2.27236279E-01;
COFD[6487] = 9.80574711E-03;
COFD[6488] = -2.02102361E+01;
COFD[6489] = 4.95999803E+00;
COFD[6490] = -4.15656064E-01;
COFD[6491] = 1.74610534E-02;
COFD[6492] = -1.85150083E+01;
COFD[6493] = 5.04034608E+00;
COFD[6494] = -4.25085381E-01;
COFD[6495] = 1.78306733E-02;
COFD[6496] = -1.77990217E+01;
COFD[6497] = 4.27963195E+00;
COFD[6498] = -3.34447162E-01;
COFD[6499] = 1.42193133E-02;
COFD[6500] = -1.78222175E+01;
COFD[6501] = 4.27963195E+00;
COFD[6502] = -3.34447162E-01;
COFD[6503] = 1.42193133E-02;
COFD[6504] = -1.93474775E+01;
COFD[6505] = 4.67401892E+00;
COFD[6506] = -3.82438975E-01;
COFD[6507] = 1.61749699E-02;
COFD[6508] = -2.12301920E+01;
COFD[6509] = 5.07946443E+00;
COFD[6510] = -3.84249491E-01;
COFD[6511] = 1.43231475E-02;
COFD[6512] = -1.93566272E+01;
COFD[6513] = 4.67401892E+00;
COFD[6514] = -3.82438975E-01;
COFD[6515] = 1.61749699E-02;
COFD[6516] = -2.19648348E+01;
COFD[6517] = 5.26116815E+00;
COFD[6518] = -4.14426924E-01;
COFD[6519] = 1.58759137E-02;
COFD[6520] = -2.19757288E+01;
COFD[6521] = 5.26116815E+00;
COFD[6522] = -4.14426924E-01;
COFD[6523] = 1.58759137E-02;
COFD[6524] = -2.14899377E+01;
COFD[6525] = 5.34434931E+00;
COFD[6526] = -4.57463510E-01;
COFD[6527] = 1.89596163E-02;
COFD[6528] = -2.16607004E+01;
COFD[6529] = 5.29855301E+00;
COFD[6530] = -4.20802111E-01;
COFD[6531] = 1.62086826E-02;
COFD[6532] = -1.96511331E+01;
COFD[6533] = 4.78390436E+00;
COFD[6534] = -3.95558661E-01;
COFD[6535] = 1.66988403E-02;
COFD[6536] = -1.96511331E+01;
COFD[6537] = 4.78390436E+00;
COFD[6538] = -3.95558661E-01;
COFD[6539] = 1.66988403E-02;
COFD[6540] = -2.24090193E+01;
COFD[6541] = 5.48297806E+00;
COFD[6542] = -4.57538266E-01;
COFD[6543] = 1.82782678E-02;
COFD[6544] = -1.96610932E+01;
COFD[6545] = 4.78390436E+00;
COFD[6546] = -3.95558661E-01;
COFD[6547] = 1.66988403E-02;
COFD[6548] = -1.74480558E+01;
COFD[6549] = 4.11739834E+00;
COFD[6550] = -3.14399199E-01;
COFD[6551] = 1.33910534E-02;
COFD[6552] = -1.78363552E+01;
COFD[6553] = 4.11739834E+00;
COFD[6554] = -3.14399199E-01;
COFD[6555] = 1.33910534E-02;
COFD[6556] = -1.77712698E+01;
COFD[6557] = 4.27963195E+00;
COFD[6558] = -3.34447162E-01;
COFD[6559] = 1.42193133E-02;
COFD[6560] = -1.77462428E+01;
COFD[6561] = 4.27963195E+00;
COFD[6562] = -3.34447162E-01;
COFD[6563] = 1.42193133E-02;
COFD[6564] = -1.79978366E+01;
COFD[6565] = 4.18308174E+00;
COFD[6566] = -3.22438966E-01;
COFD[6567] = 1.37197203E-02;
COFD[6568] = -2.18922949E+01;
COFD[6569] = 5.43855098E+00;
COFD[6570] = -4.65597511E-01;
COFD[6571] = 1.91545792E-02;
COFD[6572] = -2.25296047E+01;
COFD[6573] = 5.48319485E+00;
COFD[6574] = -4.57667407E-01;
COFD[6575] = 1.82876465E-02;
COFD[6576] = -2.18988182E+01;
COFD[6577] = 5.43855098E+00;
COFD[6578] = -4.65597511E-01;
COFD[6579] = 1.91545792E-02;
COFD[6580] = -2.18988182E+01;
COFD[6581] = 5.43855098E+00;
COFD[6582] = -4.65597511E-01;
COFD[6583] = 1.91545792E-02;
COFD[6584] = -2.18787134E+01;
COFD[6585] = 5.43855098E+00;
COFD[6586] = -4.65597511E-01;
COFD[6587] = 1.91545792E-02;
COFD[6588] = -1.14931883E+01;
COFD[6589] = 2.18744544E+00;
COFD[6590] = -6.84652923E-02;
COFD[6591] = 2.91766198E-03;
COFD[6592] = -2.24090193E+01;
COFD[6593] = 5.48297806E+00;
COFD[6594] = -4.57538266E-01;
COFD[6595] = 1.82782678E-02;
COFD[6596] = -2.26459865E+01;
COFD[6597] = 5.44751945E+00;
COFD[6598] = -4.48162029E-01;
COFD[6599] = 1.76948891E-02;
COFD[6600] = -2.26093446E+01;
COFD[6601] = 5.44751945E+00;
COFD[6602] = -4.48162029E-01;
COFD[6603] = 1.76948891E-02;
COFD[6604] = -1.77183582E+01;
COFD[6605] = 4.27963195E+00;
COFD[6606] = -3.34447162E-01;
COFD[6607] = 1.42193133E-02;
COFD[6608] = -2.16751892E+01;
COFD[6609] = 5.08860948E+00;
COFD[6610] = -3.85736749E-01;
COFD[6611] = 1.43988247E-02;
COFD[6612] = -2.16751892E+01;
COFD[6613] = 5.08860948E+00;
COFD[6614] = -3.85736749E-01;
COFD[6615] = 1.43988247E-02;
COFD[6616] = -1.96610932E+01;
COFD[6617] = 4.78390436E+00;
COFD[6618] = -3.95558661E-01;
COFD[6619] = 1.66988403E-02;
COFD[6620] = -2.25654291E+01;
COFD[6621] = 5.44751945E+00;
COFD[6622] = -4.48162029E-01;
COFD[6623] = 1.76948891E-02;
COFD[6624] = -2.25690921E+01;
COFD[6625] = 5.44751945E+00;
COFD[6626] = -4.48162029E-01;
COFD[6627] = 1.76948891E-02;
COFD[6628] = -1.89443053E+01;
COFD[6629] = 4.53386131E+00;
COFD[6630] = -3.65361236E-01;
COFD[6631] = 1.54781318E-02;
COFD[6632] = -2.01479737E+01;
COFD[6633] = 5.00765728E+00;
COFD[6634] = -4.21264863E-01;
COFD[6635] = 1.76816153E-02;
COFD[6636] = -2.19984240E+01;
COFD[6637] = 5.45124374E+00;
COFD[6638] = -4.65249483E-01;
COFD[6639] = 1.90625389E-02;
COFD[6640] = -2.16365955E+01;
COFD[6641] = 5.36696498E+00;
COFD[6642] = -4.59822207E-01;
COFD[6643] = 1.90398008E-02;
COFD[6644] = -2.14752594E+01;
COFD[6645] = 5.34434931E+00;
COFD[6646] = -4.57463510E-01;
COFD[6647] = 1.89596163E-02;
COFD[6648] = -1.78472471E+01;
COFD[6649] = 4.11739834E+00;
COFD[6650] = -3.14399199E-01;
COFD[6651] = 1.33910534E-02;
COFD[6652] = -1.78472471E+01;
COFD[6653] = 4.11739834E+00;
COFD[6654] = -3.14399199E-01;
COFD[6655] = 1.33910534E-02;
COFD[6656] = -1.63413318E+01;
COFD[6657] = 3.81860507E+00;
COFD[6658] = -2.78482683E-01;
COFD[6659] = 1.19505034E-02;
COFD[6660] = -2.20247520E+01;
COFD[6661] = 5.46748583E+00;
COFD[6662] = -4.52712497E-01;
COFD[6663] = 1.79643869E-02;
COFD[6664] = -2.05980185E+01;
COFD[6665] = 5.10002627E+00;
COFD[6666] = -4.31492380E-01;
COFD[6667] = 1.80562807E-02;
COFD[6668] = -1.73129508E+01;
COFD[6669] = 4.00684631E+00;
COFD[6670] = -3.01155648E-01;
COFD[6671] = 1.28621017E-02;
COFD[6672] = -2.06036623E+01;
COFD[6673] = 5.10002627E+00;
COFD[6674] = -4.31492380E-01;
COFD[6675] = 1.80562807E-02;
COFD[6676] = -1.73191289E+01;
COFD[6677] = 4.01345667E+00;
COFD[6678] = -3.01941639E-01;
COFD[6679] = 1.28932278E-02;
COFD[6680] = -2.07321809E+01;
COFD[6681] = 5.14637528E+00;
COFD[6682] = -4.36484093E-01;
COFD[6683] = 1.82327424E-02;
COFD[6684] = -2.20247520E+01;
COFD[6685] = 5.46748583E+00;
COFD[6686] = -4.52712497E-01;
COFD[6687] = 1.79643869E-02;
COFD[6688] = -1.76083599E+01;
COFD[6689] = 4.11950819E+00;
COFD[6690] = -3.14655711E-01;
COFD[6691] = 1.34014626E-02;
COFD[6692] = -1.32537150E+01;
COFD[6693] = 3.00584146E+00;
COFD[6694] = -1.76313628E-01;
COFD[6695] = 7.66376173E-03;
COFD[6696] = -1.85669389E+01;
COFD[6697] = 4.45677518E+00;
COFD[6698] = -3.56271969E-01;
COFD[6699] = 1.51199595E-02;
COFD[6700] = -1.68421339E+01;
COFD[6701] = 4.52301031E+00;
COFD[6702] = -3.64086327E-01;
COFD[6703] = 1.54280659E-02;
COFD[6704] = -1.63192492E+01;
COFD[6705] = 3.81860507E+00;
COFD[6706] = -2.78482683E-01;
COFD[6707] = 1.19505034E-02;
COFD[6708] = -1.63413318E+01;
COFD[6709] = 3.81860507E+00;
COFD[6710] = -2.78482683E-01;
COFD[6711] = 1.19505034E-02;
COFD[6712] = -1.76171946E+01;
COFD[6713] = 4.11950819E+00;
COFD[6714] = -3.14655711E-01;
COFD[6715] = 1.34014626E-02;
COFD[6716] = -2.15944623E+01;
COFD[6717] = 5.46509995E+00;
COFD[6718] = -4.52185064E-01;
COFD[6719] = 1.79334715E-02;
COFD[6720] = -1.76256507E+01;
COFD[6721] = 4.11950819E+00;
COFD[6722] = -3.14655711E-01;
COFD[6723] = 1.34014626E-02;
COFD[6724] = -2.19732795E+01;
COFD[6725] = 5.49000112E+00;
COFD[6726] = -4.60439480E-01;
COFD[6727] = 1.84791361E-02;
COFD[6728] = -2.19834059E+01;
COFD[6729] = 5.49000112E+00;
COFD[6730] = -4.60439480E-01;
COFD[6731] = 1.84791361E-02;
COFD[6732] = -2.00084012E+01;
COFD[6733] = 4.92657613E+00;
COFD[6734] = -4.11730248E-01;
COFD[6735] = 1.73070472E-02;
COFD[6736] = -2.15779365E+01;
COFD[6737] = 5.49050988E+00;
COFD[6738] = -4.61803086E-01;
COFD[6739] = 1.85876911E-02;
COFD[6740] = -1.79279827E+01;
COFD[6741] = 4.23476606E+00;
COFD[6742] = -3.28847162E-01;
COFD[6743] = 1.39854168E-02;
COFD[6744] = -1.79279827E+01;
COFD[6745] = 4.23476606E+00;
COFD[6746] = -3.28847162E-01;
COFD[6747] = 1.39854168E-02;
COFD[6748] = -2.17760485E+01;
COFD[6749] = 5.43916361E+00;
COFD[6750] = -4.65585351E-01;
COFD[6751] = 1.91505033E-02;
COFD[6752] = -1.79372136E+01;
COFD[6753] = 4.23476606E+00;
COFD[6754] = -3.28847162E-01;
COFD[6755] = 1.39854168E-02;
COFD[6756] = -1.60671247E+01;
COFD[6757] = 3.68775110E+00;
COFD[6758] = -2.62341411E-01;
COFD[6759] = 1.12860938E-02;
COFD[6760] = -1.64501469E+01;
COFD[6761] = 3.68775110E+00;
COFD[6762] = -2.62341411E-01;
COFD[6763] = 1.12860938E-02;
COFD[6764] = -1.62891576E+01;
COFD[6765] = 3.81860507E+00;
COFD[6766] = -2.78482683E-01;
COFD[6767] = 1.19505034E-02;
COFD[6768] = -1.62652790E+01;
COFD[6769] = 3.81860507E+00;
COFD[6770] = -2.78482683E-01;
COFD[6771] = 1.19505034E-02;
COFD[6772] = -1.66010112E+01;
COFD[6773] = 3.74948342E+00;
COFD[6774] = -2.70041311E-01;
COFD[6775] = 1.16066900E-02;
COFD[6776] = -2.05920567E+01;
COFD[6777] = 5.10002627E+00;
COFD[6778] = -4.31492380E-01;
COFD[6779] = 1.80562807E-02;
COFD[6780] = -2.18988182E+01;
COFD[6781] = 5.43855098E+00;
COFD[6782] = -4.65597511E-01;
COFD[6783] = 1.91545792E-02;
COFD[6784] = -2.05980185E+01;
COFD[6785] = 5.10002627E+00;
COFD[6786] = -4.31492380E-01;
COFD[6787] = 1.80562807E-02;
COFD[6788] = -2.05980185E+01;
COFD[6789] = 5.10002627E+00;
COFD[6790] = -4.31492380E-01;
COFD[6791] = 1.80562807E-02;
COFD[6792] = -2.05796228E+01;
COFD[6793] = 5.10002627E+00;
COFD[6794] = -4.31492380E-01;
COFD[6795] = 1.80562807E-02;
COFD[6796] = -1.15084979E+01;
COFD[6797] = 2.30622063E+00;
COFD[6798] = -8.87775848E-02;
COFD[6799] = 4.01974335E-03;
COFD[6800] = -2.17760485E+01;
COFD[6801] = 5.43916361E+00;
COFD[6802] = -4.65585351E-01;
COFD[6803] = 1.91505033E-02;
COFD[6804] = -2.21491003E+01;
COFD[6805] = 5.46734534E+00;
COFD[6806] = -4.65041652E-01;
COFD[6807] = 1.89657101E-02;
COFD[6808] = -2.21166448E+01;
COFD[6809] = 5.46734534E+00;
COFD[6810] = -4.65041652E-01;
COFD[6811] = 1.89657101E-02;
COFD[6812] = -1.62420946E+01;
COFD[6813] = 3.81860507E+00;
COFD[6814] = -2.78482683E-01;
COFD[6815] = 1.19505034E-02;
COFD[6816] = -2.20359179E+01;
COFD[6817] = 5.46748583E+00;
COFD[6818] = -4.52712497E-01;
COFD[6819] = 1.79643869E-02;
COFD[6820] = -2.20359179E+01;
COFD[6821] = 5.46748583E+00;
COFD[6822] = -4.52712497E-01;
COFD[6823] = 1.79643869E-02;
COFD[6824] = -1.79372136E+01;
COFD[6825] = 4.23476606E+00;
COFD[6826] = -3.28847162E-01;
COFD[6827] = 1.39854168E-02;
COFD[6828] = -2.20773999E+01;
COFD[6829] = 5.46734534E+00;
COFD[6830] = -4.65041652E-01;
COFD[6831] = 1.89657101E-02;
COFD[6832] = -2.20806872E+01;
COFD[6833] = 5.46734534E+00;
COFD[6834] = -4.65041652E-01;
COFD[6835] = 1.89657101E-02;
COFD[6836] = -1.72924318E+01;
COFD[6837] = 4.00684631E+00;
COFD[6838] = -3.01155648E-01;
COFD[6839] = 1.28621017E-02;
COFD[6840] = -1.85108813E+01;
COFD[6841] = 4.49767237E+00;
COFD[6842] = -3.61159649E-01;
COFD[6843] = 1.53154259E-02;
COFD[6844] = -2.08211963E+01;
COFD[6845] = 5.16017453E+00;
COFD[6846] = -4.37976881E-01;
COFD[6847] = 1.82858770E-02;
COFD[6848] = -2.02000482E+01;
COFD[6849] = 4.96009703E+00;
COFD[6850] = -4.15667692E-01;
COFD[6851] = 1.74615095E-02;
COFD[6852] = -2.00099559E+01;
COFD[6853] = 4.92657613E+00;
COFD[6854] = -4.11730248E-01;
COFD[6855] = 1.73070472E-02;
COFD[6856] = -1.64602713E+01;
COFD[6857] = 3.68775110E+00;
COFD[6858] = -2.62341411E-01;
COFD[6859] = 1.12860938E-02;
COFD[6860] = -1.64602713E+01;
COFD[6861] = 3.68775110E+00;
COFD[6862] = -2.62341411E-01;
COFD[6863] = 1.12860938E-02;
COFD[6864] = -1.63413318E+01;
COFD[6865] = 3.81860507E+00;
COFD[6866] = -2.78482683E-01;
COFD[6867] = 1.19505034E-02;
COFD[6868] = -2.20247520E+01;
COFD[6869] = 5.46748583E+00;
COFD[6870] = -4.52712497E-01;
COFD[6871] = 1.79643869E-02;
COFD[6872] = -2.05980185E+01;
COFD[6873] = 5.10002627E+00;
COFD[6874] = -4.31492380E-01;
COFD[6875] = 1.80562807E-02;
COFD[6876] = -1.73129508E+01;
COFD[6877] = 4.00684631E+00;
COFD[6878] = -3.01155648E-01;
COFD[6879] = 1.28621017E-02;
COFD[6880] = -2.06036623E+01;
COFD[6881] = 5.10002627E+00;
COFD[6882] = -4.31492380E-01;
COFD[6883] = 1.80562807E-02;
COFD[6884] = -1.73191289E+01;
COFD[6885] = 4.01345667E+00;
COFD[6886] = -3.01941639E-01;
COFD[6887] = 1.28932278E-02;
COFD[6888] = -2.07321809E+01;
COFD[6889] = 5.14637528E+00;
COFD[6890] = -4.36484093E-01;
COFD[6891] = 1.82327424E-02;
COFD[6892] = -2.20247520E+01;
COFD[6893] = 5.46748583E+00;
COFD[6894] = -4.52712497E-01;
COFD[6895] = 1.79643869E-02;
COFD[6896] = -1.76083599E+01;
COFD[6897] = 4.11950819E+00;
COFD[6898] = -3.14655711E-01;
COFD[6899] = 1.34014626E-02;
COFD[6900] = -1.32537150E+01;
COFD[6901] = 3.00584146E+00;
COFD[6902] = -1.76313628E-01;
COFD[6903] = 7.66376173E-03;
COFD[6904] = -1.85669389E+01;
COFD[6905] = 4.45677518E+00;
COFD[6906] = -3.56271969E-01;
COFD[6907] = 1.51199595E-02;
COFD[6908] = -1.68421339E+01;
COFD[6909] = 4.52301031E+00;
COFD[6910] = -3.64086327E-01;
COFD[6911] = 1.54280659E-02;
COFD[6912] = -1.63192492E+01;
COFD[6913] = 3.81860507E+00;
COFD[6914] = -2.78482683E-01;
COFD[6915] = 1.19505034E-02;
COFD[6916] = -1.63413318E+01;
COFD[6917] = 3.81860507E+00;
COFD[6918] = -2.78482683E-01;
COFD[6919] = 1.19505034E-02;
COFD[6920] = -1.76171946E+01;
COFD[6921] = 4.11950819E+00;
COFD[6922] = -3.14655711E-01;
COFD[6923] = 1.34014626E-02;
COFD[6924] = -2.15944623E+01;
COFD[6925] = 5.46509995E+00;
COFD[6926] = -4.52185064E-01;
COFD[6927] = 1.79334715E-02;
COFD[6928] = -1.76256507E+01;
COFD[6929] = 4.11950819E+00;
COFD[6930] = -3.14655711E-01;
COFD[6931] = 1.34014626E-02;
COFD[6932] = -2.19732795E+01;
COFD[6933] = 5.49000112E+00;
COFD[6934] = -4.60439480E-01;
COFD[6935] = 1.84791361E-02;
COFD[6936] = -2.19834059E+01;
COFD[6937] = 5.49000112E+00;
COFD[6938] = -4.60439480E-01;
COFD[6939] = 1.84791361E-02;
COFD[6940] = -2.00084012E+01;
COFD[6941] = 4.92657613E+00;
COFD[6942] = -4.11730248E-01;
COFD[6943] = 1.73070472E-02;
COFD[6944] = -2.15779365E+01;
COFD[6945] = 5.49050988E+00;
COFD[6946] = -4.61803086E-01;
COFD[6947] = 1.85876911E-02;
COFD[6948] = -1.79279827E+01;
COFD[6949] = 4.23476606E+00;
COFD[6950] = -3.28847162E-01;
COFD[6951] = 1.39854168E-02;
COFD[6952] = -1.79279827E+01;
COFD[6953] = 4.23476606E+00;
COFD[6954] = -3.28847162E-01;
COFD[6955] = 1.39854168E-02;
COFD[6956] = -2.17760485E+01;
COFD[6957] = 5.43916361E+00;
COFD[6958] = -4.65585351E-01;
COFD[6959] = 1.91505033E-02;
COFD[6960] = -1.79372136E+01;
COFD[6961] = 4.23476606E+00;
COFD[6962] = -3.28847162E-01;
COFD[6963] = 1.39854168E-02;
COFD[6964] = -1.60671247E+01;
COFD[6965] = 3.68775110E+00;
COFD[6966] = -2.62341411E-01;
COFD[6967] = 1.12860938E-02;
COFD[6968] = -1.64501469E+01;
COFD[6969] = 3.68775110E+00;
COFD[6970] = -2.62341411E-01;
COFD[6971] = 1.12860938E-02;
COFD[6972] = -1.62891576E+01;
COFD[6973] = 3.81860507E+00;
COFD[6974] = -2.78482683E-01;
COFD[6975] = 1.19505034E-02;
COFD[6976] = -1.62652790E+01;
COFD[6977] = 3.81860507E+00;
COFD[6978] = -2.78482683E-01;
COFD[6979] = 1.19505034E-02;
COFD[6980] = -1.66010112E+01;
COFD[6981] = 3.74948342E+00;
COFD[6982] = -2.70041311E-01;
COFD[6983] = 1.16066900E-02;
COFD[6984] = -2.05920567E+01;
COFD[6985] = 5.10002627E+00;
COFD[6986] = -4.31492380E-01;
COFD[6987] = 1.80562807E-02;
COFD[6988] = -2.18988182E+01;
COFD[6989] = 5.43855098E+00;
COFD[6990] = -4.65597511E-01;
COFD[6991] = 1.91545792E-02;
COFD[6992] = -2.05980185E+01;
COFD[6993] = 5.10002627E+00;
COFD[6994] = -4.31492380E-01;
COFD[6995] = 1.80562807E-02;
COFD[6996] = -2.05980185E+01;
COFD[6997] = 5.10002627E+00;
COFD[6998] = -4.31492380E-01;
COFD[6999] = 1.80562807E-02;
COFD[7000] = -2.05796228E+01;
COFD[7001] = 5.10002627E+00;
COFD[7002] = -4.31492380E-01;
COFD[7003] = 1.80562807E-02;
COFD[7004] = -1.15084979E+01;
COFD[7005] = 2.30622063E+00;
COFD[7006] = -8.87775848E-02;
COFD[7007] = 4.01974335E-03;
COFD[7008] = -2.17760485E+01;
COFD[7009] = 5.43916361E+00;
COFD[7010] = -4.65585351E-01;
COFD[7011] = 1.91505033E-02;
COFD[7012] = -2.21491003E+01;
COFD[7013] = 5.46734534E+00;
COFD[7014] = -4.65041652E-01;
COFD[7015] = 1.89657101E-02;
COFD[7016] = -2.21166448E+01;
COFD[7017] = 5.46734534E+00;
COFD[7018] = -4.65041652E-01;
COFD[7019] = 1.89657101E-02;
COFD[7020] = -1.62420946E+01;
COFD[7021] = 3.81860507E+00;
COFD[7022] = -2.78482683E-01;
COFD[7023] = 1.19505034E-02;
COFD[7024] = -2.20359179E+01;
COFD[7025] = 5.46748583E+00;
COFD[7026] = -4.52712497E-01;
COFD[7027] = 1.79643869E-02;
COFD[7028] = -2.20359179E+01;
COFD[7029] = 5.46748583E+00;
COFD[7030] = -4.52712497E-01;
COFD[7031] = 1.79643869E-02;
COFD[7032] = -1.79372136E+01;
COFD[7033] = 4.23476606E+00;
COFD[7034] = -3.28847162E-01;
COFD[7035] = 1.39854168E-02;
COFD[7036] = -2.20773999E+01;
COFD[7037] = 5.46734534E+00;
COFD[7038] = -4.65041652E-01;
COFD[7039] = 1.89657101E-02;
COFD[7040] = -2.20806872E+01;
COFD[7041] = 5.46734534E+00;
COFD[7042] = -4.65041652E-01;
COFD[7043] = 1.89657101E-02;
COFD[7044] = -1.72924318E+01;
COFD[7045] = 4.00684631E+00;
COFD[7046] = -3.01155648E-01;
COFD[7047] = 1.28621017E-02;
COFD[7048] = -1.85108813E+01;
COFD[7049] = 4.49767237E+00;
COFD[7050] = -3.61159649E-01;
COFD[7051] = 1.53154259E-02;
COFD[7052] = -2.08211963E+01;
COFD[7053] = 5.16017453E+00;
COFD[7054] = -4.37976881E-01;
COFD[7055] = 1.82858770E-02;
COFD[7056] = -2.02000482E+01;
COFD[7057] = 4.96009703E+00;
COFD[7058] = -4.15667692E-01;
COFD[7059] = 1.74615095E-02;
COFD[7060] = -2.00099559E+01;
COFD[7061] = 4.92657613E+00;
COFD[7062] = -4.11730248E-01;
COFD[7063] = 1.73070472E-02;
COFD[7064] = -1.64602713E+01;
COFD[7065] = 3.68775110E+00;
COFD[7066] = -2.62341411E-01;
COFD[7067] = 1.12860938E-02;
COFD[7068] = -1.64602713E+01;
COFD[7069] = 3.68775110E+00;
COFD[7070] = -2.62341411E-01;
COFD[7071] = 1.12860938E-02;
COFD[7072] = -1.63308259E+01;
COFD[7073] = 3.81860507E+00;
COFD[7074] = -2.78482683E-01;
COFD[7075] = 1.19505034E-02;
COFD[7076] = -2.20104985E+01;
COFD[7077] = 5.46748583E+00;
COFD[7078] = -4.52712497E-01;
COFD[7079] = 1.79643869E-02;
COFD[7080] = -2.05796228E+01;
COFD[7081] = 5.10002627E+00;
COFD[7082] = -4.31492380E-01;
COFD[7083] = 1.80562807E-02;
COFD[7084] = -1.72977853E+01;
COFD[7085] = 4.00684631E+00;
COFD[7086] = -3.01155648E-01;
COFD[7087] = 1.28621017E-02;
COFD[7088] = -2.05850616E+01;
COFD[7089] = 5.10002627E+00;
COFD[7090] = -4.31492380E-01;
COFD[7091] = 1.80562807E-02;
COFD[7092] = -1.73045655E+01;
COFD[7093] = 4.01345667E+00;
COFD[7094] = -3.01941639E-01;
COFD[7095] = 1.28932278E-02;
COFD[7096] = -2.07135810E+01;
COFD[7097] = 5.14637528E+00;
COFD[7098] = -4.36484093E-01;
COFD[7099] = 1.82327424E-02;
COFD[7100] = -2.20104985E+01;
COFD[7101] = 5.46748583E+00;
COFD[7102] = -4.52712497E-01;
COFD[7103] = 1.79643869E-02;
COFD[7104] = -1.75926259E+01;
COFD[7105] = 4.11950819E+00;
COFD[7106] = -3.14655711E-01;
COFD[7107] = 1.34014626E-02;
COFD[7108] = -1.32520404E+01;
COFD[7109] = 3.00584146E+00;
COFD[7110] = -1.76313628E-01;
COFD[7111] = 7.66376173E-03;
COFD[7112] = -1.85492130E+01;
COFD[7113] = 4.45677518E+00;
COFD[7114] = -3.56271969E-01;
COFD[7115] = 1.51199595E-02;
COFD[7116] = -1.68412767E+01;
COFD[7117] = 4.52301031E+00;
COFD[7118] = -3.64086327E-01;
COFD[7119] = 1.54280659E-02;
COFD[7120] = -1.63091927E+01;
COFD[7121] = 3.81860507E+00;
COFD[7122] = -2.78482683E-01;
COFD[7123] = 1.19505034E-02;
COFD[7124] = -1.63308259E+01;
COFD[7125] = 3.81860507E+00;
COFD[7126] = -2.78482683E-01;
COFD[7127] = 1.19505034E-02;
COFD[7128] = -1.76011847E+01;
COFD[7129] = 4.11950819E+00;
COFD[7130] = -3.14655711E-01;
COFD[7131] = 1.34014626E-02;
COFD[7132] = -2.15835223E+01;
COFD[7133] = 5.46509995E+00;
COFD[7134] = -4.52185064E-01;
COFD[7135] = 1.79334715E-02;
COFD[7136] = -1.76093721E+01;
COFD[7137] = 4.11950819E+00;
COFD[7138] = -3.14655711E-01;
COFD[7139] = 1.34014626E-02;
COFD[7140] = -2.19584078E+01;
COFD[7141] = 5.49000112E+00;
COFD[7142] = -4.60439480E-01;
COFD[7143] = 1.84791361E-02;
COFD[7144] = -2.19682345E+01;
COFD[7145] = 5.49000112E+00;
COFD[7146] = -4.60439480E-01;
COFD[7147] = 1.84791361E-02;
COFD[7148] = -1.99894013E+01;
COFD[7149] = 4.92657613E+00;
COFD[7150] = -4.11730248E-01;
COFD[7151] = 1.73070472E-02;
COFD[7152] = -2.15674201E+01;
COFD[7153] = 5.49050988E+00;
COFD[7154] = -4.61803086E-01;
COFD[7155] = 1.85876911E-02;
COFD[7156] = -1.79125256E+01;
COFD[7157] = 4.23476606E+00;
COFD[7158] = -3.28847162E-01;
COFD[7159] = 1.39854168E-02;
COFD[7160] = -1.79125256E+01;
COFD[7161] = 4.23476606E+00;
COFD[7162] = -3.28847162E-01;
COFD[7163] = 1.39854168E-02;
COFD[7164] = -2.17568534E+01;
COFD[7165] = 5.43916361E+00;
COFD[7166] = -4.65585351E-01;
COFD[7167] = 1.91505033E-02;
COFD[7168] = -1.79214730E+01;
COFD[7169] = 4.23476606E+00;
COFD[7170] = -3.28847162E-01;
COFD[7171] = 1.39854168E-02;
COFD[7172] = -1.60580042E+01;
COFD[7173] = 3.68775110E+00;
COFD[7174] = -2.62341411E-01;
COFD[7175] = 1.12860938E-02;
COFD[7176] = -1.64352740E+01;
COFD[7177] = 3.68775110E+00;
COFD[7178] = -2.62341411E-01;
COFD[7179] = 1.12860938E-02;
COFD[7180] = -1.62790902E+01;
COFD[7181] = 3.81860507E+00;
COFD[7182] = -2.78482683E-01;
COFD[7183] = 1.19505034E-02;
COFD[7184] = -1.62556766E+01;
COFD[7185] = 3.81860507E+00;
COFD[7186] = -2.78482683E-01;
COFD[7187] = 1.19505034E-02;
COFD[7188] = -1.65870844E+01;
COFD[7189] = 3.74948342E+00;
COFD[7190] = -2.70041311E-01;
COFD[7191] = 1.16066900E-02;
COFD[7192] = -2.05738751E+01;
COFD[7193] = 5.10002627E+00;
COFD[7194] = -4.31492380E-01;
COFD[7195] = 1.80562807E-02;
COFD[7196] = -2.18787134E+01;
COFD[7197] = 5.43855098E+00;
COFD[7198] = -4.65597511E-01;
COFD[7199] = 1.91545792E-02;
COFD[7200] = -2.05796228E+01;
COFD[7201] = 5.10002627E+00;
COFD[7202] = -4.31492380E-01;
COFD[7203] = 1.80562807E-02;
COFD[7204] = -2.05796228E+01;
COFD[7205] = 5.10002627E+00;
COFD[7206] = -4.31492380E-01;
COFD[7207] = 1.80562807E-02;
COFD[7208] = -2.05618800E+01;
COFD[7209] = 5.10002627E+00;
COFD[7210] = -4.31492380E-01;
COFD[7211] = 1.80562807E-02;
COFD[7212] = -1.15053183E+01;
COFD[7213] = 2.30622063E+00;
COFD[7214] = -8.87775848E-02;
COFD[7215] = 4.01974335E-03;
COFD[7216] = -2.17568534E+01;
COFD[7217] = 5.43916361E+00;
COFD[7218] = -4.65585351E-01;
COFD[7219] = 1.91505033E-02;
COFD[7220] = -2.21241953E+01;
COFD[7221] = 5.46734534E+00;
COFD[7222] = -4.65041652E-01;
COFD[7223] = 1.89657101E-02;
COFD[7224] = -2.20932689E+01;
COFD[7225] = 5.46734534E+00;
COFD[7226] = -4.65041652E-01;
COFD[7227] = 1.89657101E-02;
COFD[7228] = -1.62334637E+01;
COFD[7229] = 3.81860507E+00;
COFD[7230] = -2.78482683E-01;
COFD[7231] = 1.19505034E-02;
COFD[7232] = -2.20213471E+01;
COFD[7233] = 5.46748583E+00;
COFD[7234] = -4.52712497E-01;
COFD[7235] = 1.79643869E-02;
COFD[7236] = -2.20213471E+01;
COFD[7237] = 5.46748583E+00;
COFD[7238] = -4.52712497E-01;
COFD[7239] = 1.79643869E-02;
COFD[7240] = -1.79214730E+01;
COFD[7241] = 4.23476606E+00;
COFD[7242] = -3.28847162E-01;
COFD[7243] = 1.39854168E-02;
COFD[7244] = -2.20557511E+01;
COFD[7245] = 5.46734534E+00;
COFD[7246] = -4.65041652E-01;
COFD[7247] = 1.89657101E-02;
COFD[7248] = -2.20588987E+01;
COFD[7249] = 5.46734534E+00;
COFD[7250] = -4.65041652E-01;
COFD[7251] = 1.89657101E-02;
COFD[7252] = -1.72778672E+01;
COFD[7253] = 4.00684631E+00;
COFD[7254] = -3.01155648E-01;
COFD[7255] = 1.28621017E-02;
COFD[7256] = -1.85008048E+01;
COFD[7257] = 4.49767237E+00;
COFD[7258] = -3.61159649E-01;
COFD[7259] = 1.53154259E-02;
COFD[7260] = -2.08060121E+01;
COFD[7261] = 5.16017453E+00;
COFD[7262] = -4.37976881E-01;
COFD[7263] = 1.82858770E-02;
COFD[7264] = -2.01843010E+01;
COFD[7265] = 4.96009703E+00;
COFD[7266] = -4.15667692E-01;
COFD[7267] = 1.74615095E-02;
COFD[7268] = -1.99944920E+01;
COFD[7269] = 4.92657613E+00;
COFD[7270] = -4.11730248E-01;
COFD[7271] = 1.73070472E-02;
COFD[7272] = -1.64450987E+01;
COFD[7273] = 3.68775110E+00;
COFD[7274] = -2.62341411E-01;
COFD[7275] = 1.12860938E-02;
COFD[7276] = -1.64450987E+01;
COFD[7277] = 3.68775110E+00;
COFD[7278] = -2.62341411E-01;
COFD[7279] = 1.12860938E-02;
COFD[7280] = -9.83138074E+00;
COFD[7281] = 1.83095585E+00;
COFD[7282] = -2.43017348E-02;
COFD[7283] = 1.11147663E-03;
COFD[7284] = -1.23391219E+01;
COFD[7285] = 2.61360947E+00;
COFD[7286] = -1.25541800E-01;
COFD[7287] = 5.47045704E-03;
COFD[7288] = -1.15084979E+01;
COFD[7289] = 2.30622063E+00;
COFD[7290] = -8.87775848E-02;
COFD[7291] = 4.01974335E-03;
COFD[7292] = -1.01389623E+01;
COFD[7293] = 1.80391843E+00;
COFD[7294] = -1.99275570E-02;
COFD[7295] = 8.81933064E-04;
COFD[7296] = -1.15094541E+01;
COFD[7297] = 2.30622063E+00;
COFD[7298] = -8.87775848E-02;
COFD[7299] = 4.01974335E-03;
COFD[7300] = -1.01383439E+01;
COFD[7301] = 1.80106060E+00;
COFD[7302] = -1.94978950E-02;
COFD[7303] = 8.60733672E-04;
COFD[7304] = -1.14898855E+01;
COFD[7305] = 2.30236974E+00;
COFD[7306] = -8.78955327E-02;
COFD[7307] = 3.96380921E-03;
COFD[7308] = -1.23391219E+01;
COFD[7309] = 2.61360947E+00;
COFD[7310] = -1.25541800E-01;
COFD[7311] = 5.47045704E-03;
COFD[7312] = -1.00964417E+01;
COFD[7313] = 1.80154868E+00;
COFD[7314] = -1.93107773E-02;
COFD[7315] = 8.41365140E-04;
COFD[7316] = -9.97002631E+00;
COFD[7317] = 2.09989861E+00;
COFD[7318] = -6.57792049E-02;
COFD[7319] = 3.22150287E-03;
COFD[7320] = -1.04249896E+01;
COFD[7321] = 1.94512965E+00;
COFD[7322] = -3.93510095E-02;
COFD[7323] = 1.77030865E-03;
COFD[7324] = -9.28658890E+00;
COFD[7325] = 1.98664968E+00;
COFD[7326] = -4.51158213E-02;
COFD[7327] = 2.03667696E-03;
COFD[7328] = -9.82541494E+00;
COFD[7329] = 1.83095585E+00;
COFD[7330] = -2.43017348E-02;
COFD[7331] = 1.11147663E-03;
COFD[7332] = -9.83138074E+00;
COFD[7333] = 1.83095585E+00;
COFD[7334] = -2.43017348E-02;
COFD[7335] = 1.11147663E-03;
COFD[7336] = -1.00981423E+01;
COFD[7337] = 1.80154868E+00;
COFD[7338] = -1.93107773E-02;
COFD[7339] = 8.41365140E-04;
COFD[7340] = -1.19621564E+01;
COFD[7341] = 2.61946046E+00;
COFD[7342] = -1.26311090E-01;
COFD[7343] = 5.50425635E-03;
COFD[7344] = -1.00997475E+01;
COFD[7345] = 1.80154868E+00;
COFD[7346] = -1.93107773E-02;
COFD[7347] = 8.41365140E-04;
COFD[7348] = -1.20165846E+01;
COFD[7349] = 2.49189009E+00;
COFD[7350] = -1.09242845E-01;
COFD[7351] = 4.74144793E-03;
COFD[7352] = -1.20186234E+01;
COFD[7353] = 2.49189009E+00;
COFD[7354] = -1.09242845E-01;
COFD[7355] = 4.74144793E-03;
COFD[7356] = -1.12637288E+01;
COFD[7357] = 2.25713623E+00;
COFD[7358] = -8.27150060E-02;
COFD[7359] = 3.77397157E-03;
COFD[7360] = -1.16700746E+01;
COFD[7361] = 2.46254894E+00;
COFD[7362] = -1.05290016E-01;
COFD[7363] = 4.56346575E-03;
COFD[7364] = -1.02357775E+01;
COFD[7365] = 1.85324333E+00;
COFD[7366] = -2.65008845E-02;
COFD[7367] = 1.17336026E-03;
COFD[7368] = -1.02357775E+01;
COFD[7369] = 1.85324333E+00;
COFD[7370] = -2.65008845E-02;
COFD[7371] = 1.17336026E-03;
COFD[7372] = -1.13697262E+01;
COFD[7373] = 2.18828110E+00;
COFD[7374] = -6.85678803E-02;
COFD[7375] = 2.92186630E-03;
COFD[7376] = -1.02375799E+01;
COFD[7377] = 1.85324333E+00;
COFD[7378] = -2.65008845E-02;
COFD[7379] = 1.17336026E-03;
COFD[7380] = -1.00487549E+01;
COFD[7381] = 1.85510219E+00;
COFD[7382] = -2.80877616E-02;
COFD[7383] = 1.30613884E-03;
COFD[7384] = -1.02732123E+01;
COFD[7385] = 1.85510219E+00;
COFD[7386] = -2.80877616E-02;
COFD[7387] = 1.30613884E-03;
COFD[7388] = -9.78765619E+00;
COFD[7389] = 1.83095585E+00;
COFD[7390] = -2.43017348E-02;
COFD[7391] = 1.11147663E-03;
COFD[7392] = -9.78099173E+00;
COFD[7393] = 1.83095585E+00;
COFD[7394] = -2.43017348E-02;
COFD[7395] = 1.11147663E-03;
COFD[7396] = -1.02813706E+01;
COFD[7397] = 1.85115087E+00;
COFD[7398] = -2.73821713E-02;
COFD[7399] = 1.26610909E-03;
COFD[7400] = -1.15074780E+01;
COFD[7401] = 2.30622063E+00;
COFD[7402] = -8.87775848E-02;
COFD[7403] = 4.01974335E-03;
COFD[7404] = -1.14931883E+01;
COFD[7405] = 2.18744544E+00;
COFD[7406] = -6.84652923E-02;
COFD[7407] = 2.91766198E-03;
COFD[7408] = -1.15084979E+01;
COFD[7409] = 2.30622063E+00;
COFD[7410] = -8.87775848E-02;
COFD[7411] = 4.01974335E-03;
COFD[7412] = -1.15084979E+01;
COFD[7413] = 2.30622063E+00;
COFD[7414] = -8.87775848E-02;
COFD[7415] = 4.01974335E-03;
COFD[7416] = -1.15053183E+01;
COFD[7417] = 2.30622063E+00;
COFD[7418] = -8.87775848E-02;
COFD[7419] = 4.01974335E-03;
COFD[7420] = -7.86974205E+00;
COFD[7421] = 1.19959934E+00;
COFD[7422] = 6.35132188E-02;
COFD[7423] = -2.90525342E-03;
COFD[7424] = -1.13697262E+01;
COFD[7425] = 2.18828110E+00;
COFD[7426] = -6.85678803E-02;
COFD[7427] = 2.92186630E-03;
COFD[7428] = -1.17539531E+01;
COFD[7429] = 2.29988896E+00;
COFD[7430] = -8.34550252E-02;
COFD[7431] = 3.58441943E-03;
COFD[7432] = -1.17495849E+01;
COFD[7433] = 2.29988896E+00;
COFD[7434] = -8.34550252E-02;
COFD[7435] = 3.58441943E-03;
COFD[7436] = -9.80302130E+00;
COFD[7437] = 1.83095585E+00;
COFD[7438] = -2.43017348E-02;
COFD[7439] = 1.11147663E-03;
COFD[7440] = -1.23414464E+01;
COFD[7441] = 2.61360947E+00;
COFD[7442] = -1.25541800E-01;
COFD[7443] = 5.47045704E-03;
COFD[7444] = -1.23414464E+01;
COFD[7445] = 2.61360947E+00;
COFD[7446] = -1.25541800E-01;
COFD[7447] = 5.47045704E-03;
COFD[7448] = -1.02375799E+01;
COFD[7449] = 1.85324333E+00;
COFD[7450] = -2.65008845E-02;
COFD[7451] = 1.17336026E-03;
COFD[7452] = -1.17439663E+01;
COFD[7453] = 2.29988896E+00;
COFD[7454] = -8.34550252E-02;
COFD[7455] = 3.58441943E-03;
COFD[7456] = -1.17444515E+01;
COFD[7457] = 2.29988896E+00;
COFD[7458] = -8.34550252E-02;
COFD[7459] = 3.58441943E-03;
COFD[7460] = -1.01347952E+01;
COFD[7461] = 1.80391843E+00;
COFD[7462] = -1.99275570E-02;
COFD[7463] = 8.81933064E-04;
COFD[7464] = -1.05246614E+01;
COFD[7465] = 1.95495730E+00;
COFD[7466] = -4.06803225E-02;
COFD[7467] = 1.83089776E-03;
COFD[7468] = -1.16778685E+01;
COFD[7469] = 2.31416170E+00;
COFD[7470] = -8.95094036E-02;
COFD[7471] = 4.03742751E-03;
COFD[7472] = -1.15041962E+01;
COFD[7473] = 2.26825979E+00;
COFD[7474] = -8.41318655E-02;
COFD[7475] = 3.83329375E-03;
COFD[7476] = -1.13723066E+01;
COFD[7477] = 2.25713623E+00;
COFD[7478] = -8.27150060E-02;
COFD[7479] = 3.77397157E-03;
COFD[7480] = -1.02752506E+01;
COFD[7481] = 1.85510219E+00;
COFD[7482] = -2.80877616E-02;
COFD[7483] = 1.30613884E-03;
COFD[7484] = -1.02752506E+01;
COFD[7485] = 1.85510219E+00;
COFD[7486] = -2.80877616E-02;
COFD[7487] = 1.30613884E-03;
COFD[7488] = -1.77028653E+01;
COFD[7489] = 4.28431488E+00;
COFD[7490] = -3.35035279E-01;
COFD[7491] = 1.42440352E-02;
COFD[7492] = -2.15319330E+01;
COFD[7493] = 5.08422954E+00;
COFD[7494] = -3.85024067E-01;
COFD[7495] = 1.43625491E-02;
COFD[7496] = -2.17760485E+01;
COFD[7497] = 5.43916361E+00;
COFD[7498] = -4.65585351E-01;
COFD[7499] = 1.91505033E-02;
COFD[7500] = -1.91048368E+01;
COFD[7501] = 4.62560030E+00;
COFD[7502] = -3.76498522E-01;
COFD[7503] = 1.59308956E-02;
COFD[7504] = -2.17819436E+01;
COFD[7505] = 5.43916361E+00;
COFD[7506] = -4.65585351E-01;
COFD[7507] = 1.91505033E-02;
COFD[7508] = -1.91395940E+01;
COFD[7509] = 4.64293684E+00;
COFD[7510] = -3.78633702E-01;
COFD[7511] = 1.60189825E-02;
COFD[7512] = -2.19096275E+01;
COFD[7513] = 5.46291511E+00;
COFD[7514] = -4.65480345E-01;
COFD[7515] = 1.90232930E-02;
COFD[7516] = -2.15319330E+01;
COFD[7517] = 5.08422954E+00;
COFD[7518] = -3.85024067E-01;
COFD[7519] = 1.43625491E-02;
COFD[7520] = -1.94697438E+01;
COFD[7521] = 4.76361685E+00;
COFD[7522] = -3.93208188E-01;
COFD[7523] = 1.66081354E-02;
COFD[7524] = -1.46300048E+01;
COFD[7525] = 3.49269849E+00;
COFD[7526] = -2.37487444E-01;
COFD[7527] = 1.02285147E-02;
COFD[7528] = -2.00888847E+01;
COFD[7529] = 4.96384472E+00;
COFD[7530] = -4.16107673E-01;
COFD[7531] = 1.74787619E-02;
COFD[7532] = -1.83921909E+01;
COFD[7533] = 5.04400884E+00;
COFD[7534] = -4.25512519E-01;
COFD[7535] = 1.78473004E-02;
COFD[7536] = -1.76802511E+01;
COFD[7537] = 4.28431488E+00;
COFD[7538] = -3.35035279E-01;
COFD[7539] = 1.42440352E-02;
COFD[7540] = -1.77028653E+01;
COFD[7541] = 4.28431488E+00;
COFD[7542] = -3.35035279E-01;
COFD[7543] = 1.42440352E-02;
COFD[7544] = -1.92307434E+01;
COFD[7545] = 4.67811496E+00;
COFD[7546] = -3.82933409E-01;
COFD[7547] = 1.61949349E-02;
COFD[7548] = -1.94067705E+01;
COFD[7549] = 4.24747903E+00;
COFD[7550] = -2.57724392E-01;
COFD[7551] = 8.18869465E-03;
COFD[7552] = -1.92395256E+01;
COFD[7553] = 4.67811496E+00;
COFD[7554] = -3.82933409E-01;
COFD[7555] = 1.61949349E-02;
COFD[7556] = -2.18346072E+01;
COFD[7557] = 5.25786660E+00;
COFD[7558] = -4.13869825E-01;
COFD[7559] = 1.58469961E-02;
COFD[7560] = -2.18450955E+01;
COFD[7561] = 5.25786660E+00;
COFD[7562] = -4.13869825E-01;
COFD[7563] = 1.58469961E-02;
COFD[7564] = -2.13666362E+01;
COFD[7565] = 5.34700929E+00;
COFD[7566] = -4.57742322E-01;
COFD[7567] = 1.89691609E-02;
COFD[7568] = -2.04138562E+01;
COFD[7569] = 4.76200250E+00;
COFD[7570] = -3.40173961E-01;
COFD[7571] = 1.23201686E-02;
COFD[7572] = -1.95333395E+01;
COFD[7573] = 4.78702268E+00;
COFD[7574] = -3.95915871E-01;
COFD[7575] = 1.67124483E-02;
COFD[7576] = -1.95333395E+01;
COFD[7577] = 4.78702268E+00;
COFD[7578] = -3.95915871E-01;
COFD[7579] = 1.67124483E-02;
COFD[7580] = -2.17041214E+01;
COFD[7581] = 5.18838797E+00;
COFD[7582] = -4.11659348E-01;
COFD[7583] = 1.60095368E-02;
COFD[7584] = -1.95429138E+01;
COFD[7585] = 4.78702268E+00;
COFD[7586] = -3.95915871E-01;
COFD[7587] = 1.67124483E-02;
COFD[7588] = -1.73368170E+01;
COFD[7589] = 4.12106098E+00;
COFD[7590] = -3.14844590E-01;
COFD[7591] = 1.34091315E-02;
COFD[7592] = -1.77244878E+01;
COFD[7593] = 4.12106098E+00;
COFD[7594] = -3.14844590E-01;
COFD[7595] = 1.34091315E-02;
COFD[7596] = -1.84598404E+01;
COFD[7597] = 4.56402409E+00;
COFD[7598] = -3.68907695E-01;
COFD[7599] = 1.56174551E-02;
COFD[7600] = -1.76263067E+01;
COFD[7601] = 4.28431488E+00;
COFD[7602] = -3.35035279E-01;
COFD[7603] = 1.42440352E-02;
COFD[7604] = -1.78887976E+01;
COFD[7605] = 4.18708982E+00;
COFD[7606] = -3.22933489E-01;
COFD[7607] = 1.37401166E-02;
COFD[7608] = -2.17698242E+01;
COFD[7609] = 5.43916361E+00;
COFD[7610] = -4.65585351E-01;
COFD[7611] = 1.91505033E-02;
COFD[7612] = -2.24090193E+01;
COFD[7613] = 5.48297806E+00;
COFD[7614] = -4.57538266E-01;
COFD[7615] = 1.82782678E-02;
COFD[7616] = -2.17760485E+01;
COFD[7617] = 5.43916361E+00;
COFD[7618] = -4.65585351E-01;
COFD[7619] = 1.91505033E-02;
COFD[7620] = -2.17760485E+01;
COFD[7621] = 5.43916361E+00;
COFD[7622] = -4.65585351E-01;
COFD[7623] = 1.91505033E-02;
COFD[7624] = -2.17568534E+01;
COFD[7625] = 5.43916361E+00;
COFD[7626] = -4.65585351E-01;
COFD[7627] = 1.91505033E-02;
COFD[7628] = -1.13697262E+01;
COFD[7629] = 2.18828110E+00;
COFD[7630] = -6.85678803E-02;
COFD[7631] = 2.92186630E-03;
COFD[7632] = -2.17041214E+01;
COFD[7633] = 5.18838797E+00;
COFD[7634] = -4.11659348E-01;
COFD[7635] = 1.60095368E-02;
COFD[7636] = -2.24422447E+01;
COFD[7637] = 5.41684253E+00;
COFD[7638] = -4.43902129E-01;
COFD[7639] = 1.74998380E-02;
COFD[7640] = -2.24078651E+01;
COFD[7641] = 5.41684253E+00;
COFD[7642] = -4.43902129E-01;
COFD[7643] = 1.74998380E-02;
COFD[7644] = -1.76014166E+01;
COFD[7645] = 4.28431488E+00;
COFD[7646] = -3.35035279E-01;
COFD[7647] = 1.42440352E-02;
COFD[7648] = -2.15434811E+01;
COFD[7649] = 5.08422954E+00;
COFD[7650] = -3.85024067E-01;
COFD[7651] = 1.43625491E-02;
COFD[7652] = -2.15434811E+01;
COFD[7653] = 5.08422954E+00;
COFD[7654] = -3.85024067E-01;
COFD[7655] = 1.43625491E-02;
COFD[7656] = -1.95429138E+01;
COFD[7657] = 4.78702268E+00;
COFD[7658] = -3.95915871E-01;
COFD[7659] = 1.67124483E-02;
COFD[7660] = -2.23664633E+01;
COFD[7661] = 5.41684253E+00;
COFD[7662] = -4.43902129E-01;
COFD[7663] = 1.74998380E-02;
COFD[7664] = -2.23699245E+01;
COFD[7665] = 5.41684253E+00;
COFD[7666] = -4.43902129E-01;
COFD[7667] = 1.74998380E-02;
COFD[7668] = -1.90835924E+01;
COFD[7669] = 4.62560030E+00;
COFD[7670] = -3.76498522E-01;
COFD[7671] = 1.59308956E-02;
COFD[7672] = -2.02721454E+01;
COFD[7673] = 5.08491126E+00;
COFD[7674] = -4.29909057E-01;
COFD[7675] = 1.80023812E-02;
COFD[7676] = -2.18866888E+01;
COFD[7677] = 5.45199693E+00;
COFD[7678] = -4.65259658E-01;
COFD[7679] = 1.90596237E-02;
COFD[7680] = -2.17061558E+01;
COFD[7681] = 5.42020598E+00;
COFD[7682] = -4.64948899E-01;
COFD[7683] = 1.91933808E-02;
COFD[7684] = -2.13621816E+01;
COFD[7685] = 5.34700929E+00;
COFD[7686] = -4.57742322E-01;
COFD[7687] = 1.89691609E-02;
COFD[7688] = -1.77349742E+01;
COFD[7689] = 4.12106098E+00;
COFD[7690] = -3.14844590E-01;
COFD[7691] = 1.34091315E-02;
COFD[7692] = -1.77349742E+01;
COFD[7693] = 4.12106098E+00;
COFD[7694] = -3.14844590E-01;
COFD[7695] = 1.34091315E-02;
COFD[7696] = -1.83540829E+01;
COFD[7697] = 4.46715628E+00;
COFD[7698] = -3.57521352E-01;
COFD[7699] = 1.51703027E-02;
COFD[7700] = -2.12431735E+01;
COFD[7701] = 4.84340426E+00;
COFD[7702] = -3.46976285E-01;
COFD[7703] = 1.24627164E-02;
COFD[7704] = -2.21491003E+01;
COFD[7705] = 5.46734534E+00;
COFD[7706] = -4.65041652E-01;
COFD[7707] = 1.89657101E-02;
COFD[7708] = -1.95664237E+01;
COFD[7709] = 4.73109179E+00;
COFD[7710] = -3.89322712E-01;
COFD[7711] = 1.64528637E-02;
COFD[7712] = -2.21568072E+01;
COFD[7713] = 5.46734534E+00;
COFD[7714] = -4.65041652E-01;
COFD[7715] = 1.89657101E-02;
COFD[7716] = -1.95697274E+01;
COFD[7717] = 4.73880084E+00;
COFD[7718] = -3.90242532E-01;
COFD[7719] = 1.64895743E-02;
COFD[7720] = -2.21818691E+01;
COFD[7721] = 5.46752046E+00;
COFD[7722] = -4.63419210E-01;
COFD[7723] = 1.88328134E-02;
COFD[7724] = -2.12431735E+01;
COFD[7725] = 4.84340426E+00;
COFD[7726] = -3.46976285E-01;
COFD[7727] = 1.24627164E-02;
COFD[7728] = -1.98814388E+01;
COFD[7729] = 4.84483615E+00;
COFD[7730] = -4.02575093E-01;
COFD[7731] = 1.69677331E-02;
COFD[7732] = -1.48946762E+01;
COFD[7733] = 3.56409697E+00;
COFD[7734] = -2.46625546E-01;
COFD[7735] = 1.06190657E-02;
COFD[7736] = -2.07240365E+01;
COFD[7737] = 5.10938713E+00;
COFD[7738] = -4.32476478E-01;
COFD[7739] = 1.80899364E-02;
COFD[7740] = -1.88703282E+01;
COFD[7741] = 5.16817593E+00;
COFD[7742] = -4.38840667E-01;
COFD[7743] = 1.83165432E-02;
COFD[7744] = -1.83281781E+01;
COFD[7745] = 4.46715628E+00;
COFD[7746] = -3.57521352E-01;
COFD[7747] = 1.51703027E-02;
COFD[7748] = -1.83540829E+01;
COFD[7749] = 4.46715628E+00;
COFD[7750] = -3.57521352E-01;
COFD[7751] = 1.51703027E-02;
COFD[7752] = -1.98905429E+01;
COFD[7753] = 4.84407524E+00;
COFD[7754] = -4.02489256E-01;
COFD[7755] = 1.69645233E-02;
COFD[7756] = -2.06394730E+01;
COFD[7757] = 4.77630610E+00;
COFD[7758] = -3.37759268E-01;
COFD[7759] = 1.20457679E-02;
COFD[7760] = -1.99015690E+01;
COFD[7761] = 4.84407524E+00;
COFD[7762] = -4.02489256E-01;
COFD[7763] = 1.69645233E-02;
COFD[7764] = -2.17114866E+01;
COFD[7765] = 5.08384420E+00;
COFD[7766] = -3.84961399E-01;
COFD[7767] = 1.43593603E-02;
COFD[7768] = -2.17244132E+01;
COFD[7769] = 5.08384420E+00;
COFD[7770] = -3.84961399E-01;
COFD[7771] = 1.43593603E-02;
COFD[7772] = -2.18894089E+01;
COFD[7773] = 5.43564723E+00;
COFD[7774] = -4.65662187E-01;
COFD[7775] = 1.91744823E-02;
COFD[7776] = -2.13108025E+01;
COFD[7777] = 5.09638614E+00;
COFD[7778] = -3.88177504E-01;
COFD[7779] = 1.45586613E-02;
COFD[7780] = -2.01436223E+01;
COFD[7781] = 4.93246609E+00;
COFD[7782] = -4.12422852E-01;
COFD[7783] = 1.73342490E-02;
COFD[7784] = -2.01436223E+01;
COFD[7785] = 4.93246609E+00;
COFD[7786] = -4.12422852E-01;
COFD[7787] = 1.73342490E-02;
COFD[7788] = -2.24422447E+01;
COFD[7789] = 5.41684253E+00;
COFD[7790] = -4.43902129E-01;
COFD[7791] = 1.74998380E-02;
COFD[7792] = -2.01555344E+01;
COFD[7793] = 4.93246609E+00;
COFD[7794] = -4.12422852E-01;
COFD[7795] = 1.73342490E-02;
COFD[7796] = -1.80014016E+01;
COFD[7797] = 4.31633461E+00;
COFD[7798] = -3.39053638E-01;
COFD[7799] = 1.44128540E-02;
COFD[7800] = -1.84285327E+01;
COFD[7801] = 4.31633461E+00;
COFD[7802] = -3.39053638E-01;
COFD[7803] = 1.44128540E-02;
COFD[7804] = -1.83090676E+01;
COFD[7805] = 4.47032474E+00;
COFD[7806] = -3.57902803E-01;
COFD[7807] = 1.51856790E-02;
COFD[7808] = -1.82720299E+01;
COFD[7809] = 4.46715628E+00;
COFD[7810] = -3.57521352E-01;
COFD[7811] = 1.51703027E-02;
COFD[7812] = -1.85956646E+01;
COFD[7813] = 4.38688939E+00;
COFD[7814] = -3.47787055E-01;
COFD[7815] = 1.47749241E-02;
COFD[7816] = -2.21409932E+01;
COFD[7817] = 5.46734534E+00;
COFD[7818] = -4.65041652E-01;
COFD[7819] = 1.89657101E-02;
COFD[7820] = -2.26459865E+01;
COFD[7821] = 5.44751945E+00;
COFD[7822] = -4.48162029E-01;
COFD[7823] = 1.76948891E-02;
COFD[7824] = -2.21491003E+01;
COFD[7825] = 5.46734534E+00;
COFD[7826] = -4.65041652E-01;
COFD[7827] = 1.89657101E-02;
COFD[7828] = -2.21491003E+01;
COFD[7829] = 5.46734534E+00;
COFD[7830] = -4.65041652E-01;
COFD[7831] = 1.89657101E-02;
COFD[7832] = -2.21241953E+01;
COFD[7833] = 5.46734534E+00;
COFD[7834] = -4.65041652E-01;
COFD[7835] = 1.89657101E-02;
COFD[7836] = -1.17539531E+01;
COFD[7837] = 2.29988896E+00;
COFD[7838] = -8.34550252E-02;
COFD[7839] = 3.58441943E-03;
COFD[7840] = -2.24422447E+01;
COFD[7841] = 5.41684253E+00;
COFD[7842] = -4.43902129E-01;
COFD[7843] = 1.74998380E-02;
COFD[7844] = -2.26506793E+01;
COFD[7845] = 5.34430955E+00;
COFD[7846] = -4.28846138E-01;
COFD[7847] = 1.66357158E-02;
COFD[7848] = -2.26006475E+01;
COFD[7849] = 5.34430955E+00;
COFD[7850] = -4.28846138E-01;
COFD[7851] = 1.66357158E-02;
COFD[7852] = -1.82391090E+01;
COFD[7853] = 4.46715628E+00;
COFD[7854] = -3.57521352E-01;
COFD[7855] = 1.51703027E-02;
COFD[7856] = -2.12572667E+01;
COFD[7857] = 4.84340426E+00;
COFD[7858] = -3.46976285E-01;
COFD[7859] = 1.24627164E-02;
COFD[7860] = -2.12572667E+01;
COFD[7861] = 4.84340426E+00;
COFD[7862] = -3.46976285E-01;
COFD[7863] = 1.24627164E-02;
COFD[7864] = -2.01555344E+01;
COFD[7865] = 4.93246609E+00;
COFD[7866] = -4.12422852E-01;
COFD[7867] = 1.73342490E-02;
COFD[7868] = -2.25423306E+01;
COFD[7869] = 5.34430955E+00;
COFD[7870] = -4.28846138E-01;
COFD[7871] = 1.66357158E-02;
COFD[7872] = -2.25471320E+01;
COFD[7873] = 5.34430955E+00;
COFD[7874] = -4.28846138E-01;
COFD[7875] = 1.66357158E-02;
COFD[7876] = -1.95403075E+01;
COFD[7877] = 4.73109179E+00;
COFD[7878] = -3.89322712E-01;
COFD[7879] = 1.64528637E-02;
COFD[7880] = -2.05857144E+01;
COFD[7881] = 5.14469734E+00;
COFD[7882] = -4.36303812E-01;
COFD[7883] = 1.82263884E-02;
COFD[7884] = -2.22086574E+01;
COFD[7885] = 5.47141104E+00;
COFD[7886] = -4.63484602E-01;
COFD[7887] = 1.88189166E-02;
COFD[7888] = -2.19764361E+01;
COFD[7889] = 5.44075465E+00;
COFD[7890] = -4.65503545E-01;
COFD[7891] = 1.91357665E-02;
COFD[7892] = -2.18513214E+01;
COFD[7893] = 5.43564723E+00;
COFD[7894] = -4.65662187E-01;
COFD[7895] = 1.91744823E-02;
COFD[7896] = -1.84414571E+01;
COFD[7897] = 4.31633461E+00;
COFD[7898] = -3.39053638E-01;
COFD[7899] = 1.44128540E-02;
COFD[7900] = -1.84414571E+01;
COFD[7901] = 4.31633461E+00;
COFD[7902] = -3.39053638E-01;
COFD[7903] = 1.44128540E-02;
COFD[7904] = -1.83379287E+01;
COFD[7905] = 4.46715628E+00;
COFD[7906] = -3.57521352E-01;
COFD[7907] = 1.51703027E-02;
COFD[7908] = -2.12198328E+01;
COFD[7909] = 4.84340426E+00;
COFD[7910] = -3.46976285E-01;
COFD[7911] = 1.24627164E-02;
COFD[7912] = -2.21166448E+01;
COFD[7913] = 5.46734534E+00;
COFD[7914] = -4.65041652E-01;
COFD[7915] = 1.89657101E-02;
COFD[7916] = -1.95411905E+01;
COFD[7917] = 4.73109179E+00;
COFD[7918] = -3.89322712E-01;
COFD[7919] = 1.64528637E-02;
COFD[7920] = -2.21238637E+01;
COFD[7921] = 5.46734534E+00;
COFD[7922] = -4.65041652E-01;
COFD[7923] = 1.89657101E-02;
COFD[7924] = -1.95457506E+01;
COFD[7925] = 4.73880084E+00;
COFD[7926] = -3.90242532E-01;
COFD[7927] = 1.64895743E-02;
COFD[7928] = -2.21489275E+01;
COFD[7929] = 5.46752046E+00;
COFD[7930] = -4.63419210E-01;
COFD[7931] = 1.88328134E-02;
COFD[7932] = -2.12198328E+01;
COFD[7933] = 4.84340426E+00;
COFD[7934] = -3.46976285E-01;
COFD[7935] = 1.24627164E-02;
COFD[7936] = -1.98549949E+01;
COFD[7937] = 4.84483615E+00;
COFD[7938] = -4.02575093E-01;
COFD[7939] = 1.69677331E-02;
COFD[7940] = -1.48924248E+01;
COFD[7941] = 3.56409697E+00;
COFD[7942] = -2.46625546E-01;
COFD[7943] = 1.06190657E-02;
COFD[7944] = -2.06931494E+01;
COFD[7945] = 5.10938713E+00;
COFD[7946] = -4.32476478E-01;
COFD[7947] = 1.80899364E-02;
COFD[7948] = -1.88691890E+01;
COFD[7949] = 5.16817593E+00;
COFD[7950] = -4.38840667E-01;
COFD[7951] = 1.83165432E-02;
COFD[7952] = -1.83128272E+01;
COFD[7953] = 4.46715628E+00;
COFD[7954] = -3.57521352E-01;
COFD[7955] = 1.51703027E-02;
COFD[7956] = -1.83379287E+01;
COFD[7957] = 4.46715628E+00;
COFD[7958] = -3.57521352E-01;
COFD[7959] = 1.51703027E-02;
COFD[7960] = -1.98635022E+01;
COFD[7961] = 4.84407524E+00;
COFD[7962] = -4.02489256E-01;
COFD[7963] = 1.69645233E-02;
COFD[7964] = -2.06225315E+01;
COFD[7965] = 4.77630610E+00;
COFD[7966] = -3.37759268E-01;
COFD[7967] = 1.20457679E-02;
COFD[7968] = -1.98739417E+01;
COFD[7969] = 4.84407524E+00;
COFD[7970] = -4.02489256E-01;
COFD[7971] = 1.69645233E-02;
COFD[7972] = -2.16868697E+01;
COFD[7973] = 5.08384420E+00;
COFD[7974] = -3.84961399E-01;
COFD[7975] = 1.43593603E-02;
COFD[7976] = -2.16991676E+01;
COFD[7977] = 5.08384420E+00;
COFD[7978] = -3.84961399E-01;
COFD[7979] = 1.43593603E-02;
COFD[7980] = -2.18555044E+01;
COFD[7981] = 5.43564723E+00;
COFD[7982] = -4.65662187E-01;
COFD[7983] = 1.91744823E-02;
COFD[7984] = -2.12946294E+01;
COFD[7985] = 5.09638614E+00;
COFD[7986] = -3.88177504E-01;
COFD[7987] = 1.45586613E-02;
COFD[7988] = -2.01177712E+01;
COFD[7989] = 4.93246609E+00;
COFD[7990] = -4.12422852E-01;
COFD[7991] = 1.73342490E-02;
COFD[7992] = -2.01177712E+01;
COFD[7993] = 4.93246609E+00;
COFD[7994] = -4.12422852E-01;
COFD[7995] = 1.73342490E-02;
COFD[7996] = -2.24078651E+01;
COFD[7997] = 5.41684253E+00;
COFD[7998] = -4.43902129E-01;
COFD[7999] = 1.74998380E-02;
COFD[8000] = -2.01290763E+01;
COFD[8001] = 4.93246609E+00;
COFD[8002] = -4.12422852E-01;
COFD[8003] = 1.73342490E-02;
COFD[8004] = -1.79876869E+01;
COFD[8005] = 4.31633461E+00;
COFD[8006] = -3.39053638E-01;
COFD[8007] = 1.44128540E-02;
COFD[8008] = -1.84039133E+01;
COFD[8009] = 4.31633461E+00;
COFD[8010] = -3.39053638E-01;
COFD[8011] = 1.44128540E-02;
COFD[8012] = -1.82936973E+01;
COFD[8013] = 4.47032474E+00;
COFD[8014] = -3.57902803E-01;
COFD[8015] = 1.51856790E-02;
COFD[8016] = -1.82574790E+01;
COFD[8017] = 4.46715628E+00;
COFD[8018] = -3.57521352E-01;
COFD[8019] = 1.51703027E-02;
COFD[8020] = -1.85729874E+01;
COFD[8021] = 4.38688939E+00;
COFD[8022] = -3.47787055E-01;
COFD[8023] = 1.47749241E-02;
COFD[8024] = -2.21090433E+01;
COFD[8025] = 5.46734534E+00;
COFD[8026] = -4.65041652E-01;
COFD[8027] = 1.89657101E-02;
COFD[8028] = -2.26093446E+01;
COFD[8029] = 5.44751945E+00;
COFD[8030] = -4.48162029E-01;
COFD[8031] = 1.76948891E-02;
COFD[8032] = -2.21166448E+01;
COFD[8033] = 5.46734534E+00;
COFD[8034] = -4.65041652E-01;
COFD[8035] = 1.89657101E-02;
COFD[8036] = -2.21166448E+01;
COFD[8037] = 5.46734534E+00;
COFD[8038] = -4.65041652E-01;
COFD[8039] = 1.89657101E-02;
COFD[8040] = -2.20932689E+01;
COFD[8041] = 5.46734534E+00;
COFD[8042] = -4.65041652E-01;
COFD[8043] = 1.89657101E-02;
COFD[8044] = -1.17495849E+01;
COFD[8045] = 2.29988896E+00;
COFD[8046] = -8.34550252E-02;
COFD[8047] = 3.58441943E-03;
COFD[8048] = -2.24078651E+01;
COFD[8049] = 5.41684253E+00;
COFD[8050] = -4.43902129E-01;
COFD[8051] = 1.74998380E-02;
COFD[8052] = -2.26006475E+01;
COFD[8053] = 5.34430955E+00;
COFD[8054] = -4.28846138E-01;
COFD[8055] = 1.66357158E-02;
COFD[8056] = -2.25551697E+01;
COFD[8057] = 5.34430955E+00;
COFD[8058] = -4.28846138E-01;
COFD[8059] = 1.66357158E-02;
COFD[8060] = -1.82262309E+01;
COFD[8061] = 4.46715628E+00;
COFD[8062] = -3.57521352E-01;
COFD[8063] = 1.51703027E-02;
COFD[8064] = -2.12332745E+01;
COFD[8065] = 4.84340426E+00;
COFD[8066] = -3.46976285E-01;
COFD[8067] = 1.24627164E-02;
COFD[8068] = -2.12332745E+01;
COFD[8069] = 4.84340426E+00;
COFD[8070] = -3.46976285E-01;
COFD[8071] = 1.24627164E-02;
COFD[8072] = -2.01290763E+01;
COFD[8073] = 4.93246609E+00;
COFD[8074] = -4.12422852E-01;
COFD[8075] = 1.73342490E-02;
COFD[8076] = -2.25016616E+01;
COFD[8077] = 5.34430955E+00;
COFD[8078] = -4.28846138E-01;
COFD[8079] = 1.66357158E-02;
COFD[8080] = -2.25060862E+01;
COFD[8081] = 5.34430955E+00;
COFD[8082] = -4.28846138E-01;
COFD[8083] = 1.66357158E-02;
COFD[8084] = -1.95163281E+01;
COFD[8085] = 4.73109179E+00;
COFD[8086] = -3.89322712E-01;
COFD[8087] = 1.64528637E-02;
COFD[8088] = -2.05703280E+01;
COFD[8089] = 5.14469734E+00;
COFD[8090] = -4.36303812E-01;
COFD[8091] = 1.82263884E-02;
COFD[8092] = -2.21833846E+01;
COFD[8093] = 5.47141104E+00;
COFD[8094] = -4.63484602E-01;
COFD[8095] = 1.88189166E-02;
COFD[8096] = -2.19499636E+01;
COFD[8097] = 5.44075465E+00;
COFD[8098] = -4.65503545E-01;
COFD[8099] = 1.91357665E-02;
COFD[8100] = -2.18254557E+01;
COFD[8101] = 5.43564723E+00;
COFD[8102] = -4.65662187E-01;
COFD[8103] = 1.91744823E-02;
COFD[8104] = -1.84162091E+01;
COFD[8105] = 4.31633461E+00;
COFD[8106] = -3.39053638E-01;
COFD[8107] = 1.44128540E-02;
COFD[8108] = -1.84162091E+01;
COFD[8109] = 4.31633461E+00;
COFD[8110] = -3.39053638E-01;
COFD[8111] = 1.44128540E-02;
COFD[8112] = -1.27204343E+01;
COFD[8113] = 2.70797975E+00;
COFD[8114] = -1.37895013E-01;
COFD[8115] = 6.01030858E-03;
COFD[8116] = -1.91937442E+01;
COFD[8117] = 4.90190161E+00;
COFD[8118] = -4.08908928E-01;
COFD[8119] = 1.71998038E-02;
COFD[8120] = -1.62420946E+01;
COFD[8121] = 3.81860507E+00;
COFD[8122] = -2.78482683E-01;
COFD[8123] = 1.19505034E-02;
COFD[8124] = -1.36188335E+01;
COFD[8125] = 2.89678405E+00;
COFD[8126] = -1.62418864E-01;
COFD[8127] = 7.07300755E-03;
COFD[8128] = -1.62447087E+01;
COFD[8129] = 3.81860507E+00;
COFD[8130] = -2.78482683E-01;
COFD[8131] = 1.19505034E-02;
COFD[8132] = -1.36323037E+01;
COFD[8133] = 2.90243493E+00;
COFD[8134] = -1.63148841E-01;
COFD[8135] = 7.10447920E-03;
COFD[8136] = -1.63529396E+01;
COFD[8137] = 3.86315631E+00;
COFD[8138] = -2.83800980E-01;
COFD[8139] = 1.21619703E-02;
COFD[8140] = -1.91937442E+01;
COFD[8141] = 4.90190161E+00;
COFD[8142] = -4.08908928E-01;
COFD[8143] = 1.71998038E-02;
COFD[8144] = -1.38092498E+01;
COFD[8145] = 2.98298723E+00;
COFD[8146] = -1.73428215E-01;
COFD[8147] = 7.54224684E-03;
COFD[8148] = -1.06126871E+01;
COFD[8149] = 2.15819366E+00;
COFD[8150] = -6.52830580E-02;
COFD[8151] = 2.80657258E-03;
COFD[8152] = -1.44356393E+01;
COFD[8153] = 3.21910603E+00;
COFD[8154] = -2.03442081E-01;
COFD[8155] = 8.81515218E-03;
COFD[8156] = -1.29642351E+01;
COFD[8157] = 3.28440910E+00;
COFD[8158] = -2.11707534E-01;
COFD[8159] = 9.16419558E-03;
COFD[8160] = -1.27069586E+01;
COFD[8161] = 2.70797975E+00;
COFD[8162] = -1.37895013E-01;
COFD[8163] = 6.01030858E-03;
COFD[8164] = -1.27204343E+01;
COFD[8165] = 2.70797975E+00;
COFD[8166] = -1.37895013E-01;
COFD[8167] = 6.01030858E-03;
COFD[8168] = -1.38136855E+01;
COFD[8169] = 2.98298723E+00;
COFD[8170] = -1.73428215E-01;
COFD[8171] = 7.54224684E-03;
COFD[8172] = -1.87840613E+01;
COFD[8173] = 4.90686422E+00;
COFD[8174] = -4.09428407E-01;
COFD[8175] = 1.72173805E-02;
COFD[8176] = -1.38178946E+01;
COFD[8177] = 2.98298723E+00;
COFD[8178] = -1.73428215E-01;
COFD[8179] = 7.54224684E-03;
COFD[8180] = -1.87611451E+01;
COFD[8181] = 4.75778339E+00;
COFD[8182] = -3.92510587E-01;
COFD[8183] = 1.65802295E-02;
COFD[8184] = -1.87663708E+01;
COFD[8185] = 4.75778339E+00;
COFD[8186] = -3.92510587E-01;
COFD[8187] = 1.65802295E-02;
COFD[8188] = -1.56469396E+01;
COFD[8189] = 3.63667810E+00;
COFD[8190] = -2.55876890E-01;
COFD[8191] = 1.10128613E-02;
COFD[8192] = -1.83084600E+01;
COFD[8193] = 4.71208389E+00;
COFD[8194] = -3.87053240E-01;
COFD[8195] = 1.63622220E-02;
COFD[8196] = -1.40089290E+01;
COFD[8197] = 3.05361342E+00;
COFD[8198] = -1.82331859E-01;
COFD[8199] = 7.91667899E-03;
COFD[8200] = -1.40089290E+01;
COFD[8201] = 3.05361342E+00;
COFD[8202] = -1.82331859E-01;
COFD[8203] = 7.91667899E-03;
COFD[8204] = -1.76014166E+01;
COFD[8205] = 4.28431488E+00;
COFD[8206] = -3.35035279E-01;
COFD[8207] = 1.42440352E-02;
COFD[8208] = -1.40136043E+01;
COFD[8209] = 3.05361342E+00;
COFD[8210] = -1.82331859E-01;
COFD[8211] = 7.91667899E-03;
COFD[8212] = -1.25770173E+01;
COFD[8213] = 2.59809959E+00;
COFD[8214] = -1.23503755E-01;
COFD[8215] = 5.38095363E-03;
COFD[8216] = -1.28792069E+01;
COFD[8217] = 2.59809959E+00;
COFD[8218] = -1.23503755E-01;
COFD[8219] = 5.38095363E-03;
COFD[8220] = -1.26705964E+01;
COFD[8221] = 2.70797975E+00;
COFD[8222] = -1.37895013E-01;
COFD[8223] = 6.01030858E-03;
COFD[8224] = -1.26557712E+01;
COFD[8225] = 2.70797975E+00;
COFD[8226] = -1.37895013E-01;
COFD[8227] = 6.01030858E-03;
COFD[8228] = -1.30041281E+01;
COFD[8229] = 2.64561803E+00;
COFD[8230] = -1.29737887E-01;
COFD[8231] = 5.65422236E-03;
COFD[8232] = -1.62393158E+01;
COFD[8233] = 3.81860507E+00;
COFD[8234] = -2.78482683E-01;
COFD[8235] = 1.19505034E-02;
COFD[8236] = -1.77183582E+01;
COFD[8237] = 4.27963195E+00;
COFD[8238] = -3.34447162E-01;
COFD[8239] = 1.42193133E-02;
COFD[8240] = -1.62420946E+01;
COFD[8241] = 3.81860507E+00;
COFD[8242] = -2.78482683E-01;
COFD[8243] = 1.19505034E-02;
COFD[8244] = -1.62420946E+01;
COFD[8245] = 3.81860507E+00;
COFD[8246] = -2.78482683E-01;
COFD[8247] = 1.19505034E-02;
COFD[8248] = -1.62334637E+01;
COFD[8249] = 3.81860507E+00;
COFD[8250] = -2.78482683E-01;
COFD[8251] = 1.19505034E-02;
COFD[8252] = -9.80302130E+00;
COFD[8253] = 1.83095585E+00;
COFD[8254] = -2.43017348E-02;
COFD[8255] = 1.11147663E-03;
COFD[8256] = -1.76014166E+01;
COFD[8257] = 4.28431488E+00;
COFD[8258] = -3.35035279E-01;
COFD[8259] = 1.42440352E-02;
COFD[8260] = -1.82391090E+01;
COFD[8261] = 4.46715628E+00;
COFD[8262] = -3.57521352E-01;
COFD[8263] = 1.51703027E-02;
COFD[8264] = -1.82262309E+01;
COFD[8265] = 4.46715628E+00;
COFD[8266] = -3.57521352E-01;
COFD[8267] = 1.51703027E-02;
COFD[8268] = -1.26580800E+01;
COFD[8269] = 2.70797975E+00;
COFD[8270] = -1.37895013E-01;
COFD[8271] = 6.01030858E-03;
COFD[8272] = -1.91996235E+01;
COFD[8273] = 4.90190161E+00;
COFD[8274] = -4.08908928E-01;
COFD[8275] = 1.71998038E-02;
COFD[8276] = -1.91996235E+01;
COFD[8277] = 4.90190161E+00;
COFD[8278] = -4.08908928E-01;
COFD[8279] = 1.71998038E-02;
COFD[8280] = -1.40136043E+01;
COFD[8281] = 3.05361342E+00;
COFD[8282] = -1.82331859E-01;
COFD[8283] = 7.91667899E-03;
COFD[8284] = -1.82099807E+01;
COFD[8285] = 4.46715628E+00;
COFD[8286] = -3.57521352E-01;
COFD[8287] = 1.51703027E-02;
COFD[8288] = -1.82113706E+01;
COFD[8289] = 4.46715628E+00;
COFD[8290] = -3.57521352E-01;
COFD[8291] = 1.51703027E-02;
COFD[8292] = -1.36081894E+01;
COFD[8293] = 2.89678405E+00;
COFD[8294] = -1.62418864E-01;
COFD[8295] = 7.07300755E-03;
COFD[8296] = -1.45172079E+01;
COFD[8297] = 3.25814060E+00;
COFD[8298] = -2.08402129E-01;
COFD[8299] = 9.02544298E-03;
COFD[8300] = -1.65113232E+01;
COFD[8301] = 3.87564052E+00;
COFD[8302] = -2.85285750E-01;
COFD[8303] = 1.22208235E-02;
COFD[8304] = -1.59158328E+01;
COFD[8305] = 3.67153141E+00;
COFD[8306] = -2.60291173E-01;
COFD[8307] = 1.11995571E-02;
COFD[8308] = -1.57204714E+01;
COFD[8309] = 3.63667810E+00;
COFD[8310] = -2.55876890E-01;
COFD[8311] = 1.10128613E-02;
COFD[8312] = -1.28844314E+01;
COFD[8313] = 2.59809959E+00;
COFD[8314] = -1.23503755E-01;
COFD[8315] = 5.38095363E-03;
COFD[8316] = -1.28844314E+01;
COFD[8317] = 2.59809959E+00;
COFD[8318] = -1.23503755E-01;
COFD[8319] = 5.38095363E-03;
COFD[8320] = -1.92868765E+01;
COFD[8321] = 4.90190161E+00;
COFD[8322] = -4.08908928E-01;
COFD[8323] = 1.71998038E-02;
COFD[8324] = -1.90815916E+01;
COFD[8325] = 3.95772830E+00;
COFD[8326] = -2.12919832E-01;
COFD[8327] = 5.95934214E-03;
COFD[8328] = -2.20359179E+01;
COFD[8329] = 5.46748583E+00;
COFD[8330] = -4.52712497E-01;
COFD[8331] = 1.79643869E-02;
COFD[8332] = -2.03707224E+01;
COFD[8333] = 5.12499506E+00;
COFD[8334] = -4.34164262E-01;
COFD[8335] = 1.81499285E-02;
COFD[8336] = -2.20403656E+01;
COFD[8337] = 5.46748583E+00;
COFD[8338] = -4.52712497E-01;
COFD[8339] = 1.79643869E-02;
COFD[8340] = -2.03805001E+01;
COFD[8341] = 5.13106264E+00;
COFD[8342] = -4.34831442E-01;
COFD[8343] = 1.81741555E-02;
COFD[8344] = -2.20217363E+01;
COFD[8345] = 5.44978020E+00;
COFD[8346] = -4.48659098E-01;
COFD[8347] = 1.77239783E-02;
COFD[8348] = -1.90815916E+01;
COFD[8349] = 3.95772830E+00;
COFD[8350] = -2.12919832E-01;
COFD[8351] = 5.95934214E-03;
COFD[8352] = -2.05868537E+01;
COFD[8353] = 5.19851461E+00;
COFD[8354] = -4.41448461E-01;
COFD[8355] = 1.83776542E-02;
COFD[8356] = -1.57941459E+01;
COFD[8357] = 3.95657450E+00;
COFD[8358] = -2.95018117E-01;
COFD[8359] = 1.26116893E-02;
COFD[8360] = -2.13291184E+01;
COFD[8361] = 5.42583038E+00;
COFD[8362] = -4.65284588E-01;
COFD[8363] = 1.91927319E-02;
COFD[8364] = -1.95954813E+01;
COFD[8365] = 5.44168826E+00;
COFD[8366] = -4.65452072E-01;
COFD[8367] = 1.91268618E-02;
COFD[8368] = -1.92676440E+01;
COFD[8369] = 4.90190161E+00;
COFD[8370] = -4.08908928E-01;
COFD[8371] = 1.71998038E-02;
COFD[8372] = -1.92868765E+01;
COFD[8373] = 4.90190161E+00;
COFD[8374] = -4.08908928E-01;
COFD[8375] = 1.71998038E-02;
COFD[8376] = -2.05940359E+01;
COFD[8377] = 5.19851461E+00;
COFD[8378] = -4.41448461E-01;
COFD[8379] = 1.83776542E-02;
COFD[8380] = -1.86178507E+01;
COFD[8381] = 3.93632699E+00;
COFD[8382] = -2.09772398E-01;
COFD[8383] = 5.80951043E-03;
COFD[8384] = -2.06008879E+01;
COFD[8385] = 5.19851461E+00;
COFD[8386] = -4.41448461E-01;
COFD[8387] = 1.83776542E-02;
COFD[8388] = -1.98895266E+01;
COFD[8389] = 4.34170635E+00;
COFD[8390] = -2.70199437E-01;
COFD[8391] = 8.70997059E-03;
COFD[8392] = -1.98978433E+01;
COFD[8393] = 4.34170635E+00;
COFD[8394] = -2.70199437E-01;
COFD[8395] = 8.70997059E-03;
COFD[8396] = -2.18841170E+01;
COFD[8397] = 5.49119562E+00;
COFD[8398] = -4.61230197E-01;
COFD[8399] = 1.85376198E-02;
COFD[8400] = -1.97302781E+01;
COFD[8401] = 4.43158626E+00;
COFD[8402] = -2.83750498E-01;
COFD[8403] = 9.36547527E-03;
COFD[8404] = -2.08688784E+01;
COFD[8405] = 5.28883639E+00;
COFD[8406] = -4.51325359E-01;
COFD[8407] = 1.87342859E-02;
COFD[8408] = -2.08688784E+01;
COFD[8409] = 5.28883639E+00;
COFD[8410] = -4.51325359E-01;
COFD[8411] = 1.87342859E-02;
COFD[8412] = -2.15434811E+01;
COFD[8413] = 5.08422954E+00;
COFD[8414] = -3.85024067E-01;
COFD[8415] = 1.43625491E-02;
COFD[8416] = -2.08764072E+01;
COFD[8417] = 5.28883639E+00;
COFD[8418] = -4.51325359E-01;
COFD[8419] = 1.87342859E-02;
COFD[8420] = -1.90260792E+01;
COFD[8421] = 4.78118094E+00;
COFD[8422] = -3.95246621E-01;
COFD[8423] = 1.66869495E-02;
COFD[8424] = -1.93770047E+01;
COFD[8425] = 4.78118094E+00;
COFD[8426] = -3.95246621E-01;
COFD[8427] = 1.66869495E-02;
COFD[8428] = -1.92365248E+01;
COFD[8429] = 4.90190161E+00;
COFD[8430] = -4.08908928E-01;
COFD[8431] = 1.71998038E-02;
COFD[8432] = -1.92156097E+01;
COFD[8433] = 4.90190161E+00;
COFD[8434] = -4.08908928E-01;
COFD[8435] = 1.71998038E-02;
COFD[8436] = -1.95286161E+01;
COFD[8437] = 4.83644316E+00;
COFD[8438] = -4.01608859E-01;
COFD[8439] = 1.69307155E-02;
COFD[8440] = -2.20312078E+01;
COFD[8441] = 5.46748583E+00;
COFD[8442] = -4.52712497E-01;
COFD[8443] = 1.79643869E-02;
COFD[8444] = -2.16751892E+01;
COFD[8445] = 5.08860948E+00;
COFD[8446] = -3.85736749E-01;
COFD[8447] = 1.43988247E-02;
COFD[8448] = -2.20359179E+01;
COFD[8449] = 5.46748583E+00;
COFD[8450] = -4.52712497E-01;
COFD[8451] = 1.79643869E-02;
COFD[8452] = -2.20359179E+01;
COFD[8453] = 5.46748583E+00;
COFD[8454] = -4.52712497E-01;
COFD[8455] = 1.79643869E-02;
COFD[8456] = -2.20213471E+01;
COFD[8457] = 5.46748583E+00;
COFD[8458] = -4.52712497E-01;
COFD[8459] = 1.79643869E-02;
COFD[8460] = -1.23414464E+01;
COFD[8461] = 2.61360947E+00;
COFD[8462] = -1.25541800E-01;
COFD[8463] = 5.47045704E-03;
COFD[8464] = -2.15434811E+01;
COFD[8465] = 5.08422954E+00;
COFD[8466] = -3.85024067E-01;
COFD[8467] = 1.43625491E-02;
COFD[8468] = -2.12572667E+01;
COFD[8469] = 4.84340426E+00;
COFD[8470] = -3.46976285E-01;
COFD[8471] = 1.24627164E-02;
COFD[8472] = -2.12332745E+01;
COFD[8473] = 4.84340426E+00;
COFD[8474] = -3.46976285E-01;
COFD[8475] = 1.24627164E-02;
COFD[8476] = -1.91996235E+01;
COFD[8477] = 4.90190161E+00;
COFD[8478] = -4.08908928E-01;
COFD[8479] = 1.71998038E-02;
COFD[8480] = -1.90908301E+01;
COFD[8481] = 3.95772830E+00;
COFD[8482] = -2.12919832E-01;
COFD[8483] = 5.95934214E-03;
COFD[8484] = -1.90908301E+01;
COFD[8485] = 3.95772830E+00;
COFD[8486] = -2.12919832E-01;
COFD[8487] = 5.95934214E-03;
COFD[8488] = -2.08764072E+01;
COFD[8489] = 5.28883639E+00;
COFD[8490] = -4.51325359E-01;
COFD[8491] = 1.87342859E-02;
COFD[8492] = -2.12037308E+01;
COFD[8493] = 4.84340426E+00;
COFD[8494] = -3.46976285E-01;
COFD[8495] = 1.24627164E-02;
COFD[8496] = -2.12062274E+01;
COFD[8497] = 4.84340426E+00;
COFD[8498] = -3.46976285E-01;
COFD[8499] = 1.24627164E-02;
COFD[8500] = -2.03538379E+01;
COFD[8501] = 5.12499506E+00;
COFD[8502] = -4.34164262E-01;
COFD[8503] = 1.81499285E-02;
COFD[8504] = -2.12607655E+01;
COFD[8505] = 5.43685814E+00;
COFD[8506] = -4.65636659E-01;
COFD[8507] = 1.91663012E-02;
COFD[8508] = -2.20911025E+01;
COFD[8509] = 5.44442134E+00;
COFD[8510] = -4.47436658E-01;
COFD[8511] = 1.76514728E-02;
COFD[8512] = -2.20198559E+01;
COFD[8513] = 5.48895644E+00;
COFD[8514] = -4.60008770E-01;
COFD[8515] = 1.84492699E-02;
COFD[8516] = -2.19094332E+01;
COFD[8517] = 5.49119562E+00;
COFD[8518] = -4.61230197E-01;
COFD[8519] = 1.85376198E-02;
COFD[8520] = -1.93853197E+01;
COFD[8521] = 4.78118094E+00;
COFD[8522] = -3.95246621E-01;
COFD[8523] = 1.66869495E-02;
COFD[8524] = -1.93853197E+01;
COFD[8525] = 4.78118094E+00;
COFD[8526] = -3.95246621E-01;
COFD[8527] = 1.66869495E-02;
COFD[8528] = -1.92868765E+01;
COFD[8529] = 4.90190161E+00;
COFD[8530] = -4.08908928E-01;
COFD[8531] = 1.71998038E-02;
COFD[8532] = -1.90815916E+01;
COFD[8533] = 3.95772830E+00;
COFD[8534] = -2.12919832E-01;
COFD[8535] = 5.95934214E-03;
COFD[8536] = -2.20359179E+01;
COFD[8537] = 5.46748583E+00;
COFD[8538] = -4.52712497E-01;
COFD[8539] = 1.79643869E-02;
COFD[8540] = -2.03707224E+01;
COFD[8541] = 5.12499506E+00;
COFD[8542] = -4.34164262E-01;
COFD[8543] = 1.81499285E-02;
COFD[8544] = -2.20403656E+01;
COFD[8545] = 5.46748583E+00;
COFD[8546] = -4.52712497E-01;
COFD[8547] = 1.79643869E-02;
COFD[8548] = -2.03805001E+01;
COFD[8549] = 5.13106264E+00;
COFD[8550] = -4.34831442E-01;
COFD[8551] = 1.81741555E-02;
COFD[8552] = -2.20217363E+01;
COFD[8553] = 5.44978020E+00;
COFD[8554] = -4.48659098E-01;
COFD[8555] = 1.77239783E-02;
COFD[8556] = -1.90815916E+01;
COFD[8557] = 3.95772830E+00;
COFD[8558] = -2.12919832E-01;
COFD[8559] = 5.95934214E-03;
COFD[8560] = -2.05868537E+01;
COFD[8561] = 5.19851461E+00;
COFD[8562] = -4.41448461E-01;
COFD[8563] = 1.83776542E-02;
COFD[8564] = -1.57941459E+01;
COFD[8565] = 3.95657450E+00;
COFD[8566] = -2.95018117E-01;
COFD[8567] = 1.26116893E-02;
COFD[8568] = -2.13291184E+01;
COFD[8569] = 5.42583038E+00;
COFD[8570] = -4.65284588E-01;
COFD[8571] = 1.91927319E-02;
COFD[8572] = -1.95954813E+01;
COFD[8573] = 5.44168826E+00;
COFD[8574] = -4.65452072E-01;
COFD[8575] = 1.91268618E-02;
COFD[8576] = -1.92676440E+01;
COFD[8577] = 4.90190161E+00;
COFD[8578] = -4.08908928E-01;
COFD[8579] = 1.71998038E-02;
COFD[8580] = -1.92868765E+01;
COFD[8581] = 4.90190161E+00;
COFD[8582] = -4.08908928E-01;
COFD[8583] = 1.71998038E-02;
COFD[8584] = -2.05940359E+01;
COFD[8585] = 5.19851461E+00;
COFD[8586] = -4.41448461E-01;
COFD[8587] = 1.83776542E-02;
COFD[8588] = -1.86178507E+01;
COFD[8589] = 3.93632699E+00;
COFD[8590] = -2.09772398E-01;
COFD[8591] = 5.80951043E-03;
COFD[8592] = -2.06008879E+01;
COFD[8593] = 5.19851461E+00;
COFD[8594] = -4.41448461E-01;
COFD[8595] = 1.83776542E-02;
COFD[8596] = -1.98895266E+01;
COFD[8597] = 4.34170635E+00;
COFD[8598] = -2.70199437E-01;
COFD[8599] = 8.70997059E-03;
COFD[8600] = -1.98978433E+01;
COFD[8601] = 4.34170635E+00;
COFD[8602] = -2.70199437E-01;
COFD[8603] = 8.70997059E-03;
COFD[8604] = -2.18841170E+01;
COFD[8605] = 5.49119562E+00;
COFD[8606] = -4.61230197E-01;
COFD[8607] = 1.85376198E-02;
COFD[8608] = -1.97302781E+01;
COFD[8609] = 4.43158626E+00;
COFD[8610] = -2.83750498E-01;
COFD[8611] = 9.36547527E-03;
COFD[8612] = -2.08688784E+01;
COFD[8613] = 5.28883639E+00;
COFD[8614] = -4.51325359E-01;
COFD[8615] = 1.87342859E-02;
COFD[8616] = -2.08688784E+01;
COFD[8617] = 5.28883639E+00;
COFD[8618] = -4.51325359E-01;
COFD[8619] = 1.87342859E-02;
COFD[8620] = -2.15434811E+01;
COFD[8621] = 5.08422954E+00;
COFD[8622] = -3.85024067E-01;
COFD[8623] = 1.43625491E-02;
COFD[8624] = -2.08764072E+01;
COFD[8625] = 5.28883639E+00;
COFD[8626] = -4.51325359E-01;
COFD[8627] = 1.87342859E-02;
COFD[8628] = -1.90260792E+01;
COFD[8629] = 4.78118094E+00;
COFD[8630] = -3.95246621E-01;
COFD[8631] = 1.66869495E-02;
COFD[8632] = -1.93770047E+01;
COFD[8633] = 4.78118094E+00;
COFD[8634] = -3.95246621E-01;
COFD[8635] = 1.66869495E-02;
COFD[8636] = -1.92365248E+01;
COFD[8637] = 4.90190161E+00;
COFD[8638] = -4.08908928E-01;
COFD[8639] = 1.71998038E-02;
COFD[8640] = -1.92156097E+01;
COFD[8641] = 4.90190161E+00;
COFD[8642] = -4.08908928E-01;
COFD[8643] = 1.71998038E-02;
COFD[8644] = -1.95286161E+01;
COFD[8645] = 4.83644316E+00;
COFD[8646] = -4.01608859E-01;
COFD[8647] = 1.69307155E-02;
COFD[8648] = -2.20312078E+01;
COFD[8649] = 5.46748583E+00;
COFD[8650] = -4.52712497E-01;
COFD[8651] = 1.79643869E-02;
COFD[8652] = -2.16751892E+01;
COFD[8653] = 5.08860948E+00;
COFD[8654] = -3.85736749E-01;
COFD[8655] = 1.43988247E-02;
COFD[8656] = -2.20359179E+01;
COFD[8657] = 5.46748583E+00;
COFD[8658] = -4.52712497E-01;
COFD[8659] = 1.79643869E-02;
COFD[8660] = -2.20359179E+01;
COFD[8661] = 5.46748583E+00;
COFD[8662] = -4.52712497E-01;
COFD[8663] = 1.79643869E-02;
COFD[8664] = -2.20213471E+01;
COFD[8665] = 5.46748583E+00;
COFD[8666] = -4.52712497E-01;
COFD[8667] = 1.79643869E-02;
COFD[8668] = -1.23414464E+01;
COFD[8669] = 2.61360947E+00;
COFD[8670] = -1.25541800E-01;
COFD[8671] = 5.47045704E-03;
COFD[8672] = -2.15434811E+01;
COFD[8673] = 5.08422954E+00;
COFD[8674] = -3.85024067E-01;
COFD[8675] = 1.43625491E-02;
COFD[8676] = -2.12572667E+01;
COFD[8677] = 4.84340426E+00;
COFD[8678] = -3.46976285E-01;
COFD[8679] = 1.24627164E-02;
COFD[8680] = -2.12332745E+01;
COFD[8681] = 4.84340426E+00;
COFD[8682] = -3.46976285E-01;
COFD[8683] = 1.24627164E-02;
COFD[8684] = -1.91996235E+01;
COFD[8685] = 4.90190161E+00;
COFD[8686] = -4.08908928E-01;
COFD[8687] = 1.71998038E-02;
COFD[8688] = -1.90908301E+01;
COFD[8689] = 3.95772830E+00;
COFD[8690] = -2.12919832E-01;
COFD[8691] = 5.95934214E-03;
COFD[8692] = -1.90908301E+01;
COFD[8693] = 3.95772830E+00;
COFD[8694] = -2.12919832E-01;
COFD[8695] = 5.95934214E-03;
COFD[8696] = -2.08764072E+01;
COFD[8697] = 5.28883639E+00;
COFD[8698] = -4.51325359E-01;
COFD[8699] = 1.87342859E-02;
COFD[8700] = -2.12037308E+01;
COFD[8701] = 4.84340426E+00;
COFD[8702] = -3.46976285E-01;
COFD[8703] = 1.24627164E-02;
COFD[8704] = -2.12062274E+01;
COFD[8705] = 4.84340426E+00;
COFD[8706] = -3.46976285E-01;
COFD[8707] = 1.24627164E-02;
COFD[8708] = -2.03538379E+01;
COFD[8709] = 5.12499506E+00;
COFD[8710] = -4.34164262E-01;
COFD[8711] = 1.81499285E-02;
COFD[8712] = -2.12607655E+01;
COFD[8713] = 5.43685814E+00;
COFD[8714] = -4.65636659E-01;
COFD[8715] = 1.91663012E-02;
COFD[8716] = -2.20911025E+01;
COFD[8717] = 5.44442134E+00;
COFD[8718] = -4.47436658E-01;
COFD[8719] = 1.76514728E-02;
COFD[8720] = -2.20198559E+01;
COFD[8721] = 5.48895644E+00;
COFD[8722] = -4.60008770E-01;
COFD[8723] = 1.84492699E-02;
COFD[8724] = -2.19094332E+01;
COFD[8725] = 5.49119562E+00;
COFD[8726] = -4.61230197E-01;
COFD[8727] = 1.85376198E-02;
COFD[8728] = -1.93853197E+01;
COFD[8729] = 4.78118094E+00;
COFD[8730] = -3.95246621E-01;
COFD[8731] = 1.66869495E-02;
COFD[8732] = -1.93853197E+01;
COFD[8733] = 4.78118094E+00;
COFD[8734] = -3.95246621E-01;
COFD[8735] = 1.66869495E-02;
COFD[8736] = -1.41047925E+01;
COFD[8737] = 3.05361342E+00;
COFD[8738] = -1.82331859E-01;
COFD[8739] = 7.91667899E-03;
COFD[8740] = -2.08665613E+01;
COFD[8741] = 5.28883639E+00;
COFD[8742] = -4.51325359E-01;
COFD[8743] = 1.87342859E-02;
COFD[8744] = -1.79372136E+01;
COFD[8745] = 4.23476606E+00;
COFD[8746] = -3.28847162E-01;
COFD[8747] = 1.39854168E-02;
COFD[8748] = -1.51002407E+01;
COFD[8749] = 3.26459489E+00;
COFD[8750] = -2.09215287E-01;
COFD[8751] = 9.05961407E-03;
COFD[8752] = -1.79420259E+01;
COFD[8753] = 4.23476606E+00;
COFD[8754] = -3.28847162E-01;
COFD[8755] = 1.39854168E-02;
COFD[8756] = -1.51068133E+01;
COFD[8757] = 3.27065235E+00;
COFD[8758] = -2.09978212E-01;
COFD[8759] = 9.09167155E-03;
COFD[8760] = -1.81334314E+01;
COFD[8761] = 4.31155904E+00;
COFD[8762] = -3.38455014E-01;
COFD[8763] = 1.43877323E-02;
COFD[8764] = -2.08665613E+01;
COFD[8765] = 5.28883639E+00;
COFD[8766] = -4.51325359E-01;
COFD[8767] = 1.87342859E-02;
COFD[8768] = -1.53354270E+01;
COFD[8769] = 3.36125353E+00;
COFD[8770] = -2.21308349E-01;
COFD[8771] = 9.56431936E-03;
COFD[8772] = -1.14851085E+01;
COFD[8773] = 2.37509888E+00;
COFD[8774] = -9.35410216E-02;
COFD[8775] = 4.03605551E-03;
COFD[8776] = -1.60856572E+01;
COFD[8777] = 3.63047782E+00;
COFD[8778] = -2.55092110E-01;
COFD[8779] = 1.09796900E-02;
COFD[8780] = -1.44434251E+01;
COFD[8781] = 3.71325476E+00;
COFD[8782] = -2.65538326E-01;
COFD[8783] = 1.14199023E-02;
COFD[8784] = -1.40846299E+01;
COFD[8785] = 3.05361342E+00;
COFD[8786] = -1.82331859E-01;
COFD[8787] = 7.91667899E-03;
COFD[8788] = -1.41047925E+01;
COFD[8789] = 3.05361342E+00;
COFD[8790] = -1.82331859E-01;
COFD[8791] = 7.91667899E-03;
COFD[8792] = -1.53431237E+01;
COFD[8793] = 3.36125353E+00;
COFD[8794] = -2.21308349E-01;
COFD[8795] = 9.56431936E-03;
COFD[8796] = -2.04572980E+01;
COFD[8797] = 5.29593785E+00;
COFD[8798] = -4.52123029E-01;
COFD[8799] = 1.87641215E-02;
COFD[8800] = -1.53504741E+01;
COFD[8801] = 3.36125353E+00;
COFD[8802] = -2.21308349E-01;
COFD[8803] = 9.56431936E-03;
COFD[8804] = -2.04875993E+01;
COFD[8805] = 5.16940940E+00;
COFD[8806] = -4.38949310E-01;
COFD[8807] = 1.83192313E-02;
COFD[8808] = -2.04964835E+01;
COFD[8809] = 5.16940940E+00;
COFD[8810] = -4.38949310E-01;
COFD[8811] = 1.83192313E-02;
COFD[8812] = -1.73135097E+01;
COFD[8813] = 4.03969426E+00;
COFD[8814] = -3.05064314E-01;
COFD[8815] = 1.30170956E-02;
COFD[8816] = -2.00283932E+01;
COFD[8817] = 5.13666604E+00;
COFD[8818] = -4.35440428E-01;
COFD[8819] = 1.81959353E-02;
COFD[8820] = -1.55370831E+01;
COFD[8821] = 3.43207521E+00;
COFD[8822] = -2.29953304E-01;
COFD[8823] = 9.91591599E-03;
COFD[8824] = -1.55370831E+01;
COFD[8825] = 3.43207521E+00;
COFD[8826] = -2.29953304E-01;
COFD[8827] = 9.91591599E-03;
COFD[8828] = -1.95429138E+01;
COFD[8829] = 4.78702268E+00;
COFD[8830] = -3.95915871E-01;
COFD[8831] = 1.67124483E-02;
COFD[8832] = -1.55451432E+01;
COFD[8833] = 3.43207521E+00;
COFD[8834] = -2.29953304E-01;
COFD[8835] = 9.91591599E-03;
COFD[8836] = -1.39440151E+01;
COFD[8837] = 2.95722149E+00;
COFD[8838] = -1.70165913E-01;
COFD[8839] = 7.40439932E-03;
COFD[8840] = -1.43092071E+01;
COFD[8841] = 2.95722149E+00;
COFD[8842] = -1.70165913E-01;
COFD[8843] = 7.40439932E-03;
COFD[8844] = -1.40528291E+01;
COFD[8845] = 3.05361342E+00;
COFD[8846] = -1.82331859E-01;
COFD[8847] = 7.91667899E-03;
COFD[8848] = -1.40309431E+01;
COFD[8849] = 3.05361342E+00;
COFD[8850] = -1.82331859E-01;
COFD[8851] = 7.91667899E-03;
COFD[8852] = -1.44071092E+01;
COFD[8853] = 2.99798504E+00;
COFD[8854] = -1.75316659E-01;
COFD[8855] = 7.62155848E-03;
COFD[8856] = -1.79321214E+01;
COFD[8857] = 4.23476606E+00;
COFD[8858] = -3.28847162E-01;
COFD[8859] = 1.39854168E-02;
COFD[8860] = -1.96610932E+01;
COFD[8861] = 4.78390436E+00;
COFD[8862] = -3.95558661E-01;
COFD[8863] = 1.66988403E-02;
COFD[8864] = -1.79372136E+01;
COFD[8865] = 4.23476606E+00;
COFD[8866] = -3.28847162E-01;
COFD[8867] = 1.39854168E-02;
COFD[8868] = -1.79372136E+01;
COFD[8869] = 4.23476606E+00;
COFD[8870] = -3.28847162E-01;
COFD[8871] = 1.39854168E-02;
COFD[8872] = -1.79214730E+01;
COFD[8873] = 4.23476606E+00;
COFD[8874] = -3.28847162E-01;
COFD[8875] = 1.39854168E-02;
COFD[8876] = -1.02375799E+01;
COFD[8877] = 1.85324333E+00;
COFD[8878] = -2.65008845E-02;
COFD[8879] = 1.17336026E-03;
COFD[8880] = -1.95429138E+01;
COFD[8881] = 4.78702268E+00;
COFD[8882] = -3.95915871E-01;
COFD[8883] = 1.67124483E-02;
COFD[8884] = -2.01555344E+01;
COFD[8885] = 4.93246609E+00;
COFD[8886] = -4.12422852E-01;
COFD[8887] = 1.73342490E-02;
COFD[8888] = -2.01290763E+01;
COFD[8889] = 4.93246609E+00;
COFD[8890] = -4.12422852E-01;
COFD[8891] = 1.73342490E-02;
COFD[8892] = -1.40136043E+01;
COFD[8893] = 3.05361342E+00;
COFD[8894] = -1.82331859E-01;
COFD[8895] = 7.91667899E-03;
COFD[8896] = -2.08764072E+01;
COFD[8897] = 5.28883639E+00;
COFD[8898] = -4.51325359E-01;
COFD[8899] = 1.87342859E-02;
COFD[8900] = -2.08764072E+01;
COFD[8901] = 5.28883639E+00;
COFD[8902] = -4.51325359E-01;
COFD[8903] = 1.87342859E-02;
COFD[8904] = -1.55451432E+01;
COFD[8905] = 3.43207521E+00;
COFD[8906] = -2.29953304E-01;
COFD[8907] = 9.91591599E-03;
COFD[8908] = -2.00966694E+01;
COFD[8909] = 4.93246609E+00;
COFD[8910] = -4.12422852E-01;
COFD[8911] = 1.73342490E-02;
COFD[8912] = -2.00994008E+01;
COFD[8913] = 4.93246609E+00;
COFD[8914] = -4.12422852E-01;
COFD[8915] = 1.73342490E-02;
COFD[8916] = -1.50822150E+01;
COFD[8917] = 3.26459489E+00;
COFD[8918] = -2.09215287E-01;
COFD[8919] = 9.05961407E-03;
COFD[8920] = -1.60834436E+01;
COFD[8921] = 3.68013605E+00;
COFD[8922] = -2.61380238E-01;
COFD[8923] = 1.12455884E-02;
COFD[8924] = -1.82594016E+01;
COFD[8925] = 4.33330928E+00;
COFD[8926] = -3.41166504E-01;
COFD[8927] = 1.45009138E-02;
COFD[8928] = -1.75103553E+01;
COFD[8929] = 4.06781474E+00;
COFD[8930] = -3.08419808E-01;
COFD[8931] = 1.31505475E-02;
COFD[8932] = -1.73344883E+01;
COFD[8933] = 4.03969426E+00;
COFD[8934] = -3.05064314E-01;
COFD[8935] = 1.30170956E-02;
COFD[8936] = -1.43180896E+01;
COFD[8937] = 2.95722149E+00;
COFD[8938] = -1.70165913E-01;
COFD[8939] = 7.40439932E-03;
COFD[8940] = -1.43180896E+01;
COFD[8941] = 2.95722149E+00;
COFD[8942] = -1.70165913E-01;
COFD[8943] = 7.40439932E-03;
COFD[8944] = -1.83176921E+01;
COFD[8945] = 4.46715628E+00;
COFD[8946] = -3.57521352E-01;
COFD[8947] = 1.51703027E-02;
COFD[8948] = -2.11910506E+01;
COFD[8949] = 4.84340426E+00;
COFD[8950] = -3.46976285E-01;
COFD[8951] = 1.24627164E-02;
COFD[8952] = -2.20773999E+01;
COFD[8953] = 5.46734534E+00;
COFD[8954] = -4.65041652E-01;
COFD[8955] = 1.89657101E-02;
COFD[8956] = -1.95102020E+01;
COFD[8957] = 4.73109179E+00;
COFD[8958] = -3.89322712E-01;
COFD[8959] = 1.64528637E-02;
COFD[8960] = -2.20840703E+01;
COFD[8961] = 5.46734534E+00;
COFD[8962] = -4.65041652E-01;
COFD[8963] = 1.89657101E-02;
COFD[8964] = -1.95162248E+01;
COFD[8965] = 4.73880084E+00;
COFD[8966] = -3.90242532E-01;
COFD[8967] = 1.64895743E-02;
COFD[8968] = -2.21091363E+01;
COFD[8969] = 5.46752046E+00;
COFD[8970] = -4.63419210E-01;
COFD[8971] = 1.88328134E-02;
COFD[8972] = -2.11910506E+01;
COFD[8973] = 4.84340426E+00;
COFD[8974] = -3.46976285E-01;
COFD[8975] = 1.24627164E-02;
COFD[8976] = -1.98226046E+01;
COFD[8977] = 4.84483615E+00;
COFD[8978] = -4.02575093E-01;
COFD[8979] = 1.69677331E-02;
COFD[8980] = -1.48895149E+01;
COFD[8981] = 3.56409697E+00;
COFD[8982] = -2.46625546E-01;
COFD[8983] = 1.06190657E-02;
COFD[8984] = -2.06556759E+01;
COFD[8985] = 5.10938713E+00;
COFD[8986] = -4.32476478E-01;
COFD[8987] = 1.80899364E-02;
COFD[8988] = -1.88677129E+01;
COFD[8989] = 5.16817593E+00;
COFD[8990] = -4.38840667E-01;
COFD[8991] = 1.83165432E-02;
COFD[8992] = -1.82935626E+01;
COFD[8993] = 4.46715628E+00;
COFD[8994] = -3.57521352E-01;
COFD[8995] = 1.51703027E-02;
COFD[8996] = -1.83176921E+01;
COFD[8997] = 4.46715628E+00;
COFD[8998] = -3.57521352E-01;
COFD[8999] = 1.51703027E-02;
COFD[9000] = -1.98304235E+01;
COFD[9001] = 4.84407524E+00;
COFD[9002] = -4.02489256E-01;
COFD[9003] = 1.69645233E-02;
COFD[9004] = -2.06013456E+01;
COFD[9005] = 4.77630610E+00;
COFD[9006] = -3.37759268E-01;
COFD[9007] = 1.20457679E-02;
COFD[9008] = -1.98401881E+01;
COFD[9009] = 4.84407524E+00;
COFD[9010] = -4.02489256E-01;
COFD[9011] = 1.69645233E-02;
COFD[9012] = -2.16565978E+01;
COFD[9013] = 5.08384420E+00;
COFD[9014] = -3.84961399E-01;
COFD[9015] = 1.43593603E-02;
COFD[9016] = -2.16681648E+01;
COFD[9017] = 5.08384420E+00;
COFD[9018] = -3.84961399E-01;
COFD[9019] = 1.43593603E-02;
COFD[9020] = -2.18146336E+01;
COFD[9021] = 5.43564723E+00;
COFD[9022] = -4.65662187E-01;
COFD[9023] = 1.91744823E-02;
COFD[9024] = -2.12743699E+01;
COFD[9025] = 5.09638614E+00;
COFD[9026] = -3.88177504E-01;
COFD[9027] = 1.45586613E-02;
COFD[9028] = -2.00860663E+01;
COFD[9029] = 4.93246609E+00;
COFD[9030] = -4.12422852E-01;
COFD[9031] = 1.73342490E-02;
COFD[9032] = -2.00860663E+01;
COFD[9033] = 4.93246609E+00;
COFD[9034] = -4.12422852E-01;
COFD[9035] = 1.73342490E-02;
COFD[9036] = -2.23664633E+01;
COFD[9037] = 5.41684253E+00;
COFD[9038] = -4.43902129E-01;
COFD[9039] = 1.74998380E-02;
COFD[9040] = -2.00966694E+01;
COFD[9041] = 4.93246609E+00;
COFD[9042] = -4.12422852E-01;
COFD[9043] = 1.73342490E-02;
COFD[9044] = -1.79704131E+01;
COFD[9045] = 4.31633461E+00;
COFD[9046] = -3.39053638E-01;
COFD[9047] = 1.44128540E-02;
COFD[9048] = -1.83736384E+01;
COFD[9049] = 4.31633461E+00;
COFD[9050] = -3.39053638E-01;
COFD[9051] = 1.44128540E-02;
COFD[9052] = -1.82744093E+01;
COFD[9053] = 4.47032474E+00;
COFD[9054] = -3.57902803E-01;
COFD[9055] = 1.51856790E-02;
COFD[9056] = -1.82391859E+01;
COFD[9057] = 4.46715628E+00;
COFD[9058] = -3.57521352E-01;
COFD[9059] = 1.51703027E-02;
COFD[9060] = -1.85449830E+01;
COFD[9061] = 4.38688939E+00;
COFD[9062] = -3.47787055E-01;
COFD[9063] = 1.47749241E-02;
COFD[9064] = -2.20703682E+01;
COFD[9065] = 5.46734534E+00;
COFD[9066] = -4.65041652E-01;
COFD[9067] = 1.89657101E-02;
COFD[9068] = -2.25654291E+01;
COFD[9069] = 5.44751945E+00;
COFD[9070] = -4.48162029E-01;
COFD[9071] = 1.76948891E-02;
COFD[9072] = -2.20773999E+01;
COFD[9073] = 5.46734534E+00;
COFD[9074] = -4.65041652E-01;
COFD[9075] = 1.89657101E-02;
COFD[9076] = -2.20773999E+01;
COFD[9077] = 5.46734534E+00;
COFD[9078] = -4.65041652E-01;
COFD[9079] = 1.89657101E-02;
COFD[9080] = -2.20557511E+01;
COFD[9081] = 5.46734534E+00;
COFD[9082] = -4.65041652E-01;
COFD[9083] = 1.89657101E-02;
COFD[9084] = -1.17439663E+01;
COFD[9085] = 2.29988896E+00;
COFD[9086] = -8.34550252E-02;
COFD[9087] = 3.58441943E-03;
COFD[9088] = -2.23664633E+01;
COFD[9089] = 5.41684253E+00;
COFD[9090] = -4.43902129E-01;
COFD[9091] = 1.74998380E-02;
COFD[9092] = -2.25423306E+01;
COFD[9093] = 5.34430955E+00;
COFD[9094] = -4.28846138E-01;
COFD[9095] = 1.66357158E-02;
COFD[9096] = -2.25016616E+01;
COFD[9097] = 5.34430955E+00;
COFD[9098] = -4.28846138E-01;
COFD[9099] = 1.66357158E-02;
COFD[9100] = -1.82099807E+01;
COFD[9101] = 4.46715628E+00;
COFD[9102] = -3.57521352E-01;
COFD[9103] = 1.51703027E-02;
COFD[9104] = -2.12037308E+01;
COFD[9105] = 4.84340426E+00;
COFD[9106] = -3.46976285E-01;
COFD[9107] = 1.24627164E-02;
COFD[9108] = -2.12037308E+01;
COFD[9109] = 4.84340426E+00;
COFD[9110] = -3.46976285E-01;
COFD[9111] = 1.24627164E-02;
COFD[9112] = -2.00966694E+01;
COFD[9113] = 4.93246609E+00;
COFD[9114] = -4.12422852E-01;
COFD[9115] = 1.73342490E-02;
COFD[9116] = -2.24533302E+01;
COFD[9117] = 5.34430955E+00;
COFD[9118] = -4.28846138E-01;
COFD[9119] = 1.66357158E-02;
COFD[9120] = -2.24573455E+01;
COFD[9121] = 5.34430955E+00;
COFD[9122] = -4.28846138E-01;
COFD[9123] = 1.66357158E-02;
COFD[9124] = -1.94867993E+01;
COFD[9125] = 4.73109179E+00;
COFD[9126] = -3.89322712E-01;
COFD[9127] = 1.64528637E-02;
COFD[9128] = -2.05510205E+01;
COFD[9129] = 5.14469734E+00;
COFD[9130] = -4.36303812E-01;
COFD[9131] = 1.82263884E-02;
COFD[9132] = -2.21523502E+01;
COFD[9133] = 5.47141104E+00;
COFD[9134] = -4.63484602E-01;
COFD[9135] = 1.88189166E-02;
COFD[9136] = -2.19175402E+01;
COFD[9137] = 5.44075465E+00;
COFD[9138] = -4.65503545E-01;
COFD[9139] = 1.91357665E-02;
COFD[9140] = -2.17937339E+01;
COFD[9141] = 5.43564723E+00;
COFD[9142] = -4.65662187E-01;
COFD[9143] = 1.91744823E-02;
COFD[9144] = -1.83852033E+01;
COFD[9145] = 4.31633461E+00;
COFD[9146] = -3.39053638E-01;
COFD[9147] = 1.44128540E-02;
COFD[9148] = -1.83852033E+01;
COFD[9149] = 4.31633461E+00;
COFD[9150] = -3.39053638E-01;
COFD[9151] = 1.44128540E-02;
COFD[9152] = -1.83194167E+01;
COFD[9153] = 4.46715628E+00;
COFD[9154] = -3.57521352E-01;
COFD[9155] = 1.51703027E-02;
COFD[9156] = -2.11934846E+01;
COFD[9157] = 4.84340426E+00;
COFD[9158] = -3.46976285E-01;
COFD[9159] = 1.24627164E-02;
COFD[9160] = -2.20806872E+01;
COFD[9161] = 5.46734534E+00;
COFD[9162] = -4.65041652E-01;
COFD[9163] = 1.89657101E-02;
COFD[9164] = -1.95128172E+01;
COFD[9165] = 4.73109179E+00;
COFD[9166] = -3.89322712E-01;
COFD[9167] = 1.64528637E-02;
COFD[9168] = -2.20874019E+01;
COFD[9169] = 5.46734534E+00;
COFD[9170] = -4.65041652E-01;
COFD[9171] = 1.89657101E-02;
COFD[9172] = -1.95187199E+01;
COFD[9173] = 4.73880084E+00;
COFD[9174] = -3.90242532E-01;
COFD[9175] = 1.64895743E-02;
COFD[9176] = -2.21124678E+01;
COFD[9177] = 5.46752046E+00;
COFD[9178] = -4.63419210E-01;
COFD[9179] = 1.88328134E-02;
COFD[9180] = -2.11934846E+01;
COFD[9181] = 4.84340426E+00;
COFD[9182] = -3.46976285E-01;
COFD[9183] = 1.24627164E-02;
COFD[9184] = -1.98253347E+01;
COFD[9185] = 4.84483615E+00;
COFD[9186] = -4.02575093E-01;
COFD[9187] = 1.69677331E-02;
COFD[9188] = -1.48897669E+01;
COFD[9189] = 3.56409697E+00;
COFD[9190] = -2.46625546E-01;
COFD[9191] = 1.06190657E-02;
COFD[9192] = -2.06588199E+01;
COFD[9193] = 5.10938713E+00;
COFD[9194] = -4.32476478E-01;
COFD[9195] = 1.80899364E-02;
COFD[9196] = -1.88678409E+01;
COFD[9197] = 5.16817593E+00;
COFD[9198] = -4.38840667E-01;
COFD[9199] = 1.83165432E-02;
COFD[9200] = -1.82952058E+01;
COFD[9201] = 4.46715628E+00;
COFD[9202] = -3.57521352E-01;
COFD[9203] = 1.51703027E-02;
COFD[9204] = -1.83194167E+01;
COFD[9205] = 4.46715628E+00;
COFD[9206] = -3.57521352E-01;
COFD[9207] = 1.51703027E-02;
COFD[9208] = -1.98332098E+01;
COFD[9209] = 4.84407524E+00;
COFD[9210] = -4.02489256E-01;
COFD[9211] = 1.69645233E-02;
COFD[9212] = -2.06031495E+01;
COFD[9213] = 4.77630610E+00;
COFD[9214] = -3.37759268E-01;
COFD[9215] = 1.20457679E-02;
COFD[9216] = -1.98430296E+01;
COFD[9217] = 4.84407524E+00;
COFD[9218] = -4.02489256E-01;
COFD[9219] = 1.69645233E-02;
COFD[9220] = -2.16591542E+01;
COFD[9221] = 5.08384420E+00;
COFD[9222] = -3.84961399E-01;
COFD[9223] = 1.43593603E-02;
COFD[9224] = -2.16707812E+01;
COFD[9225] = 5.08384420E+00;
COFD[9226] = -3.84961399E-01;
COFD[9227] = 1.43593603E-02;
COFD[9228] = -2.18180521E+01;
COFD[9229] = 5.43564723E+00;
COFD[9230] = -4.65662187E-01;
COFD[9231] = 1.91744823E-02;
COFD[9232] = -2.12760964E+01;
COFD[9233] = 5.09638614E+00;
COFD[9234] = -3.88177504E-01;
COFD[9235] = 1.45586613E-02;
COFD[9236] = -2.00887403E+01;
COFD[9237] = 4.93246609E+00;
COFD[9238] = -4.12422852E-01;
COFD[9239] = 1.73342490E-02;
COFD[9240] = -2.00887403E+01;
COFD[9241] = 4.93246609E+00;
COFD[9242] = -4.12422852E-01;
COFD[9243] = 1.73342490E-02;
COFD[9244] = -2.23699245E+01;
COFD[9245] = 5.41684253E+00;
COFD[9246] = -4.43902129E-01;
COFD[9247] = 1.74998380E-02;
COFD[9248] = -2.00994008E+01;
COFD[9249] = 4.93246609E+00;
COFD[9250] = -4.12422852E-01;
COFD[9251] = 1.73342490E-02;
COFD[9252] = -1.79718892E+01;
COFD[9253] = 4.31633461E+00;
COFD[9254] = -3.39053638E-01;
COFD[9255] = 1.44128540E-02;
COFD[9256] = -1.83761951E+01;
COFD[9257] = 4.31633461E+00;
COFD[9258] = -3.39053638E-01;
COFD[9259] = 1.44128540E-02;
COFD[9260] = -1.82760545E+01;
COFD[9261] = 4.47032474E+00;
COFD[9262] = -3.57902803E-01;
COFD[9263] = 1.51856790E-02;
COFD[9264] = -1.82407476E+01;
COFD[9265] = 4.46715628E+00;
COFD[9266] = -3.57521352E-01;
COFD[9267] = 1.51703027E-02;
COFD[9268] = -1.85473529E+01;
COFD[9269] = 4.38688939E+00;
COFD[9270] = -3.47787055E-01;
COFD[9271] = 1.47749241E-02;
COFD[9272] = -2.20736095E+01;
COFD[9273] = 5.46734534E+00;
COFD[9274] = -4.65041652E-01;
COFD[9275] = 1.89657101E-02;
COFD[9276] = -2.25690921E+01;
COFD[9277] = 5.44751945E+00;
COFD[9278] = -4.48162029E-01;
COFD[9279] = 1.76948891E-02;
COFD[9280] = -2.20806872E+01;
COFD[9281] = 5.46734534E+00;
COFD[9282] = -4.65041652E-01;
COFD[9283] = 1.89657101E-02;
COFD[9284] = -2.20806872E+01;
COFD[9285] = 5.46734534E+00;
COFD[9286] = -4.65041652E-01;
COFD[9287] = 1.89657101E-02;
COFD[9288] = -2.20588987E+01;
COFD[9289] = 5.46734534E+00;
COFD[9290] = -4.65041652E-01;
COFD[9291] = 1.89657101E-02;
COFD[9292] = -1.17444515E+01;
COFD[9293] = 2.29988896E+00;
COFD[9294] = -8.34550252E-02;
COFD[9295] = 3.58441943E-03;
COFD[9296] = -2.23699245E+01;
COFD[9297] = 5.41684253E+00;
COFD[9298] = -4.43902129E-01;
COFD[9299] = 1.74998380E-02;
COFD[9300] = -2.25471320E+01;
COFD[9301] = 5.34430955E+00;
COFD[9302] = -4.28846138E-01;
COFD[9303] = 1.66357158E-02;
COFD[9304] = -2.25060862E+01;
COFD[9305] = 5.34430955E+00;
COFD[9306] = -4.28846138E-01;
COFD[9307] = 1.66357158E-02;
COFD[9308] = -1.82113706E+01;
COFD[9309] = 4.46715628E+00;
COFD[9310] = -3.57521352E-01;
COFD[9311] = 1.51703027E-02;
COFD[9312] = -2.12062274E+01;
COFD[9313] = 4.84340426E+00;
COFD[9314] = -3.46976285E-01;
COFD[9315] = 1.24627164E-02;
COFD[9316] = -2.12062274E+01;
COFD[9317] = 4.84340426E+00;
COFD[9318] = -3.46976285E-01;
COFD[9319] = 1.24627164E-02;
COFD[9320] = -2.00994008E+01;
COFD[9321] = 4.93246609E+00;
COFD[9322] = -4.12422852E-01;
COFD[9323] = 1.73342490E-02;
COFD[9324] = -2.24573455E+01;
COFD[9325] = 5.34430955E+00;
COFD[9326] = -4.28846138E-01;
COFD[9327] = 1.66357158E-02;
COFD[9328] = -2.24613933E+01;
COFD[9329] = 5.34430955E+00;
COFD[9330] = -4.28846138E-01;
COFD[9331] = 1.66357158E-02;
COFD[9332] = -1.94892947E+01;
COFD[9333] = 4.73109179E+00;
COFD[9334] = -3.89322712E-01;
COFD[9335] = 1.64528637E-02;
COFD[9336] = -2.05526674E+01;
COFD[9337] = 5.14469734E+00;
COFD[9338] = -4.36303812E-01;
COFD[9339] = 1.82263884E-02;
COFD[9340] = -2.21549692E+01;
COFD[9341] = 5.47141104E+00;
COFD[9342] = -4.63484602E-01;
COFD[9343] = 1.88189166E-02;
COFD[9344] = -2.19202730E+01;
COFD[9345] = 5.44075465E+00;
COFD[9346] = -4.65503545E-01;
COFD[9347] = 1.91357665E-02;
COFD[9348] = -2.17964093E+01;
COFD[9349] = 5.43564723E+00;
COFD[9350] = -4.65662187E-01;
COFD[9351] = 1.91744823E-02;
COFD[9352] = -1.83878200E+01;
COFD[9353] = 4.31633461E+00;
COFD[9354] = -3.39053638E-01;
COFD[9355] = 1.44128540E-02;
COFD[9356] = -1.83878200E+01;
COFD[9357] = 4.31633461E+00;
COFD[9358] = -3.39053638E-01;
COFD[9359] = 1.44128540E-02;
COFD[9360] = -1.36954208E+01;
COFD[9361] = 2.89678405E+00;
COFD[9362] = -1.62418864E-01;
COFD[9363] = 7.07300755E-03;
COFD[9364] = -2.03446027E+01;
COFD[9365] = 5.12499506E+00;
COFD[9366] = -4.34164262E-01;
COFD[9367] = 1.81499285E-02;
COFD[9368] = -1.72924318E+01;
COFD[9369] = 4.00684631E+00;
COFD[9370] = -3.01155648E-01;
COFD[9371] = 1.28621017E-02;
COFD[9372] = -1.45767911E+01;
COFD[9373] = 3.06880733E+00;
COFD[9374] = -1.84232163E-01;
COFD[9375] = 7.99594639E-03;
COFD[9376] = -1.72968776E+01;
COFD[9377] = 4.00684631E+00;
COFD[9378] = -3.01155648E-01;
COFD[9379] = 1.28621017E-02;
COFD[9380] = -1.45806462E+01;
COFD[9381] = 3.07340947E+00;
COFD[9382] = -1.84805140E-01;
COFD[9383] = 8.01973216E-03;
COFD[9384] = -1.74370408E+01;
COFD[9385] = 4.06188586E+00;
COFD[9386] = -3.07715468E-01;
COFD[9387] = 1.31226885E-02;
COFD[9388] = -2.03446027E+01;
COFD[9389] = 5.12499506E+00;
COFD[9390] = -4.34164262E-01;
COFD[9391] = 1.81499285E-02;
COFD[9392] = -1.48133685E+01;
COFD[9393] = 3.16773813E+00;
COFD[9394] = -1.96823168E-01;
COFD[9395] = 8.53058072E-03;
COFD[9396] = -1.11071703E+01;
COFD[9397] = 2.21467976E+00;
COFD[9398] = -7.20501534E-02;
COFD[9399] = 3.07515437E-03;
COFD[9400] = -1.54956188E+01;
COFD[9401] = 3.41295809E+00;
COFD[9402] = -2.27626583E-01;
COFD[9403] = 9.82158260E-03;
COFD[9404] = -1.38221854E+01;
COFD[9405] = 3.46560000E+00;
COFD[9406] = -2.34075114E-01;
COFD[9407] = 1.00849661E-02;
COFD[9408] = -1.36761934E+01;
COFD[9409] = 2.89678405E+00;
COFD[9410] = -1.62418864E-01;
COFD[9411] = 7.07300755E-03;
COFD[9412] = -1.36954208E+01;
COFD[9413] = 2.89678405E+00;
COFD[9414] = -1.62418864E-01;
COFD[9415] = 7.07300755E-03;
COFD[9416] = -1.48205479E+01;
COFD[9417] = 3.16773813E+00;
COFD[9418] = -1.96823168E-01;
COFD[9419] = 8.53058072E-03;
COFD[9420] = -2.06077929E+01;
COFD[9421] = 5.33386551E+00;
COFD[9422] = -4.56343451E-01;
COFD[9423] = 1.89202797E-02;
COFD[9424] = -1.48273972E+01;
COFD[9425] = 3.16773813E+00;
COFD[9426] = -1.96823168E-01;
COFD[9427] = 8.53058072E-03;
COFD[9428] = -1.99267541E+01;
COFD[9429] = 4.98617709E+00;
COFD[9430] = -4.18736053E-01;
COFD[9431] = 1.75821344E-02;
COFD[9432] = -1.99350678E+01;
COFD[9433] = 4.98617709E+00;
COFD[9434] = -4.18736053E-01;
COFD[9435] = 1.75821344E-02;
COFD[9436] = -1.68045170E+01;
COFD[9437] = 3.86251333E+00;
COFD[9438] = -2.83724399E-01;
COFD[9439] = 1.21589320E-02;
COFD[9440] = -1.98420312E+01;
COFD[9441] = 5.07012033E+00;
COFD[9442] = -4.28341021E-01;
COFD[9443] = 1.79480600E-02;
COFD[9444] = -1.50746890E+01;
COFD[9445] = 3.26459489E+00;
COFD[9446] = -2.09215287E-01;
COFD[9447] = 9.05961407E-03;
COFD[9448] = -1.50746890E+01;
COFD[9449] = 3.26459489E+00;
COFD[9450] = -2.09215287E-01;
COFD[9451] = 9.05961407E-03;
COFD[9452] = -1.90835924E+01;
COFD[9453] = 4.62560030E+00;
COFD[9454] = -3.76498522E-01;
COFD[9455] = 1.59308956E-02;
COFD[9456] = -1.50822150E+01;
COFD[9457] = 3.26459489E+00;
COFD[9458] = -2.09215287E-01;
COFD[9459] = 9.05961407E-03;
COFD[9460] = -1.34982282E+01;
COFD[9461] = 2.78343819E+00;
COFD[9462] = -1.47679033E-01;
COFD[9463] = 6.43347681E-03;
COFD[9464] = -1.38492662E+01;
COFD[9465] = 2.78343819E+00;
COFD[9466] = -1.47679033E-01;
COFD[9467] = 6.43347681E-03;
COFD[9468] = -1.36450291E+01;
COFD[9469] = 2.89678405E+00;
COFD[9470] = -1.62418864E-01;
COFD[9471] = 7.07300755E-03;
COFD[9472] = -1.36241193E+01;
COFD[9473] = 2.89678405E+00;
COFD[9474] = -1.62418864E-01;
COFD[9475] = 7.07300755E-03;
COFD[9476] = -1.39572379E+01;
COFD[9477] = 2.82860807E+00;
COFD[9478] = -1.53540725E-01;
COFD[9479] = 6.68730174E-03;
COFD[9480] = -1.72877238E+01;
COFD[9481] = 4.00684631E+00;
COFD[9482] = -3.01155648E-01;
COFD[9483] = 1.28621017E-02;
COFD[9484] = -1.89443053E+01;
COFD[9485] = 4.53386131E+00;
COFD[9486] = -3.65361236E-01;
COFD[9487] = 1.54781318E-02;
COFD[9488] = -1.72924318E+01;
COFD[9489] = 4.00684631E+00;
COFD[9490] = -3.01155648E-01;
COFD[9491] = 1.28621017E-02;
COFD[9492] = -1.72924318E+01;
COFD[9493] = 4.00684631E+00;
COFD[9494] = -3.01155648E-01;
COFD[9495] = 1.28621017E-02;
COFD[9496] = -1.72778672E+01;
COFD[9497] = 4.00684631E+00;
COFD[9498] = -3.01155648E-01;
COFD[9499] = 1.28621017E-02;
COFD[9500] = -1.01347952E+01;
COFD[9501] = 1.80391843E+00;
COFD[9502] = -1.99275570E-02;
COFD[9503] = 8.81933064E-04;
COFD[9504] = -1.90835924E+01;
COFD[9505] = 4.62560030E+00;
COFD[9506] = -3.76498522E-01;
COFD[9507] = 1.59308956E-02;
COFD[9508] = -1.95403075E+01;
COFD[9509] = 4.73109179E+00;
COFD[9510] = -3.89322712E-01;
COFD[9511] = 1.64528637E-02;
COFD[9512] = -1.95163281E+01;
COFD[9513] = 4.73109179E+00;
COFD[9514] = -3.89322712E-01;
COFD[9515] = 1.64528637E-02;
COFD[9516] = -1.36081894E+01;
COFD[9517] = 2.89678405E+00;
COFD[9518] = -1.62418864E-01;
COFD[9519] = 7.07300755E-03;
COFD[9520] = -2.03538379E+01;
COFD[9521] = 5.12499506E+00;
COFD[9522] = -4.34164262E-01;
COFD[9523] = 1.81499285E-02;
COFD[9524] = -2.03538379E+01;
COFD[9525] = 5.12499506E+00;
COFD[9526] = -4.34164262E-01;
COFD[9527] = 1.81499285E-02;
COFD[9528] = -1.50822150E+01;
COFD[9529] = 3.26459489E+00;
COFD[9530] = -2.09215287E-01;
COFD[9531] = 9.05961407E-03;
COFD[9532] = -1.94867993E+01;
COFD[9533] = 4.73109179E+00;
COFD[9534] = -3.89322712E-01;
COFD[9535] = 1.64528637E-02;
COFD[9536] = -1.94892947E+01;
COFD[9537] = 4.73109179E+00;
COFD[9538] = -3.89322712E-01;
COFD[9539] = 1.64528637E-02;
COFD[9540] = -1.45599127E+01;
COFD[9541] = 3.06880733E+00;
COFD[9542] = -1.84232163E-01;
COFD[9543] = 7.99594639E-03;
COFD[9544] = -1.54573387E+01;
COFD[9545] = 3.44303981E+00;
COFD[9546] = -2.31296721E-01;
COFD[9547] = 9.97079557E-03;
COFD[9548] = -1.75535743E+01;
COFD[9549] = 4.07809359E+00;
COFD[9550] = -3.09646036E-01;
COFD[9551] = 1.31992743E-02;
COFD[9552] = -1.69861414E+01;
COFD[9553] = 3.88423663E+00;
COFD[9554] = -2.86310885E-01;
COFD[9555] = 1.22615996E-02;
COFD[9556] = -1.68300017E+01;
COFD[9557] = 3.86251333E+00;
COFD[9558] = -2.83724399E-01;
COFD[9559] = 1.21589320E-02;
COFD[9560] = -1.38575782E+01;
COFD[9561] = 2.78343819E+00;
COFD[9562] = -1.47679033E-01;
COFD[9563] = 6.43347681E-03;
COFD[9564] = -1.38575782E+01;
COFD[9565] = 2.78343819E+00;
COFD[9566] = -1.47679033E-01;
COFD[9567] = 6.43347681E-03;
COFD[9568] = -1.45865205E+01;
COFD[9569] = 3.25814060E+00;
COFD[9570] = -2.08402129E-01;
COFD[9571] = 9.02544298E-03;
COFD[9572] = -2.12540235E+01;
COFD[9573] = 5.43685814E+00;
COFD[9574] = -4.65636659E-01;
COFD[9575] = 1.91663012E-02;
COFD[9576] = -1.85108813E+01;
COFD[9577] = 4.49767237E+00;
COFD[9578] = -3.61159649E-01;
COFD[9579] = 1.53154259E-02;
COFD[9580] = -1.54695743E+01;
COFD[9581] = 3.44303981E+00;
COFD[9582] = -2.31296721E-01;
COFD[9583] = 9.97079557E-03;
COFD[9584] = -1.85139391E+01;
COFD[9585] = 4.49767237E+00;
COFD[9586] = -3.61159649E-01;
COFD[9587] = 1.53154259E-02;
COFD[9588] = -1.54796731E+01;
COFD[9589] = 3.44821689E+00;
COFD[9590] = -2.31932994E-01;
COFD[9591] = 9.99688061E-03;
COFD[9592] = -1.86463567E+01;
COFD[9593] = 4.54862236E+00;
COFD[9594] = -3.67096821E-01;
COFD[9595] = 1.55463252E-02;
COFD[9596] = -2.12540235E+01;
COFD[9597] = 5.43685814E+00;
COFD[9598] = -4.65636659E-01;
COFD[9599] = 1.91663012E-02;
COFD[9600] = -1.57555863E+01;
COFD[9601] = 3.56140952E+00;
COFD[9602] = -2.46282892E-01;
COFD[9603] = 1.06044757E-02;
COFD[9604] = -1.19609478E+01;
COFD[9605] = 2.54091639E+00;
COFD[9606] = -1.15850475E-01;
COFD[9607] = 5.03893346E-03;
COFD[9608] = -1.65553272E+01;
COFD[9609] = 3.85326861E+00;
COFD[9610] = -2.82628431E-01;
COFD[9611] = 1.21156819E-02;
COFD[9612] = -1.50643904E+01;
COFD[9613] = 3.90641370E+00;
COFD[9614] = -2.88957677E-01;
COFD[9615] = 1.23669987E-02;
COFD[9616] = -1.45714581E+01;
COFD[9617] = 3.25814060E+00;
COFD[9618] = -2.08402129E-01;
COFD[9619] = 9.02544298E-03;
COFD[9620] = -1.45865205E+01;
COFD[9621] = 3.25814060E+00;
COFD[9622] = -2.08402129E-01;
COFD[9623] = 9.02544298E-03;
COFD[9624] = -1.57607118E+01;
COFD[9625] = 3.56140952E+00;
COFD[9626] = -2.46282892E-01;
COFD[9627] = 1.06044757E-02;
COFD[9628] = -2.11989225E+01;
COFD[9629] = 5.48294383E+00;
COFD[9630] = -4.63910525E-01;
COFD[9631] = 1.87967249E-02;
COFD[9632] = -1.57655820E+01;
COFD[9633] = 3.56140952E+00;
COFD[9634] = -2.46282892E-01;
COFD[9635] = 1.06044757E-02;
COFD[9636] = -2.09478839E+01;
COFD[9637] = 5.35250010E+00;
COFD[9638] = -4.58316703E-01;
COFD[9639] = 1.89887690E-02;
COFD[9640] = -2.09538960E+01;
COFD[9641] = 5.35250010E+00;
COFD[9642] = -4.58316703E-01;
COFD[9643] = 1.89887690E-02;
COFD[9644] = -1.78791358E+01;
COFD[9645] = 4.30050846E+00;
COFD[9646] = -3.37068745E-01;
COFD[9647] = 1.43295133E-02;
COFD[9648] = -2.08799158E+01;
COFD[9649] = 5.41943549E+00;
COFD[9650] = -4.64901055E-01;
COFD[9651] = 1.91933156E-02;
COFD[9652] = -1.60780487E+01;
COFD[9653] = 3.68013605E+00;
COFD[9654] = -2.61380238E-01;
COFD[9655] = 1.12455884E-02;
COFD[9656] = -1.60780487E+01;
COFD[9657] = 3.68013605E+00;
COFD[9658] = -2.61380238E-01;
COFD[9659] = 1.12455884E-02;
COFD[9660] = -2.02721454E+01;
COFD[9661] = 5.08491126E+00;
COFD[9662] = -4.29909057E-01;
COFD[9663] = 1.80023812E-02;
COFD[9664] = -1.60834436E+01;
COFD[9665] = 3.68013605E+00;
COFD[9666] = -2.61380238E-01;
COFD[9667] = 1.12455884E-02;
COFD[9668] = -1.43371454E+01;
COFD[9669] = 3.12244025E+00;
COFD[9670] = -1.90997489E-01;
COFD[9671] = 8.28063944E-03;
COFD[9672] = -1.46359250E+01;
COFD[9673] = 3.12244025E+00;
COFD[9674] = -1.90997489E-01;
COFD[9675] = 8.28063944E-03;
COFD[9676] = -1.45408056E+01;
COFD[9677] = 3.25814060E+00;
COFD[9678] = -2.08402129E-01;
COFD[9679] = 9.02544298E-03;
COFD[9680] = -1.45242878E+01;
COFD[9681] = 3.25814060E+00;
COFD[9682] = -2.08402129E-01;
COFD[9683] = 9.02544298E-03;
COFD[9684] = -1.47925494E+01;
COFD[9685] = 3.18325094E+00;
COFD[9686] = -1.98825485E-01;
COFD[9687] = 8.61681746E-03;
COFD[9688] = -1.85076340E+01;
COFD[9689] = 4.49767237E+00;
COFD[9690] = -3.61159649E-01;
COFD[9691] = 1.53154259E-02;
COFD[9692] = -2.01479737E+01;
COFD[9693] = 5.00765728E+00;
COFD[9694] = -4.21264863E-01;
COFD[9695] = 1.76816153E-02;
COFD[9696] = -1.85108813E+01;
COFD[9697] = 4.49767237E+00;
COFD[9698] = -3.61159649E-01;
COFD[9699] = 1.53154259E-02;
COFD[9700] = -1.85108813E+01;
COFD[9701] = 4.49767237E+00;
COFD[9702] = -3.61159649E-01;
COFD[9703] = 1.53154259E-02;
COFD[9704] = -1.85008048E+01;
COFD[9705] = 4.49767237E+00;
COFD[9706] = -3.61159649E-01;
COFD[9707] = 1.53154259E-02;
COFD[9708] = -1.05246614E+01;
COFD[9709] = 1.95495730E+00;
COFD[9710] = -4.06803225E-02;
COFD[9711] = 1.83089776E-03;
COFD[9712] = -2.02721454E+01;
COFD[9713] = 5.08491126E+00;
COFD[9714] = -4.29909057E-01;
COFD[9715] = 1.80023812E-02;
COFD[9716] = -2.05857144E+01;
COFD[9717] = 5.14469734E+00;
COFD[9718] = -4.36303812E-01;
COFD[9719] = 1.82263884E-02;
COFD[9720] = -2.05703280E+01;
COFD[9721] = 5.14469734E+00;
COFD[9722] = -4.36303812E-01;
COFD[9723] = 1.82263884E-02;
COFD[9724] = -1.45172079E+01;
COFD[9725] = 3.25814060E+00;
COFD[9726] = -2.08402129E-01;
COFD[9727] = 9.02544298E-03;
COFD[9728] = -2.12607655E+01;
COFD[9729] = 5.43685814E+00;
COFD[9730] = -4.65636659E-01;
COFD[9731] = 1.91663012E-02;
COFD[9732] = -2.12607655E+01;
COFD[9733] = 5.43685814E+00;
COFD[9734] = -4.65636659E-01;
COFD[9735] = 1.91663012E-02;
COFD[9736] = -1.60834436E+01;
COFD[9737] = 3.68013605E+00;
COFD[9738] = -2.61380238E-01;
COFD[9739] = 1.12455884E-02;
COFD[9740] = -2.05510205E+01;
COFD[9741] = 5.14469734E+00;
COFD[9742] = -4.36303812E-01;
COFD[9743] = 1.82263884E-02;
COFD[9744] = -2.05526674E+01;
COFD[9745] = 5.14469734E+00;
COFD[9746] = -4.36303812E-01;
COFD[9747] = 1.82263884E-02;
COFD[9748] = -1.54573387E+01;
COFD[9749] = 3.44303981E+00;
COFD[9750] = -2.31296721E-01;
COFD[9751] = 9.97079557E-03;
COFD[9752] = -1.65813662E+01;
COFD[9753] = 3.88425001E+00;
COFD[9754] = -2.86312476E-01;
COFD[9755] = 1.22616627E-02;
COFD[9756] = -1.87841275E+01;
COFD[9757] = 4.56428962E+00;
COFD[9758] = -3.68938951E-01;
COFD[9759] = 1.56186844E-02;
COFD[9760] = -1.81218785E+01;
COFD[9761] = 4.33860905E+00;
COFD[9762] = -3.41825268E-01;
COFD[9763] = 1.45283398E-02;
COFD[9764] = -1.79278524E+01;
COFD[9765] = 4.30050846E+00;
COFD[9766] = -3.37068745E-01;
COFD[9767] = 1.43295133E-02;
COFD[9768] = -1.46419357E+01;
COFD[9769] = 3.12244025E+00;
COFD[9770] = -1.90997489E-01;
COFD[9771] = 8.28063944E-03;
COFD[9772] = -1.46419357E+01;
COFD[9773] = 3.12244025E+00;
COFD[9774] = -1.90997489E-01;
COFD[9775] = 8.28063944E-03;
COFD[9776] = -1.66006724E+01;
COFD[9777] = 3.87564052E+00;
COFD[9778] = -2.85285750E-01;
COFD[9779] = 1.22208235E-02;
COFD[9780] = -2.20815434E+01;
COFD[9781] = 5.44442134E+00;
COFD[9782] = -4.47436658E-01;
COFD[9783] = 1.76514728E-02;
COFD[9784] = -2.08211963E+01;
COFD[9785] = 5.16017453E+00;
COFD[9786] = -4.37976881E-01;
COFD[9787] = 1.82858770E-02;
COFD[9788] = -1.75710607E+01;
COFD[9789] = 4.07809359E+00;
COFD[9790] = -3.09646036E-01;
COFD[9791] = 1.31992743E-02;
COFD[9792] = -2.08258351E+01;
COFD[9793] = 5.16017453E+00;
COFD[9794] = -4.37976881E-01;
COFD[9795] = 1.82858770E-02;
COFD[9796] = -1.75803708E+01;
COFD[9797] = 4.08497111E+00;
COFD[9798] = -3.10470821E-01;
COFD[9799] = 1.32322450E-02;
COFD[9800] = -2.09219786E+01;
COFD[9801] = 5.19204548E+00;
COFD[9802] = -4.40915128E-01;
COFD[9803] = 1.83664930E-02;
COFD[9804] = -2.20815434E+01;
COFD[9805] = 5.44442134E+00;
COFD[9806] = -4.47436658E-01;
COFD[9807] = 1.76514728E-02;
COFD[9808] = -1.79002453E+01;
COFD[9809] = 4.20508193E+00;
COFD[9810] = -3.25158699E-01;
COFD[9811] = 1.38321131E-02;
COFD[9812] = -1.35411048E+01;
COFD[9813] = 3.05984388E+00;
COFD[9814] = -1.83114865E-01;
COFD[9815] = 7.94950068E-03;
COFD[9816] = -1.88136421E+01;
COFD[9817] = 4.52571936E+00;
COFD[9818] = -3.64403779E-01;
COFD[9819] = 1.54404961E-02;
COFD[9820] = -1.72388691E+01;
COFD[9821] = 4.60447813E+00;
COFD[9822] = -3.73889368E-01;
COFD[9823] = 1.58229235E-02;
COFD[9824] = -1.65809452E+01;
COFD[9825] = 3.87564052E+00;
COFD[9826] = -2.85285750E-01;
COFD[9827] = 1.22208235E-02;
COFD[9828] = -1.66006724E+01;
COFD[9829] = 3.87564052E+00;
COFD[9830] = -2.85285750E-01;
COFD[9831] = 1.22208235E-02;
COFD[9832] = -1.79076984E+01;
COFD[9833] = 4.20508193E+00;
COFD[9834] = -3.25158699E-01;
COFD[9835] = 1.38321131E-02;
COFD[9836] = -2.16940439E+01;
COFD[9837] = 5.44394964E+00;
COFD[9838] = -4.47152201E-01;
COFD[9839] = 1.76308159E-02;
COFD[9840] = -1.79148126E+01;
COFD[9841] = 4.20508193E+00;
COFD[9842] = -3.25158699E-01;
COFD[9843] = 1.38321131E-02;
COFD[9844] = -2.20664856E+01;
COFD[9845] = 5.48219421E+00;
COFD[9846] = -4.57118011E-01;
COFD[9847] = 1.82481275E-02;
COFD[9848] = -2.20751016E+01;
COFD[9849] = 5.48219421E+00;
COFD[9850] = -4.57118011E-01;
COFD[9851] = 1.82481275E-02;
COFD[9852] = -2.02922971E+01;
COFD[9853] = 5.01169135E+00;
COFD[9854] = -4.21737204E-01;
COFD[9855] = 1.77000781E-02;
COFD[9856] = -2.17153391E+01;
COFD[9857] = 5.48583309E+00;
COFD[9858] = -4.58836911E-01;
COFD[9859] = 1.83694276E-02;
COFD[9860] = -1.82515930E+01;
COFD[9861] = 4.33330928E+00;
COFD[9862] = -3.41166504E-01;
COFD[9863] = 1.45009138E-02;
COFD[9864] = -1.82515930E+01;
COFD[9865] = 4.33330928E+00;
COFD[9866] = -3.41166504E-01;
COFD[9867] = 1.45009138E-02;
COFD[9868] = -2.18866888E+01;
COFD[9869] = 5.45199693E+00;
COFD[9870] = -4.65259658E-01;
COFD[9871] = 1.90596237E-02;
COFD[9872] = -1.82594016E+01;
COFD[9873] = 4.33330928E+00;
COFD[9874] = -3.41166504E-01;
COFD[9875] = 1.45009138E-02;
COFD[9876] = -1.63710509E+01;
COFD[9877] = 3.76527235E+00;
COFD[9878] = -2.71989986E-01;
COFD[9879] = 1.16869799E-02;
COFD[9880] = -1.67153773E+01;
COFD[9881] = 3.76527235E+00;
COFD[9882] = -2.71989986E-01;
COFD[9883] = 1.16869799E-02;
COFD[9884] = -1.65530650E+01;
COFD[9885] = 3.87564052E+00;
COFD[9886] = -2.85285750E-01;
COFD[9887] = 1.22208235E-02;
COFD[9888] = -1.65316330E+01;
COFD[9889] = 3.87564052E+00;
COFD[9890] = -2.85285750E-01;
COFD[9891] = 1.22208235E-02;
COFD[9892] = -1.68468462E+01;
COFD[9893] = 3.81715097E+00;
COFD[9894] = -2.78309582E-01;
COFD[9895] = 1.19436476E-02;
COFD[9896] = -2.08162859E+01;
COFD[9897] = 5.16017453E+00;
COFD[9898] = -4.37976881E-01;
COFD[9899] = 1.82858770E-02;
COFD[9900] = -2.19984240E+01;
COFD[9901] = 5.45124374E+00;
COFD[9902] = -4.65249483E-01;
COFD[9903] = 1.90625389E-02;
COFD[9904] = -2.08211963E+01;
COFD[9905] = 5.16017453E+00;
COFD[9906] = -4.37976881E-01;
COFD[9907] = 1.82858770E-02;
COFD[9908] = -2.08211963E+01;
COFD[9909] = 5.16017453E+00;
COFD[9910] = -4.37976881E-01;
COFD[9911] = 1.82858770E-02;
COFD[9912] = -2.08060121E+01;
COFD[9913] = 5.16017453E+00;
COFD[9914] = -4.37976881E-01;
COFD[9915] = 1.82858770E-02;
COFD[9916] = -1.16778685E+01;
COFD[9917] = 2.31416170E+00;
COFD[9918] = -8.95094036E-02;
COFD[9919] = 4.03742751E-03;
COFD[9920] = -2.18866888E+01;
COFD[9921] = 5.45199693E+00;
COFD[9922] = -4.65259658E-01;
COFD[9923] = 1.90596237E-02;
COFD[9924] = -2.22086574E+01;
COFD[9925] = 5.47141104E+00;
COFD[9926] = -4.63484602E-01;
COFD[9927] = 1.88189166E-02;
COFD[9928] = -2.21833846E+01;
COFD[9929] = 5.47141104E+00;
COFD[9930] = -4.63484602E-01;
COFD[9931] = 1.88189166E-02;
COFD[9932] = -1.65113232E+01;
COFD[9933] = 3.87564052E+00;
COFD[9934] = -2.85285750E-01;
COFD[9935] = 1.22208235E-02;
COFD[9936] = -2.20911025E+01;
COFD[9937] = 5.44442134E+00;
COFD[9938] = -4.47436658E-01;
COFD[9939] = 1.76514728E-02;
COFD[9940] = -2.20911025E+01;
COFD[9941] = 5.44442134E+00;
COFD[9942] = -4.47436658E-01;
COFD[9943] = 1.76514728E-02;
COFD[9944] = -1.82594016E+01;
COFD[9945] = 4.33330928E+00;
COFD[9946] = -3.41166504E-01;
COFD[9947] = 1.45009138E-02;
COFD[9948] = -2.21523502E+01;
COFD[9949] = 5.47141104E+00;
COFD[9950] = -4.63484602E-01;
COFD[9951] = 1.88189166E-02;
COFD[9952] = -2.21549692E+01;
COFD[9953] = 5.47141104E+00;
COFD[9954] = -4.63484602E-01;
COFD[9955] = 1.88189166E-02;
COFD[9956] = -1.75535743E+01;
COFD[9957] = 4.07809359E+00;
COFD[9958] = -3.09646036E-01;
COFD[9959] = 1.31992743E-02;
COFD[9960] = -1.87841275E+01;
COFD[9961] = 4.56428962E+00;
COFD[9962] = -3.68938951E-01;
COFD[9963] = 1.56186844E-02;
COFD[9964] = -2.10046863E+01;
COFD[9965] = 5.19982587E+00;
COFD[9966] = -4.41557143E-01;
COFD[9967] = 1.83799644E-02;
COFD[9968] = -2.04840903E+01;
COFD[9969] = 5.04369394E+00;
COFD[9970] = -4.25475803E-01;
COFD[9971] = 1.78458715E-02;
COFD[9972] = -2.03044660E+01;
COFD[9973] = 5.01169135E+00;
COFD[9974] = -4.21737204E-01;
COFD[9975] = 1.77000781E-02;
COFD[9976] = -1.67239915E+01;
COFD[9977] = 3.76527235E+00;
COFD[9978] = -2.71989986E-01;
COFD[9979] = 1.16869799E-02;
COFD[9980] = -1.67239915E+01;
COFD[9981] = 3.76527235E+00;
COFD[9982] = -2.71989986E-01;
COFD[9983] = 1.16869799E-02;
COFD[9984] = -1.60070426E+01;
COFD[9985] = 3.67153141E+00;
COFD[9986] = -2.60291173E-01;
COFD[9987] = 1.11995571E-02;
COFD[9988] = -2.20100065E+01;
COFD[9989] = 5.48895644E+00;
COFD[9990] = -4.60008770E-01;
COFD[9991] = 1.84492699E-02;
COFD[9992] = -2.02000482E+01;
COFD[9993] = 4.96009703E+00;
COFD[9994] = -4.15667692E-01;
COFD[9995] = 1.74615095E-02;
COFD[9996] = -1.70041735E+01;
COFD[9997] = 3.88423663E+00;
COFD[9998] = -2.86310885E-01;
COFD[9999] = 1.22615996E-02;
COFD[10000] = -2.02048626E+01;
COFD[10001] = 4.96009703E+00;
COFD[10002] = -4.15667692E-01;
COFD[10003] = 1.74615095E-02;
COFD[10004] = -1.70084229E+01;
COFD[10005] = 3.88943604E+00;
COFD[10006] = -2.86933580E-01;
COFD[10007] = 1.22865010E-02;
COFD[10008] = -2.03779663E+01;
COFD[10009] = 5.02534340E+00;
COFD[10010] = -4.23333855E-01;
COFD[10011] = 1.77624138E-02;
COFD[10012] = -2.20100065E+01;
COFD[10013] = 5.48895644E+00;
COFD[10014] = -4.60008770E-01;
COFD[10015] = 1.84492699E-02;
COFD[10016] = -1.72362340E+01;
COFD[10017] = 3.97457749E+00;
COFD[10018] = -2.97207135E-01;
COFD[10019] = 1.27006632E-02;
COFD[10020] = -1.30624677E+01;
COFD[10021] = 2.89523765E+00;
COFD[10022] = -1.62218987E-01;
COFD[10023] = 7.06438445E-03;
COFD[10024] = -1.81182878E+01;
COFD[10025] = 4.28329304E+00;
COFD[10026] = -3.34906965E-01;
COFD[10027] = 1.42386421E-02;
COFD[10028] = -1.65467319E+01;
COFD[10029] = 4.37452141E+00;
COFD[10030] = -3.46268170E-01;
COFD[10031] = 1.47124301E-02;
COFD[10032] = -1.59868749E+01;
COFD[10033] = 3.67153141E+00;
COFD[10034] = -2.60291173E-01;
COFD[10035] = 1.11995571E-02;
COFD[10036] = -1.60070426E+01;
COFD[10037] = 3.67153141E+00;
COFD[10038] = -2.60291173E-01;
COFD[10039] = 1.11995571E-02;
COFD[10040] = -1.72439337E+01;
COFD[10041] = 3.97457749E+00;
COFD[10042] = -2.97207135E-01;
COFD[10043] = 1.27006632E-02;
COFD[10044] = -2.16668312E+01;
COFD[10045] = 5.42073101E+00;
COFD[10046] = -4.42623106E-01;
COFD[10047] = 1.73774544E-02;
COFD[10048] = -1.72512868E+01;
COFD[10049] = 3.97457749E+00;
COFD[10050] = -2.97207135E-01;
COFD[10051] = 1.27006632E-02;
COFD[10052] = -2.18827753E+01;
COFD[10053] = 5.48189012E+00;
COFD[10054] = -4.63867746E-01;
COFD[10055] = 1.87984282E-02;
COFD[10056] = -2.18916627E+01;
COFD[10057] = 5.48189012E+00;
COFD[10058] = -4.63867746E-01;
COFD[10059] = 1.87984282E-02;
COFD[10060] = -1.96269497E+01;
COFD[10061] = 4.79115365E+00;
COFD[10062] = -3.96388963E-01;
COFD[10063] = 1.67304643E-02;
COFD[10064] = -2.16476156E+01;
COFD[10065] = 5.49222808E+00;
COFD[10066] = -4.62572220E-01;
COFD[10067] = 1.86418684E-02;
COFD[10068] = -1.75022922E+01;
COFD[10069] = 4.06781474E+00;
COFD[10070] = -3.08419808E-01;
COFD[10071] = 1.31505475E-02;
COFD[10072] = -1.75022922E+01;
COFD[10073] = 4.06781474E+00;
COFD[10074] = -3.08419808E-01;
COFD[10075] = 1.31505475E-02;
COFD[10076] = -2.17061558E+01;
COFD[10077] = 5.42020598E+00;
COFD[10078] = -4.64948899E-01;
COFD[10079] = 1.91933808E-02;
COFD[10080] = -1.75103553E+01;
COFD[10081] = 4.06781474E+00;
COFD[10082] = -3.08419808E-01;
COFD[10083] = 1.31505475E-02;
COFD[10084] = -1.56537703E+01;
COFD[10085] = 3.50740180E+00;
COFD[10086] = -2.39371413E-01;
COFD[10087] = 1.03091202E-02;
COFD[10088] = -1.60055333E+01;
COFD[10089] = 3.50740180E+00;
COFD[10090] = -2.39371413E-01;
COFD[10091] = 1.03091202E-02;
COFD[10092] = -1.59585141E+01;
COFD[10093] = 3.67153141E+00;
COFD[10094] = -2.60291173E-01;
COFD[10095] = 1.11995571E-02;
COFD[10096] = -1.59366228E+01;
COFD[10097] = 3.67153141E+00;
COFD[10098] = -2.60291173E-01;
COFD[10099] = 1.11995571E-02;
COFD[10100] = -1.61808331E+01;
COFD[10101] = 3.57878051E+00;
COFD[10102] = -2.48496434E-01;
COFD[10103] = 1.06986647E-02;
COFD[10104] = -2.01949538E+01;
COFD[10105] = 4.96009703E+00;
COFD[10106] = -4.15667692E-01;
COFD[10107] = 1.74615095E-02;
COFD[10108] = -2.16365955E+01;
COFD[10109] = 5.36696498E+00;
COFD[10110] = -4.59822207E-01;
COFD[10111] = 1.90398008E-02;
COFD[10112] = -2.02000482E+01;
COFD[10113] = 4.96009703E+00;
COFD[10114] = -4.15667692E-01;
COFD[10115] = 1.74615095E-02;
COFD[10116] = -2.02000482E+01;
COFD[10117] = 4.96009703E+00;
COFD[10118] = -4.15667692E-01;
COFD[10119] = 1.74615095E-02;
COFD[10120] = -2.01843010E+01;
COFD[10121] = 4.96009703E+00;
COFD[10122] = -4.15667692E-01;
COFD[10123] = 1.74615095E-02;
COFD[10124] = -1.15041962E+01;
COFD[10125] = 2.26825979E+00;
COFD[10126] = -8.41318655E-02;
COFD[10127] = 3.83329375E-03;
COFD[10128] = -2.17061558E+01;
COFD[10129] = 5.42020598E+00;
COFD[10130] = -4.64948899E-01;
COFD[10131] = 1.91933808E-02;
COFD[10132] = -2.19764361E+01;
COFD[10133] = 5.44075465E+00;
COFD[10134] = -4.65503545E-01;
COFD[10135] = 1.91357665E-02;
COFD[10136] = -2.19499636E+01;
COFD[10137] = 5.44075465E+00;
COFD[10138] = -4.65503545E-01;
COFD[10139] = 1.91357665E-02;
COFD[10140] = -1.59158328E+01;
COFD[10141] = 3.67153141E+00;
COFD[10142] = -2.60291173E-01;
COFD[10143] = 1.11995571E-02;
COFD[10144] = -2.20198559E+01;
COFD[10145] = 5.48895644E+00;
COFD[10146] = -4.60008770E-01;
COFD[10147] = 1.84492699E-02;
COFD[10148] = -2.20198559E+01;
COFD[10149] = 5.48895644E+00;
COFD[10150] = -4.60008770E-01;
COFD[10151] = 1.84492699E-02;
COFD[10152] = -1.75103553E+01;
COFD[10153] = 4.06781474E+00;
COFD[10154] = -3.08419808E-01;
COFD[10155] = 1.31505475E-02;
COFD[10156] = -2.19175402E+01;
COFD[10157] = 5.44075465E+00;
COFD[10158] = -4.65503545E-01;
COFD[10159] = 1.91357665E-02;
COFD[10160] = -2.19202730E+01;
COFD[10161] = 5.44075465E+00;
COFD[10162] = -4.65503545E-01;
COFD[10163] = 1.91357665E-02;
COFD[10164] = -1.69861414E+01;
COFD[10165] = 3.88423663E+00;
COFD[10166] = -2.86310885E-01;
COFD[10167] = 1.22615996E-02;
COFD[10168] = -1.81218785E+01;
COFD[10169] = 4.33860905E+00;
COFD[10170] = -3.41825268E-01;
COFD[10171] = 1.45283398E-02;
COFD[10172] = -2.04840903E+01;
COFD[10173] = 5.04369394E+00;
COFD[10174] = -4.25475803E-01;
COFD[10175] = 1.78458715E-02;
COFD[10176] = -1.98066713E+01;
COFD[10177] = 4.81862124E+00;
COFD[10178] = -3.99543811E-01;
COFD[10179] = 1.68509914E-02;
COFD[10180] = -1.96375326E+01;
COFD[10181] = 4.79115365E+00;
COFD[10182] = -3.96388963E-01;
COFD[10183] = 1.67304643E-02;
COFD[10184] = -1.60144189E+01;
COFD[10185] = 3.50740180E+00;
COFD[10186] = -2.39371413E-01;
COFD[10187] = 1.03091202E-02;
COFD[10188] = -1.60144189E+01;
COFD[10189] = 3.50740180E+00;
COFD[10190] = -2.39371413E-01;
COFD[10191] = 1.03091202E-02;
COFD[10192] = -1.58107521E+01;
COFD[10193] = 3.63667810E+00;
COFD[10194] = -2.55876890E-01;
COFD[10195] = 1.10128613E-02;
COFD[10196] = -2.18997295E+01;
COFD[10197] = 5.49119562E+00;
COFD[10198] = -4.61230197E-01;
COFD[10199] = 1.85376198E-02;
COFD[10200] = -2.00099559E+01;
COFD[10201] = 4.92657613E+00;
COFD[10202] = -4.11730248E-01;
COFD[10203] = 1.73070472E-02;
COFD[10204] = -1.68477599E+01;
COFD[10205] = 3.86251333E+00;
COFD[10206] = -2.83724399E-01;
COFD[10207] = 1.21589320E-02;
COFD[10208] = -2.00146818E+01;
COFD[10209] = 4.92657613E+00;
COFD[10210] = -4.11730248E-01;
COFD[10211] = 1.73070472E-02;
COFD[10212] = -1.68524637E+01;
COFD[10213] = 3.86762857E+00;
COFD[10214] = -2.84331684E-01;
COFD[10215] = 1.21829423E-02;
COFD[10216] = -2.01892061E+01;
COFD[10217] = 4.99261696E+00;
COFD[10218] = -4.19495726E-01;
COFD[10219] = 1.76120917E-02;
COFD[10220] = -2.18997295E+01;
COFD[10221] = 5.49119562E+00;
COFD[10222] = -4.61230197E-01;
COFD[10223] = 1.85376198E-02;
COFD[10224] = -1.70709732E+01;
COFD[10225] = 3.94998946E+00;
COFD[10226] = -2.94215257E-01;
COFD[10227] = 1.25789510E-02;
COFD[10228] = -1.28999767E+01;
COFD[10229] = 2.86989894E+00;
COFD[10230] = -1.58928038E-01;
COFD[10231] = 6.92176252E-03;
COFD[10232] = -1.79154526E+01;
COFD[10233] = 4.24498090E+00;
COFD[10234] = -3.30123845E-01;
COFD[10235] = 1.40388009E-02;
COFD[10236] = -1.63409112E+01;
COFD[10237] = 4.33926971E+00;
COFD[10238] = -3.41907355E-01;
COFD[10239] = 1.45317558E-02;
COFD[10240] = -1.57908045E+01;
COFD[10241] = 3.63667810E+00;
COFD[10242] = -2.55876890E-01;
COFD[10243] = 1.10128613E-02;
COFD[10244] = -1.58107521E+01;
COFD[10245] = 3.63667810E+00;
COFD[10246] = -2.55876890E-01;
COFD[10247] = 1.10128613E-02;
COFD[10248] = -1.70785490E+01;
COFD[10249] = 3.94998946E+00;
COFD[10250] = -2.94215257E-01;
COFD[10251] = 1.25789510E-02;
COFD[10252] = -2.14943782E+01;
COFD[10253] = 5.49133594E+00;
COFD[10254] = -4.61028475E-01;
COFD[10255] = 1.85204974E-02;
COFD[10256] = -1.70857821E+01;
COFD[10257] = 3.94998946E+00;
COFD[10258] = -2.94215257E-01;
COFD[10259] = 1.25789510E-02;
COFD[10260] = -2.17473530E+01;
COFD[10261] = 5.47335592E+00;
COFD[10262] = -4.63541517E-01;
COFD[10263] = 1.88139284E-02;
COFD[10264] = -2.17561042E+01;
COFD[10265] = 5.47335592E+00;
COFD[10266] = -4.63541517E-01;
COFD[10267] = 1.88139284E-02;
COFD[10268] = -1.94475293E+01;
COFD[10269] = 4.76313424E+00;
COFD[10270] = -3.93150913E-01;
COFD[10271] = 1.66058644E-02;
COFD[10272] = -2.13607484E+01;
COFD[10273] = 5.46721890E+00;
COFD[10274] = -4.63882055E-01;
COFD[10275] = 1.88719903E-02;
COFD[10276] = -1.73265530E+01;
COFD[10277] = 4.03969426E+00;
COFD[10278] = -3.05064314E-01;
COFD[10279] = 1.30170956E-02;
COFD[10280] = -1.73265530E+01;
COFD[10281] = 4.03969426E+00;
COFD[10282] = -3.05064314E-01;
COFD[10283] = 1.30170956E-02;
COFD[10284] = -2.13621816E+01;
COFD[10285] = 5.34700929E+00;
COFD[10286] = -4.57742322E-01;
COFD[10287] = 1.89691609E-02;
COFD[10288] = -1.73344883E+01;
COFD[10289] = 4.03969426E+00;
COFD[10290] = -3.05064314E-01;
COFD[10291] = 1.30170956E-02;
COFD[10292] = -1.54704102E+01;
COFD[10293] = 3.47420753E+00;
COFD[10294] = -2.35134222E-01;
COFD[10295] = 1.01284662E-02;
COFD[10296] = -1.58251323E+01;
COFD[10297] = 3.47420753E+00;
COFD[10298] = -2.35134222E-01;
COFD[10299] = 1.01284662E-02;
COFD[10300] = -1.57609953E+01;
COFD[10301] = 3.63667810E+00;
COFD[10302] = -2.55876890E-01;
COFD[10303] = 1.10128613E-02;
COFD[10304] = -1.57393334E+01;
COFD[10305] = 3.63667810E+00;
COFD[10306] = -2.55876890E-01;
COFD[10307] = 1.10128613E-02;
COFD[10308] = -1.59963440E+01;
COFD[10309] = 3.54361729E+00;
COFD[10310] = -2.44007529E-01;
COFD[10311] = 1.05072797E-02;
COFD[10312] = -2.00049541E+01;
COFD[10313] = 4.92657613E+00;
COFD[10314] = -4.11730248E-01;
COFD[10315] = 1.73070472E-02;
COFD[10316] = -2.14752594E+01;
COFD[10317] = 5.34434931E+00;
COFD[10318] = -4.57463510E-01;
COFD[10319] = 1.89596163E-02;
COFD[10320] = -2.00099559E+01;
COFD[10321] = 4.92657613E+00;
COFD[10322] = -4.11730248E-01;
COFD[10323] = 1.73070472E-02;
COFD[10324] = -2.00099559E+01;
COFD[10325] = 4.92657613E+00;
COFD[10326] = -4.11730248E-01;
COFD[10327] = 1.73070472E-02;
COFD[10328] = -1.99944920E+01;
COFD[10329] = 4.92657613E+00;
COFD[10330] = -4.11730248E-01;
COFD[10331] = 1.73070472E-02;
COFD[10332] = -1.13723066E+01;
COFD[10333] = 2.25713623E+00;
COFD[10334] = -8.27150060E-02;
COFD[10335] = 3.77397157E-03;
COFD[10336] = -2.13621816E+01;
COFD[10337] = 5.34700929E+00;
COFD[10338] = -4.57742322E-01;
COFD[10339] = 1.89691609E-02;
COFD[10340] = -2.18513214E+01;
COFD[10341] = 5.43564723E+00;
COFD[10342] = -4.65662187E-01;
COFD[10343] = 1.91744823E-02;
COFD[10344] = -2.18254557E+01;
COFD[10345] = 5.43564723E+00;
COFD[10346] = -4.65662187E-01;
COFD[10347] = 1.91744823E-02;
COFD[10348] = -1.57204714E+01;
COFD[10349] = 3.63667810E+00;
COFD[10350] = -2.55876890E-01;
COFD[10351] = 1.10128613E-02;
COFD[10352] = -2.19094332E+01;
COFD[10353] = 5.49119562E+00;
COFD[10354] = -4.61230197E-01;
COFD[10355] = 1.85376198E-02;
COFD[10356] = -2.19094332E+01;
COFD[10357] = 5.49119562E+00;
COFD[10358] = -4.61230197E-01;
COFD[10359] = 1.85376198E-02;
COFD[10360] = -1.73344883E+01;
COFD[10361] = 4.03969426E+00;
COFD[10362] = -3.05064314E-01;
COFD[10363] = 1.30170956E-02;
COFD[10364] = -2.17937339E+01;
COFD[10365] = 5.43564723E+00;
COFD[10366] = -4.65662187E-01;
COFD[10367] = 1.91744823E-02;
COFD[10368] = -2.17964093E+01;
COFD[10369] = 5.43564723E+00;
COFD[10370] = -4.65662187E-01;
COFD[10371] = 1.91744823E-02;
COFD[10372] = -1.68300017E+01;
COFD[10373] = 3.86251333E+00;
COFD[10374] = -2.83724399E-01;
COFD[10375] = 1.21589320E-02;
COFD[10376] = -1.79278524E+01;
COFD[10377] = 4.30050846E+00;
COFD[10378] = -3.37068745E-01;
COFD[10379] = 1.43295133E-02;
COFD[10380] = -2.03044660E+01;
COFD[10381] = 5.01169135E+00;
COFD[10382] = -4.21737204E-01;
COFD[10383] = 1.77000781E-02;
COFD[10384] = -1.96375326E+01;
COFD[10385] = 4.79115365E+00;
COFD[10386] = -3.96388963E-01;
COFD[10387] = 1.67304643E-02;
COFD[10388] = -1.94640500E+01;
COFD[10389] = 4.76313424E+00;
COFD[10390] = -3.93150913E-01;
COFD[10391] = 1.66058644E-02;
COFD[10392] = -1.58338817E+01;
COFD[10393] = 3.47420753E+00;
COFD[10394] = -2.35134222E-01;
COFD[10395] = 1.01284662E-02;
COFD[10396] = -1.58338817E+01;
COFD[10397] = 3.47420753E+00;
COFD[10398] = -2.35134222E-01;
COFD[10399] = 1.01284662E-02;
COFD[10400] = -1.29737412E+01;
COFD[10401] = 2.59809959E+00;
COFD[10402] = -1.23503755E-01;
COFD[10403] = 5.38095363E-03;
COFD[10404] = -1.93757667E+01;
COFD[10405] = 4.78118094E+00;
COFD[10406] = -3.95246621E-01;
COFD[10407] = 1.66869495E-02;
COFD[10408] = -1.64602713E+01;
COFD[10409] = 3.68775110E+00;
COFD[10410] = -2.62341411E-01;
COFD[10411] = 1.12860938E-02;
COFD[10412] = -1.38750532E+01;
COFD[10413] = 2.78343819E+00;
COFD[10414] = -1.47679033E-01;
COFD[10415] = 6.43347681E-03;
COFD[10416] = -1.64649064E+01;
COFD[10417] = 3.68775110E+00;
COFD[10418] = -2.62341411E-01;
COFD[10419] = 1.12860938E-02;
COFD[10420] = -1.38795311E+01;
COFD[10421] = 2.78878811E+00;
COFD[10422] = -1.48374416E-01;
COFD[10423] = 6.46363543E-03;
COFD[10424] = -1.66153326E+01;
COFD[10425] = 3.74895195E+00;
COFD[10426] = -2.69976179E-01;
COFD[10427] = 1.16040269E-02;
COFD[10428] = -1.93757667E+01;
COFD[10429] = 4.78118094E+00;
COFD[10430] = -3.95246621E-01;
COFD[10431] = 1.66869495E-02;
COFD[10432] = -1.40999350E+01;
COFD[10433] = 2.87937412E+00;
COFD[10434] = -1.60161971E-01;
COFD[10435] = 6.97536928E-03;
COFD[10436] = -1.12099283E+01;
COFD[10437] = 2.26529435E+00;
COFD[10438] = -8.17536844E-02;
COFD[10439] = 3.63649607E-03;
COFD[10440] = -1.46826989E+01;
COFD[10441] = 3.08809301E+00;
COFD[10442] = -1.86635579E-01;
COFD[10443] = 8.09582723E-03;
COFD[10444] = -1.30286287E+01;
COFD[10445] = 3.15334729E+00;
COFD[10446] = -1.94972021E-01;
COFD[10447] = 8.45114576E-03;
COFD[10448] = -1.29540233E+01;
COFD[10449] = 2.59809959E+00;
COFD[10450] = -1.23503755E-01;
COFD[10451] = 5.38095363E-03;
COFD[10452] = -1.29737412E+01;
COFD[10453] = 2.59809959E+00;
COFD[10454] = -1.23503755E-01;
COFD[10455] = 5.38095363E-03;
COFD[10456] = -1.41073829E+01;
COFD[10457] = 2.87937412E+00;
COFD[10458] = -1.60161971E-01;
COFD[10459] = 6.97536928E-03;
COFD[10460] = -1.89812560E+01;
COFD[10461] = 4.78767270E+00;
COFD[10462] = -3.95990323E-01;
COFD[10463] = 1.67152840E-02;
COFD[10464] = -1.41144922E+01;
COFD[10465] = 2.87937412E+00;
COFD[10466] = -1.60161971E-01;
COFD[10467] = 6.97536928E-03;
COFD[10468] = -1.88415950E+01;
COFD[10469] = 4.58893676E+00;
COFD[10470] = -3.71964754E-01;
COFD[10471] = 1.57430700E-02;
COFD[10472] = -1.88502053E+01;
COFD[10473] = 4.58893676E+00;
COFD[10474] = -3.71964754E-01;
COFD[10475] = 1.57430700E-02;
COFD[10476] = -1.58143273E+01;
COFD[10477] = 3.47420753E+00;
COFD[10478] = -2.35134222E-01;
COFD[10479] = 1.01284662E-02;
COFD[10480] = -1.83698223E+01;
COFD[10481] = 4.54362305E+00;
COFD[10482] = -3.66509821E-01;
COFD[10483] = 1.55233015E-02;
COFD[10484] = -1.43102863E+01;
COFD[10485] = 2.95722149E+00;
COFD[10486] = -1.70165913E-01;
COFD[10487] = 7.40439932E-03;
COFD[10488] = -1.43102863E+01;
COFD[10489] = 2.95722149E+00;
COFD[10490] = -1.70165913E-01;
COFD[10491] = 7.40439932E-03;
COFD[10492] = -1.77349742E+01;
COFD[10493] = 4.12106098E+00;
COFD[10494] = -3.14844590E-01;
COFD[10495] = 1.34091315E-02;
COFD[10496] = -1.43180896E+01;
COFD[10497] = 2.95722149E+00;
COFD[10498] = -1.70165913E-01;
COFD[10499] = 7.40439932E-03;
COFD[10500] = -1.28049223E+01;
COFD[10501] = 2.49495041E+00;
COFD[10502] = -1.09654828E-01;
COFD[10503] = 4.75997939E-03;
COFD[10504] = -1.31586578E+01;
COFD[10505] = 2.49495041E+00;
COFD[10506] = -1.09654828E-01;
COFD[10507] = 4.75997939E-03;
COFD[10508] = -1.29237328E+01;
COFD[10509] = 2.59809959E+00;
COFD[10510] = -1.23503755E-01;
COFD[10511] = 5.38095363E-03;
COFD[10512] = -1.29023105E+01;
COFD[10513] = 2.59809959E+00;
COFD[10514] = -1.23503755E-01;
COFD[10515] = 5.38095363E-03;
COFD[10516] = -1.32554554E+01;
COFD[10517] = 2.53781964E+00;
COFD[10518] = -1.15432437E-01;
COFD[10519] = 5.02009146E-03;
COFD[10520] = -1.64553647E+01;
COFD[10521] = 3.68775110E+00;
COFD[10522] = -2.62341411E-01;
COFD[10523] = 1.12860938E-02;
COFD[10524] = -1.78472471E+01;
COFD[10525] = 4.11739834E+00;
COFD[10526] = -3.14399199E-01;
COFD[10527] = 1.33910534E-02;
COFD[10528] = -1.64602713E+01;
COFD[10529] = 3.68775110E+00;
COFD[10530] = -2.62341411E-01;
COFD[10531] = 1.12860938E-02;
COFD[10532] = -1.64602713E+01;
COFD[10533] = 3.68775110E+00;
COFD[10534] = -2.62341411E-01;
COFD[10535] = 1.12860938E-02;
COFD[10536] = -1.64450987E+01;
COFD[10537] = 3.68775110E+00;
COFD[10538] = -2.62341411E-01;
COFD[10539] = 1.12860938E-02;
COFD[10540] = -1.02752506E+01;
COFD[10541] = 1.85510219E+00;
COFD[10542] = -2.80877616E-02;
COFD[10543] = 1.30613884E-03;
COFD[10544] = -1.77349742E+01;
COFD[10545] = 4.12106098E+00;
COFD[10546] = -3.14844590E-01;
COFD[10547] = 1.34091315E-02;
COFD[10548] = -1.84414571E+01;
COFD[10549] = 4.31633461E+00;
COFD[10550] = -3.39053638E-01;
COFD[10551] = 1.44128540E-02;
COFD[10552] = -1.84162091E+01;
COFD[10553] = 4.31633461E+00;
COFD[10554] = -3.39053638E-01;
COFD[10555] = 1.44128540E-02;
COFD[10556] = -1.28844314E+01;
COFD[10557] = 2.59809959E+00;
COFD[10558] = -1.23503755E-01;
COFD[10559] = 5.38095363E-03;
COFD[10560] = -1.93853197E+01;
COFD[10561] = 4.78118094E+00;
COFD[10562] = -3.95246621E-01;
COFD[10563] = 1.66869495E-02;
COFD[10564] = -1.93853197E+01;
COFD[10565] = 4.78118094E+00;
COFD[10566] = -3.95246621E-01;
COFD[10567] = 1.66869495E-02;
COFD[10568] = -1.43180896E+01;
COFD[10569] = 2.95722149E+00;
COFD[10570] = -1.70165913E-01;
COFD[10571] = 7.40439932E-03;
COFD[10572] = -1.83852033E+01;
COFD[10573] = 4.31633461E+00;
COFD[10574] = -3.39053638E-01;
COFD[10575] = 1.44128540E-02;
COFD[10576] = -1.83878200E+01;
COFD[10577] = 4.31633461E+00;
COFD[10578] = -3.39053638E-01;
COFD[10579] = 1.44128540E-02;
COFD[10580] = -1.38575782E+01;
COFD[10581] = 2.78343819E+00;
COFD[10582] = -1.47679033E-01;
COFD[10583] = 6.43347681E-03;
COFD[10584] = -1.46419357E+01;
COFD[10585] = 3.12244025E+00;
COFD[10586] = -1.90997489E-01;
COFD[10587] = 8.28063944E-03;
COFD[10588] = -1.67239915E+01;
COFD[10589] = 3.76527235E+00;
COFD[10590] = -2.71989986E-01;
COFD[10591] = 1.16869799E-02;
COFD[10592] = -1.60144189E+01;
COFD[10593] = 3.50740180E+00;
COFD[10594] = -2.39371413E-01;
COFD[10595] = 1.03091202E-02;
COFD[10596] = -1.58338817E+01;
COFD[10597] = 3.47420753E+00;
COFD[10598] = -2.35134222E-01;
COFD[10599] = 1.01284662E-02;
COFD[10600] = -1.31672663E+01;
COFD[10601] = 2.49495041E+00;
COFD[10602] = -1.09654828E-01;
COFD[10603] = 4.75997939E-03;
COFD[10604] = -1.31672663E+01;
COFD[10605] = 2.49495041E+00;
COFD[10606] = -1.09654828E-01;
COFD[10607] = 4.75997939E-03;
COFD[10608] = -1.29737412E+01;
COFD[10609] = 2.59809959E+00;
COFD[10610] = -1.23503755E-01;
COFD[10611] = 5.38095363E-03;
COFD[10612] = -1.93757667E+01;
COFD[10613] = 4.78118094E+00;
COFD[10614] = -3.95246621E-01;
COFD[10615] = 1.66869495E-02;
COFD[10616] = -1.64602713E+01;
COFD[10617] = 3.68775110E+00;
COFD[10618] = -2.62341411E-01;
COFD[10619] = 1.12860938E-02;
COFD[10620] = -1.38750532E+01;
COFD[10621] = 2.78343819E+00;
COFD[10622] = -1.47679033E-01;
COFD[10623] = 6.43347681E-03;
COFD[10624] = -1.64649064E+01;
COFD[10625] = 3.68775110E+00;
COFD[10626] = -2.62341411E-01;
COFD[10627] = 1.12860938E-02;
COFD[10628] = -1.38795311E+01;
COFD[10629] = 2.78878811E+00;
COFD[10630] = -1.48374416E-01;
COFD[10631] = 6.46363543E-03;
COFD[10632] = -1.66153326E+01;
COFD[10633] = 3.74895195E+00;
COFD[10634] = -2.69976179E-01;
COFD[10635] = 1.16040269E-02;
COFD[10636] = -1.93757667E+01;
COFD[10637] = 4.78118094E+00;
COFD[10638] = -3.95246621E-01;
COFD[10639] = 1.66869495E-02;
COFD[10640] = -1.40999350E+01;
COFD[10641] = 2.87937412E+00;
COFD[10642] = -1.60161971E-01;
COFD[10643] = 6.97536928E-03;
COFD[10644] = -1.12099283E+01;
COFD[10645] = 2.26529435E+00;
COFD[10646] = -8.17536844E-02;
COFD[10647] = 3.63649607E-03;
COFD[10648] = -1.46826989E+01;
COFD[10649] = 3.08809301E+00;
COFD[10650] = -1.86635579E-01;
COFD[10651] = 8.09582723E-03;
COFD[10652] = -1.30286287E+01;
COFD[10653] = 3.15334729E+00;
COFD[10654] = -1.94972021E-01;
COFD[10655] = 8.45114576E-03;
COFD[10656] = -1.29540233E+01;
COFD[10657] = 2.59809959E+00;
COFD[10658] = -1.23503755E-01;
COFD[10659] = 5.38095363E-03;
COFD[10660] = -1.29737412E+01;
COFD[10661] = 2.59809959E+00;
COFD[10662] = -1.23503755E-01;
COFD[10663] = 5.38095363E-03;
COFD[10664] = -1.41073829E+01;
COFD[10665] = 2.87937412E+00;
COFD[10666] = -1.60161971E-01;
COFD[10667] = 6.97536928E-03;
COFD[10668] = -1.89812560E+01;
COFD[10669] = 4.78767270E+00;
COFD[10670] = -3.95990323E-01;
COFD[10671] = 1.67152840E-02;
COFD[10672] = -1.41144922E+01;
COFD[10673] = 2.87937412E+00;
COFD[10674] = -1.60161971E-01;
COFD[10675] = 6.97536928E-03;
COFD[10676] = -1.88415950E+01;
COFD[10677] = 4.58893676E+00;
COFD[10678] = -3.71964754E-01;
COFD[10679] = 1.57430700E-02;
COFD[10680] = -1.88502053E+01;
COFD[10681] = 4.58893676E+00;
COFD[10682] = -3.71964754E-01;
COFD[10683] = 1.57430700E-02;
COFD[10684] = -1.58143273E+01;
COFD[10685] = 3.47420753E+00;
COFD[10686] = -2.35134222E-01;
COFD[10687] = 1.01284662E-02;
COFD[10688] = -1.83698223E+01;
COFD[10689] = 4.54362305E+00;
COFD[10690] = -3.66509821E-01;
COFD[10691] = 1.55233015E-02;
COFD[10692] = -1.43102863E+01;
COFD[10693] = 2.95722149E+00;
COFD[10694] = -1.70165913E-01;
COFD[10695] = 7.40439932E-03;
COFD[10696] = -1.43102863E+01;
COFD[10697] = 2.95722149E+00;
COFD[10698] = -1.70165913E-01;
COFD[10699] = 7.40439932E-03;
COFD[10700] = -1.77349742E+01;
COFD[10701] = 4.12106098E+00;
COFD[10702] = -3.14844590E-01;
COFD[10703] = 1.34091315E-02;
COFD[10704] = -1.43180896E+01;
COFD[10705] = 2.95722149E+00;
COFD[10706] = -1.70165913E-01;
COFD[10707] = 7.40439932E-03;
COFD[10708] = -1.28049223E+01;
COFD[10709] = 2.49495041E+00;
COFD[10710] = -1.09654828E-01;
COFD[10711] = 4.75997939E-03;
COFD[10712] = -1.31586578E+01;
COFD[10713] = 2.49495041E+00;
COFD[10714] = -1.09654828E-01;
COFD[10715] = 4.75997939E-03;
COFD[10716] = -1.29237328E+01;
COFD[10717] = 2.59809959E+00;
COFD[10718] = -1.23503755E-01;
COFD[10719] = 5.38095363E-03;
COFD[10720] = -1.29023105E+01;
COFD[10721] = 2.59809959E+00;
COFD[10722] = -1.23503755E-01;
COFD[10723] = 5.38095363E-03;
COFD[10724] = -1.32554554E+01;
COFD[10725] = 2.53781964E+00;
COFD[10726] = -1.15432437E-01;
COFD[10727] = 5.02009146E-03;
COFD[10728] = -1.64553647E+01;
COFD[10729] = 3.68775110E+00;
COFD[10730] = -2.62341411E-01;
COFD[10731] = 1.12860938E-02;
COFD[10732] = -1.78472471E+01;
COFD[10733] = 4.11739834E+00;
COFD[10734] = -3.14399199E-01;
COFD[10735] = 1.33910534E-02;
COFD[10736] = -1.64602713E+01;
COFD[10737] = 3.68775110E+00;
COFD[10738] = -2.62341411E-01;
COFD[10739] = 1.12860938E-02;
COFD[10740] = -1.64602713E+01;
COFD[10741] = 3.68775110E+00;
COFD[10742] = -2.62341411E-01;
COFD[10743] = 1.12860938E-02;
COFD[10744] = -1.64450987E+01;
COFD[10745] = 3.68775110E+00;
COFD[10746] = -2.62341411E-01;
COFD[10747] = 1.12860938E-02;
COFD[10748] = -1.02752506E+01;
COFD[10749] = 1.85510219E+00;
COFD[10750] = -2.80877616E-02;
COFD[10751] = 1.30613884E-03;
COFD[10752] = -1.77349742E+01;
COFD[10753] = 4.12106098E+00;
COFD[10754] = -3.14844590E-01;
COFD[10755] = 1.34091315E-02;
COFD[10756] = -1.84414571E+01;
COFD[10757] = 4.31633461E+00;
COFD[10758] = -3.39053638E-01;
COFD[10759] = 1.44128540E-02;
COFD[10760] = -1.84162091E+01;
COFD[10761] = 4.31633461E+00;
COFD[10762] = -3.39053638E-01;
COFD[10763] = 1.44128540E-02;
COFD[10764] = -1.28844314E+01;
COFD[10765] = 2.59809959E+00;
COFD[10766] = -1.23503755E-01;
COFD[10767] = 5.38095363E-03;
COFD[10768] = -1.93853197E+01;
COFD[10769] = 4.78118094E+00;
COFD[10770] = -3.95246621E-01;
COFD[10771] = 1.66869495E-02;
COFD[10772] = -1.93853197E+01;
COFD[10773] = 4.78118094E+00;
COFD[10774] = -3.95246621E-01;
COFD[10775] = 1.66869495E-02;
COFD[10776] = -1.43180896E+01;
COFD[10777] = 2.95722149E+00;
COFD[10778] = -1.70165913E-01;
COFD[10779] = 7.40439932E-03;
COFD[10780] = -1.83852033E+01;
COFD[10781] = 4.31633461E+00;
COFD[10782] = -3.39053638E-01;
COFD[10783] = 1.44128540E-02;
COFD[10784] = -1.83878200E+01;
COFD[10785] = 4.31633461E+00;
COFD[10786] = -3.39053638E-01;
COFD[10787] = 1.44128540E-02;
COFD[10788] = -1.38575782E+01;
COFD[10789] = 2.78343819E+00;
COFD[10790] = -1.47679033E-01;
COFD[10791] = 6.43347681E-03;
COFD[10792] = -1.46419357E+01;
COFD[10793] = 3.12244025E+00;
COFD[10794] = -1.90997489E-01;
COFD[10795] = 8.28063944E-03;
COFD[10796] = -1.67239915E+01;
COFD[10797] = 3.76527235E+00;
COFD[10798] = -2.71989986E-01;
COFD[10799] = 1.16869799E-02;
COFD[10800] = -1.60144189E+01;
COFD[10801] = 3.50740180E+00;
COFD[10802] = -2.39371413E-01;
COFD[10803] = 1.03091202E-02;
COFD[10804] = -1.58338817E+01;
COFD[10805] = 3.47420753E+00;
COFD[10806] = -2.35134222E-01;
COFD[10807] = 1.01284662E-02;
COFD[10808] = -1.31672663E+01;
COFD[10809] = 2.49495041E+00;
COFD[10810] = -1.09654828E-01;
COFD[10811] = 4.75997939E-03;
COFD[10812] = -1.31672663E+01;
COFD[10813] = 2.49495041E+00;
COFD[10814] = -1.09654828E-01;
COFD[10815] = 4.75997939E-03;
}


// List of specs with small weight, dim NLITE
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetKTDIF(int* KTDIF) {
KTDIF[0] = 9;
KTDIF[1] = 11;
KTDIF[2] = 35;
}


// Poly fits for thermal diff ratios, dim NO*NLITE*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE
void egtransetCOFTD(amrex::Real* COFTD) {
COFTD[0] = 4.26891116E-01;
COFTD[1] = -3.33770671E-06;
COFTD[2] = 6.19632912E-09;
COFTD[3] = -8.21715028E-13;
COFTD[4] = 1.63459218E-01;
COFTD[5] = 4.41510683E-04;
COFTD[6] = -1.87616913E-07;
COFTD[7] = 2.44469251E-11;
COFTD[8] = 3.59183436E-01;
COFTD[9] = 2.20060705E-04;
COFTD[10] = -1.01366071E-07;
COFTD[11] = 1.42202856E-11;
COFTD[12] = 4.58515129E-01;
COFTD[13] = 2.44829242E-05;
COFTD[14] = -8.80389080E-09;
COFTD[15] = 1.52930659E-12;
COFTD[16] = 3.59941461E-01;
COFTD[17] = 2.20525123E-04;
COFTD[18] = -1.01579995E-07;
COFTD[19] = 1.42502963E-11;
COFTD[20] = 4.53623880E-01;
COFTD[21] = 2.51671149E-05;
COFTD[22] = -9.21171721E-09;
COFTD[23] = 1.58881878E-12;
COFTD[24] = 3.51115953E-01;
COFTD[25] = 2.33655782E-04;
COFTD[26] = -1.07224852E-07;
COFTD[27] = 1.49680735E-11;
COFTD[28] = 1.63459218E-01;
COFTD[29] = 4.41510683E-04;
COFTD[30] = -1.87616913E-07;
COFTD[31] = 2.44469251E-11;
COFTD[32] = 4.53476773E-01;
COFTD[33] = 4.08538395E-05;
COFTD[34] = -1.74068074E-08;
COFTD[35] = 2.81096192E-12;
COFTD[36] = 0.00000000E+00;
COFTD[37] = 0.00000000E+00;
COFTD[38] = 0.00000000E+00;
COFTD[39] = 0.00000000E+00;
COFTD[40] = 4.37881436E-01;
COFTD[41] = 8.92149454E-05;
COFTD[42] = -4.15912444E-08;
COFTD[43] = 6.27125279E-12;
COFTD[44] = -1.58593068E-01;
COFTD[45] = -3.77534860E-05;
COFTD[46] = 1.76801591E-08;
COFTD[47] = -2.63675347E-12;
COFTD[48] = 4.20466706E-01;
COFTD[49] = -3.28747658E-06;
COFTD[50] = 6.10307873E-09;
COFTD[51] = -8.09348795E-13;
COFTD[52] = 4.26891116E-01;
COFTD[53] = -3.33770671E-06;
COFTD[54] = 6.19632912E-09;
COFTD[55] = -8.21715028E-13;
COFTD[56] = 4.55232006E-01;
COFTD[57] = 4.10119688E-05;
COFTD[58] = -1.74741824E-08;
COFTD[59] = 2.82184206E-12;
COFTD[60] = 9.22530884E-02;
COFTD[61] = 4.74226232E-04;
COFTD[62] = -1.95750032E-07;
COFTD[63] = 2.49969266E-11;
COFTD[64] = 4.56889027E-01;
COFTD[65] = 4.11612503E-05;
COFTD[66] = -1.75377875E-08;
COFTD[67] = 2.83211342E-12;
COFTD[68] = 1.93960583E-01;
COFTD[69] = 4.11993095E-04;
COFTD[70] = -1.77331286E-07;
COFTD[71] = 2.33267461E-11;
COFTD[72] = 1.94871710E-01;
COFTD[73] = 4.13928427E-04;
COFTD[74] = -1.78164297E-07;
COFTD[75] = 2.34363231E-11;
COFTD[76] = 3.87377157E-01;
COFTD[77] = 1.81763014E-04;
COFTD[78] = -8.45894304E-08;
COFTD[79] = 1.20631900E-11;
COFTD[80] = 1.54186688E-01;
COFTD[81] = 3.98872931E-04;
COFTD[82] = -1.69877724E-07;
COFTD[83] = 2.21714464E-11;
COFTD[84] = 4.43215085E-01;
COFTD[85] = 5.56930482E-05;
COFTD[86] = -2.50356202E-08;
COFTD[87] = 3.91860456E-12;
COFTD[88] = 4.43215085E-01;
COFTD[89] = 5.56930482E-05;
COFTD[90] = -2.50356202E-08;
COFTD[91] = 3.91860456E-12;
COFTD[92] = 2.63540733E-01;
COFTD[93] = 3.60135994E-04;
COFTD[94] = -1.58948718E-07;
COFTD[95] = 2.13330912E-11;
COFTD[96] = 4.45040088E-01;
COFTD[97] = 5.59223724E-05;
COFTD[98] = -2.51387080E-08;
COFTD[99] = 3.93473998E-12;
COFTD[100] = 4.11101297E-01;
COFTD[101] = -1.43685823E-05;
COFTD[102] = 1.25773780E-08;
COFTD[103] = -1.88895358E-12;
COFTD[104] = 4.77973491E-01;
COFTD[105] = -1.67058618E-05;
COFTD[106] = 1.46232895E-08;
COFTD[107] = -2.19622206E-12;
COFTD[108] = 4.20628012E-01;
COFTD[109] = -3.28873777E-06;
COFTD[110] = 6.10542009E-09;
COFTD[111] = -8.09659290E-13;
COFTD[112] = 4.13461728E-01;
COFTD[113] = -3.23270720E-06;
COFTD[114] = 6.00140141E-09;
COFTD[115] = -7.95865040E-13;
COFTD[116] = 4.67672023E-01;
COFTD[117] = -1.11793219E-05;
COFTD[118] = 1.11890131E-08;
COFTD[119] = -1.62282514E-12;
COFTD[120] = 3.58375011E-01;
COFTD[121] = 2.19565407E-04;
COFTD[122] = -1.01137923E-07;
COFTD[123] = 1.41882796E-11;
COFTD[124] = 2.84755234E-01;
COFTD[125] = 3.37812070E-04;
COFTD[126] = -1.50315777E-07;
COFTD[127] = 2.03189456E-11;
COFTD[128] = 3.59183436E-01;
COFTD[129] = 2.20060705E-04;
COFTD[130] = -1.01366071E-07;
COFTD[131] = 1.42202856E-11;
COFTD[132] = 3.59183436E-01;
COFTD[133] = 2.20060705E-04;
COFTD[134] = -1.01366071E-07;
COFTD[135] = 1.42202856E-11;
COFTD[136] = 3.56663406E-01;
COFTD[137] = 2.18516759E-04;
COFTD[138] = -1.00654887E-07;
COFTD[139] = 1.41205161E-11;
COFTD[140] = 1.56102782E-01;
COFTD[141] = 6.23783285E-05;
COFTD[142] = -2.69205245E-08;
COFTD[143] = 5.23545262E-14;
COFTD[144] = 2.63540733E-01;
COFTD[145] = 3.60135994E-04;
COFTD[146] = -1.58948718E-07;
COFTD[147] = 2.13330912E-11;
COFTD[148] = 2.63886152E-01;
COFTD[149] = 3.89881034E-04;
COFTD[150] = -1.71302701E-07;
COFTD[151] = 2.29039539E-11;
COFTD[152] = 2.61461935E-01;
COFTD[153] = 3.86299352E-04;
COFTD[154] = -1.69729011E-07;
COFTD[155] = 2.26935444E-11;
COFTD[156] = 3.96436106E-01;
COFTD[157] = -3.09959004E-06;
COFTD[158] = 5.75427432E-09;
COFTD[159] = -7.63092726E-13;
COFTD[160] = 1.64343178E-01;
COFTD[161] = 4.43898297E-04;
COFTD[162] = -1.88631513E-07;
COFTD[163] = 2.45791299E-11;
COFTD[164] = 1.64343178E-01;
COFTD[165] = 4.43898297E-04;
COFTD[166] = -1.88631513E-07;
COFTD[167] = 2.45791299E-11;
COFTD[168] = 4.45040088E-01;
COFTD[169] = 5.59223724E-05;
COFTD[170] = -2.51387080E-08;
COFTD[171] = 3.93473998E-12;
COFTD[172] = 2.58344796E-01;
COFTD[173] = 3.81693907E-04;
COFTD[174] = -1.67705509E-07;
COFTD[175] = 2.24229929E-11;
COFTD[176] = 2.58613960E-01;
COFTD[177] = 3.82091585E-04;
COFTD[178] = -1.67880238E-07;
COFTD[179] = 2.24463549E-11;
COFTD[180] = 4.54133806E-01;
COFTD[181] = 2.42489786E-05;
COFTD[182] = -8.71976557E-09;
COFTD[183] = 1.51469336E-12;
COFTD[184] = 3.72387310E-01;
COFTD[185] = 8.32172239E-05;
COFTD[186] = -3.89127987E-08;
COFTD[187] = 5.82900733E-12;
COFTD[188] = 3.33962477E-01;
COFTD[189] = 2.27613747E-04;
COFTD[190] = -1.04334473E-07;
COFTD[191] = 1.45440184E-11;
COFTD[192] = 3.68844843E-01;
COFTD[193] = 1.81097629E-04;
COFTD[194] = -8.41519594E-08;
COFTD[195] = 1.19667694E-11;
COFTD[196] = 3.71299559E-01;
COFTD[197] = 1.74219171E-04;
COFTD[198] = -8.10786532E-08;
COFTD[199] = 1.15625226E-11;
COFTD[200] = 4.80218152E-01;
COFTD[201] = -1.67843159E-05;
COFTD[202] = 1.46919634E-08;
COFTD[203] = -2.20653597E-12;
COFTD[204] = 4.80218152E-01;
COFTD[205] = -1.67843159E-05;
COFTD[206] = 1.46919634E-08;
COFTD[207] = -2.20653597E-12;
COFTD[208] = 2.99924635E-01;
COFTD[209] = 2.87604812E-04;
COFTD[210] = -1.29520816E-07;
COFTD[211] = 1.77072541E-11;
COFTD[212] = -1.14504078E-01;
COFTD[213] = 7.09951310E-04;
COFTD[214] = -2.60274017E-07;
COFTD[215] = 3.08537601E-11;
COFTD[216] = 7.45671981E-02;
COFTD[217] = 6.01728787E-04;
COFTD[218] = -2.44660614E-07;
COFTD[219] = 3.09326893E-11;
COFTD[220] = 2.73849555E-01;
COFTD[221] = 3.59827236E-04;
COFTD[222] = -1.59172729E-07;
COFTD[223] = 2.14048115E-11;
COFTD[224] = 7.46457136E-02;
COFTD[225] = 6.02362377E-04;
COFTD[226] = -2.44918230E-07;
COFTD[227] = 3.09652598E-11;
COFTD[228] = 2.71277260E-01;
COFTD[229] = 3.59776957E-04;
COFTD[230] = -1.59065065E-07;
COFTD[231] = 2.13804116E-11;
COFTD[232] = 6.30511122E-02;
COFTD[233] = 6.13215017E-04;
COFTD[234] = -2.48081637E-07;
COFTD[235] = 3.12630804E-11;
COFTD[236] = -1.14504078E-01;
COFTD[237] = 7.09951310E-04;
COFTD[238] = -2.60274017E-07;
COFTD[239] = 3.08537601E-11;
COFTD[240] = 2.53688084E-01;
COFTD[241] = 3.89160027E-04;
COFTD[242] = -1.70615841E-07;
COFTD[243] = 2.27712605E-11;
COFTD[244] = 1.58593068E-01;
COFTD[245] = 3.77534860E-05;
COFTD[246] = -1.76801591E-08;
COFTD[247] = 2.63675347E-12;
COFTD[248] = 2.01405350E-01;
COFTD[249] = 4.62875168E-04;
COFTD[250] = -1.98378401E-07;
COFTD[251] = 2.60113328E-11;
COFTD[252] = 0.00000000E+00;
COFTD[253] = 0.00000000E+00;
COFTD[254] = 0.00000000E+00;
COFTD[255] = 0.00000000E+00;
COFTD[256] = 2.97684663E-01;
COFTD[257] = 2.85456850E-04;
COFTD[258] = -1.28553496E-07;
COFTD[259] = 1.75750084E-11;
COFTD[260] = 2.99924635E-01;
COFTD[261] = 2.87604812E-04;
COFTD[262] = -1.29520816E-07;
COFTD[263] = 1.77072541E-11;
COFTD[264] = 2.54177155E-01;
COFTD[265] = 3.89910267E-04;
COFTD[266] = -1.70944762E-07;
COFTD[267] = 2.28151600E-11;
COFTD[268] = -1.11291627E-01;
COFTD[269] = 6.84136016E-04;
COFTD[270] = -2.50607231E-07;
COFTD[271] = 2.96930988E-11;
COFTD[272] = 2.54638073E-01;
COFTD[273] = 3.90617320E-04;
COFTD[274] = -1.71254749E-07;
COFTD[275] = 2.28565324E-11;
COFTD[276] = -9.09985039E-02;
COFTD[277] = 7.05688785E-04;
COFTD[278] = -2.63281903E-07;
COFTD[279] = 3.15468405E-11;
COFTD[280] = -9.12112367E-02;
COFTD[281] = 7.07338518E-04;
COFTD[282] = -2.63897394E-07;
COFTD[283] = 3.16205895E-11;
COFTD[284] = 1.10891814E-01;
COFTD[285] = 5.67927632E-04;
COFTD[286] = -2.34461248E-07;
COFTD[287] = 2.99431374E-11;
COFTD[288] = -8.03898818E-02;
COFTD[289] = 6.69315146E-04;
COFTD[290] = -2.50812116E-07;
COFTD[291] = 3.01336785E-11;
COFTD[292] = 2.34496461E-01;
COFTD[293] = 4.12132599E-04;
COFTD[294] = -1.79284434E-07;
COFTD[295] = 2.37782011E-11;
COFTD[296] = 2.34496461E-01;
COFTD[297] = 4.12132599E-04;
COFTD[298] = -1.79284434E-07;
COFTD[299] = 2.37782011E-11;
COFTD[300] = -2.00704113E-02;
COFTD[301] = 6.83259504E-04;
COFTD[302] = -2.65883369E-07;
COFTD[303] = 3.26941217E-11;
COFTD[304] = 2.34977268E-01;
COFTD[305] = 4.12977628E-04;
COFTD[306] = -1.79652035E-07;
COFTD[307] = 2.38269554E-11;
COFTD[308] = 3.13531244E-01;
COFTD[309] = 2.50352023E-04;
COFTD[310] = -1.13856408E-07;
COFTD[311] = 1.57259985E-11;
COFTD[312] = 3.37843844E-01;
COFTD[313] = 2.69765427E-04;
COFTD[314] = -1.22685338E-07;
COFTD[315] = 1.69454620E-11;
COFTD[316] = 2.97741077E-01;
COFTD[317] = 2.85510946E-04;
COFTD[318] = -1.28577859E-07;
COFTD[319] = 1.75783390E-11;
COFTD[320] = 2.95226177E-01;
COFTD[321] = 2.83099350E-04;
COFTD[322] = -1.27491813E-07;
COFTD[323] = 1.74298618E-11;
COFTD[324] = 3.25476110E-01;
COFTD[325] = 2.81433221E-04;
COFTD[326] = -1.27456229E-07;
COFTD[327] = 1.75251994E-11;
COFTD[328] = 7.44833771E-02;
COFTD[329] = 6.01052383E-04;
COFTD[330] = -2.44385591E-07;
COFTD[331] = 3.08979178E-11;
COFTD[332] = -1.95169889E-02;
COFTD[333] = 6.85646985E-04;
COFTD[334] = -2.66898409E-07;
COFTD[335] = 3.28254930E-11;
COFTD[336] = 7.45671981E-02;
COFTD[337] = 6.01728787E-04;
COFTD[338] = -2.44660614E-07;
COFTD[339] = 3.09326893E-11;
COFTD[340] = 7.45671981E-02;
COFTD[341] = 6.01728787E-04;
COFTD[342] = -2.44660614E-07;
COFTD[343] = 3.09326893E-11;
COFTD[344] = 7.43056201E-02;
COFTD[345] = 5.99617952E-04;
COFTD[346] = -2.43802357E-07;
COFTD[347] = 3.08241789E-11;
COFTD[348] = 3.36708328E-01;
COFTD[349] = -3.00019524E-05;
COFTD[350] = 2.59034066E-08;
COFTD[351] = -4.98729539E-12;
COFTD[352] = -2.00704113E-02;
COFTD[353] = 6.83259504E-04;
COFTD[354] = -2.65883369E-07;
COFTD[355] = 3.26941217E-11;
COFTD[356] = -5.00754176E-02;
COFTD[357] = 7.17071842E-04;
COFTD[358] = -2.74790415E-07;
COFTD[359] = 3.34706979E-11;
COFTD[360] = -4.98449770E-02;
COFTD[361] = 7.13771969E-04;
COFTD[362] = -2.73525864E-07;
COFTD[363] = 3.33166700E-11;
COFTD[364] = 2.89179789E-01;
COFTD[365] = 2.77301326E-04;
COFTD[366] = -1.24880713E-07;
COFTD[367] = 1.70728891E-11;
COFTD[368] = -1.14812022E-01;
COFTD[369] = 7.11860632E-04;
COFTD[370] = -2.60973990E-07;
COFTD[371] = 3.09367372E-11;
COFTD[372] = -1.14812022E-01;
COFTD[373] = 7.11860632E-04;
COFTD[374] = -2.60973990E-07;
COFTD[375] = 3.09367372E-11;
COFTD[376] = 2.34977268E-01;
COFTD[377] = 4.12977628E-04;
COFTD[378] = -1.79652035E-07;
COFTD[379] = 2.38269554E-11;
COFTD[380] = -4.95471561E-02;
COFTD[381] = 7.09507222E-04;
COFTD[382] = -2.71891563E-07;
COFTD[383] = 3.31176048E-11;
COFTD[384] = -4.95729402E-02;
COFTD[385] = 7.09876447E-04;
COFTD[386] = -2.72033054E-07;
COFTD[387] = 3.31348391E-11;
COFTD[388] = 2.72542793E-01;
COFTD[389] = 3.58110203E-04;
COFTD[390] = -1.58413184E-07;
COFTD[391] = 2.13026714E-11;
COFTD[392] = 1.79061926E-01;
COFTD[393] = 4.38430800E-04;
COFTD[394] = -1.87266336E-07;
COFTD[395] = 2.44927728E-11;
COFTD[396] = 5.84179594E-02;
COFTD[397] = 6.03361569E-04;
COFTD[398] = -2.43735046E-07;
COFTD[399] = 3.06860296E-11;
COFTD[400] = 1.02948889E-01;
COFTD[401] = 5.63132079E-04;
COFTD[402] = -2.31905413E-07;
COFTD[403] = 2.95676010E-11;
COFTD[404] = 1.08571390E-01;
COFTD[405] = 5.56043680E-04;
COFTD[406] = -2.29555119E-07;
COFTD[407] = 2.93165738E-11;
COFTD[408] = 3.38633428E-01;
COFTD[409] = 2.70395903E-04;
COFTD[410] = -1.22972070E-07;
COFTD[411] = 1.69850657E-11;
COFTD[412] = 3.38633428E-01;
COFTD[413] = 2.70395903E-04;
COFTD[414] = -1.22972070E-07;
COFTD[415] = 1.69850657E-11;
COFTD[416] = 3.33246552E-01;
COFTD[417] = 3.66572332E-06;
COFTD[418] = 1.50257208E-08;
COFTD[419] = -5.66089131E-12;
COFTD[420] = 3.47265102E-01;
COFTD[421] = 9.36279802E-05;
COFTD[422] = -4.39214158E-08;
COFTD[423] = 6.49447877E-12;
COFTD[424] = 4.61606045E-01;
COFTD[425] = -2.77101645E-05;
COFTD[426] = 2.15545093E-08;
COFTD[427] = -3.44072967E-12;
COFTD[428] = 4.20821206E-01;
COFTD[429] = -1.71731554E-05;
COFTD[430] = 2.78656609E-08;
COFTD[431] = -7.30543215E-12;
COFTD[432] = 4.63554564E-01;
COFTD[433] = -2.78271339E-05;
COFTD[434] = 2.16454946E-08;
COFTD[435] = -3.45525358E-12;
COFTD[436] = 4.12970070E-01;
COFTD[437] = -1.73607363E-05;
COFTD[438] = 2.75295678E-08;
COFTD[439] = -7.16591410E-12;
COFTD[440] = 4.61669782E-01;
COFTD[441] = -2.39422281E-05;
COFTD[442] = 1.90481466E-08;
COFTD[443] = -2.98279818E-12;
COFTD[444] = 3.47265102E-01;
COFTD[445] = 9.36279802E-05;
COFTD[446] = -4.39214158E-08;
COFTD[447] = 6.49447877E-12;
COFTD[448] = 4.31562318E-01;
COFTD[449] = -2.54993047E-05;
COFTD[450] = 3.12402126E-08;
COFTD[451] = -7.38248667E-12;
COFTD[452] = -1.56102782E-01;
COFTD[453] = -6.23783285E-05;
COFTD[454] = 2.69205245E-08;
COFTD[455] = -5.23545262E-14;
COFTD[456] = 4.60007907E-01;
COFTD[457] = -3.96576321E-05;
COFTD[458] = 3.57232592E-08;
COFTD[459] = -7.10234617E-12;
COFTD[460] = -3.36708328E-01;
COFTD[461] = 3.00019524E-05;
COFTD[462] = -2.59034066E-08;
COFTD[463] = 4.98729539E-12;
COFTD[464] = 3.22908384E-01;
COFTD[465] = 3.55200312E-06;
COFTD[466] = 1.45595842E-08;
COFTD[467] = -5.48527586E-12;
COFTD[468] = 3.33246552E-01;
COFTD[469] = 3.66572332E-06;
COFTD[470] = 1.50257208E-08;
COFTD[471] = -5.66089131E-12;
COFTD[472] = 4.34923462E-01;
COFTD[473] = -2.56979014E-05;
COFTD[474] = 3.14835212E-08;
COFTD[475] = -7.43998381E-12;
COFTD[476] = 2.97269498E-01;
COFTD[477] = 8.12622316E-05;
COFTD[478] = -3.81241893E-08;
COFTD[479] = 5.63198490E-12;
COFTD[480] = 4.38106367E-01;
COFTD[481] = -2.58859665E-05;
COFTD[482] = 3.17139274E-08;
COFTD[483] = -7.49443191E-12;
COFTD[484] = 3.69177606E-01;
COFTD[485] = 7.10409345E-05;
COFTD[486] = -3.30390022E-08;
COFTD[487] = 5.00231611E-12;
COFTD[488] = 3.72677192E-01;
COFTD[489] = 7.17143608E-05;
COFTD[490] = -3.33521926E-08;
COFTD[491] = 5.04973513E-12;
COFTD[492] = 4.71546078E-01;
COFTD[493] = -3.73005161E-05;
COFTD[494] = 2.86681572E-08;
COFTD[495] = -4.83088598E-12;
COFTD[496] = 3.04755237E-01;
COFTD[497] = 5.31113591E-05;
COFTD[498] = -2.45713787E-08;
COFTD[499] = 3.74753389E-12;
COFTD[500] = 4.30601280E-01;
COFTD[501] = -3.07348755E-05;
COFTD[502] = 3.26249867E-08;
COFTD[503] = -7.18557516E-12;
COFTD[504] = 4.30601280E-01;
COFTD[505] = -3.07348755E-05;
COFTD[506] = 3.26249867E-08;
COFTD[507] = -7.18557516E-12;
COFTD[508] = 4.45297812E-01;
COFTD[509] = 1.79947512E-05;
COFTD[510] = -5.45815052E-09;
COFTD[511] = 1.01500117E-12;
COFTD[512] = 4.34172051E-01;
COFTD[513] = -3.09897452E-05;
COFTD[514] = 3.28955301E-08;
COFTD[515] = -7.24516171E-12;
COFTD[516] = 2.94489199E-01;
COFTD[517] = 1.46954229E-05;
COFTD[518] = 8.00539142E-09;
COFTD[519] = -4.75443733E-12;
COFTD[520] = 4.01625971E-01;
COFTD[521] = 2.00416977E-05;
COFTD[522] = 1.09177964E-08;
COFTD[523] = -6.48412748E-12;
COFTD[524] = 3.23166626E-01;
COFTD[525] = 3.55484379E-06;
COFTD[526] = 1.45712281E-08;
COFTD[527] = -5.48966264E-12;
COFTD[528] = 3.11759274E-01;
COFTD[529] = 3.42936254E-06;
COFTD[530] = 1.40568831E-08;
COFTD[531] = -5.29588485E-12;
COFTD[532] = 3.91468049E-01;
COFTD[533] = 1.26153068E-05;
COFTD[534] = 1.38916335E-08;
COFTD[535] = -6.48694340E-12;
COFTD[536] = 4.59531860E-01;
COFTD[537] = -2.75856514E-05;
COFTD[538] = 2.14576561E-08;
COFTD[539] = -3.42526906E-12;
COFTD[540] = 4.52957343E-01;
COFTD[541] = 1.78673342E-05;
COFTD[542] = -5.31670275E-09;
COFTD[543] = 9.96452881E-13;
COFTD[544] = 4.61606045E-01;
COFTD[545] = -2.77101645E-05;
COFTD[546] = 2.15545093E-08;
COFTD[547] = -3.44072967E-12;
COFTD[548] = 4.61606045E-01;
COFTD[549] = -2.77101645E-05;
COFTD[550] = 2.15545093E-08;
COFTD[551] = -3.44072967E-12;
COFTD[552] = 4.55153573E-01;
COFTD[553] = -2.73228233E-05;
COFTD[554] = 2.12532137E-08;
COFTD[555] = -3.39263408E-12;
COFTD[556] = 0.00000000E+00;
COFTD[557] = 0.00000000E+00;
COFTD[558] = 0.00000000E+00;
COFTD[559] = 0.00000000E+00;
COFTD[560] = 4.45297812E-01;
COFTD[561] = 1.79947512E-05;
COFTD[562] = -5.45815052E-09;
COFTD[563] = 1.01500117E-12;
COFTD[564] = 4.71596514E-01;
COFTD[565] = 4.24300006E-05;
COFTD[566] = -1.80733581E-08;
COFTD[567] = 2.91900775E-12;
COFTD[568] = 4.63019170E-01;
COFTD[569] = 4.16582885E-05;
COFTD[570] = -1.77446419E-08;
COFTD[571] = 2.86591717E-12;
COFTD[572] = 2.85184475E-01;
COFTD[573] = 3.13703885E-06;
COFTD[574] = 1.28586546E-08;
COFTD[575] = -4.84445617E-12;
COFTD[576] = 3.51064180E-01;
COFTD[577] = 9.46522698E-05;
COFTD[578] = -4.44019158E-08;
COFTD[579] = 6.56552833E-12;
COFTD[580] = 3.51064180E-01;
COFTD[581] = 9.46522698E-05;
COFTD[582] = -4.44019158E-08;
COFTD[583] = 6.56552833E-12;
COFTD[584] = 4.34172051E-01;
COFTD[585] = -3.09897452E-05;
COFTD[586] = 3.28955301E-08;
COFTD[587] = -7.24516171E-12;
COFTD[588] = 4.52096068E-01;
COFTD[589] = 4.06755264E-05;
COFTD[590] = -1.73260274E-08;
COFTD[591] = 2.79830721E-12;
COFTD[592] = 4.53034615E-01;
COFTD[593] = 4.07599683E-05;
COFTD[594] = -1.73619961E-08;
COFTD[595] = 2.80411647E-12;
COFTD[596] = 4.12760854E-01;
COFTD[597] = -1.68442231E-05;
COFTD[598] = 2.73319258E-08;
COFTD[599] = -7.16550489E-12;
COFTD[600] = 3.38191892E-01;
COFTD[601] = -2.97903795E-05;
COFTD[602] = 2.61516872E-08;
COFTD[603] = -5.10081350E-12;
COFTD[604] = 4.23331422E-01;
COFTD[605] = -2.08640979E-05;
COFTD[606] = 1.67599710E-08;
COFTD[607] = -2.60874715E-12;
COFTD[608] = 4.36237095E-01;
COFTD[609] = -3.34137891E-05;
COFTD[610] = 2.56308185E-08;
COFTD[611] = -4.28114298E-12;
COFTD[612] = 4.33158947E-01;
COFTD[613] = -3.42639946E-05;
COFTD[614] = 2.63343697E-08;
COFTD[615] = -4.43761826E-12;
COFTD[616] = 4.05432093E-01;
COFTD[617] = 2.02316285E-05;
COFTD[618] = 1.10212619E-08;
COFTD[619] = -6.54557615E-12;
COFTD[620] = 4.05432093E-01;
COFTD[621] = 2.02316285E-05;
COFTD[622] = 1.10212619E-08;
COFTD[623] = -6.54557615E-12;
}


// compute the critical parameters for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void GET_CRITPARAMS(amrex::Real *  Tci, amrex::Real *  ai, amrex::Real *  bi, amrex::Real *  acentric_i)
{

amrex::Real   EPS[52];
amrex::Real   SIG[52];
amrex::Real    wt[52];
amrex::Real avogadro = 6.02214199e23;
amrex::Real boltzmann = 1.3806503e-16;// we work in CGS
amrex::Real Rcst = 83.144598;// in bar [CGS] !

egtransetEPS(EPS);
egtransetSIG(SIG);
get_mw(wt);

// species 0: OH*
Tci[0] = 1.316 * EPS[0] ; 
ai[0] = (5.55 * avogadro * avogadro * EPS[0]*boltzmann * 1e-24 * SIG[0] * SIG[0] * SIG[0] ) / (wt[0] * wt[0]); 
bi[0] = 0.855 * avogadro * 1e-24 * SIG[0] * SIG[0] * SIG[0] / (wt[0]); 
acentric_i[0] = 0.0 ;

// species 1: HCN
Tci[1] = 1.316 * EPS[1] ; 
ai[1] = (5.55 * avogadro * avogadro * EPS[1]*boltzmann * 1e-24 * SIG[1] * SIG[1] * SIG[1] ) / (wt[1] * wt[1]); 
bi[1] = 0.855 * avogadro * 1e-24 * SIG[1] * SIG[1] * SIG[1] / (wt[1]); 
acentric_i[1] = 0.0 ;

// species 2: HNCO
Tci[2] = 1.316 * EPS[2] ; 
ai[2] = (5.55 * avogadro * avogadro * EPS[2]*boltzmann * 1e-24 * SIG[2] * SIG[2] * SIG[2] ) / (wt[2] * wt[2]); 
bi[2] = 0.855 * avogadro * 1e-24 * SIG[2] * SIG[2] * SIG[2] / (wt[2]); 
acentric_i[2] = 0.0 ;

// species 3: NO
// Imported from NIST
Tci[3] = 180.000000 ; 
ai[3] = 1e6 * 0.42748 * Rcst * Rcst * Tci[3] * Tci[3] / (30.006000 * 30.006000 * 64.800000); 
bi[3] = 0.08664 * Rcst * Tci[3] / (30.006000 * 64.800000); 
acentric_i[3] = 0.582000 ;

// species 4: N2O
// Imported from NIST
Tci[4] = 309.600000 ; 
ai[4] = 1e6 * 0.42748 * Rcst * Rcst * Tci[4] * Tci[4] / (44.013000 * 44.013000 * 72.550000); 
bi[4] = 0.08664 * Rcst * Tci[4] / (44.013000 * 72.550000); 
acentric_i[4] = 0.162000 ;

// species 5: CO
// Imported from NIST
Tci[5] = 132.850000 ; 
ai[5] = 1e6 * 0.42748 * Rcst * Rcst * Tci[5] * Tci[5] / (28.010000 * 28.010000 * 34.940000); 
bi[5] = 0.08664 * Rcst * Tci[5] / (28.010000 * 34.940000); 
acentric_i[5] = 0.045000 ;

// species 6: CO2
// Imported from NIST
Tci[6] = 304.120000 ; 
ai[6] = 1e6 * 0.42748 * Rcst * Rcst * Tci[6] * Tci[6] / (44.009950 * 44.009950 * 73.740000); 
bi[6] = 0.08664 * Rcst * Tci[6] / (44.009950 * 73.740000); 
acentric_i[6] = 0.225000 ;

// species 7: HNC
Tci[7] = 1.316 * EPS[7] ; 
ai[7] = (5.55 * avogadro * avogadro * EPS[7]*boltzmann * 1e-24 * SIG[7] * SIG[7] * SIG[7] ) / (wt[7] * wt[7]); 
bi[7] = 0.855 * avogadro * 1e-24 * SIG[7] * SIG[7] * SIG[7] / (wt[7]); 
acentric_i[7] = 0.0 ;

// species 8: O2
// Imported from NIST
Tci[8] = 154.581000 ; 
ai[8] = 1e6 * 0.42748 * Rcst * Rcst * Tci[8] * Tci[8] / (31.998800 * 31.998800 * 50.430466); 
bi[8] = 0.08664 * Rcst * Tci[8] / (31.998800 * 50.430466); 
acentric_i[8] = 0.022200 ;

// species 9: H2
// Imported from NIST
Tci[9] = 33.145000 ; 
ai[9] = 1e6 * 0.42748 * Rcst * Rcst * Tci[9] * Tci[9] / (2.015880 * 2.015880 * 12.964000); 
bi[9] = 0.08664 * Rcst * Tci[9] / (2.015880 * 12.964000); 
acentric_i[9] = -0.219000 ;

// species 10: AR
// Imported from NIST
Tci[10] = 150.860000 ; 
ai[10] = 1e6 * 0.42748 * Rcst * Rcst * Tci[10] * Tci[10] / (39.948000 * 39.948000 * 48.980000); 
bi[10] = 0.08664 * Rcst * Tci[10] / (39.948000 * 48.980000); 
acentric_i[10] = -0.002000 ;

// species 11: H
Tci[11] = 1.316 * EPS[11] ; 
ai[11] = (5.55 * avogadro * avogadro * EPS[11]*boltzmann * 1e-24 * SIG[11] * SIG[11] * SIG[11] ) / (wt[11] * wt[11]); 
bi[11] = 0.855 * avogadro * 1e-24 * SIG[11] * SIG[11] * SIG[11] / (wt[11]); 
acentric_i[11] = 0.0 ;

// species 12: O
Tci[12] = 1.316 * EPS[12] ; 
ai[12] = (5.55 * avogadro * avogadro * EPS[12]*boltzmann * 1e-24 * SIG[12] * SIG[12] * SIG[12] ) / (wt[12] * wt[12]); 
bi[12] = 0.855 * avogadro * 1e-24 * SIG[12] * SIG[12] * SIG[12] / (wt[12]); 
acentric_i[12] = 0.0 ;

// species 13: OH
Tci[13] = 1.316 * EPS[13] ; 
ai[13] = (5.55 * avogadro * avogadro * EPS[13]*boltzmann * 1e-24 * SIG[13] * SIG[13] * SIG[13] ) / (wt[13] * wt[13]); 
bi[13] = 0.855 * avogadro * 1e-24 * SIG[13] * SIG[13] * SIG[13] / (wt[13]); 
acentric_i[13] = 0.0 ;

// species 14: HO2
Tci[14] = 1.316 * EPS[14] ; 
ai[14] = (5.55 * avogadro * avogadro * EPS[14]*boltzmann * 1e-24 * SIG[14] * SIG[14] * SIG[14] ) / (wt[14] * wt[14]); 
bi[14] = 0.855 * avogadro * 1e-24 * SIG[14] * SIG[14] * SIG[14] / (wt[14]); 
acentric_i[14] = 0.0 ;

// species 15: H2O
// Imported from NIST
Tci[15] = 647.096000 ; 
ai[15] = 1e6 * 0.42748 * Rcst * Rcst * Tci[15] * Tci[15] / (18.015340 * 18.015340 * 220.640000); 
bi[15] = 0.08664 * Rcst * Tci[15] / (18.015340 * 220.640000); 
acentric_i[15] = 0.344300 ;

// species 16: H2O2
Tci[16] = 1.316 * EPS[16] ; 
ai[16] = (5.55 * avogadro * avogadro * EPS[16]*boltzmann * 1e-24 * SIG[16] * SIG[16] * SIG[16] ) / (wt[16] * wt[16]); 
bi[16] = 0.855 * avogadro * 1e-24 * SIG[16] * SIG[16] * SIG[16] / (wt[16]); 
acentric_i[16] = 0.0 ;

// species 17: HCO
Tci[17] = 1.316 * EPS[17] ; 
ai[17] = (5.55 * avogadro * avogadro * EPS[17]*boltzmann * 1e-24 * SIG[17] * SIG[17] * SIG[17] ) / (wt[17] * wt[17]); 
bi[17] = 0.855 * avogadro * 1e-24 * SIG[17] * SIG[17] * SIG[17] / (wt[17]); 
acentric_i[17] = 0.0 ;

// species 18: CH2O
Tci[18] = 1.316 * EPS[18] ; 
ai[18] = (5.55 * avogadro * avogadro * EPS[18]*boltzmann * 1e-24 * SIG[18] * SIG[18] * SIG[18] ) / (wt[18] * wt[18]); 
bi[18] = 0.855 * avogadro * 1e-24 * SIG[18] * SIG[18] * SIG[18] / (wt[18]); 
acentric_i[18] = 0.0 ;

// species 19: NO2
Tci[19] = 1.316 * EPS[19] ; 
ai[19] = (5.55 * avogadro * avogadro * EPS[19]*boltzmann * 1e-24 * SIG[19] * SIG[19] * SIG[19] ) / (wt[19] * wt[19]); 
bi[19] = 0.855 * avogadro * 1e-24 * SIG[19] * SIG[19] * SIG[19] / (wt[19]); 
acentric_i[19] = 0.0 ;

// species 20: NH3
Tci[20] = 1.316 * EPS[20] ; 
ai[20] = (5.55 * avogadro * avogadro * EPS[20]*boltzmann * 1e-24 * SIG[20] * SIG[20] * SIG[20] ) / (wt[20] * wt[20]); 
bi[20] = 0.855 * avogadro * 1e-24 * SIG[20] * SIG[20] * SIG[20] / (wt[20]); 
acentric_i[20] = 0.0 ;

// species 21: HNO
Tci[21] = 1.316 * EPS[21] ; 
ai[21] = (5.55 * avogadro * avogadro * EPS[21]*boltzmann * 1e-24 * SIG[21] * SIG[21] * SIG[21] ) / (wt[21] * wt[21]); 
bi[21] = 0.855 * avogadro * 1e-24 * SIG[21] * SIG[21] * SIG[21] / (wt[21]); 
acentric_i[21] = 0.0 ;

// species 22: HON
Tci[22] = 1.316 * EPS[22] ; 
ai[22] = (5.55 * avogadro * avogadro * EPS[22]*boltzmann * 1e-24 * SIG[22] * SIG[22] * SIG[22] ) / (wt[22] * wt[22]); 
bi[22] = 0.855 * avogadro * 1e-24 * SIG[22] * SIG[22] * SIG[22] / (wt[22]); 
acentric_i[22] = 0.0 ;

// species 23: HONO
Tci[23] = 1.316 * EPS[23] ; 
ai[23] = (5.55 * avogadro * avogadro * EPS[23]*boltzmann * 1e-24 * SIG[23] * SIG[23] * SIG[23] ) / (wt[23] * wt[23]); 
bi[23] = 0.855 * avogadro * 1e-24 * SIG[23] * SIG[23] * SIG[23] / (wt[23]); 
acentric_i[23] = 0.0 ;

// species 24: H2NO
Tci[24] = 1.316 * EPS[24] ; 
ai[24] = (5.55 * avogadro * avogadro * EPS[24]*boltzmann * 1e-24 * SIG[24] * SIG[24] * SIG[24] ) / (wt[24] * wt[24]); 
bi[24] = 0.855 * avogadro * 1e-24 * SIG[24] * SIG[24] * SIG[24] / (wt[24]); 
acentric_i[24] = 0.0 ;

// species 25: N
Tci[25] = 1.316 * EPS[25] ; 
ai[25] = (5.55 * avogadro * avogadro * EPS[25]*boltzmann * 1e-24 * SIG[25] * SIG[25] * SIG[25] ) / (wt[25] * wt[25]); 
bi[25] = 0.855 * avogadro * 1e-24 * SIG[25] * SIG[25] * SIG[25] / (wt[25]); 
acentric_i[25] = 0.0 ;

// species 26: NNH
Tci[26] = 1.316 * EPS[26] ; 
ai[26] = (5.55 * avogadro * avogadro * EPS[26]*boltzmann * 1e-24 * SIG[26] * SIG[26] * SIG[26] ) / (wt[26] * wt[26]); 
bi[26] = 0.855 * avogadro * 1e-24 * SIG[26] * SIG[26] * SIG[26] / (wt[26]); 
acentric_i[26] = 0.0 ;

// species 27: NH2
Tci[27] = 1.316 * EPS[27] ; 
ai[27] = (5.55 * avogadro * avogadro * EPS[27]*boltzmann * 1e-24 * SIG[27] * SIG[27] * SIG[27] ) / (wt[27] * wt[27]); 
bi[27] = 0.855 * avogadro * 1e-24 * SIG[27] * SIG[27] * SIG[27] / (wt[27]); 
acentric_i[27] = 0.0 ;

// species 28: NH
Tci[28] = 1.316 * EPS[28] ; 
ai[28] = (5.55 * avogadro * avogadro * EPS[28]*boltzmann * 1e-24 * SIG[28] * SIG[28] * SIG[28] ) / (wt[28] * wt[28]); 
bi[28] = 0.855 * avogadro * 1e-24 * SIG[28] * SIG[28] * SIG[28] / (wt[28]); 
acentric_i[28] = 0.0 ;

// species 29: CN
Tci[29] = 1.316 * EPS[29] ; 
ai[29] = (5.55 * avogadro * avogadro * EPS[29]*boltzmann * 1e-24 * SIG[29] * SIG[29] * SIG[29] ) / (wt[29] * wt[29]); 
bi[29] = 0.855 * avogadro * 1e-24 * SIG[29] * SIG[29] * SIG[29] / (wt[29]); 
acentric_i[29] = 0.0 ;

// species 30: NCO
Tci[30] = 1.316 * EPS[30] ; 
ai[30] = (5.55 * avogadro * avogadro * EPS[30]*boltzmann * 1e-24 * SIG[30] * SIG[30] * SIG[30] ) / (wt[30] * wt[30]); 
bi[30] = 0.855 * avogadro * 1e-24 * SIG[30] * SIG[30] * SIG[30] / (wt[30]); 
acentric_i[30] = 0.0 ;

// species 31: NCCN
Tci[31] = 1.316 * EPS[31] ; 
ai[31] = (5.55 * avogadro * avogadro * EPS[31]*boltzmann * 1e-24 * SIG[31] * SIG[31] * SIG[31] ) / (wt[31] * wt[31]); 
bi[31] = 0.855 * avogadro * 1e-24 * SIG[31] * SIG[31] * SIG[31] / (wt[31]); 
acentric_i[31] = 0.0 ;

// species 32: HOCN
Tci[32] = 1.316 * EPS[32] ; 
ai[32] = (5.55 * avogadro * avogadro * EPS[32]*boltzmann * 1e-24 * SIG[32] * SIG[32] * SIG[32] ) / (wt[32] * wt[32]); 
bi[32] = 0.855 * avogadro * 1e-24 * SIG[32] * SIG[32] * SIG[32] / (wt[32]); 
acentric_i[32] = 0.0 ;

// species 33: HCNO
Tci[33] = 1.316 * EPS[33] ; 
ai[33] = (5.55 * avogadro * avogadro * EPS[33]*boltzmann * 1e-24 * SIG[33] * SIG[33] * SIG[33] ) / (wt[33] * wt[33]); 
bi[33] = 0.855 * avogadro * 1e-24 * SIG[33] * SIG[33] * SIG[33] / (wt[33]); 
acentric_i[33] = 0.0 ;

// species 34: NCN
Tci[34] = 1.316 * EPS[34] ; 
ai[34] = (5.55 * avogadro * avogadro * EPS[34]*boltzmann * 1e-24 * SIG[34] * SIG[34] * SIG[34] ) / (wt[34] * wt[34]); 
bi[34] = 0.855 * avogadro * 1e-24 * SIG[34] * SIG[34] * SIG[34] / (wt[34]); 
acentric_i[34] = 0.0 ;

// species 35: HE
Tci[35] = 1.316 * EPS[35] ; 
ai[35] = (5.55 * avogadro * avogadro * EPS[35]*boltzmann * 1e-24 * SIG[35] * SIG[35] * SIG[35] ) / (wt[35] * wt[35]); 
bi[35] = 0.855 * avogadro * 1e-24 * SIG[35] * SIG[35] * SIG[35] / (wt[35]); 
acentric_i[35] = 0.0 ;

// species 36: HNO2
Tci[36] = 1.316 * EPS[36] ; 
ai[36] = (5.55 * avogadro * avogadro * EPS[36]*boltzmann * 1e-24 * SIG[36] * SIG[36] * SIG[36] ) / (wt[36] * wt[36]); 
bi[36] = 0.855 * avogadro * 1e-24 * SIG[36] * SIG[36] * SIG[36] / (wt[36]); 
acentric_i[36] = 0.0 ;

// species 37: N2O4
Tci[37] = 1.316 * EPS[37] ; 
ai[37] = (5.55 * avogadro * avogadro * EPS[37]*boltzmann * 1e-24 * SIG[37] * SIG[37] * SIG[37] ) / (wt[37] * wt[37]); 
bi[37] = 0.855 * avogadro * 1e-24 * SIG[37] * SIG[37] * SIG[37] / (wt[37]); 
acentric_i[37] = 0.0 ;

// species 38: N2O3
Tci[38] = 1.316 * EPS[38] ; 
ai[38] = (5.55 * avogadro * avogadro * EPS[38]*boltzmann * 1e-24 * SIG[38] * SIG[38] * SIG[38] ) / (wt[38] * wt[38]); 
bi[38] = 0.855 * avogadro * 1e-24 * SIG[38] * SIG[38] * SIG[38] / (wt[38]); 
acentric_i[38] = 0.0 ;

// species 39: CH
Tci[39] = 1.316 * EPS[39] ; 
ai[39] = (5.55 * avogadro * avogadro * EPS[39]*boltzmann * 1e-24 * SIG[39] * SIG[39] * SIG[39] ) / (wt[39] * wt[39]); 
bi[39] = 0.855 * avogadro * 1e-24 * SIG[39] * SIG[39] * SIG[39] / (wt[39]); 
acentric_i[39] = 0.0 ;

// species 40: H2CN
Tci[40] = 1.316 * EPS[40] ; 
ai[40] = (5.55 * avogadro * avogadro * EPS[40]*boltzmann * 1e-24 * SIG[40] * SIG[40] * SIG[40] ) / (wt[40] * wt[40]); 
bi[40] = 0.855 * avogadro * 1e-24 * SIG[40] * SIG[40] * SIG[40] / (wt[40]); 
acentric_i[40] = 0.0 ;

// species 41: HCNH
Tci[41] = 1.316 * EPS[41] ; 
ai[41] = (5.55 * avogadro * avogadro * EPS[41]*boltzmann * 1e-24 * SIG[41] * SIG[41] * SIG[41] ) / (wt[41] * wt[41]); 
bi[41] = 0.855 * avogadro * 1e-24 * SIG[41] * SIG[41] * SIG[41] / (wt[41]); 
acentric_i[41] = 0.0 ;

// species 42: HNOH
Tci[42] = 1.316 * EPS[42] ; 
ai[42] = (5.55 * avogadro * avogadro * EPS[42]*boltzmann * 1e-24 * SIG[42] * SIG[42] * SIG[42] ) / (wt[42] * wt[42]); 
bi[42] = 0.855 * avogadro * 1e-24 * SIG[42] * SIG[42] * SIG[42] / (wt[42]); 
acentric_i[42] = 0.0 ;

// species 43: NO3
Tci[43] = 1.316 * EPS[43] ; 
ai[43] = (5.55 * avogadro * avogadro * EPS[43]*boltzmann * 1e-24 * SIG[43] * SIG[43] * SIG[43] ) / (wt[43] * wt[43]); 
bi[43] = 0.855 * avogadro * 1e-24 * SIG[43] * SIG[43] * SIG[43] / (wt[43]); 
acentric_i[43] = 0.0 ;

// species 44: HONO2
Tci[44] = 1.316 * EPS[44] ; 
ai[44] = (5.55 * avogadro * avogadro * EPS[44]*boltzmann * 1e-24 * SIG[44] * SIG[44] * SIG[44] ) / (wt[44] * wt[44]); 
bi[44] = 0.855 * avogadro * 1e-24 * SIG[44] * SIG[44] * SIG[44] / (wt[44]); 
acentric_i[44] = 0.0 ;

// species 45: N2
// Imported from NIST
Tci[45] = 126.192000 ; 
ai[45] = 1e6 * 0.42748 * Rcst * Rcst * Tci[45] * Tci[45] / (28.013400 * 28.013400 * 33.958000); 
bi[45] = 0.08664 * Rcst * Tci[45] / (28.013400 * 33.958000); 
acentric_i[45] = 0.037200 ;

// species 46: CH4
// Imported from NIST
Tci[46] = 190.560000 ; 
ai[46] = 1e6 * 0.42748 * Rcst * Rcst * Tci[46] * Tci[46] / (16.043030 * 16.043030 * 45.990000); 
bi[46] = 0.08664 * Rcst * Tci[46] / (16.043030 * 45.990000); 
acentric_i[46] = 0.011000 ;

// species 47: C2H6
// Imported from NIST
Tci[47] = 305.320000 ; 
ai[47] = 1e6 * 0.42748 * Rcst * Rcst * Tci[47] * Tci[47] / (30.070120 * 30.070120 * 48.720000); 
bi[47] = 0.08664 * Rcst * Tci[47] / (30.070120 * 48.720000); 
acentric_i[47] = 0.099000 ;

// species 48: N2H4
Tci[48] = 1.316 * EPS[48] ; 
ai[48] = (5.55 * avogadro * avogadro * EPS[48]*boltzmann * 1e-24 * SIG[48] * SIG[48] * SIG[48] ) / (wt[48] * wt[48]); 
bi[48] = 0.855 * avogadro * 1e-24 * SIG[48] * SIG[48] * SIG[48] / (wt[48]); 
acentric_i[48] = 0.0 ;

// species 49: N2H3
Tci[49] = 1.316 * EPS[49] ; 
ai[49] = (5.55 * avogadro * avogadro * EPS[49]*boltzmann * 1e-24 * SIG[49] * SIG[49] * SIG[49] ) / (wt[49] * wt[49]); 
bi[49] = 0.855 * avogadro * 1e-24 * SIG[49] * SIG[49] * SIG[49] / (wt[49]); 
acentric_i[49] = 0.0 ;

// species 50: N2H2
Tci[50] = 1.316 * EPS[50] ; 
ai[50] = (5.55 * avogadro * avogadro * EPS[50]*boltzmann * 1e-24 * SIG[50] * SIG[50] * SIG[50] ) / (wt[50] * wt[50]); 
bi[50] = 0.855 * avogadro * 1e-24 * SIG[50] * SIG[50] * SIG[50] / (wt[50]); 
acentric_i[50] = 0.0 ;

// species 51: H2NN
Tci[51] = 1.316 * EPS[51] ; 
ai[51] = (5.55 * avogadro * avogadro * EPS[51]*boltzmann * 1e-24 * SIG[51] * SIG[51] * SIG[51] ) / (wt[51] * wt[51]); 
bi[51] = 0.855 * avogadro * 1e-24 * SIG[51] * SIG[51] * SIG[51] / (wt[51]); 
acentric_i[51] = 0.0 ;

return;
}

// gauss-jordan solver external routine
// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void sgjsolve(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/) {
amrex::Abort("sgjsolve not implemented, choose a different solver ");
}

// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void sgjsolve_simplified(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/) {
amrex::Abort("sgjsolve_simplified not implemented, choose a different solver ");
}

#endif
